{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hamza/Desktop/portfolio/components/sogumaVx.tsx\";\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport Gim from './gim';\nimport Soguma from './soguma';\nimport Menu from './menu';\nimport { gimsProps } from './gimProps'; // gims props\n\nconst variants = {\n  initial: onDisplay => {\n    if (onDisplay.displayState) return {\n      y: 0,\n      scale: 1\n    };else return {\n      y: -100,\n      //-410,\n      scale: 0.7 //0.1,\n\n    };\n  },\n  standing: onDisplay => {\n    if (onDisplay.displayState) return {\n      scale: [1, 0.7],\n      y: [0, -100],\n      transition: {\n        scale: {\n          delay: 0.3,\n          duration: 1\n        },\n        y: {\n          delay: 0.3,\n          duration: 1\n        }\n      }\n    };else return {\n      y: 0,\n      // x: 0,\n      scale: 1,\n      transition: {\n        // duration: 0.5,\n        scale: {\n          delay: 0.3,\n          duration: 1\n        },\n        y: {\n          delay: 0.3,\n          duration: 1\n        }\n      }\n    };\n  }\n};\nconst data = [\"art\", \"about me\", \"p1\"];\nexport default function SogumaVx({\n  repos,\n  fetchedData,\n  setOnDisplay,\n  onDisplay,\n  darkTheme\n}) {\n  const {\n    0: [direction, steps],\n    1: setRotate\n  } = useState([0, 0]);\n  const {\n    0: clickOff,\n    1: setClickOff\n  } = useState(true);\n  const {\n    0: projects,\n    1: setProjects\n  } = useState([]);\n\n  const moveGims = newDirection => {\n    setRotate([newDirection, steps + newDirection]);\n  }; // console.log(dataLoading ? \"fetched DATA : \": fetchedData )\n\n\n  useEffect(() => {\n    const initProjects = [];\n    repos.map(project => {\n      initProjects.push(project.name);\n    });\n    console.log(\" projects d ZAAAAAAAAAAAAAAAAAAB: \", initProjects);\n    setProjects(initProjects);\n  }, [repos]);\n\n  const onSogumaClick = () => {\n    switch (onDisplay.type) {\n      case -1:\n        // none state\n        if (onDisplay.itemId !== -1) setOnDisplay(false, onDisplay.itemId, 2);else setOnDisplay(true, onDisplay.itemId, 0);\n        break;\n\n      case 0:\n        // menu state\n        setOnDisplay(true, onDisplay.itemId, -1);\n        break;\n\n      case 1:\n        // about state\n        setOnDisplay(true, onDisplay.itemId, 0);\n        break;\n\n      case 2:\n        //  case 1) gims on display | case 2) a project on display \n        if (!onDisplay.displayOff) onDisplay.displayState ? setOnDisplay(false, onDisplay.itemId, -1) : onDisplay.itemId !== -1 ? setOnDisplay(true, onDisplay.itemId, 2) : setOnDisplay(true, onDisplay.itemId, -1);else setOnDisplay(false, onDisplay.itemId, 2);\n        break;\n\n      case 3:\n        break;\n    }\n  };\n\n  const onDisplayKey = onDisplay.displayState ? 1 : 0;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"relative flex flex-col justify-start items-center h-full w-full \",\n    initial: \"initial\",\n    animate: \"standing\",\n    custom: onDisplay,\n    variants: variants,\n    children: [console.log(\" waaaiiiiiiiiiiiting projects : \", projects), onDisplay.type === 2 && gimsProps.map(gim => /*#__PURE__*/_jsxDEV(Gim, {\n      gimId: gim.id,\n      data: projects,\n      direction: direction,\n      steps: steps,\n      moveGims: moveGims,\n      setOnDisplay: setOnDisplay,\n      onDisplay: onDisplay,\n      darkTheme: darkTheme\n    }, gim.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)), onDisplay.type != 2 && /*#__PURE__*/_jsxDEV(Menu, {\n      onDisplay: onDisplay,\n      setOnDisplay: setOnDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Soguma, {\n      onDisplay: onDisplay,\n      darkTheme: darkTheme,\n      onSogumaClick: onSogumaClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this)]\n  }, onDisplayKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/home/hamza/Desktop/portfolio/components/sogumaVx.tsx"],"names":["useState","useEffect","motion","Gim","Soguma","Menu","gimsProps","variants","initial","onDisplay","displayState","y","scale","standing","transition","delay","duration","data","SogumaVx","repos","fetchedData","setOnDisplay","darkTheme","direction","steps","setRotate","clickOff","setClickOff","projects","setProjects","moveGims","newDirection","initProjects","map","project","push","name","console","log","onSogumaClick","type","itemId","displayOff","onDisplayKey","gim","id"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { motion, useTransform, useViewportScroll, useMotionValue, AnimatePresence } from 'framer-motion'\nimport Gim from './gim'\nimport Soguma from './soguma'\nimport Menu from './menu'\nimport { wrap } from 'popmotion'\nimport SogumaEye from './sugumaEye'\nimport { theme } from './theme'\nimport { gimsProps } from './gimProps' // gims props\n\n\nconst variants = {\n\tinitial: (onDisplay: any) => {\n\t\tif (onDisplay.displayState)\n\t\t\treturn {\n\t\t\t\ty: 0,\n\t\t\t\tscale: 1,\n\t\t\t}\n\t\telse\n\t\t\treturn {\n\t\t\t\ty: -100,//-410,\n\t\t\t\tscale: 0.7,//0.1,\n\t\t\t};\n\t},\n\tstanding: (onDisplay: any) => {\n\t\tif (onDisplay.displayState)\n\t\t\treturn {\n\t\t\t\tscale: [1, 0.7],\n\t\t\t\ty: [0, -100],\n\t\t\t\ttransition: {\n\t\t\t\t\tscale: { delay: 0.3, duration: 1 },\n\t\t\t\t\ty: { delay: 0.3, duration: 1 }\n\t\t\t\t}\n\t\t\t}\n\t\telse\n\t\t\treturn {\n\t\t\t\ty: 0,\n\t\t\t\t// x: 0,\n\t\t\t\tscale: 1,\n\t\t\t\ttransition: {\n\t\t\t\t\t// duration: 0.5,\n\t\t\t\t\tscale: { delay: 0.3, duration: 1 },\n\t\t\t\t\ty: { delay: 0.3, duration: 1 }\n\t\t\t\t}\n\t\t\t};\n\t},\n}\n\n\nconst data = [\"art\", \"about me\", \"p1\"]\n\nexport default function SogumaVx({ repos ,fetchedData , setOnDisplay, onDisplay, darkTheme }) {\n\n\tconst [[direction, steps], setRotate] = useState([0, 0]);\n\tconst [clickOff, setClickOff] = useState(true);\n\tconst [projects, setProjects] = useState([]);\n\n\n\tconst moveGims = (newDirection: number) => {\n\t\tsetRotate([newDirection, steps + newDirection]);\n\t}\n\t// console.log(dataLoading ? \"fetched DATA : \": fetchedData )\n\tuseEffect(() => {\n\t\tconst initProjects = []\n\t\trepos.map((project) => {\n\t\t\tinitProjects.push(project.name);\n\t\t})\n\t\tconsole.log(\" projects d ZAAAAAAAAAAAAAAAAAAB: \", initProjects)\n\t\tsetProjects(initProjects)\n\t}, [repos])\n\tconst onSogumaClick = () => {\n\t\t\tswitch (onDisplay.type) {\n\t\t\t\tcase  -1 : // none state\n\t\t\t\t\tif ( onDisplay.itemId !== -1)\n\t\t\t\t\t\tsetOnDisplay(false, onDisplay.itemId, 2)\n\t\t\t\t\telse\n\t\t\t\t\t\tsetOnDisplay(true, onDisplay.itemId, 0)\n\t\t\t\t\tbreak;\n\t\t\t\tcase  0 : // menu state\n\t\t\t\t\tsetOnDisplay(true, onDisplay.itemId, -1)\n\t\t\t\t\tbreak;\n\t\t\t\tcase  1 : // about state\n\t\t\t\t\tsetOnDisplay(true, onDisplay.itemId, 0)\n\t\t\t\t\tbreak;\n\t\t\t\tcase  2 : //  case 1) gims on display | case 2) a project on display \n\t\t\t\t\tif (!onDisplay.displayOff)\n\t\t\t\t\t\tonDisplay.displayState ? setOnDisplay(false, onDisplay.itemId, -1) : (onDisplay.itemId !== -1 ? (setOnDisplay(true, onDisplay.itemId, 2)) : (setOnDisplay(true, onDisplay.itemId, -1)));\n\t\t\t\t\telse\n\t\t\t\t\t\tsetOnDisplay(false, onDisplay.itemId, 2)\n\t\t\t\t\tbreak;\n\t\t\t\tcase  3 : \n\t\t\t\t\tbreak;\n\t\t\t}\n\t}\n\tconst onDisplayKey = onDisplay.displayState ? 1 : 0;\n\treturn (\n\t\t<motion.div\n\t\t\tclassName=\"relative flex flex-col justify-start items-center h-full w-full \"\n\t\t\tkey={onDisplayKey}\n\t\t\tinitial=\"initial\"\n\t\t\tanimate=\"standing\"\n\t\t\tcustom={onDisplay}\n\t\t\tvariants={variants}\n\t\t>\n\t\t\t{\tconsole.log(\" waaaiiiiiiiiiiiting projects : \", projects) }\n\t\t\t{onDisplay.type === 2 && gimsProps.map((gim) => (\n\t\t\t\t<Gim\n\t\t\t\t\tkey={gim.id}\n\t\t\t\t\tgimId={gim.id}\n\t\t\t\t\tdata={projects}\n\t\t\t\t\tdirection={direction}\n\t\t\t\t\tsteps={steps}\n\t\t\t\t\tmoveGims={moveGims}\n\t\t\t\t\tsetOnDisplay={setOnDisplay}\n\t\t\t\t\tonDisplay={onDisplay}\n\t\t\t\t\tdarkTheme={darkTheme}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t{ onDisplay.type !=2 && <Menu onDisplay={onDisplay}  setOnDisplay={setOnDisplay}/>}\n\t\t\t<Soguma\n\t\t\t\tonDisplay={onDisplay}\n\t\t\t\tdarkTheme={darkTheme}\n\t\t\t\tonSogumaClick={onSogumaClick}\n\t\t\t/>\n\t\t</motion.div>\n\t);\n}\n  "]},"metadata":{},"sourceType":"module"}
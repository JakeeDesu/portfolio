{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hamza/Desktop/portfolio/components/imageDisplayer.tsx\";\nimport { wrap } from 'popmotion';\nimport { useState, useEffect } from 'react';\nimport getLocalProjectData from './utilities/getLocalProjectData';\nimport { motion, AnimatePresence } from 'framer-motion';\nconst variants = {\n  enter: direction => {\n    return {\n      x: direction > 0 ? 1000 : -1000,\n      // scale: 1.2,\n      opacity: 0\n    };\n  },\n  center: {\n    zIndex: 1,\n    // scale : 1,\n    x: 0,\n    opacity: 1\n  },\n  exit: direction => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 1000 : -1000,\n      // scale : 1.2,\n      opacity: 0\n    };\n  }\n};\n/**\n * Experimenting with distilling swipe offset and velocity into a single variable, so the\n * less distance a user has swiped, the more velocity they need to register as a swipe.\n * Should accomodate longer swipes and short flicks without having binary checks on\n * just distance thresholds and velocity > 0.\n */\n\nconst swipeConfidenceThreshold = 10000;\n\nconst swipePower = (offset, velocity) => {\n  return Math.abs(offset) * velocity;\n};\n\nconst ImageDisplayer = ({\n  projectName\n}) => {\n  const {\n    0: [page, direction],\n    1: setPage\n  } = useState([0, 0]);\n  const {\n    0: [type, path, infos],\n    1: setData\n  } = useState([\"\", \"\", {}]);\n  useEffect(() => {\n    const projectData = getLocalProjectData(projectName);\n    if (projectData) setData([projectData.type, projectData.path, projectData.infos]);\n  }, [projectName]);\n  const titles = \"titles\";\n  console.log(\"titles : ::::::::: \", titles);\n  const imageIndex = wrap(0, titles.length, page);\n\n  const paginate = newDirection => {\n    setPage([page + newDirection, newDirection]);\n  };\n\n  return (\n    /*#__PURE__*/\n    //   <>\n    _jsxDEV(AnimatePresence, {\n      initial: false,\n      custom: direction,\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"absolute h-full w-full flex flex-col md:flex-row justify-evenly items-center p-5 cursor-default overflow-hidden\",\n        custom: direction,\n        variants: variants,\n        initial: \"enter\",\n        animate: \"center\",\n        exit: \"exit\",\n        transition: {\n          x: {\n            type: \"spring\",\n            stiffness: 300,\n            damping: 30\n          },\n          opacity: {\n            duration: 0.2\n          } // scale: { type: \"spring\", stiffness: 300, damping: 30 },\n\n        },\n        drag: \"x\",\n        dragConstraints: {\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0\n        },\n        dragElastic: 0.5,\n        onDragEnd: (e, {\n          offset,\n          velocity\n        }) => {\n          const swipe = swipePower(offset.x, velocity.x);\n\n          if (swipe < -swipeConfidenceThreshold) {\n            paginate(1);\n          } else if (swipe > swipeConfidenceThreshold) {\n            paginate(-1);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-1/2 md:h-4/5 w-full md:w-4/12 flex justify-center items-center p-5 bg-white bg-opacity-10 shadow-lg rounded-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"dscasdc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(motion.img, {\n          className: \"w-full md:w-6/12 md:max-w-7xl h-1/2 md:h-full pointer-events-none rounded-sm\" // src={images[imageIndex]}\n          ,\n          src: \"/Fractol/0.png\" // style={{\n          // \t// rotateY : dergee\n          // }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }, this)]\n      }, page, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }, this) //   </>\n\n  );\n};\n\nexport default ImageDisplayer;","map":{"version":3,"sources":["/home/hamza/Desktop/portfolio/components/imageDisplayer.tsx"],"names":["wrap","useState","useEffect","getLocalProjectData","motion","AnimatePresence","variants","enter","direction","x","opacity","center","zIndex","exit","swipeConfidenceThreshold","swipePower","offset","velocity","Math","abs","ImageDisplayer","projectName","page","setPage","type","path","infos","setData","projectData","titles","console","log","imageIndex","length","paginate","newDirection","stiffness","damping","duration","left","right","top","bottom","e","swipe"],"mappings":"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","sourcesContent":["import Image from 'next/image'\nimport { wrap } from 'popmotion'\nimport { useState, useEffect } from 'react'\nimport getLocalProjectData from './utilities/getLocalProjectData'\nimport { motion, AnimatePresence, useMotionValue, useTransform } from 'framer-motion'\n\n\nconst variants = {\n\tenter: (direction: number) => {\n\t\treturn {\n\t\t\tx: direction > 0 ? 1000 : -1000,\n\t\t\t// scale: 1.2,\n\t\t\topacity: 0\n\t\t};\n\t},\n\tcenter: {\n\t\tzIndex: 1,\n\t\t// scale : 1,\n\t\tx: 0,\n\t\topacity: 1\n\t},\n\texit: (direction: number) => {\n\t\treturn {\n\t\t\tzIndex: 0,\n\t\t\tx: direction < 0 ? 1000 : -1000,\n\t\t\t// scale : 1.2,\n\t\t\topacity: 0\n\t\t};\n\t}\n};\n\n/**\n * Experimenting with distilling swipe offset and velocity into a single variable, so the\n * less distance a user has swiped, the more velocity they need to register as a swipe.\n * Should accomodate longer swipes and short flicks without having binary checks on\n * just distance thresholds and velocity > 0.\n */\nconst swipeConfidenceThreshold = 10000;\nconst swipePower = (offset: number, velocity: number) => {\n\treturn Math.abs(offset) * velocity;\n};\n\nconst ImageDisplayer = ({ projectName }) => {\n\tconst [[page, direction], setPage] = useState([0, 0]);\n\tconst [[type, path, infos], setData ] = useState([\"\", \"\", {}])\n\n\n\tuseEffect(() => {\n\t\tconst projectData = getLocalProjectData(projectName)\n\t\tif ( projectData )\n\t\t\tsetData([ projectData.type, projectData.path, projectData.infos])\n\t}, [projectName])\n\n\tconst titles : []= \"titles\" as keyof typeof infos;\n\tconsole.log(\"titles : ::::::::: \", titles)\n\tconst imageIndex = wrap(0, titles.length, page);\n\t\n\tconst paginate = (newDirection: number) => {\n\t\tsetPage([page + newDirection, newDirection]);\n\t};\n\n\treturn (\n\t\t//   <>\n\t\t<AnimatePresence initial={false} custom={direction}>\n\t\t\t<motion.div className=\"absolute h-full w-full flex flex-col md:flex-row justify-evenly items-center p-5 cursor-default overflow-hidden\"\n\t\t\t\tkey={page}\n\t\t\t\tcustom={direction}\n\t\t\t\tvariants={variants}\n\t\t\t\tinitial=\"enter\"\n\t\t\t\tanimate=\"center\"\n\t\t\t\texit=\"exit\"\n\t\t\t\ttransition={{\n\t\t\t\t\tx: { type: \"spring\", stiffness: 300, damping: 30 },\n\t\t\t\t\topacity: { duration: 0.2 },\n\t\t\t\t\t// scale: { type: \"spring\", stiffness: 300, damping: 30 },\n\t\t\t\t}}\n\t\t\t\tdrag=\"x\"\n\t\t\t\tdragConstraints={{ left: 0, right: 0, top :0, bottom : 0 }}\n\t\t\t\tdragElastic={0.5}\n\t\t\t\tonDragEnd={(e, { offset, velocity }) => {\n\t\t\t\t\tconst swipe = swipePower(offset.x, velocity.x);\n\n\t\t\t\t\tif (swipe < -swipeConfidenceThreshold) {\n\t\t\t\t\t\tpaginate(1);\n\t\t\t\t\t} else if (swipe > swipeConfidenceThreshold) {\n\t\t\t\t\t\tpaginate(-1);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"h-1/2 md:h-4/5 w-full md:w-4/12 flex justify-center items-center p-5 bg-white bg-opacity-10 shadow-lg rounded-sm\" >\n\t\t\t\t\t{/* <p>{path + infos.images[imageIndex]}</p> */}\n\t\t\t\t\t<p>dscasdc</p>\n\t\t\t\t</div>\n\t\t\t\t<motion.img\n\t\t\t\t\tclassName=\"w-full md:w-6/12 md:max-w-7xl h-1/2 md:h-full pointer-events-none rounded-sm\"\n\t\t\t\t\t// src={images[imageIndex]}\n\t\t\t\t\tsrc=\"/Fractol/0.png\"\n\t\t\t\t\t// style={{\n\t\t\t\t\t// \t// rotateY : dergee\n\t\t\t\t\t// }}\n\t\t\t\t/>\n\t\t\t</motion.div>\n\t\t</AnimatePresence>\n\t\t//   </>\n\t);\n};\nexport default ImageDisplayer"]},"metadata":{},"sourceType":"module"}
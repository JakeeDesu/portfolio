{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hamza/Desktop/portfolio/components/sogumaVx.tsx\";\nimport { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Gim from './gim';\nimport Soguma from './soguma';\nimport { gimsProps } from './gimProps'; // gims props\n\nconst data = [\"about me\", \"my projects\", \"art\", \"p1\", \"p2\"];\nexport default function SogumaVx({\n  setOnDisplay,\n  onDisplay,\n  darkTheme\n}) {\n  const {\n    0: [direction, steps],\n    1: setRotate\n  } = useState([0, 0]);\n\n  const moveGims = newDirection => {\n    setRotate([newDirection, steps + newDirection]);\n  };\n\n  const onSogumaClick = () => {\n    onDisplay.displayState ? setOnDisplay(false, -1, 0) : moveGims(-1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"relative flex flex-col justify-start items-center h-full w-full\",\n    initial: \"initial\",\n    animate: \"standing\",\n    variants: {\n      initial: {\n        y: -410,\n        x: 30,\n        scale: 0.1\n      },\n      standing: {\n        y: 0,\n        x: 0,\n        scale: 1,\n        transition: {\n          duration: 0.5\n        }\n      }\n    },\n    children: [gimsProps.map(gim => /*#__PURE__*/_jsxDEV(Gim, {\n      gimId: gim.id,\n      data: data,\n      direction: direction,\n      steps: steps,\n      moveGims: moveGims,\n      setOnDisplay: setOnDisplay,\n      onDisplay: onDisplay,\n      darkTheme: darkTheme\n    }, gim.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(Soguma, {\n      onDisplay: onDisplay,\n      darkTheme: darkTheme,\n      onSogumaClick: onSogumaClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/home/hamza/Desktop/portfolio/components/sogumaVx.tsx"],"names":["useState","motion","Gim","Soguma","gimsProps","data","SogumaVx","setOnDisplay","onDisplay","darkTheme","direction","steps","setRotate","moveGims","newDirection","onSogumaClick","displayState","initial","y","x","scale","standing","transition","duration","map","gim","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAwE,eAAxE;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAIA,SAASC,SAAT,QAA2B,YAA3B,C,CAAwC;;AAIxC,MAAMC,IAAI,GAAG,CAAC,UAAD,EAAa,aAAb,EAA4B,KAA5B,EAAmC,IAAnC,EAAyC,IAAzC,CAAb;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA;AAA3B,CAAlB,EAA0D;AAExE,QAAM;AAAA,OAAC,CAACC,SAAD,EAAYC,KAAZ,CAAD;AAAA,OAAqBC;AAArB,MAAkCZ,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAhD;;AAEA,QAAMa,QAAQ,GAAIC,YAAD,IAA0B;AAC1CF,IAAAA,SAAS,CAAC,CAACE,YAAD,EAAeH,KAAK,GAAGG,YAAvB,CAAD,CAAT;AACA,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC3BP,IAAAA,SAAS,CAACQ,YAAV,GAAyBT,YAAY,CAAC,KAAD,EAAQ,CAAC,CAAT,EAAY,CAAZ,CAArC,GAAsDM,QAAQ,CAAC,CAAC,CAAF,CAA9D;AACA,GAFD;;AAIA,sBACC,QAAC,MAAD,CAAQ,GAAR;AACC,IAAA,SAAS,EAAC,iEADX;AAEC,IAAA,OAAO,EAAC,SAFT;AAGC,IAAA,OAAO,EAAC,UAHT;AAIC,IAAA,QAAQ,EAAE;AACTI,MAAAA,OAAO,EAAE;AACRC,QAAAA,CAAC,EAAE,CAAC,GADI;AAERC,QAAAA,CAAC,EAAE,EAFK;AAGRC,QAAAA,KAAK,EAAE;AAHC,OADA;AAMTC,MAAAA,QAAQ,EAAE;AACTH,QAAAA,CAAC,EAAE,CADM;AAETC,QAAAA,CAAC,EAAE,CAFM;AAGTC,QAAAA,KAAK,EAAE,CAHE;AAITE,QAAAA,UAAU,EAAE;AACXC,UAAAA,QAAQ,EAAE;AADC;AAJH;AAND,KAJX;AAAA,eAoBEnB,SAAS,CAACoB,GAAV,CAAeC,GAAD,iBACd,QAAC,GAAD;AAEC,MAAA,KAAK,EAAEA,GAAG,CAACC,EAFZ;AAGC,MAAA,IAAI,EAAErB,IAHP;AAIC,MAAA,SAAS,EAAEK,SAJZ;AAKC,MAAA,KAAK,EAAEC,KALR;AAMC,MAAA,QAAQ,EAAEE,QANX;AAOC,MAAA,YAAY,EAAEN,YAPf;AAQC,MAAA,SAAS,EAAEC,SARZ;AASC,MAAA,SAAS,EAAEC;AATZ,OACMgB,GAAG,CAACC,EADV;AAAA;AAAA;AAAA;AAAA,YADA,CApBF,eAiCC,QAAC,MAAD;AACC,MAAA,SAAS,EAAElB,SADZ;AAEC,MAAA,SAAS,EAAEC,SAFZ;AAGC,MAAA,aAAa,EAAEM;AAHhB;AAAA;AAAA;AAAA;AAAA,YAjCD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyCA","sourcesContent":["import { useState } from 'react'\nimport { motion, useTransform, useViewportScroll, useMotionValue } from 'framer-motion'\nimport Gim from './gim'\nimport Soguma from './soguma'\nimport { wrap } from 'popmotion'\nimport SogumaEye from './sugumaEye'\nimport { theme } from './theme'\nimport { gimsProps }  from './gimProps' // gims props\n\n\n\nconst data = [\"about me\", \"my projects\", \"art\", \"p1\", \"p2\"]\n\nexport default function SogumaVx({ setOnDisplay, onDisplay, darkTheme }) {\n\n\tconst [[direction, steps], setRotate] = useState([0, 0]);\n\n\tconst moveGims = (newDirection: number) => {\n\t\tsetRotate([newDirection, steps + newDirection]);\n\t}\n\n\tconst onSogumaClick = () => {\n\t\tonDisplay.displayState ? setOnDisplay(false, -1, 0) : moveGims(-1) ;\n\t}\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName=\"relative flex flex-col justify-start items-center h-full w-full\"\n\t\t\tinitial=\"initial\"\n\t\t\tanimate=\"standing\"\n\t\t\tvariants={{\n\t\t\t\tinitial: {\n\t\t\t\t\ty: -410,\n\t\t\t\t\tx: 30,\n\t\t\t\t\tscale: 0.1,\n\t\t\t\t},\n\t\t\t\tstanding: {\n\t\t\t\t\ty: 0,\n\t\t\t\t\tx: 0,\n\t\t\t\t\tscale: 1,\n\t\t\t\t\ttransition: {\n\t\t\t\t\t\tduration: 0.5,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t{gimsProps.map((gim) => (\n\t\t\t\t<Gim\n\t\t\t\t\tkey={gim.id}\n\t\t\t\t\tgimId={gim.id}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tdirection={direction}\n\t\t\t\t\tsteps={steps}\n\t\t\t\t\tmoveGims={moveGims}\n\t\t\t\t\tsetOnDisplay={setOnDisplay}\n\t\t\t\t\tonDisplay={onDisplay}\n\t\t\t\t\tdarkTheme={darkTheme}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<Soguma\n\t\t\t\tonDisplay={onDisplay}\n\t\t\t\tdarkTheme={darkTheme}\n\t\t\t\tonSogumaClick={onSogumaClick}\n\t\t\t/>\n\t\t</motion.div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hamza/Desktop/portfolio/components/mainboard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Scene from './scene';\nimport Image from 'next/image';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useState, useEffect } from 'react';\nconst boardVariants = {\n  appear: {\n    opacity: 0\n  },\n  onBoard: {\n    opacity: 1,\n    transition: {\n      duration: 1\n    }\n  },\n  disappear: {\n    opacity: 0,\n    transition: {\n      duration: 1\n    }\n  }\n};\n\nconst MainBoard = ({\n  onDisplay,\n  about,\n  repos\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    data: {},\n    title: \"\",\n    description: \"\",\n    type: onDisplay.type\n  });\n  useEffect(() => {\n    switch (onDisplay.type) {\n      case 1:\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          title: about.login,\n          description: about.bio,\n          data: about\n        }));\n        break;\n\n      case 2:\n        const projectData = repos[onDisplay.itemId > 0 ? onDisplay.itemId : 0];\n        setData(_objectSpread(_objectSpread({}, data), {}, {\n          title: projectData.name,\n          description: projectData.description,\n          data: projectData\n        }));\n        break;\n    }\n  }, [onDisplay.itemId]);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: (onDisplay.type === 1 || onDisplay.type === 2 && onDisplay.displayState) && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"absolute text-white flex flex-col lg:flex-row lg:justify-evenly lg:items-end z-10 lg:h-screen w-full lg:w-full top-1/3 lg:top-0\",\n      initial: \"appear\",\n      animate: \"onBoard\",\n      exit: \"disappear\",\n      variants: boardVariants,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex h-100 w-full lg:h-5/6 lg:w-1/2  px-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col bg-gray-300 justify-start items-center h-full w-full  p-10 mr-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full flex flex-row bg-gray-600  p-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col justify-center items-start mx-7\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-5xl my-10\",\n                children: data.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex h-100 w-full lg:h-5/6 lg:w-1/2  px-5 bg-red-300 \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex h-full w-full bg-red-600 p-10 ml-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 81\n    }, this) // { onDisplay.displayState && <Scene />}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 2\n  }, this);\n};\n\nexport default MainBoard;","map":{"version":3,"sources":["/home/hamza/Desktop/portfolio/components/mainboard.js"],"names":["Scene","Image","motion","AnimatePresence","useState","useEffect","boardVariants","appear","opacity","onBoard","transition","duration","disappear","MainBoard","onDisplay","about","repos","data","setData","title","description","type","login","bio","projectData","itemId","name","console","log","displayState"],"mappings":"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","sourcesContent":["import Scene from './scene'\nimport Image from 'next/image'\nimport { motion, AnimatePresence } from 'framer-motion'\nimport { useState, useEffect } from 'react'\n\nconst boardVariants = {\n\tappear : {\n\t\topacity : 0\n\t},\n\tonBoard : {\n\t\topacity : 1,\n\t\ttransition : {\n\t\t\tduration : 1\n\t\t}\n\t},\n\tdisappear : {\n\t\topacity : 0,\n\t\ttransition : {\n\t\t\tduration : 1\n\t\t}\n\t}\n}\n\nconst MainBoard = ({ onDisplay, about, repos}) => {\n\tconst [data, setData] = useState({data: {}, title : \"\", description : \"\", type : onDisplay.type})\n\t\n\tuseEffect(() => {\n\t\tswitch (onDisplay.type){\n\t\t\tcase 1 :\n\t\t\t\tsetData({...data, title: about.login, description : about.bio,  data: about})\n\t\t\t\tbreak;\n\t\t\tcase 2 :\n\t\t\t\tconst projectData = repos[onDisplay.itemId > 0 ? onDisplay.itemId : 0]\n\t\t\t\tsetData({...data, title: projectData.name , description:  projectData.description, data: projectData})\n\t\t\t\tbreak;\n\t\t\t}\n\t}, [onDisplay.itemId])\n\tconsole.log(data)\n\treturn (\n\t<AnimatePresence>\n\t\t{ (onDisplay.type === 1 || onDisplay.type === 2 && onDisplay.displayState) && <motion.div \n\t\t\t\tclassName=\"absolute text-white flex flex-col lg:flex-row lg:justify-evenly lg:items-end z-10 lg:h-screen w-full lg:w-full top-1/3 lg:top-0\" \n\t\t\t\tinitial=\"appear\"\n\t\t\t\tanimate=\"onBoard\"\n\t\t\t\texit=\"disappear\"\n\t\t\t\tvariants={boardVariants}\n\t\t\t>\n\t\t\t<div className=\"flex h-100 w-full lg:h-5/6 lg:w-1/2  px-5\">\n\t\t\t\t<div className=\"flex flex-col bg-gray-300 justify-start items-center h-full w-full  p-10 mr-5\">\n\t\t\t\t\t<div className=\"w-full flex flex-row bg-gray-600  p-1\" >\n\t\t\t\t\t\t{/* <Image height={90} width={90}  src=\"/img3.png\" /> */}\n\t\t\t\t\t\t\t<div className=\"flex flex-col justify-center items-start mx-7\" >\n\t\t\t\t\t\t\t\t<h1 className=\"text-5xl my-10\">{data.title}</h1>\n\t\t\t\t\t\t\t\t<p>{data.description}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"flex h-100 w-full lg:h-5/6 lg:w-1/2  px-5 bg-red-300 \">\n\t\t\t\t<div className=\"flex h-full w-full bg-red-600 p-10 ml-5\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</motion.div>\n\t\t// { onDisplay.displayState && <Scene />}\n\t\t}\n\t</AnimatePresence>\n\t);\n}\n\nexport default MainBoard;"]},"metadata":{},"sourceType":"module"}
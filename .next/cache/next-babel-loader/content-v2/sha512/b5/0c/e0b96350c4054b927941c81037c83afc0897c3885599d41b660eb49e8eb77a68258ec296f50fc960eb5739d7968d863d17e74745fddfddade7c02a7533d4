{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { motion, useTransform, useViewportScroll } from 'framer-motion';\nimport { theme } from './theme';\nvar gimsProps = [{\n  id: 0,\n  // needed to fix \" key for map, organize layer order \"\n  type: \"main\",\n  leftRight: 0,\n  next: 1,\n  prev: 2,\n  properties: {\n    title: \"main\",\n    size: 100,\n    posi: {\n      x: 34,\n      y: 55\n    },\n    scale: 1.8,\n    zIndex: 100\n  }\n}, {\n  id: 1,\n  type: \"next\",\n  leftRight: 1,\n  next: 3,\n  prev: 0,\n  properties: {\n    title: \"next\",\n    size: 60,\n    posi: {\n      x: 75,\n      y: 40\n    },\n    scale: 1,\n    zIndex: 10\n  }\n}, {\n  id: 2,\n  type: \"previous\",\n  leftRight: -1,\n  next: 0,\n  prev: 4,\n  properties: {\n    title: \"previous\",\n    size: 80,\n    posi: {\n      x: 15,\n      y: 12\n    },\n    scale: 0.9,\n    zIndex: 0\n  }\n}, {\n  id: 3,\n  type: \"onHold\",\n  leftRight: 1,\n  next: 4,\n  prev: 1,\n  properties: {\n    title: \"...\",\n    size: 50,\n    posi: {\n      x: 60,\n      y: 8\n    },\n    scale: 0.3,\n    zIndex: 0\n  }\n}, {\n  id: 4,\n  type: \"hidden\",\n  leftRight: -1,\n  next: 2,\n  prev: 3,\n  properties: {\n    title: \"hidden\",\n    size: 40,\n    posi: {\n      x: 40,\n      y: 9\n    },\n    scale: 0.1,\n    zIndex: 0\n  }\n}];\nvar fromProps = {\n  properties: {\n    title: \"start\",\n    size: 40,\n    posi: {\n      x: 45,\n      y: 0\n    },\n    scale: 0.1,\n    zIndex: 0\n  }\n};\n\nvar getGimPropsById = function getGimPropsById(gimId) {\n  return gimsProps.filter(function (gimProps) {\n    return gimProps.id == gimId;\n  }).pop() || gimsProps[0];\n};\n\nexport default function Gim(_ref) {\n  var data = _ref.data,\n      gimId = _ref.gimId,\n      direction = _ref.direction,\n      steps = _ref.steps,\n      nextPosition = _ref.nextPosition,\n      setOnDisplay = _ref.setOnDisplay,\n      onDisplay = _ref.onDisplay,\n      darkTheme = _ref.darkTheme;\n\n  var _useViewportScroll = useViewportScroll(),\n      scrollYProgress = _useViewportScroll.scrollYProgress;\n\n  var yRange = useTransform(scrollYProgress, [0, 0.9], [0, 1]);\n\n  var _useState = useState(Math.random()),\n      animationDelay = _useState[0],\n      setDelay = _useState[1];\n\n  console.log(\"render gim : [\" + gimId + \"] random number : \" + animationDelay);\n  var currentGim = getGimPropsById(gimId);\n  var prevGim = direction < 0 && !onDisplay.displayState ? getGimPropsById(currentGim.prev) : getGimPropsById(currentGim.next);\n  var nextGim = direction < 0 && !onDisplay.displayState ? getGimPropsById(currentGim.next) : getGimPropsById(currentGim.prev);\n  var stepsk = onDisplay.displayState ? steps + 1 : steps;\n  var gimvariants = {\n    // scaleState : 1,\n    enter: function enter(onDisplay) {\n      // scaleState = prevGim.properties.scale;\n      return {\n        y: 0,\n        top: onDisplay.displayState ? \"\".concat(currentGim.properties.posi.y, \"%\") : onDisplay.displayOff ? \"\".concat(fromProps.properties.posi.y, \"%\") : \"\".concat(prevGim.properties.posi.y, \"%\"),\n        left: onDisplay.displayState ? \"\".concat(currentGim.properties.posi.x, \"%\") : onDisplay.displayOff ? \"\".concat(fromProps.properties.posi.x, \"%\") : \"\".concat(prevGim.properties.posi.x, \"%\"),\n        scale: onDisplay.displayState ? currentGim.properties.scale : onDisplay.displayOff ? fromProps.properties.scale : prevGim.properties.scale,\n        zIndex: prevGim.properties.zIndex\n      };\n    },\n    standing: function standing(onDisplay) {\n      // this.scaleState = currentGim.properties.scale;\n      return {\n        y: onDisplay.displayState ? 0 : [-10, 10],\n        top: onDisplay.displayState ? \"\".concat(fromProps.properties.posi.y, \"%\") : \"\".concat(currentGim.properties.posi.y, \"%\"),\n        left: onDisplay.displayState ? \"\".concat(fromProps.properties.posi.x, \"%\") : \"\".concat(currentGim.properties.posi.x, \"%\"),\n        scale: onDisplay.displayState ? fromProps.properties.scale\n        /* 0.5*/\n        : currentGim.properties.scale,\n        zIndex: onDisplay.displayState ? fromProps.properties.zIndex : gimId == 2 || onDisplay.displayOff ? 0 : currentGim.properties.zIndex,\n        transition: {\n          y: {\n            yoyo: Infinity,\n            duration: 1 // delay : animationDelay * 2\n\n          },\n          type: \"spring\",\n          duration: 1.3\n        }\n      };\n    },\n    display: {\n      // position : 'fixed',\n      scale: currentGim.properties.scale,\n      boxShadow: 'none',\n      y: 0,\n      top: '',\n      left: '50%',\n      bottom: '0%',\n      transition: {\n        type: \"spring\",\n        duration: 0.8\n      }\n    },\n    hover: function hover(onDisplay) {\n      return {\n        opacity: 1,\n        scale: currentGim.properties.scale * 1.2,\n        transition: {\n          duration: 0.3\n        }\n      };\n    } // exit: (onDisplay: number) => {\n    // \treturn {\n    // \t\ty: 0,\n    // \t\ttop: `${nextGim.properties.posi.y}%`,\n    // \t\tleft: `${nextGim.properties.posi.x}%`,\n    // \t\tscale: nextGim.properties.scale,\n    // \t\tzIndex: nextGim.properties.zIndex,\n    // \t};\n    // }\n\n  };\n  var currentData = getGimCurrenData(data, gimId, steps, direction);\n\n  var clickGim = function clickGim() {\n    if (gimId == 0) setOnDisplay(!onDisplay.displayState, fixGimsDataIndex(data, steps + 1), 0);else if (!onDisplay.displayState) nextPosition(currentGim.leftRight);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsx(motion.div, {\n    className: \"absolute  flex justify-center items-center \".concat(\"h-36\" || \"h-4\", \" \").concat(\"w-36\" || \"w-4\", \" m-10 rounded-full \").concat(darkTheme ? theme.dark.gims.style(false) : theme.light.gims.style),\n    variants: gimvariants,\n    initial: \"enter\",\n    animate: \"standing\",\n    custom: onDisplay,\n    drag: true,\n    dragConstraints: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    whileHover: \"hover\",\n    onMouseDown: function onMouseDown() {\n      return clickGim();\n    },\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"relative flex justify-center items-center w-full h-full\",\n      children: [!darkTheme && /*#__PURE__*/_jsx(\"div\", {\n        className: \"absolute -top-1/4 -left-1/4 h-32 w-32 bg-white rounded-full\"\n      }), !darkTheme && /*#__PURE__*/_jsx(\"div\", {\n        className: \"absolute top-1/4 -right-1/4 h-16 w-16 bg-white rounded-full\"\n      }), /*#__PURE__*/_jsx(\"h1\", {\n        className: \"absolute top-1/4 mt-4 \".concat(darkTheme ? theme.dark.gims.text : theme.light.gims.text),\n        children: currentData ? currentData.current : \"\"\n      })]\n    })\n  }, stepsk);\n}\n\nfunction fixGimsDataIndex(data, steps) {\n  var fixedIndex = steps < 0 ? (data.length + steps % data.length) % data.length : steps % data.length;\n  return fixedIndex;\n}\n\nfunction getGimCurrenData(data, gimId, moveSteps, moveDirection) {\n  switch (gimId) {\n    case 0:\n      // main gim\n      return {\n        current: data[fixGimsDataIndex(data, moveSteps + 1)],\n        next: data[fixGimsDataIndex(data, moveSteps + 2)],\n        prev: data[fixGimsDataIndex(data, moveSteps)]\n      };\n\n    case 1:\n      // next gim\n      return {\n        current: data[fixGimsDataIndex(data, moveSteps + 2)],\n        next: data[fixGimsDataIndex(data, moveSteps + 3)],\n        prev: data[fixGimsDataIndex(data, moveSteps + 1)]\n      };\n\n    case 2:\n      // prev gim\n      return {\n        current: data[fixGimsDataIndex(data, moveSteps)],\n        next: data[fixGimsDataIndex(data, moveSteps - 1)],\n        prev: data[fixGimsDataIndex(data, moveSteps + 1)]\n      };\n\n    case 3:\n      // onHold gim\n      return {\n        current: data[fixGimsDataIndex(data, moveSteps + 3)],\n        next: data[fixGimsDataIndex(data, moveSteps + 4)],\n        prev: data[fixGimsDataIndex(data, moveSteps + 2)]\n      };\n\n    case 4:\n      // hidden gim\n      var updatedIndex = moveDirection < 0 ? moveSteps : moveSteps + 3;\n      return {\n        current: data[fixGimsDataIndex(data, moveSteps + 4)],\n        next: data[fixGimsDataIndex(data, moveSteps + 5)],\n        prev: data[fixGimsDataIndex(data, updatedIndex)]\n      };\n  }\n\n  return 0;\n}","map":null,"metadata":{},"sourceType":"module"}
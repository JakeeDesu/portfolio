{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hamza/Desktop/portfolio/components/sogumaVx.tsx\";\nimport { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Gim from './gim';\nimport Soguma from './soguma';\nimport { gimsProps } from './gimProps'; // gims props\n\nconst variants = {\n  initial: onDisplay => {\n    if (onDisplay.displayState) return {// y: 0,\n      // x: 0,\n      // scale: 1,\n      // transition: {\n      // \tscale: {delay: 0.3, duration: 1},\n      // }\n    };else return {// y: -100,//-410,\n        // x: 0,//30,\n        // scale: 0.7,//0.1,\n      };\n  },\n  standing: onDisplay => {\n    if (onDisplay.displayState) return {\n      scale: [1, 0.7],\n      y: [0, -100],\n      transition: {\n        scale: {\n          delay: 0.3,\n          duration: 1\n        },\n        y: {\n          delay: 0.3,\n          duration: 1\n        }\n      }\n    };else return {\n      y: 0,\n      // x: 0,\n      scale: 1,\n      transition: {\n        // duration: 0.5,\n        scale: {\n          delay: 0.3,\n          duration: 1\n        },\n        y: {\n          delay: 0.3,\n          duration: 1\n        }\n      }\n    };\n  }\n};\nconst data = [\"about me\", \"my projects\", \"art\", \"p1\", \"p2\"];\nexport default function SogumaVx({\n  setOnDisplay,\n  onDisplay,\n  darkTheme\n}) {\n  const {\n    0: [direction, steps],\n    1: setRotate\n  } = useState([0, 0]);\n\n  const moveGims = newDirection => {\n    setRotate([newDirection, steps + newDirection]);\n  };\n\n  const onSogumaClick = () => {\n    if (!onDisplay.displayOff) onDisplay.displayState ? setOnDisplay(false, -1, 0) : moveGims(-1);\n  };\n\n  const onDisplayKey = onDisplay.displayState ? 1 : 0;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"relative flex flex-col justify-start items-center h-full w-full\",\n    initial: \"initial\",\n    animate: \"standing\",\n    custom: onDisplay,\n    variants: variants,\n    children: [gimsProps.map(gim => /*#__PURE__*/_jsxDEV(Gim, {\n      gimId: gim.id,\n      data: data,\n      direction: direction,\n      steps: steps,\n      moveGims: moveGims,\n      setOnDisplay: setOnDisplay,\n      onDisplay: onDisplay,\n      darkTheme: darkTheme\n    }, gim.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(Soguma, {\n      onDisplay: onDisplay,\n      darkTheme: darkTheme,\n      onSogumaClick: onSogumaClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, onDisplayKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/home/hamza/Desktop/portfolio/components/sogumaVx.tsx"],"names":["useState","motion","Gim","Soguma","gimsProps","variants","initial","onDisplay","displayState","standing","scale","y","transition","delay","duration","data","SogumaVx","setOnDisplay","darkTheme","direction","steps","setRotate","moveGims","newDirection","onSogumaClick","displayOff","onDisplayKey","map","gim","id"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { motion, useTransform, useViewportScroll, useMotionValue } from 'framer-motion'\nimport Gim from './gim'\nimport Soguma from './soguma'\nimport { wrap } from 'popmotion'\nimport SogumaEye from './sugumaEye'\nimport { theme } from './theme'\nimport { gimsProps } from './gimProps' // gims props\n\nconst variants = {\n\tinitial: (onDisplay: any) => {\n\t\tif (onDisplay.displayState)\n\t\treturn {\n\t\t\t// y: 0,\n\t\t\t// x: 0,\n\t\t\t// scale: 1,\n\t\t\t// transition: {\n\t\t\t// \tscale: {delay: 0.3, duration: 1},\n\t\t\t// }\n\t\t}\n\telse\n\t\t\treturn {\n\t\t\t\t// y: -100,//-410,\n\t\t\t\t// x: 0,//30,\n\t\t\t\t// scale: 0.7,//0.1,\n\t\t\t};\n\t},\n\tstanding: (onDisplay: any) => {\n\t\tif (onDisplay.displayState)\n\t\treturn {\n\t\t\tscale: [1, 0.7],\n\t\t\ty: [0, -100],\n\t\t\ttransition: {\n\t\t\t\tscale: {delay: 0.3, duration: 1 },\n\t\t\t\ty: {delay: 0.3, duration: 1 }\n\t\t\t}\n\t\t}\n\telse\n\t\treturn {\n\t\t\ty: 0,\n\t\t\t// x: 0,\n\t\t\tscale: 1,\n\t\t\ttransition: {\n\t\t\t\t// duration: 0.5,\n\t\t\t\tscale: {delay: 0.3,  duration: 1 },\n\t\t\t\ty: {delay: 0.3,  duration: 1 }\n\t\t\t}\n\t\t};\n\t},\n}\n\n\nconst data = [\"about me\", \"my projects\", \"art\", \"p1\", \"p2\"]\n\nexport default function SogumaVx({ setOnDisplay, onDisplay, darkTheme }) {\n\n\tconst [[direction, steps], setRotate] = useState([0, 0]);\n\n\tconst moveGims = (newDirection: number) => {\n\t\tsetRotate([newDirection, steps + newDirection]);\n\t}\n\n\tconst onSogumaClick = () => {\n\t\tif (!onDisplay.displayOff)\n\t\tonDisplay.displayState ? setOnDisplay(false, -1, 0) : moveGims(-1);\n\t}\n\tconst onDisplayKey = onDisplay.displayState ? 1 : 0;\n\treturn (\n\t\t<motion.div\n\t\t\tclassName=\"relative flex flex-col justify-start items-center h-full w-full\"\n\t\t\tkey={onDisplayKey}\n\t\t\tinitial=\"initial\"\n\t\t\tanimate=\"standing\"\n\t\t\tcustom={onDisplay}\n\t\t\tvariants={variants}\n\t\t>\n\t\t\t{gimsProps.map((gim) => (\n\t\t\t\t<Gim\n\t\t\t\t\tkey={gim.id}\n\t\t\t\t\tgimId={gim.id}\n\t\t\t\t\tdata={data}\n\t\t\t\t\tdirection={direction}\n\t\t\t\t\tsteps={steps}\n\t\t\t\t\tmoveGims={moveGims}\n\t\t\t\t\tsetOnDisplay={setOnDisplay}\n\t\t\t\t\tonDisplay={onDisplay}\n\t\t\t\t\tdarkTheme={darkTheme}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<Soguma\n\t\t\t\tonDisplay={onDisplay}\n\t\t\t\tdarkTheme={darkTheme}\n\t\t\t\tonSogumaClick={onSogumaClick}\n\t\t\t/>\n\t\t</motion.div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Gim from './gim';\nimport Soguma from './soguma';\nimport { gimsProps } from './gimProps'; // gims props\n\nconst variants = {\n  initial: onDisplay => {\n    if (onDisplay.displayState) return {\n      y: 0,\n      x: 0,\n      scale: 1\n    };else return {\n      y: -100,\n      //-410,\n      x: 0,\n      //30,\n      scale: 0.7 //0.1,\n\n    };\n  },\n  standing: onDisplay => {\n    if (onDisplay.displayState) return {\n      scale: [1, 0.7],\n      y: [0, -100],\n      transition: {\n        scale: {\n          duration: 1\n        },\n        y: {\n          duration: 1\n        }\n      }\n    };else return {\n      y: 0,\n      x: 0,\n      scale: 1,\n      transition: {\n        duration: 0.5\n      }\n    };\n  }\n};\nconst data = [\"about me\", \"my projects\", \"art\", \"p1\", \"p2\"];\nexport default function SogumaVx({\n  setOnDisplay,\n  onDisplay,\n  darkTheme\n}) {\n  const {\n    0: [direction, steps],\n    1: setRotate\n  } = useState([0, 0]);\n\n  const moveGims = newDirection => {\n    setRotate([newDirection, steps + newDirection]);\n  };\n\n  const onSogumaClick = () => {\n    onDisplay.displayState ? setOnDisplay(false, -1, 0) : moveGims(-1);\n  };\n\n  const onDisplayKey = onDisplay.displayState ? 1 : 0;\n  return /*#__PURE__*/_jsxs(motion.div, {\n    className: \"relative flex flex-col justify-start items-center h-full w-full\",\n    initial: \"initial\",\n    animate: \"standing\",\n    custom: onDisplay,\n    variants: variants,\n    children: [gimsProps.map(gim => /*#__PURE__*/_jsx(Gim, {\n      gimId: gim.id,\n      data: data,\n      direction: direction,\n      steps: steps,\n      moveGims: moveGims,\n      setOnDisplay: setOnDisplay,\n      onDisplay: onDisplay,\n      darkTheme: darkTheme\n    }, gim.id)), /*#__PURE__*/_jsx(Soguma, {\n      onDisplay: onDisplay,\n      darkTheme: darkTheme,\n      onSogumaClick: onSogumaClick\n    })]\n  }, onDisplayKey);\n}","map":null,"metadata":{},"sourceType":"module"}
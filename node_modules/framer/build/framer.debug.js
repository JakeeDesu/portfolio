(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["Framer"] = factory(require("react"));
	else
		root["Framer"] = factory(root["React"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_react__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js":
/*!***********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \***********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/memoize */ "../../node_modules/@emotion/memoize/dist/memoize.browser.esm.js");


var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var index = Object(_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__["default"])(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */
  && prop.charCodeAt(1) === 110
  /* n */
  && prop.charCodeAt(2) < 91;
}
/* Z+1 */
);

/* harmony default export */ __webpack_exports__["default"] = (index);


/***/ }),

/***/ "../../node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!***********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

/* harmony default export */ __webpack_exports__["default"] = (memoize);


/***/ }),

/***/ "../../node_modules/eventemitter3/index.js":
/*!*************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/eventemitter3/index.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if (true) {
  module.exports = EventEmitter;
}


/***/ }),

/***/ "../../node_modules/fontfaceobserver/fontfaceobserver.standalone.js":
/*!**************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/fontfaceobserver/fontfaceobserver.standalone.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* Font Face Observer v2.1.0 - © Bram Stein. License: BSD-3-Clause */(function(){function l(a,b){document.addEventListener?a.addEventListener("scroll",b,!1):a.attachEvent("scroll",b)}function m(a){document.body?a():document.addEventListener?document.addEventListener("DOMContentLoaded",function c(){document.removeEventListener("DOMContentLoaded",c);a()}):document.attachEvent("onreadystatechange",function k(){if("interactive"==document.readyState||"complete"==document.readyState)document.detachEvent("onreadystatechange",k),a()})};function t(a){this.a=document.createElement("div");this.a.setAttribute("aria-hidden","true");this.a.appendChild(document.createTextNode(a));this.b=document.createElement("span");this.c=document.createElement("span");this.h=document.createElement("span");this.f=document.createElement("span");this.g=-1;this.b.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.c.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";
this.f.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.h.style.cssText="display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c)}
function u(a,b){a.a.style.cssText="max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:"+b+";"}function z(a){var b=a.a.offsetWidth,c=b+100;a.f.style.width=c+"px";a.c.scrollLeft=c;a.b.scrollLeft=a.b.scrollWidth+100;return a.g!==b?(a.g=b,!0):!1}function A(a,b){function c(){var a=k;z(a)&&a.a.parentNode&&b(a.g)}var k=a;l(a.b,c);l(a.c,c);z(a)};function B(a,b){var c=b||{};this.family=a;this.style=c.style||"normal";this.weight=c.weight||"normal";this.stretch=c.stretch||"normal"}var C=null,D=null,E=null,F=null;function G(){if(null===D)if(J()&&/Apple/.test(window.navigator.vendor)){var a=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent);D=!!a&&603>parseInt(a[1],10)}else D=!1;return D}function J(){null===F&&(F=!!document.fonts);return F}
function K(){if(null===E){var a=document.createElement("div");try{a.style.font="condensed 100px sans-serif"}catch(b){}E=""!==a.style.font}return E}function L(a,b){return[a.style,a.weight,K()?a.stretch:"","100px",b].join(" ")}
B.prototype.load=function(a,b){var c=this,k=a||"BESbswy",r=0,n=b||3E3,H=(new Date).getTime();return new Promise(function(a,b){if(J()&&!G()){var M=new Promise(function(a,b){function e(){(new Date).getTime()-H>=n?b(Error(""+n+"ms timeout exceeded")):document.fonts.load(L(c,'"'+c.family+'"'),k).then(function(c){1<=c.length?a():setTimeout(e,25)},b)}e()}),N=new Promise(function(a,c){r=setTimeout(function(){c(Error(""+n+"ms timeout exceeded"))},n)});Promise.race([N,M]).then(function(){clearTimeout(r);a(c)},
b)}else m(function(){function v(){var b;if(b=-1!=f&&-1!=g||-1!=f&&-1!=h||-1!=g&&-1!=h)(b=f!=g&&f!=h&&g!=h)||(null===C&&(b=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent),C=!!b&&(536>parseInt(b[1],10)||536===parseInt(b[1],10)&&11>=parseInt(b[2],10))),b=C&&(f==w&&g==w&&h==w||f==x&&g==x&&h==x||f==y&&g==y&&h==y)),b=!b;b&&(d.parentNode&&d.parentNode.removeChild(d),clearTimeout(r),a(c))}function I(){if((new Date).getTime()-H>=n)d.parentNode&&d.parentNode.removeChild(d),b(Error(""+
n+"ms timeout exceeded"));else{var a=document.hidden;if(!0===a||void 0===a)f=e.a.offsetWidth,g=p.a.offsetWidth,h=q.a.offsetWidth,v();r=setTimeout(I,50)}}var e=new t(k),p=new t(k),q=new t(k),f=-1,g=-1,h=-1,w=-1,x=-1,y=-1,d=document.createElement("div");d.dir="ltr";u(e,L(c,"sans-serif"));u(p,L(c,"serif"));u(q,L(c,"monospace"));d.appendChild(e.a);d.appendChild(p.a);d.appendChild(q.a);document.body.appendChild(d);w=e.a.offsetWidth;x=p.a.offsetWidth;y=q.a.offsetWidth;I();A(e,function(a){f=a;v()});u(e,
L(c,'"'+c.family+'",sans-serif'));A(p,function(a){g=a;v()});u(p,L(c,'"'+c.family+'",serif'));A(q,function(a){h=a;v()});u(q,L(c,'"'+c.family+'",monospace'))})})}; true?module.exports=B:(undefined);}());


/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/animation/animate.js":
/*!*********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/animation/animate.js ***!
  \*********************************************************************************************************/
/*! exports provided: animate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animate", function() { return animate; });
/* harmony import */ var _utils_transitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/transitions.js */ "../../node_modules/framer-motion/dist/es/animation/utils/transitions.js");
/* harmony import */ var _value_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../value/index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");
/* harmony import */ var _value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../value/utils/is-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js");




/**
 * Animate a single value or a `MotionValue`.
 *
 * The first argument is either a `MotionValue` to animate, or an initial animation value.
 *
 * The second is either a value to animate to, or an array of keyframes to animate through.
 *
 * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.
 *
 * Returns `AnimationPlaybackControls`, currently just a `stop` method.
 *
 * ```javascript
 * const x = useMotionValue(0)
 *
 * useEffect(() => {
 *   const controls = animate(x, 100, {
 *     type: "spring",
 *     stiffness: 2000,
 *     onComplete: v => {}
 *   })
 *
 *   return controls.stop
 * })
 * ```
 *
 * @public
 */
function animate(from, to, transition) {
    if (transition === void 0) { transition = {}; }
    var value = Object(_value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_2__["isMotionValue"])(from) ? from : Object(_value_index_js__WEBPACK_IMPORTED_MODULE_1__["motionValue"])(from);
    Object(_utils_transitions_js__WEBPACK_IMPORTED_MODULE_0__["startAnimation"])("", value, to, transition);
    return {
        stop: function () { return value.stop(); },
    };
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/animation/animation-controls.js":
/*!********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/animation/animation-controls.js ***!
  \********************************************************************************************************************/
/*! exports provided: animationControls, isAnimationControls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationControls", function() { return animationControls; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAnimationControls", function() { return isAnimationControls; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var _render_utils_setters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render/utils/setters.js */ "../../node_modules/framer-motion/dist/es/render/utils/setters.js");
/* harmony import */ var _render_utils_animation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../render/utils/animation.js */ "../../node_modules/framer-motion/dist/es/render/utils/animation.js");





function animationControls() {
    /**
     * Track whether the host component has mounted.
     */
    var hasMounted = false;
    /**
     * Pending animations that are started before a component is mounted.
     * TODO: Remove this as animations should only run in effects
     */
    var pendingAnimations = [];
    /**
     * A collection of linked component animation controls.
     */
    var subscribers = new Set();
    var controls = {
        subscribe: function (visualElement) {
            subscribers.add(visualElement);
            return function () { return void subscribers.delete(visualElement); };
        },
        start: function (definition, transitionOverride) {
            /**
             * TODO: We only perform this hasMounted check because in Framer we used to
             * encourage the ability to start an animation within the render phase. This
             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe
             * we can ditch this.
             */
            if (hasMounted) {
                var animations_1 = [];
                subscribers.forEach(function (visualElement) {
                    animations_1.push(Object(_render_utils_animation_js__WEBPACK_IMPORTED_MODULE_3__["animateVisualElement"])(visualElement, definition, {
                        transitionOverride: transitionOverride,
                    }));
                });
                return Promise.all(animations_1);
            }
            else {
                return new Promise(function (resolve) {
                    pendingAnimations.push({
                        animation: [definition, transitionOverride],
                        resolve: resolve,
                    });
                });
            }
        },
        set: function (definition) {
            Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["invariant"])(hasMounted, "controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.");
            return subscribers.forEach(function (visualElement) {
                Object(_render_utils_setters_js__WEBPACK_IMPORTED_MODULE_2__["setValues"])(visualElement, definition);
            });
        },
        stop: function () {
            subscribers.forEach(function (visualElement) {
                Object(_render_utils_animation_js__WEBPACK_IMPORTED_MODULE_3__["stopAnimation"])(visualElement);
            });
        },
        mount: function () {
            hasMounted = true;
            pendingAnimations.forEach(function (_a) {
                var animation = _a.animation, resolve = _a.resolve;
                controls.start.apply(controls, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(animation)).then(resolve);
            });
            return function () {
                hasMounted = false;
                controls.stop();
            };
        },
    };
    return controls;
}
function isAnimationControls(v) {
    return typeof v === "object" && typeof v.start === "function";
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/animation/use-animated-state.js":
/*!********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/animation/use-animated-state.js ***!
  \********************************************************************************************************************/
/*! exports provided: useAnimatedState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useAnimatedState", function() { return useAnimatedState; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");
/* harmony import */ var _utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/geometry/index.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/index.js");
/* harmony import */ var _render_utils_setters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../render/utils/setters.js */ "../../node_modules/framer-motion/dist/es/render/utils/setters.js");
/* harmony import */ var _render_utils_animation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../render/utils/animation.js */ "../../node_modules/framer-motion/dist/es/render/utils/animation.js");
/* harmony import */ var _render_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../render/index.js */ "../../node_modules/framer-motion/dist/es/render/index.js");
/* harmony import */ var _motion_utils_use_visual_state_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../motion/utils/use-visual-state.js */ "../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.js");









var createObject = function () { return ({}); };
var stateVisualElement = Object(_render_index_js__WEBPACK_IMPORTED_MODULE_6__["visualElement"])({
    build: function () { },
    measureViewportBox: _utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_3__["axisBox"],
    resetTransform: function () { },
    restoreTransform: function () { },
    removeValueFromRenderState: function () { },
    render: function () { },
    scrapeMotionValuesFromProps: createObject,
    readValueFromInstance: function (_state, key, options) {
        return options.initialState[key] || 0;
    },
    makeTargetAnimatable: function (element, _a) {
        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__rest"])(_a, ["transition", "transitionEnd"]);
        var origin = Object(_render_utils_setters_js__WEBPACK_IMPORTED_MODULE_4__["getOrigin"])(target, transition || {}, element);
        Object(_render_utils_setters_js__WEBPACK_IMPORTED_MODULE_4__["checkTargetForNewValues"])(element, target, origin);
        return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({ transition: transition, transitionEnd: transitionEnd }, target);
    },
});
var useVisualState = Object(_motion_utils_use_visual_state_js__WEBPACK_IMPORTED_MODULE_7__["makeUseVisualState"])({
    scrapeMotionValuesFromProps: createObject,
    createRenderState: createObject,
});
/**
 * This is not an officially supported API and may be removed
 * on any version.
 * @internal
 */
function useAnimatedState(initialState) {
    var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(initialState), 2), animationState = _a[0], setAnimationState = _a[1];
    var visualState = useVisualState({}, false);
    var element = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_2__["useConstant"])(function () {
        return stateVisualElement({ props: {}, visualState: visualState }, { initialState: initialState });
    });
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        element.mount({});
        return element.unmount();
    }, []);
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        element.setProps({
            onUpdate: function (v) { return setAnimationState(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, v)); },
        });
    });
    var startAnimation = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_2__["useConstant"])(function () { return function (animationDefinition) {
        return Object(_render_utils_animation_js__WEBPACK_IMPORTED_MODULE_5__["animateVisualElement"])(element, animationDefinition);
    }; });
    return [animationState, startAnimation];
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/animation/use-animation.js":
/*!***************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/animation/use-animation.js ***!
  \***************************************************************************************************************/
/*! exports provided: useAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useAnimation", function() { return useAnimation; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");
/* harmony import */ var _animation_controls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./animation-controls.js */ "../../node_modules/framer-motion/dist/es/animation/animation-controls.js");




/**
 * Creates `AnimationControls`, which can be used to manually start, stop
 * and sequence animations on one or more components.
 *
 * The returned `AnimationControls` should be passed to the `animate` property
 * of the components you want to animate.
 *
 * These components can then be animated with the `start` method.
 *
 * @library
 *
 * ```jsx
 * import * as React from 'react'
 * import { Frame, useAnimation } from 'framer'
 *
 * export function MyComponent(props) {
 *    const controls = useAnimation()
 *
 *    controls.start({
 *        x: 100,
 *        transition: { duration: 0.5 },
 *    })
 *
 *    return <Frame animate={controls} />
 * }
 * ```
 *
 * @motion
 *
 * ```jsx
 * import * as React from 'react'
 * import { motion, useAnimation } from 'framer-motion'
 *
 * export function MyComponent(props) {
 *    const controls = useAnimation()
 *
 *    controls.start({
 *        x: 100,
 *        transition: { duration: 0.5 },
 *    })
 *
 *    return <motion.div animate={controls} />
 * }
 * ```
 *
 * @returns Animation controller with `start` and `stop` methods
 *
 * @public
 */
function useAnimation() {
    var controls = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_1__["useConstant"])(_animation_controls_js__WEBPACK_IMPORTED_MODULE_2__["animationControls"]);
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(controls.mount, []);
    return controls;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.js":
/*!***************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/animation/utils/default-transitions.js ***!
  \***************************************************************************************************************************/
/*! exports provided: criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "criticallyDampedSpring", function() { return criticallyDampedSpring; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultTransition", function() { return getDefaultTransition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linearTween", function() { return linearTween; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "underDampedSpring", function() { return underDampedSpring; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _is_keyframes_target_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is-keyframes-target.js */ "../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.js");



var underDampedSpring = function () { return ({
    type: "spring",
    stiffness: 500,
    damping: 25,
    restDelta: 0.5,
    restSpeed: 10,
}); };
var criticallyDampedSpring = function (to) { return ({
    type: "spring",
    stiffness: 550,
    damping: to === 0 ? 2 * Math.sqrt(550) : 30,
    restDelta: 0.01,
    restSpeed: 10,
}); };
var linearTween = function () { return ({
    type: "keyframes",
    ease: "linear",
    duration: 0.3,
}); };
var keyframes = function (values) { return ({
    type: "keyframes",
    duration: 0.8,
    values: values,
}); };
var defaultTransitions = {
    x: underDampedSpring,
    y: underDampedSpring,
    z: underDampedSpring,
    rotate: underDampedSpring,
    rotateX: underDampedSpring,
    rotateY: underDampedSpring,
    rotateZ: underDampedSpring,
    scaleX: criticallyDampedSpring,
    scaleY: criticallyDampedSpring,
    scale: criticallyDampedSpring,
    opacity: linearTween,
    backgroundColor: linearTween,
    color: linearTween,
    default: criticallyDampedSpring,
};
var getDefaultTransition = function (valueKey, to) {
    var transitionFactory;
    if (Object(_is_keyframes_target_js__WEBPACK_IMPORTED_MODULE_1__["isKeyframesTarget"])(to)) {
        transitionFactory = keyframes;
    }
    else {
        transitionFactory =
            defaultTransitions[valueKey] || defaultTransitions.default;
    }
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ to: to }, transitionFactory(to));
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/animation/utils/easing.js":
/*!**************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/animation/utils/easing.js ***!
  \**************************************************************************************************************/
/*! exports provided: easingDefinitionToFunction, isEasingArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easingDefinitionToFunction", function() { return easingDefinitionToFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEasingArray", function() { return isEasingArray; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");




var easingLookup = {
    linear: popmotion__WEBPACK_IMPORTED_MODULE_2__["linear"],
    easeIn: popmotion__WEBPACK_IMPORTED_MODULE_2__["easeIn"],
    easeInOut: popmotion__WEBPACK_IMPORTED_MODULE_2__["easeInOut"],
    easeOut: popmotion__WEBPACK_IMPORTED_MODULE_2__["easeOut"],
    circIn: popmotion__WEBPACK_IMPORTED_MODULE_2__["circIn"],
    circInOut: popmotion__WEBPACK_IMPORTED_MODULE_2__["circInOut"],
    circOut: popmotion__WEBPACK_IMPORTED_MODULE_2__["circOut"],
    backIn: popmotion__WEBPACK_IMPORTED_MODULE_2__["backIn"],
    backInOut: popmotion__WEBPACK_IMPORTED_MODULE_2__["backInOut"],
    backOut: popmotion__WEBPACK_IMPORTED_MODULE_2__["backOut"],
    anticipate: popmotion__WEBPACK_IMPORTED_MODULE_2__["anticipate"],
    bounceIn: popmotion__WEBPACK_IMPORTED_MODULE_2__["bounceIn"],
    bounceInOut: popmotion__WEBPACK_IMPORTED_MODULE_2__["bounceInOut"],
    bounceOut: popmotion__WEBPACK_IMPORTED_MODULE_2__["bounceOut"],
};
var easingDefinitionToFunction = function (definition) {
    if (Array.isArray(definition)) {
        // If cubic bezier definition, create bezier curve
        Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["invariant"])(definition.length === 4, "Cubic bezier arrays must contain four numerical values.");
        var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(definition, 4), x1 = _a[0], y1 = _a[1], x2 = _a[2], y2 = _a[3];
        return Object(popmotion__WEBPACK_IMPORTED_MODULE_2__["cubicBezier"])(x1, y1, x2, y2);
    }
    else if (typeof definition === "string") {
        // Else lookup from table
        Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["invariant"])(easingLookup[definition] !== undefined, "Invalid easing type '" + definition + "'");
        return easingLookup[definition];
    }
    return definition;
};
var isEasingArray = function (ease) {
    return Array.isArray(ease) && typeof ease[0] !== "number";
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.js":
/*!*********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/animation/utils/is-animatable.js ***!
  \*********************************************************************************************************************/
/*! exports provided: isAnimatable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAnimatable", function() { return isAnimatable; });
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");


/**
 * Check if a value is animatable. Examples:
 *
 * ✅: 100, "100px", "#fff"
 * ❌: "block", "url(2.jpg)"
 * @param value
 *
 * @internal
 */
var isAnimatable = function (key, value) {
    // If the list of keys tat might be non-animatable grows, replace with Set
    if (key === "zIndex")
        return false;
    // If it's a number or a keyframes array, we can animate it. We might at some point
    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,
    // but for now lets leave it like this for performance reasons
    if (typeof value === "number" || Array.isArray(value))
        return true;
    if (typeof value === "string" && // It's animatable if we have a string
        style_value_types__WEBPACK_IMPORTED_MODULE_0__["complex"].test(value) && // And it contains numbers and/or colors
        !value.startsWith("url(") // Unless it starts with "url("
    ) {
        return true;
    }
    return false;
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.js":
/*!***************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.js ***!
  \***************************************************************************************************************************/
/*! exports provided: isKeyframesTarget */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isKeyframesTarget", function() { return isKeyframesTarget; });
var isKeyframesTarget = function (v) {
    return Array.isArray(v);
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/animation/utils/transitions.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/animation/utils/transitions.js ***!
  \*******************************************************************************************************************/
/*! exports provided: convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, hydrateKeyframes, isTransitionDefined, startAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertTransitionToAnimationOptions", function() { return convertTransitionToAnimationOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDelayFromTransition", function() { return getDelayFromTransition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPopmotionAnimationOptions", function() { return getPopmotionAnimationOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getValueTransition", function() { return getValueTransition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hydrateKeyframes", function() { return hydrateKeyframes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTransitionDefined", function() { return isTransitionDefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startAnimation", function() { return startAnimation; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
/* harmony import */ var _utils_time_conversion_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/time-conversion.js */ "../../node_modules/framer-motion/dist/es/utils/time-conversion.js");
/* harmony import */ var _easing_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./easing.js */ "../../node_modules/framer-motion/dist/es/animation/utils/easing.js");
/* harmony import */ var _is_animatable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./is-animatable.js */ "../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.js");
/* harmony import */ var _default_transitions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./default-transitions.js */ "../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.js");
/* harmony import */ var _render_dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../render/dom/utils/value-types.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/value-types.js");









/**
 * Decide whether a transition is defined on a given Transition.
 * This filters out orchestration options and returns true
 * if any options are left.
 */
function isTransitionDefined(_a) {
    var when = _a.when, delay = _a.delay, delayChildren = _a.delayChildren, staggerChildren = _a.staggerChildren, staggerDirection = _a.staggerDirection, repeat = _a.repeat, repeatType = _a.repeatType, repeatDelay = _a.repeatDelay, from = _a.from, transition = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["when", "delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from"]);
    return !!Object.keys(transition).length;
}
var legacyRepeatWarning = false;
/**
 * Convert Framer Motion's Transition type into Popmotion-compatible options.
 */
function convertTransitionToAnimationOptions(_a) {
    var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["ease", "times", "yoyo", "flip", "loop"]);
    var options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, transition);
    if (times)
        options["offset"] = times;
    /**
     * Convert any existing durations from seconds to milliseconds
     */
    if (transition.duration)
        options["duration"] = Object(_utils_time_conversion_js__WEBPACK_IMPORTED_MODULE_3__["secondsToMilliseconds"])(transition.duration);
    if (transition.repeatDelay)
        options.repeatDelay = Object(_utils_time_conversion_js__WEBPACK_IMPORTED_MODULE_3__["secondsToMilliseconds"])(transition.repeatDelay);
    /**
     * Map easing names to Popmotion's easing functions
     */
    if (ease) {
        options["ease"] = Object(_easing_js__WEBPACK_IMPORTED_MODULE_4__["isEasingArray"])(ease)
            ? ease.map(_easing_js__WEBPACK_IMPORTED_MODULE_4__["easingDefinitionToFunction"])
            : Object(_easing_js__WEBPACK_IMPORTED_MODULE_4__["easingDefinitionToFunction"])(ease);
    }
    /**
     * Support legacy transition API
     */
    if (transition.type === "tween")
        options.type = "keyframes";
    /**
     * TODO: These options are officially removed from the API.
     */
    if (yoyo || loop || flip) {
        Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["warning"])(!legacyRepeatWarning, "yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.");
        legacyRepeatWarning = true;
        if (yoyo) {
            options.repeatType = "reverse";
        }
        else if (loop) {
            options.repeatType = "loop";
        }
        else if (flip) {
            options.repeatType = "mirror";
        }
        options.repeat = loop || yoyo || flip || transition.repeat;
    }
    /**
     * TODO: Popmotion 9 has the ability to automatically detect whether to use
     * a keyframes or spring animation, but does so by detecting velocity and other spring options.
     * It'd be good to introduce a similar thing here.
     */
    if (transition.type !== "spring")
        options.type = "keyframes";
    return options;
}
/**
 * Get the delay for a value by checking Transition with decreasing specificity.
 */
function getDelayFromTransition(transition, key) {
    var _a;
    var valueTransition = getValueTransition(transition, key) || {};
    return (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : 0;
}
function hydrateKeyframes(options) {
    if (Array.isArray(options.to) && options.to[0] === null) {
        options.to = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(options.to);
        options.to[0] = options.from;
    }
    return options;
}
function getPopmotionAnimationOptions(transition, options, key) {
    var _a;
    if (Array.isArray(options.to)) {
        (_a = transition.duration) !== null && _a !== void 0 ? _a : (transition.duration = 0.8);
    }
    hydrateKeyframes(options);
    /**
     * Get a default transition if none is determined to be defined.
     */
    if (!isTransitionDefined(transition)) {
        transition = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, transition), Object(_default_transitions_js__WEBPACK_IMPORTED_MODULE_6__["getDefaultTransition"])(key, options.to));
    }
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), convertTransitionToAnimationOptions(transition));
}
/**
 *
 */
function getAnimation(key, value, target, transition, onComplete) {
    var _a;
    var valueTransition = getValueTransition(transition, key);
    var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();
    var isTargetAnimatable = Object(_is_animatable_js__WEBPACK_IMPORTED_MODULE_5__["isAnimatable"])(key, target);
    /**
     * If we're trying to animate from "none", try and get an animatable version
     * of the target. This could be improved to work both ways.
     */
    if (origin === "none" && isTargetAnimatable && typeof target === "string") {
        origin = Object(_render_dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_7__["getAnimatableNone"])(key, target);
    }
    var isOriginAnimatable = Object(_is_animatable_js__WEBPACK_IMPORTED_MODULE_5__["isAnimatable"])(key, origin);
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["warning"])(isOriginAnimatable === isTargetAnimatable, "You are trying to animate " + key + " from \"" + origin + "\" to \"" + target + "\". " + origin + " is not an animatable value - to enable this animation set " + origin + " to a value animatable to " + target + " via the `style` property.");
    function start() {
        var options = {
            from: origin,
            to: target,
            velocity: value.getVelocity(),
            onComplete: onComplete,
            onUpdate: function (v) { return value.set(v); },
        };
        return valueTransition.type === "inertia" ||
            valueTransition.type === "decay"
            ? Object(popmotion__WEBPACK_IMPORTED_MODULE_2__["inertia"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), valueTransition))
            : Object(popmotion__WEBPACK_IMPORTED_MODULE_2__["animate"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function (v) {
                    var _a;
                    options.onUpdate(v);
                    (_a = valueTransition.onUpdate) === null || _a === void 0 ? void 0 : _a.call(valueTransition, v);
                }, onComplete: function () {
                    var _a;
                    options.onComplete();
                    (_a = valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);
                } }));
    }
    function set() {
        var _a;
        value.set(target);
        onComplete();
        (_a = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _a === void 0 ? void 0 : _a.call(valueTransition);
        return { stop: function () { } };
    }
    return !isOriginAnimatable ||
        !isTargetAnimatable ||
        valueTransition.type === false
        ? set
        : start;
}
function getValueTransition(transition, key) {
    return transition[key] || transition["default"] || transition;
}
/**
 * Start animation on a MotionValue. This function is an interface between
 * Framer Motion and Popmotion
 *
 * @internal
 */
function startAnimation(key, value, target, transition) {
    if (transition === void 0) { transition = {}; }
    return value.start(function (onComplete) {
        var delayTimer;
        var controls;
        var animation = getAnimation(key, value, target, transition, onComplete);
        var delay = getDelayFromTransition(transition, key);
        var start = function () { return (controls = animation()); };
        if (delay) {
            delayTimer = setTimeout(start, Object(_utils_time_conversion_js__WEBPACK_IMPORTED_MODULE_3__["secondsToMilliseconds"])(delay));
        }
        else {
            start();
        }
        return function () {
            clearTimeout(delayTimer);
            controls === null || controls === void 0 ? void 0 : controls.stop();
        };
    });
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js":
/*!********************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js ***!
  \********************************************************************************************************************************/
/*! exports provided: PresenceChild */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PresenceChild", function() { return PresenceChild; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../context/PresenceContext.js */ "../../node_modules/framer-motion/dist/es/context/PresenceContext.js");
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");




var presenceId = 0;
function getPresenceId() {
    var id = presenceId;
    presenceId++;
    return id;
}
var PresenceChild = function (_a) {
    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;
    var presenceChildren = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_2__["useConstant"])(newChildrenMap);
    var id = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_2__["useConstant"])(getPresenceId);
    var context = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () { return ({
        id: id,
        initial: initial,
        isPresent: isPresent,
        custom: custom,
        onExitComplete: function (childId) {
            presenceChildren.set(childId, true);
            var allComplete = true;
            presenceChildren.forEach(function (isComplete) {
                if (!isComplete)
                    allComplete = false;
            });
            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());
        },
        register: function (childId) {
            presenceChildren.set(childId, false);
            return function () { return presenceChildren.delete(childId); };
        },
    }); }, 
    /**
     * If the presence of a child affects the layout of the components around it,
     * we want to make a new context value to ensure they get re-rendered
     * so they can detect that layout change.
     */
    presenceAffectsLayout ? undefined : [isPresent]);
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });
    }, [isPresent]);
    /**
     * If there's no `motion` components to fire exit animations, we want to remove this
     * component immediately.
     */
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());
    }, [isPresent]);
    return (Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(_context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_1__["PresenceContext"].Provider, { value: context }, children));
};
function newChildrenMap() {
    return new Map();
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js":
/*!************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/components/AnimatePresence/index.js ***!
  \************************************************************************************************************************/
/*! exports provided: AnimatePresence */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimatePresence", function() { return AnimatePresence; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/SharedLayoutContext.js */ "../../node_modules/framer-motion/dist/es/context/SharedLayoutContext.js");
/* harmony import */ var _utils_use_force_update_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/use-force-update.js */ "../../node_modules/framer-motion/dist/es/utils/use-force-update.js");
/* harmony import */ var _PresenceChild_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PresenceChild.js */ "../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js");






function getChildKey(child) {
    return child.key || "";
}
function updateChildLookup(children, allChildren) {
    var seenChildren =  true ? new Set() : undefined;
    children.forEach(function (child) {
        var key = getChildKey(child);
        if ( true && seenChildren) {
            if (seenChildren.has(key)) {
                console.warn("Children of AnimatePresence require unique keys. \"" + key + "\" is a duplicate.");
            }
            seenChildren.add(key);
        }
        allChildren.set(key, child);
    });
}
function onlyElements(children) {
    var filtered = [];
    // We use forEach here instead of map as map mutates the component key by preprending `.$`
    react__WEBPACK_IMPORTED_MODULE_0__["Children"].forEach(children, function (child) {
        if (Object(react__WEBPACK_IMPORTED_MODULE_0__["isValidElement"])(child))
            filtered.push(child);
    });
    return filtered;
}
/**
 * `AnimatePresence` enables the animation of components that have been removed from the tree.
 *
 * When adding/removing more than a single child, every child **must** be given a unique `key` prop.
 *
 * @library
 *
 * Any `Frame` components that have an `exit` property defined will animate out when removed from
 * the tree.
 *
 * ```jsx
 * import { Frame, AnimatePresence } from 'framer'
 *
 * // As items are added and removed from `items`
 * export function Items({ items }) {
 *   return (
 *     <AnimatePresence>
 *       {items.map(item => (
 *         <Frame
 *           key={item.id}
 *           initial={{ opacity: 0 }}
 *           animate={{ opacity: 1 }}
 *           exit={{ opacity: 0 }}
 *         />
 *       ))}
 *     </AnimatePresence>
 *   )
 * }
 * ```
 *
 * You can sequence exit animations throughout a tree using variants.
 *
 * @motion
 *
 * Any `motion` components that have an `exit` property defined will animate out when removed from
 * the tree.
 *
 * ```jsx
 * import { motion, AnimatePresence } from 'framer-motion'
 *
 * export const Items = ({ items }) => (
 *   <AnimatePresence>
 *     {items.map(item => (
 *       <motion.div
 *         key={item.id}
 *         initial={{ opacity: 0 }}
 *         animate={{ opacity: 1 }}
 *         exit={{ opacity: 0 }}
 *       />
 *     ))}
 *   </AnimatePresence>
 * )
 * ```
 *
 * You can sequence exit animations throughout a tree using variants.
 *
 * If a child contains multiple `motion` components with `exit` props, it will only unmount the child
 * once all `motion` components have finished animating out. Likewise, any components using
 * `usePresence` all need to call `safeToRemove`.
 *
 * @public
 */
var AnimatePresence = function (_a) {
    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;
    // We want to force a re-render once all exiting animations have finished. We
    // either use a local forceRender function, or one from a parent context if it exists.
    var forceRender = Object(_utils_use_force_update_js__WEBPACK_IMPORTED_MODULE_3__["useForceUpdate"])();
    var layoutContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__["SharedLayoutContext"]);
    if (Object(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__["isSharedLayout"])(layoutContext)) {
        forceRender = layoutContext.forceUpdate;
    }
    var isInitialRender = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(true);
    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key
    var filteredChildren = onlyElements(children);
    // Keep a living record of the children we're actually rendering so we
    // can diff to figure out which are entering and exiting
    var presentChildren = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(filteredChildren);
    // A lookup table to quickly reference components by key
    var allChildren = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(new Map())
        .current;
    // A living record of all currently exiting components.
    var exiting = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(new Set()).current;
    updateChildLookup(filteredChildren, allChildren);
    // If this is the initial component render, just deal with logic surrounding whether
    // we play onMount animations or not.
    if (isInitialRender.current) {
        isInitialRender.current = false;
        return (Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null, filteredChildren.map(function (child) { return (Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(_PresenceChild_js__WEBPACK_IMPORTED_MODULE_4__["PresenceChild"], { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));
    }
    // If this is a subsequent render, deal with entering and exiting children
    var childrenToRender = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__spread"])(filteredChildren);
    // Diff the keys of the currently-present and target children to update our
    // exiting list.
    var presentKeys = presentChildren.current.map(getChildKey);
    var targetKeys = filteredChildren.map(getChildKey);
    // Diff the present children with our target children and mark those that are exiting
    var numPresent = presentKeys.length;
    for (var i = 0; i < numPresent; i++) {
        var key = presentKeys[i];
        if (targetKeys.indexOf(key) === -1) {
            exiting.add(key);
        }
        else {
            // In case this key has re-entered, remove from the exiting list
            exiting.delete(key);
        }
    }
    // If we currently have exiting children, and we're deferring rendering incoming children
    // until after all current children have exiting, empty the childrenToRender array
    if (exitBeforeEnter && exiting.size) {
        childrenToRender = [];
    }
    // Loop through all currently exiting components and clone them to overwrite `animate`
    // with any `exit` prop they might have defined.
    exiting.forEach(function (key) {
        // If this component is actually entering again, early return
        if (targetKeys.indexOf(key) !== -1)
            return;
        var child = allChildren.get(key);
        if (!child)
            return;
        var insertionIndex = presentKeys.indexOf(key);
        var onExit = function () {
            allChildren.delete(key);
            exiting.delete(key);
            // Remove this child from the present children
            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });
            presentChildren.current.splice(removeIndex, 1);
            // Defer re-rendering until all exiting children have indeed left
            if (!exiting.size) {
                presentChildren.current = filteredChildren;
                forceRender();
                onExitComplete && onExitComplete();
            }
        };
        childrenToRender.splice(insertionIndex, 0, Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(_PresenceChild_js__WEBPACK_IMPORTED_MODULE_4__["PresenceChild"], { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));
    });
    // Add `MotionContext` even to children that don't need it to ensure we're rendering
    // the same tree between renders
    childrenToRender = childrenToRender.map(function (child) {
        var key = child.key;
        return exiting.has(key) ? (child) : (Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(_PresenceChild_js__WEBPACK_IMPORTED_MODULE_4__["PresenceChild"], { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));
    });
    presentChildren.current = childrenToRender;
    if ( true &&
        exitBeforeEnter &&
        childrenToRender.length > 1) {
        console.warn("You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.");
    }
    return (Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null, exiting.size
        ? childrenToRender
        : childrenToRender.map(function (child) { return Object(react__WEBPACK_IMPORTED_MODULE_0__["cloneElement"])(child); })));
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.js":
/*!*******************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.js ***!
  \*******************************************************************************************************************************/
/*! exports provided: isPresent, useIsPresent, usePresence */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPresent", function() { return isPresent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useIsPresent", function() { return useIsPresent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "usePresence", function() { return usePresence; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../context/PresenceContext.js */ "../../node_modules/framer-motion/dist/es/context/PresenceContext.js");
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");




/**
 * When a component is the child of `AnimatePresence`, it can use `usePresence`
 * to access information about whether it's still present in the React tree.
 *
 * ```jsx
 * import { usePresence } from "framer-motion"
 *
 * export const Component = () => {
 *   const [isPresent, safeToRemove] = usePresence()
 *
 *   useEffect(() => {
 *     !isPresent && setTimeout(safeToRemove, 1000)
 *   }, [isPresent])
 *
 *   return <div />
 * }
 * ```
 *
 * If `isPresent` is `false`, it means that a component has been removed the tree, but
 * `AnimatePresence` won't really remove it until `safeToRemove` has been called.
 *
 * @public
 */
function usePresence() {
    var context = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_1__["PresenceContext"]);
    if (context === null)
        return [true, null];
    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;
    // It's safe to call the following hooks conditionally (after an early return) because the context will always
    // either be null or non-null for the lifespan of the component.
    // Replace with useOpaqueId when released in React
    var id = useUniqueId();
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () { return register(id); }, []);
    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };
    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];
}
/**
 * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.
 * There is no `safeToRemove` function.
 *
 * ```jsx
 * import { useIsPresent } from "framer-motion"
 *
 * export const Component = () => {
 *   const isPresent = useIsPresent()
 *
 *   useEffect(() => {
 *     !isPresent && console.log("I've been removed!")
 *   }, [isPresent])
 *
 *   return <div />
 * }
 * ```
 *
 * @public
 */
function useIsPresent() {
    return isPresent(Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_1__["PresenceContext"]));
}
function isPresent(context) {
    return context === null ? true : context.isPresent;
}
var counter = 0;
var incrementId = function () { return counter++; };
var useUniqueId = function () { return Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_2__["useConstant"])(incrementId); };




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/index.js":
/*!****************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/components/AnimateSharedLayout/index.js ***!
  \****************************************************************************************************************************/
/*! exports provided: AnimateSharedLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimateSharedLayout", function() { return AnimateSharedLayout; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/MotionContext/index.js */ "../../node_modules/framer-motion/dist/es/context/MotionContext/index.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/types.js");
/* harmony import */ var _utils_batcher_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/batcher.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/batcher.js");
/* harmony import */ var _context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../context/SharedLayoutContext.js */ "../../node_modules/framer-motion/dist/es/context/SharedLayoutContext.js");
/* harmony import */ var _utils_stack_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/stack.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/stack.js");
/* harmony import */ var _utils_rotate_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/rotate.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/rotate.js");









/**
 * @public
 */
var AnimateSharedLayout = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__extends"])(AnimateSharedLayout, _super);
    function AnimateSharedLayout() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * A list of all the children in the shared layout
         */
        _this.children = new Set();
        /**
         * As animate components with a defined `layoutId` are added/removed to the tree,
         * we store them in order. When one is added, it will animate out from the
         * previous one, and when it's removed, it'll animate to the previous one.
         */
        _this.stacks = new Map();
        /**
         * Track whether the component has mounted. If it hasn't, the presence of added children
         * are set to Present, whereas if it has they're considered Entering
         */
        _this.hasMounted = false;
        /**
         * Track whether we already have an update scheduled. If we don't, we'll run snapshots
         * and schedule one.
         */
        _this.updateScheduled = false;
        /**
         * Tracks whether we already have a render scheduled. If we don't, we'll force one with this.forceRender
         */
        _this.renderScheduled = false;
        /**
         * The methods provided to all children in the shared layout tree.
         */
        _this.syncContext = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, Object(_utils_batcher_js__WEBPACK_IMPORTED_MODULE_4__["createBatcher"])()), { syncUpdate: function (force) { return _this.scheduleUpdate(force); }, forceUpdate: function () {
                // By copying syncContext to itself, when this component re-renders it'll also re-render
                // all children subscribed to the SharedLayout context.
                _this.syncContext = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, _this.syncContext);
                _this.scheduleUpdate(true);
            }, register: function (child) { return _this.addChild(child); }, remove: function (child) { return _this.removeChild(child); } });
        return _this;
    }
    AnimateSharedLayout.prototype.componentDidMount = function () {
        this.hasMounted = true;
    };
    AnimateSharedLayout.prototype.componentDidUpdate = function () {
        this.startLayoutAnimation();
    };
    AnimateSharedLayout.prototype.shouldComponentUpdate = function () {
        this.renderScheduled = true;
        return true;
    };
    AnimateSharedLayout.prototype.startLayoutAnimation = function () {
        var _this = this;
        /**
         * Reset update and render scheduled status
         */
        this.renderScheduled = this.updateScheduled = false;
        var type = this.props.type;
        /**
         * Update presence metadata based on the latest AnimatePresence status.
         * This is a kind of goofy way of dealing with this, perhaps there's a better model to find.
         */
        this.children.forEach(function (child) {
            if (!child.isPresent) {
                child.presence = _types_js__WEBPACK_IMPORTED_MODULE_3__["Presence"].Exiting;
            }
            else if (child.presence !== _types_js__WEBPACK_IMPORTED_MODULE_3__["Presence"].Entering) {
                child.presence =
                    child.presence === _types_js__WEBPACK_IMPORTED_MODULE_3__["Presence"].Exiting
                        ? _types_js__WEBPACK_IMPORTED_MODULE_3__["Presence"].Entering
                        : _types_js__WEBPACK_IMPORTED_MODULE_3__["Presence"].Present;
            }
        });
        this.updateStacks();
        /**
         * Create a handler which we can use to flush the children animations
         */
        var handler = {
            measureLayout: function (child) { return child.updateLayoutMeasurement(); },
            layoutReady: function (child) {
                if (child.getLayoutId() !== undefined) {
                    var stack = _this.getStack(child);
                    stack.animate(child, type === "crossfade");
                }
                else {
                    child.notifyLayoutReady();
                }
            },
            parent: this.context.visualElement,
        };
        /**
         * Shared layout animations can be used without the AnimateSharedLayout wrapping component.
         * This requires some co-ordination across components to stop layout thrashing
         * and ensure measurements are taken at the correct time.
         *
         * Here we use that same mechanism of schedule/flush.
         */
        this.children.forEach(function (child) { return _this.syncContext.add(child); });
        this.syncContext.flush(handler);
        /**
         * Clear snapshots so subsequent rerenders don't retain memory of outgoing components
         */
        this.stacks.forEach(function (stack) { return stack.clearSnapshot(); });
    };
    AnimateSharedLayout.prototype.updateStacks = function () {
        this.stacks.forEach(function (stack) { return stack.updateLeadAndFollow(); });
    };
    AnimateSharedLayout.prototype.scheduleUpdate = function (force) {
        if (force === void 0) { force = false; }
        if (!(force || !this.updateScheduled))
            return;
        /**
         * Flag we've scheduled an update
         */
        this.updateScheduled = true;
        /**
         * Write: Reset rotation transforms so bounding boxes can be accurately measured.
         */
        this.children.forEach(function (child) { return Object(_utils_rotate_js__WEBPACK_IMPORTED_MODULE_7__["resetRotate"])(child); });
        /**
         * Read: Snapshot children
         */
        this.children.forEach(function (child) { return child.snapshotViewportBox(); });
        /**
         * Every child keeps a local snapshot, but we also want to record
         * snapshots of the visible children as, if they're are being removed
         * in this render, we can still access them.
         *
         * TODO: What would be better here is doing a single loop where we
         * only snapshotViewportBoxes of undefined layoutIds and then one for each stack
         */
        this.stacks.forEach(function (stack) { return stack.updateSnapshot(); });
        /**
         * Force a rerender by setting state if we aren't already going to render.
         */
        if (force || !this.renderScheduled) {
            this.renderScheduled = true;
            this.forceUpdate();
        }
    };
    AnimateSharedLayout.prototype.addChild = function (child) {
        this.children.add(child);
        this.addToStack(child);
        child.presence = this.hasMounted ? _types_js__WEBPACK_IMPORTED_MODULE_3__["Presence"].Entering : _types_js__WEBPACK_IMPORTED_MODULE_3__["Presence"].Present;
    };
    AnimateSharedLayout.prototype.removeChild = function (child) {
        this.scheduleUpdate();
        this.children.delete(child);
        this.removeFromStack(child);
    };
    AnimateSharedLayout.prototype.addToStack = function (child) {
        var stack = this.getStack(child);
        stack === null || stack === void 0 ? void 0 : stack.add(child);
    };
    AnimateSharedLayout.prototype.removeFromStack = function (child) {
        var stack = this.getStack(child);
        stack === null || stack === void 0 ? void 0 : stack.remove(child);
    };
    /**
     * Return a stack of animate children based on the provided layoutId.
     * Will create a stack if none currently exists with that layoutId.
     */
    AnimateSharedLayout.prototype.getStack = function (child) {
        var id = child.getLayoutId();
        if (id === undefined)
            return;
        // Create stack if it doesn't already exist
        !this.stacks.has(id) && this.stacks.set(id, Object(_utils_stack_js__WEBPACK_IMPORTED_MODULE_6__["layoutStack"])());
        return this.stacks.get(id);
    };
    AnimateSharedLayout.prototype.render = function () {
        return (Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_5__["SharedLayoutContext"].Provider, { value: this.syncContext }, this.props.children));
    };
    AnimateSharedLayout.contextType = _context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_2__["MotionContext"];
    return AnimateSharedLayout;
}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]));




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/types.js":
/*!****************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/components/AnimateSharedLayout/types.js ***!
  \****************************************************************************************************************************/
/*! exports provided: Presence, VisibilityAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Presence", function() { return Presence; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisibilityAction", function() { return VisibilityAction; });
var Presence;
(function (Presence) {
    Presence[Presence["Entering"] = 0] = "Entering";
    Presence[Presence["Present"] = 1] = "Present";
    Presence[Presence["Exiting"] = 2] = "Exiting";
})(Presence || (Presence = {}));
var VisibilityAction;
(function (VisibilityAction) {
    VisibilityAction[VisibilityAction["Hide"] = 0] = "Hide";
    VisibilityAction[VisibilityAction["Show"] = 1] = "Show";
})(VisibilityAction || (VisibilityAction = {}));




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/batcher.js":
/*!************************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/batcher.js ***!
  \************************************************************************************************************************************/
/*! exports provided: createBatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBatcher", function() { return createBatcher; });
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/types.js");


/**
 * Default handlers for batching VisualElements
 */
var defaultHandler = {
    measureLayout: function (child) { return child.updateLayoutMeasurement(); },
    layoutReady: function (child) { return child.notifyLayoutReady(); },
};
/**
 * Create a batcher to process VisualElements
 */
function createBatcher() {
    var queue = new Set();
    return {
        add: function (child) { return queue.add(child); },
        flush: function (_a) {
            var _b = _a === void 0 ? defaultHandler : _a, measureLayout = _b.measureLayout, layoutReady = _b.layoutReady, parent = _b.parent;
            var order = Array.from(queue).sort(function (a, b) { return a.depth - b.depth; });
            var resetAndMeasure = function () {
                /**
                 * Write: Reset any transforms on children elements so we can read their actual layout
                 */
                order.forEach(function (child) { return child.resetTransform(); });
                /**
                 * Read: Measure the actual layout
                 */
                order.forEach(measureLayout);
            };
            parent
                ? parent.withoutTransform(resetAndMeasure)
                : resetAndMeasure();
            /**
             * Write: Notify the VisualElements they're ready for further write operations.
             */
            order.forEach(layoutReady);
            /**
             * After all children have started animating, ensure any Entering components are set to Present.
             * If we add deferred animations (set up all animations and then start them in two loops) this
             * could be moved to the start loop. But it needs to happen after all the animations configs
             * are generated in AnimateSharedLayout as this relies on presence data
             */
            order.forEach(function (child) {
                if (child.isPresent)
                    child.presence = _types_js__WEBPACK_IMPORTED_MODULE_0__["Presence"].Present;
            });
            queue.clear();
        },
    };
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/crossfader.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/crossfader.js ***!
  \***************************************************************************************************************************************/
/*! exports provided: createCrossfader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCrossfader", function() { return createCrossfader; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framesync */ "../../node_modules/framesync/dist/es/index.js");
/* harmony import */ var _value_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../value/index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");
/* harmony import */ var _animation_animate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../animation/animate.js */ "../../node_modules/framer-motion/dist/es/animation/animate.js");






function createCrossfader() {
    /**
     * The current state of the crossfade as a value between 0 and 1
     */
    var progress = Object(_value_index_js__WEBPACK_IMPORTED_MODULE_3__["motionValue"])(1);
    var options = {
        lead: undefined,
        follow: undefined,
        crossfadeOpacity: false,
        preserveFollowOpacity: false,
    };
    var leadState = {};
    var followState = {};
    /**
     *
     */
    var isActive = false;
    /**
     *
     */
    var finalCrossfadeFrame = null;
    /**
     * Framestamp of the last frame we updated values at.
     */
    var prevUpdate = 0;
    function startCrossfadeAnimation(target, transition) {
        var lead = options.lead, follow = options.follow;
        isActive = true;
        finalCrossfadeFrame = null;
        return Object(_animation_animate_js__WEBPACK_IMPORTED_MODULE_4__["animate"])(progress, target, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, transition), { onUpdate: function () {
                lead && lead.scheduleRender();
                follow && follow.scheduleRender();
            }, onComplete: function () {
                isActive = false;
                /**
                 * If the crossfade animation is no longer active, flag a frame
                 * that we're still allowed to crossfade
                 */
                finalCrossfadeFrame = Object(framesync__WEBPACK_IMPORTED_MODULE_2__["getFrameData"])().timestamp;
            } }));
    }
    function updateCrossfade() {
        var _a, _b;
        /**
         * We only want to compute the crossfade once per frame, so we
         * compare the previous update framestamp with the current frame
         * and early return if they're the same.
         */
        var timestamp = Object(framesync__WEBPACK_IMPORTED_MODULE_2__["getFrameData"])().timestamp;
        var lead = options.lead, follow = options.follow;
        if (timestamp === prevUpdate || !lead)
            return;
        prevUpdate = timestamp;
        /**
         * Merge each component's latest values into our crossfaded state
         * before crossfading.
         */
        var latestLeadValues = lead.getLatestValues();
        Object.assign(leadState, latestLeadValues);
        var latestFollowValues = follow
            ? follow.getLatestValues()
            : options.prevValues;
        Object.assign(followState, latestFollowValues);
        var p = progress.get();
        /**
         * Crossfade the opacity between the two components. This will result
         * in a different opacity for each component.
         */
        var leadTargetOpacity = (_a = latestLeadValues.opacity) !== null && _a !== void 0 ? _a : 1;
        var followTargetOpacity = (_b = latestFollowValues === null || latestFollowValues === void 0 ? void 0 : latestFollowValues.opacity) !== null && _b !== void 0 ? _b : 1;
        if (options.crossfadeOpacity && follow) {
            leadState.opacity = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(0, leadTargetOpacity, easeCrossfadeIn(p));
            followState.opacity = options.preserveFollowOpacity
                ? followTargetOpacity
                : Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(followTargetOpacity, 0, easeCrossfadeOut(p));
        }
        else if (!follow) {
            leadState.opacity = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(followTargetOpacity, leadTargetOpacity, p);
        }
        mixValues(leadState, followState, latestLeadValues, latestFollowValues || {}, Boolean(follow), p);
    }
    return {
        isActive: function () {
            return leadState &&
                (isActive || Object(framesync__WEBPACK_IMPORTED_MODULE_2__["getFrameData"])().timestamp === finalCrossfadeFrame);
        },
        fromLead: function (transition) {
            return startCrossfadeAnimation(0, transition);
        },
        toLead: function (transition) {
            progress.set(options.follow ? 1 - progress.get() : 0);
            return startCrossfadeAnimation(1, transition);
        },
        reset: function () { return progress.set(1); },
        stop: function () { return progress.stop(); },
        getCrossfadeState: function (element) {
            updateCrossfade();
            if (element === options.lead) {
                return leadState;
            }
            else if (element === options.follow) {
                return followState;
            }
        },
        setOptions: function (newOptions) {
            options = newOptions;
            leadState = {};
            followState = {};
        },
        getLatestValues: function () {
            return leadState;
        },
    };
}
var easeCrossfadeIn = compress(0, 0.5, popmotion__WEBPACK_IMPORTED_MODULE_1__["circOut"]);
var easeCrossfadeOut = compress(0.5, 0.95, popmotion__WEBPACK_IMPORTED_MODULE_1__["linear"]);
function compress(min, max, easing) {
    return function (p) {
        // Could replace ifs with clamp
        if (p < min)
            return 0;
        if (p > max)
            return 1;
        return easing(Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["progress"])(min, max, p));
    };
}
var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
var numBorders = borders.length;
function mixValues(leadState, followState, latestLeadValues, latestFollowValues, hasFollowElement, p) {
    /**
     * Mix border radius
     */
    for (var i = 0; i < numBorders; i++) {
        var borderLabel = "border" + borders[i] + "Radius";
        var followRadius = getRadius(latestFollowValues, borderLabel);
        var leadRadius = getRadius(latestLeadValues, borderLabel);
        if (followRadius === undefined && leadRadius === undefined)
            continue;
        followRadius || (followRadius = 0);
        leadRadius || (leadRadius = 0);
        /**
         * Currently we're only crossfading between numerical border radius.
         * It would be possible to crossfade between percentages for a little
         * extra bundle size.
         */
        if (typeof followRadius === "number" &&
            typeof leadRadius === "number") {
            var radius = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(followRadius, leadRadius, p);
            leadState[borderLabel] = followState[borderLabel] = radius;
        }
    }
    /**
     * Mix rotation
     */
    if (latestFollowValues.rotate || latestLeadValues.rotate) {
        var rotate = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(latestFollowValues.rotate || 0, latestLeadValues.rotate || 0, p);
        leadState.rotate = followState.rotate = rotate;
    }
    /**
     * We only want to mix the background color if there's a follow element
     * that we're not crossfading opacity between. For instance with switch
     * AnimateSharedLayout animations, this helps the illusion of a continuous
     * element being animated but also cuts down on the number of paints triggered
     * for elements where opacity is doing that work for us.
     */
    if (!hasFollowElement &&
        latestLeadValues.backgroundColor &&
        latestFollowValues.backgroundColor) {
        /**
         * This isn't ideal performance-wise as mixColor is creating a new function every frame.
         * We could probably create a mixer that runs at the start of the animation but
         * the idea behind the crossfader is that it runs dynamically between two potentially
         * changing targets (ie opacity or borderRadius may be animating independently via variants)
         */
        leadState.backgroundColor = followState.backgroundColor = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mixColor"])(latestFollowValues.backgroundColor, latestLeadValues.backgroundColor)(p);
    }
}
function getRadius(values, radiusName) {
    var _a;
    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/rotate.js":
/*!***********************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/rotate.js ***!
  \***********************************************************************************************************************************/
/*! exports provided: resetRotate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetRotate", function() { return resetRotate; });
/* harmony import */ var _render_html_utils_transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../render/html/utils/transform.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/transform.js");


function resetRotate(child) {
    // If there's no detected rotation values, we can early return without a forced render.
    var hasRotate = false;
    // Keep a record of all the values we've reset
    var resetValues = {};
    // Check the rotate value of all axes and reset to 0
    for (var i = 0; i < _render_html_utils_transform_js__WEBPACK_IMPORTED_MODULE_0__["transformAxes"].length; i++) {
        var axis = _render_html_utils_transform_js__WEBPACK_IMPORTED_MODULE_0__["transformAxes"][i];
        var key = "rotate" + axis;
        // If this rotation doesn't exist as a motion value, then we don't
        // need to reset it
        if (!child.hasValue(key) || child.getStaticValue(key) === 0)
            continue;
        hasRotate = true;
        // Record the rotation and then temporarily set it to 0
        resetValues[key] = child.getStaticValue(key);
        child.setStaticValue(key, 0);
    }
    // If there's no rotation values, we don't need to do any more.
    if (!hasRotate)
        return;
    // Force a render of this element to apply the transform with all rotations
    // set to 0.
    child.syncRender();
    // Put back all the values we reset
    for (var key in resetValues) {
        child.setStaticValue(key, resetValues[key]);
    }
    // Schedule a render for the next frame. This ensures we won't visually
    // see the element with the reset rotate value applied.
    child.scheduleRender();
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/stack.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/stack.js ***!
  \**********************************************************************************************************************************/
/*! exports provided: layoutStack */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "layoutStack", function() { return layoutStack; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/types.js");
/* harmony import */ var _gestures_drag_VisualElementDragControls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../gestures/drag/VisualElementDragControls.js */ "../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.js");
/* harmony import */ var _crossfader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./crossfader.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/crossfader.js");





function layoutStack() {
    var stack = new Set();
    var state = { leadIsExiting: false };
    var prevState = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, state);
    var prevValues;
    var prevViewportBox;
    var prevDragCursor;
    var crossfader = Object(_crossfader_js__WEBPACK_IMPORTED_MODULE_3__["createCrossfader"])();
    var needsCrossfadeAnimation = false;
    function getFollowViewportBox() {
        return state.follow ? state.follow.prevViewportBox : prevViewportBox;
    }
    function getFollowLayout() {
        var _a;
        return (_a = state.follow) === null || _a === void 0 ? void 0 : _a.getLayoutState().layout;
    }
    return {
        add: function (element) {
            element.setCrossfader(crossfader);
            stack.add(element);
            /**
             * Hydrate new element with previous drag position if we have one
             */
            if (prevDragCursor)
                element.prevDragCursor = prevDragCursor;
            if (!state.lead)
                state.lead = element;
        },
        remove: function (element) {
            stack.delete(element);
        },
        getLead: function () { return state.lead; },
        updateSnapshot: function () {
            if (!state.lead)
                return;
            prevValues = crossfader.isActive()
                ? crossfader.getLatestValues()
                : state.lead.getLatestValues();
            prevViewportBox = state.lead.prevViewportBox;
            var dragControls = _gestures_drag_VisualElementDragControls_js__WEBPACK_IMPORTED_MODULE_2__["elementDragControls"].get(state.lead);
            if (dragControls && dragControls.isDragging) {
                prevDragCursor = dragControls.cursorProgress;
            }
        },
        clearSnapshot: function () {
            prevDragCursor = prevViewportBox = undefined;
        },
        updateLeadAndFollow: function () {
            var _a;
            prevState = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, state);
            var lead;
            var follow;
            var order = Array.from(stack);
            for (var i = order.length; i--; i >= 0) {
                var element = order[i];
                if (lead)
                    follow !== null && follow !== void 0 ? follow : (follow = element);
                lead !== null && lead !== void 0 ? lead : (lead = element);
                if (lead && follow)
                    break;
            }
            state.lead = lead;
            state.follow = follow;
            state.leadIsExiting = ((_a = state.lead) === null || _a === void 0 ? void 0 : _a.presence) === _types_js__WEBPACK_IMPORTED_MODULE_1__["Presence"].Exiting;
            crossfader.setOptions({
                lead: lead,
                follow: follow,
                prevValues: prevValues,
                crossfadeOpacity: (follow === null || follow === void 0 ? void 0 : follow.isPresenceRoot) || (lead === null || lead === void 0 ? void 0 : lead.isPresenceRoot),
            });
            if (prevState.lead !== state.lead ||
                prevState.leadIsExiting !== state.leadIsExiting) {
                needsCrossfadeAnimation = true;
            }
        },
        animate: function (child, shouldCrossfade) {
            if (shouldCrossfade === void 0) { shouldCrossfade = false; }
            if (child === state.lead) {
                if (shouldCrossfade) {
                    /**
                     * Point a lead to itself in case it was previously pointing
                     * to a different visual element
                     */
                    child.pointTo(state.lead);
                }
                else {
                    child.setVisibility(true);
                }
                var config = {};
                if (child.presence === _types_js__WEBPACK_IMPORTED_MODULE_1__["Presence"].Entering) {
                    config.originBox = getFollowViewportBox();
                }
                else if (child.presence === _types_js__WEBPACK_IMPORTED_MODULE_1__["Presence"].Exiting) {
                    config.targetBox = getFollowLayout();
                }
                if (needsCrossfadeAnimation) {
                    needsCrossfadeAnimation = false;
                    var transition = child.getDefaultTransition();
                    child.presence === _types_js__WEBPACK_IMPORTED_MODULE_1__["Presence"].Entering
                        ? crossfader.toLead(transition)
                        : crossfader.fromLead(transition);
                }
                child.notifyLayoutReady(config);
            }
            else {
                if (shouldCrossfade) {
                    state.lead && child.pointTo(state.lead);
                }
                else {
                    child.setVisibility(false);
                }
            }
        },
    };
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.js":
/*!******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/context/LayoutGroupContext.js ***!
  \******************************************************************************************************************/
/*! exports provided: LayoutGroupContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayoutGroupContext", function() { return LayoutGroupContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


/**
 * @internal
 */
var LayoutGroupContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["createContext"])(null);




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/context/MotionConfigContext.js ***!
  \*******************************************************************************************************************/
/*! exports provided: MotionConfig, MotionConfigContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MotionConfig", function() { return MotionConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MotionConfigContext", function() { return MotionConfigContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");



/**
 * @public
 */
var MotionConfigContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["createContext"])({
    transformPagePoint: function (p) { return p; },
    features: [],
    isStatic: false,
});
/**
 * MotionConfig can be used in combination with the `m` component to cut bundle size
 * and dynamically load only the features you use.
 *
 * ```jsx
 * import {
 *   m as motion,
 *   AnimationFeature,
 *   MotionConfig
 * } from "framer-motion"
 *
 * export function App() {
 *   return (
 *     <MotionConfig features={[AnimationFeature]}>
 *       <motion.div animate={{ x: 100 }} />
 *     </MotionConfig>
 *   )
 * }
 * ```
 *
 * @public
 */
function MotionConfig(_a) {
    var children = _a.children, _b = _a.features, features = _b === void 0 ? [] : _b, transition = _a.transition, props = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__rest"])(_a, ["children", "features", "transition"]);
    var pluginContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(MotionConfigContext);
    var loadedFeatures = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__spread"])(new Set(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__spread"])(pluginContext.features, features)));
    // We do want to rerender children when the number of loaded features changes
    var value = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () { return ({
        features: loadedFeatures,
        transition: transition || pluginContext.transition,
    }); }, [loadedFeatures.length, transition]);
    // Mutative to prevent triggering rerenders in all listening
    // components every time this component renders
    for (var key in props) {
        value[key] = props[key];
    }
    return (Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(MotionConfigContext.Provider, { value: value }, children));
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/context/MotionContext/create.js":
/*!********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/context/MotionContext/create.js ***!
  \********************************************************************************************************************/
/*! exports provided: useCreateMotionContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCreateMotionContext", function() { return useCreateMotionContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "../../node_modules/framer-motion/dist/es/context/MotionContext/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "../../node_modules/framer-motion/dist/es/context/MotionContext/utils.js");




function useCreateMotionContext(props, isStatic) {
    var _a = Object(_utils_js__WEBPACK_IMPORTED_MODULE_2__["getCurrentTreeVariants"])(props, Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_index_js__WEBPACK_IMPORTED_MODULE_1__["MotionContext"])), initial = _a.initial, animate = _a.animate;
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () { return ({ initial: initial, animate: animate }); }, 
    /**
     * Only break memoisation in static mode
     */
    isStatic
        ? [
            variantLabelsAsDependency(initial),
            variantLabelsAsDependency(animate),
        ]
        : []);
}
function variantLabelsAsDependency(prop) {
    return Array.isArray(prop) ? prop.join(" ") : prop;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/context/MotionContext/index.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/context/MotionContext/index.js ***!
  \*******************************************************************************************************************/
/*! exports provided: MotionContext, useVisualElementContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MotionContext", function() { return MotionContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useVisualElementContext", function() { return useVisualElementContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


var MotionContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["createContext"])({});
function useVisualElementContext() {
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(MotionContext).visualElement;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/context/MotionContext/utils.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/context/MotionContext/utils.js ***!
  \*******************************************************************************************************************/
/*! exports provided: getCurrentTreeVariants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCurrentTreeVariants", function() { return getCurrentTreeVariants; });
/* harmony import */ var _render_utils_variants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../render/utils/variants.js */ "../../node_modules/framer-motion/dist/es/render/utils/variants.js");


function getCurrentTreeVariants(props, context) {
    if (Object(_render_utils_variants_js__WEBPACK_IMPORTED_MODULE_0__["checkIfControllingVariants"])(props)) {
        var initial = props.initial, animate = props.animate;
        return {
            initial: initial === false || Object(_render_utils_variants_js__WEBPACK_IMPORTED_MODULE_0__["isVariantLabel"])(initial)
                ? initial
                : undefined,
            animate: Object(_render_utils_variants_js__WEBPACK_IMPORTED_MODULE_0__["isVariantLabel"])(animate) ? animate : undefined,
        };
    }
    return props.inherit !== false ? context : {};
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/context/PresenceContext.js":
/*!***************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/context/PresenceContext.js ***!
  \***************************************************************************************************************/
/*! exports provided: PresenceContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PresenceContext", function() { return PresenceContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


/**
 * @public
 */
var PresenceContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["createContext"])(null);




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/context/SharedLayoutContext.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/context/SharedLayoutContext.js ***!
  \*******************************************************************************************************************/
/*! exports provided: FramerTreeLayoutContext, SharedLayoutContext, isSharedLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FramerTreeLayoutContext", function() { return FramerTreeLayoutContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedLayoutContext", function() { return SharedLayoutContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSharedLayout", function() { return isSharedLayout; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_AnimateSharedLayout_utils_batcher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/AnimateSharedLayout/utils/batcher.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/batcher.js");



var SharedLayoutContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["createContext"])(Object(_components_AnimateSharedLayout_utils_batcher_js__WEBPACK_IMPORTED_MODULE_1__["createBatcher"])());
/**
 * @internal
 */
var FramerTreeLayoutContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["createContext"])(Object(_components_AnimateSharedLayout_utils_batcher_js__WEBPACK_IMPORTED_MODULE_1__["createBatcher"])());
function isSharedLayout(context) {
    return !!context.forceUpdate;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/events/event-info.js":
/*!*********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/events/event-info.js ***!
  \*********************************************************************************************************/
/*! exports provided: extractEventInfo, getViewportPointFromEvent, wrapHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extractEventInfo", function() { return extractEventInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getViewportPointFromEvent", function() { return getViewportPointFromEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapHandler", function() { return wrapHandler; });
/* harmony import */ var _gestures_utils_event_type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gestures/utils/event-type.js */ "../../node_modules/framer-motion/dist/es/gestures/utils/event-type.js");


/**
 * Filters out events not attached to the primary pointer (currently left mouse button)
 * @param eventHandler
 */
function filterPrimaryPointer(eventHandler) {
    return function (event) {
        var isMouseEvent = event instanceof MouseEvent;
        var isPrimaryPointer = !isMouseEvent ||
            (isMouseEvent && event.button === 0);
        if (isPrimaryPointer) {
            eventHandler(event);
        }
    };
}
var defaultPagePoint = { pageX: 0, pageY: 0 };
function pointFromTouch(e, pointType) {
    if (pointType === void 0) { pointType = "page"; }
    var primaryTouch = e.touches[0] || e.changedTouches[0];
    var point = primaryTouch || defaultPagePoint;
    return {
        x: point[pointType + "X"],
        y: point[pointType + "Y"],
    };
}
function pointFromMouse(point, pointType) {
    if (pointType === void 0) { pointType = "page"; }
    return {
        x: point[pointType + "X"],
        y: point[pointType + "Y"],
    };
}
function extractEventInfo(event, pointType) {
    if (pointType === void 0) { pointType = "page"; }
    return {
        point: Object(_gestures_utils_event_type_js__WEBPACK_IMPORTED_MODULE_0__["isTouchEvent"])(event)
            ? pointFromTouch(event, pointType)
            : pointFromMouse(event, pointType),
    };
}
function getViewportPointFromEvent(event) {
    return extractEventInfo(event, "client");
}
var wrapHandler = function (handler, shouldFilterPrimaryPointer) {
    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }
    var listener = function (event) {
        return handler(event, extractEventInfo(event));
    };
    return shouldFilterPrimaryPointer
        ? filterPrimaryPointer(listener)
        : listener;
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/events/use-dom-event.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/events/use-dom-event.js ***!
  \************************************************************************************************************/
/*! exports provided: addDomEvent, useDomEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDomEvent", function() { return addDomEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useDomEvent", function() { return useDomEvent; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


function addDomEvent(target, eventName, handler, options) {
    target.addEventListener(eventName, handler, options);
    return function () { return target.removeEventListener(eventName, handler, options); };
}
/**
 * Attaches an event listener directly to the provided DOM element.
 *
 * Bypassing React's event system can be desirable, for instance when attaching non-passive
 * event handlers.
 *
 * ```jsx
 * const ref = useRef(null)
 *
 * useDomEvent(ref, 'wheel', onWheel, { passive: false })
 *
 * return <div ref={ref} />
 * ```
 *
 * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.
 * @param eventName - Name of the event you want listen for.
 * @param handler - Function to fire when receiving the event.
 * @param options - Options to pass to `Event.addEventListener`.
 *
 * @public
 */
function useDomEvent(ref, eventName, handler, options) {
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        var element = ref.current;
        if (handler && element) {
            return addDomEvent(element, eventName, handler, options);
        }
    }, [ref, eventName, handler, options]);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/events/use-pointer-event.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/events/use-pointer-event.js ***!
  \****************************************************************************************************************/
/*! exports provided: addPointerEvent, usePointerEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addPointerEvent", function() { return addPointerEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "usePointerEvent", function() { return usePointerEvent; });
/* harmony import */ var _event_info_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event-info.js */ "../../node_modules/framer-motion/dist/es/events/event-info.js");
/* harmony import */ var _use_dom_event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-dom-event.js */ "../../node_modules/framer-motion/dist/es/events/use-dom-event.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "../../node_modules/framer-motion/dist/es/events/utils.js");




var mouseEventNames = {
    pointerdown: "mousedown",
    pointermove: "mousemove",
    pointerup: "mouseup",
    pointercancel: "mousecancel",
    pointerover: "mouseover",
    pointerout: "mouseout",
    pointerenter: "mouseenter",
    pointerleave: "mouseleave",
};
var touchEventNames = {
    pointerdown: "touchstart",
    pointermove: "touchmove",
    pointerup: "touchend",
    pointercancel: "touchcancel",
};
function getPointerEventName(name) {
    if (Object(_utils_js__WEBPACK_IMPORTED_MODULE_2__["supportsPointerEvents"])()) {
        return name;
    }
    else if (Object(_utils_js__WEBPACK_IMPORTED_MODULE_2__["supportsTouchEvents"])()) {
        return touchEventNames[name];
    }
    else if (Object(_utils_js__WEBPACK_IMPORTED_MODULE_2__["supportsMouseEvents"])()) {
        return mouseEventNames[name];
    }
    return name;
}
function addPointerEvent(target, eventName, handler, options) {
    return Object(_use_dom_event_js__WEBPACK_IMPORTED_MODULE_1__["addDomEvent"])(target, getPointerEventName(eventName), Object(_event_info_js__WEBPACK_IMPORTED_MODULE_0__["wrapHandler"])(handler, eventName === "pointerdown"), options);
}
function usePointerEvent(ref, eventName, handler, options) {
    return Object(_use_dom_event_js__WEBPACK_IMPORTED_MODULE_1__["useDomEvent"])(ref, getPointerEventName(eventName), handler && Object(_event_info_js__WEBPACK_IMPORTED_MODULE_0__["wrapHandler"])(handler, eventName === "pointerdown"), options);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/events/utils.js":
/*!****************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/events/utils.js ***!
  \****************************************************************************************************/
/*! exports provided: supportsMouseEvents, supportsPointerEvents, supportsTouchEvents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsMouseEvents", function() { return supportsMouseEvents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsPointerEvents", function() { return supportsPointerEvents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsTouchEvents", function() { return supportsTouchEvents; });
var isBrowser = typeof window !== "undefined";
// We check for event support via functions in case they've been mocked by a testing suite.
var supportsPointerEvents = function () {
    return isBrowser && window.onpointerdown === null;
};
var supportsTouchEvents = function () {
    return isBrowser && window.ontouchstart === null;
};
var supportsMouseEvents = function () {
    return isBrowser && window.onmousedown === null;
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/PanSession.js":
/*!***********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/PanSession.js ***!
  \***********************************************************************************************************/
/*! exports provided: PanSession */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PanSession", function() { return PanSession; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
/* harmony import */ var _utils_event_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/event-type.js */ "../../node_modules/framer-motion/dist/es/gestures/utils/event-type.js");
/* harmony import */ var _events_event_info_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../events/event-info.js */ "../../node_modules/framer-motion/dist/es/events/event-info.js");
/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framesync */ "../../node_modules/framesync/dist/es/index.js");
/* harmony import */ var _utils_time_conversion_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/time-conversion.js */ "../../node_modules/framer-motion/dist/es/utils/time-conversion.js");
/* harmony import */ var _events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../events/use-pointer-event.js */ "../../node_modules/framer-motion/dist/es/events/use-pointer-event.js");








/**
 * @internal
 */
var PanSession = /** @class */ (function () {
    function PanSession(event, handlers, _a) {
        var _this = this;
        var transformPagePoint = (_a === void 0 ? {} : _a).transformPagePoint;
        /**
         * @internal
         */
        this.startEvent = null;
        /**
         * @internal
         */
        this.lastMoveEvent = null;
        /**
         * @internal
         */
        this.lastMoveEventInfo = null;
        /**
         * @internal
         */
        this.handlers = {};
        this.updatePoint = function () {
            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))
                return;
            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);
            var isPanStarted = _this.startEvent !== null;
            // Only start panning if the offset is larger than 3 pixels. If we make it
            // any larger than this we'll want to reset the pointer history
            // on the first update to avoid visual snapping to the cursoe.
            var isDistancePastThreshold = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["distance"])(info.offset, { x: 0, y: 0 }) >= 3;
            if (!isPanStarted && !isDistancePastThreshold)
                return;
            var point = info.point;
            var timestamp = Object(framesync__WEBPACK_IMPORTED_MODULE_4__["getFrameData"])().timestamp;
            _this.history.push(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, point), { timestamp: timestamp }));
            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;
            if (!isPanStarted) {
                onStart && onStart(_this.lastMoveEvent, info);
                _this.startEvent = _this.lastMoveEvent;
            }
            onMove && onMove(_this.lastMoveEvent, info);
        };
        this.handlePointerMove = function (event, info) {
            _this.lastMoveEvent = event;
            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);
            // Because Safari doesn't trigger mouseup events when it's above a `<select>`
            if (Object(_utils_event_type_js__WEBPACK_IMPORTED_MODULE_2__["isMouseEvent"])(event) && event.buttons === 0) {
                _this.handlePointerUp(event, info);
                return;
            }
            // Throttle mouse move event to once per frame
            framesync__WEBPACK_IMPORTED_MODULE_4__["default"].update(_this.updatePoint, true);
        };
        this.handlePointerUp = function (event, info) {
            _this.end();
            var onEnd = _this.handlers.onEnd;
            if (!onEnd || !_this.startEvent)
                return;
            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);
            onEnd && onEnd(event, panInfo);
        };
        // If we have more than one touch, don't start detecting this gesture
        if (Object(_utils_event_type_js__WEBPACK_IMPORTED_MODULE_2__["isTouchEvent"])(event) && event.touches.length > 1)
            return;
        this.handlers = handlers;
        this.transformPagePoint = transformPagePoint;
        var info = Object(_events_event_info_js__WEBPACK_IMPORTED_MODULE_3__["extractEventInfo"])(event);
        var initialInfo = transformPoint(info, this.transformPagePoint);
        var point = initialInfo.point;
        var timestamp = Object(framesync__WEBPACK_IMPORTED_MODULE_4__["getFrameData"])().timestamp;
        this.history = [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, point), { timestamp: timestamp })];
        var onSessionStart = handlers.onSessionStart;
        onSessionStart &&
            onSessionStart(event, getPanInfo(initialInfo, this.history));
        this.removeListeners = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["pipe"])(Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_6__["addPointerEvent"])(window, "pointermove", this.handlePointerMove), Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_6__["addPointerEvent"])(window, "pointerup", this.handlePointerUp), Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_6__["addPointerEvent"])(window, "pointercancel", this.handlePointerUp));
    }
    PanSession.prototype.updateHandlers = function (handlers) {
        this.handlers = handlers;
    };
    PanSession.prototype.end = function () {
        this.removeListeners && this.removeListeners();
        framesync__WEBPACK_IMPORTED_MODULE_4__["cancelSync"].update(this.updatePoint);
    };
    return PanSession;
}());
function transformPoint(info, transformPagePoint) {
    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a, b) {
    return { x: a.x - b.x, y: a.y - b.y };
}
function getPanInfo(_a, history) {
    var point = _a.point;
    return {
        point: point,
        delta: subtractPoint(point, lastDevicePoint(history)),
        offset: subtractPoint(point, startDevicePoint(history)),
        velocity: getVelocity(history, 0.1),
    };
}
function startDevicePoint(history) {
    return history[0];
}
function lastDevicePoint(history) {
    return history[history.length - 1];
}
function getVelocity(history, timeDelta) {
    if (history.length < 2) {
        return { x: 0, y: 0 };
    }
    var i = history.length - 1;
    var timestampedPoint = null;
    var lastPoint = lastDevicePoint(history);
    while (i >= 0) {
        timestampedPoint = history[i];
        if (lastPoint.timestamp - timestampedPoint.timestamp >
            Object(_utils_time_conversion_js__WEBPACK_IMPORTED_MODULE_5__["secondsToMilliseconds"])(timeDelta)) {
            break;
        }
        i--;
    }
    if (!timestampedPoint) {
        return { x: 0, y: 0 };
    }
    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;
    if (time === 0) {
        return { x: 0, y: 0 };
    }
    var currentVelocity = {
        x: (lastPoint.x - timestampedPoint.x) / time,
        y: (lastPoint.y - timestampedPoint.y) / time,
    };
    if (currentVelocity.x === Infinity) {
        currentVelocity.x = 0;
    }
    if (currentVelocity.y === Infinity) {
        currentVelocity.y = 0;
    }
    return currentVelocity;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.js":
/*!*******************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.js ***!
  \*******************************************************************************************************************************/
/*! exports provided: VisualElementDragControls, elementDragControls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisualElementDragControls", function() { return VisualElementDragControls; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elementDragControls", function() { return elementDragControls; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_is_ref_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is-ref-object.js */ "../../node_modules/framer-motion/dist/es/utils/is-ref-object.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
/* harmony import */ var _events_event_info_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../events/event-info.js */ "../../node_modules/framer-motion/dist/es/events/event-info.js");
/* harmony import */ var _events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../events/use-dom-event.js */ "../../node_modules/framer-motion/dist/es/events/use-dom-event.js");
/* harmony import */ var _events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../events/use-pointer-event.js */ "../../node_modules/framer-motion/dist/es/events/use-pointer-event.js");
/* harmony import */ var _PanSession_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../PanSession.js */ "../../node_modules/framer-motion/dist/es/gestures/PanSession.js");
/* harmony import */ var _utils_lock_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/lock.js */ "../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.js");
/* harmony import */ var _utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/geometry/index.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/index.js");
/* harmony import */ var _utils_each_axis_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/each-axis.js */ "../../node_modules/framer-motion/dist/es/utils/each-axis.js");
/* harmony import */ var _utils_geometry_delta_calc_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/geometry/delta-calc.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/delta-calc.js");
/* harmony import */ var _utils_constraints_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/constraints.js */ "../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.js");
/* harmony import */ var _render_dom_projection_measure_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../render/dom/projection/measure.js */ "../../node_modules/framer-motion/dist/es/render/dom/projection/measure.js");
/* harmony import */ var _animation_utils_transitions_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../animation/utils/transitions.js */ "../../node_modules/framer-motion/dist/es/animation/utils/transitions.js");
/* harmony import */ var _render_utils_types_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../render/utils/types.js */ "../../node_modules/framer-motion/dist/es/render/utils/types.js");

















var elementDragControls = new WeakMap();
/**
 *
 */
var lastPointerEvent;
var VisualElementDragControls = /** @class */ (function () {
    function VisualElementDragControls(_a) {
        var visualElement = _a.visualElement;
        /**
         * Track whether we're currently dragging.
         *
         * @internal
         */
        this.isDragging = false;
        /**
         * The current direction of drag, or `null` if both.
         *
         * @internal
         */
        this.currentDirection = null;
        /**
         * The permitted boundaries of travel, in pixels.
         *
         * @internal
         */
        this.constraints = false;
        /**
         * The per-axis resolved elastic values.
         *
         * @internal
         */
        this.elastic = Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_9__["axisBox"])();
        /**
         * A reference to the host component's latest props.
         *
         * @internal
         */
        this.props = {};
        /**
         * @internal
         */
        this.hasMutatedConstraints = false;
        /**
         * Track the initial position of the cursor relative to the dragging element
         * when dragging starts as a value of 0-1 on each axis. We then use this to calculate
         * an ideal bounding box for the VisualElement renderer to project into every frame.
         *
         * @internal
         */
        this.cursorProgress = {
            x: 0.5,
            y: 0.5,
        };
        // When updating _dragX, or _dragY instead of the VisualElement,
        // persist their values between drag gestures.
        this.originPoint = {};
        // This is a reference to the global drag gesture lock, ensuring only one component
        // can "capture" the drag of one or both axes.
        // TODO: Look into moving this into pansession?
        this.openGlobalLock = null;
        /**
         * @internal
         */
        this.panSession = null;
        this.visualElement = visualElement;
        this.visualElement.enableLayoutProjection();
        elementDragControls.set(visualElement, this);
    }
    /**
     * Instantiate a PanSession for the drag gesture
     *
     * @public
     */
    VisualElementDragControls.prototype.start = function (originEvent, _a) {
        var _this = this;
        var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c, cursorProgress = _b.cursorProgress;
        /**
         * If this drag session has been manually triggered by the user, it might be from an event
         * outside the draggable element. If snapToCursor is set to true, we need to measure the position
         * of the element and snap it to the cursor.
         */
        snapToCursor && this.snapToCursor(originEvent);
        var onSessionStart = function () {
            // Stop any animations on both axis values immediately. This allows the user to throw and catch
            // the component.
            _this.stopMotion();
        };
        var onStart = function (event, info) {
            var _a, _b, _c;
            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession
            var _d = _this.props, drag = _d.drag, dragPropagation = _d.dragPropagation;
            if (drag && !dragPropagation) {
                if (_this.openGlobalLock)
                    _this.openGlobalLock();
                _this.openGlobalLock = Object(_utils_lock_js__WEBPACK_IMPORTED_MODULE_8__["getGlobalLock"])(drag);
                // If we don 't have the lock, don't start dragging
                if (!_this.openGlobalLock)
                    return;
            }
            /**
             * Record the progress of the mouse within the draggable element on each axis.
             * onPan, we're going to use this to calculate a new bounding box for the element to
             * project into. This will ensure that even if the DOM element moves via a relayout, it'll
             * stick to the correct place under the pointer.
             */
            _this.prepareBoundingBox();
            _this.visualElement.lockProjectionTarget();
            /**
             * Resolve the drag constraints. These are either set as top/right/bottom/left constraints
             * relative to the element's layout, or a ref to another element. Both need converting to
             * viewport coordinates.
             */
            _this.resolveDragConstraints();
            /**
             * When dragging starts, we want to find where the cursor is relative to the bounding box
             * of the element. Every frame, we calculate a new bounding box using this relative position
             * and let the visualElement renderer figure out how to reproject the element into this bounding
             * box.
             *
             * By doing it this way, rather than applying an x/y transform directly to the element,
             * we can ensure the component always visually sticks to the cursor as we'd expect, even
             * if the DOM element itself changes layout as a result of React updates the user might
             * make based on the drag position.
             */
            var point = Object(_events_event_info_js__WEBPACK_IMPORTED_MODULE_4__["getViewportPointFromEvent"])(event).point;
            Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_10__["eachAxis"])(function (axis) {
                var _a = _this.visualElement.projection.target[axis], min = _a.min, max = _a.max;
                _this.cursorProgress[axis] = cursorProgress
                    ? cursorProgress[axis]
                    : Object(popmotion__WEBPACK_IMPORTED_MODULE_3__["progress"])(min, max, point[axis]);
                /**
                 * If we have external drag MotionValues, record their origin point. On pointermove
                 * we'll apply the pan gesture offset directly to this value.
                 */
                var axisValue = _this.getAxisMotionValue(axis);
                if (axisValue) {
                    _this.originPoint[axis] = axisValue.get();
                }
            });
            // Set current drag status
            _this.isDragging = true;
            _this.currentDirection = null;
            // Fire onDragStart event
            (_b = (_a = _this.props).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);
            (_c = _this.visualElement.animationState) === null || _c === void 0 ? void 0 : _c.setActive(_render_utils_types_js__WEBPACK_IMPORTED_MODULE_15__["AnimationType"].Drag, true);
        };
        var onMove = function (event, info) {
            var _a, _b, _c, _d;
            var _e = _this.props, dragPropagation = _e.dragPropagation, dragDirectionLock = _e.dragDirectionLock;
            // If we didn't successfully receive the gesture lock, early return.
            if (!dragPropagation && !_this.openGlobalLock)
                return;
            var offset = info.offset;
            // Attempt to detect drag direction if directionLock is true
            if (dragDirectionLock && _this.currentDirection === null) {
                _this.currentDirection = getCurrentDirection(offset);
                // If we've successfully set a direction, notify listener
                if (_this.currentDirection !== null) {
                    (_b = (_a = _this.props).onDirectionLock) === null || _b === void 0 ? void 0 : _b.call(_a, _this.currentDirection);
                }
                return;
            }
            // Update each point with the latest position
            _this.updateAxis("x", event, offset);
            _this.updateAxis("y", event, offset);
            // Fire onDrag event
            (_d = (_c = _this.props).onDrag) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);
            // Update the last pointer event
            lastPointerEvent = event;
        };
        var onEnd = function (event, info) { return _this.stop(event, info); };
        var transformPagePoint = this.props.transformPagePoint;
        this.panSession = new _PanSession_js__WEBPACK_IMPORTED_MODULE_7__["PanSession"](originEvent, {
            onSessionStart: onSessionStart,
            onStart: onStart,
            onMove: onMove,
            onEnd: onEnd,
        }, { transformPagePoint: transformPagePoint });
    };
    /**
     * Ensure the component's layout and target bounding boxes are up-to-date.
     */
    VisualElementDragControls.prototype.prepareBoundingBox = function () {
        var visualElement = this.visualElement;
        visualElement.withoutTransform(function () {
            visualElement.updateLayoutMeasurement();
        });
        visualElement.rebaseProjectionTarget(true, visualElement.measureViewportBox(false));
    };
    VisualElementDragControls.prototype.resolveDragConstraints = function () {
        var _this = this;
        var _a = this.props, dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;
        if (dragConstraints) {
            this.constraints = Object(_utils_is_ref_object_js__WEBPACK_IMPORTED_MODULE_1__["isRefObject"])(dragConstraints)
                ? this.resolveRefConstraints(this.visualElement.getLayoutState().layout, dragConstraints)
                : Object(_utils_constraints_js__WEBPACK_IMPORTED_MODULE_12__["calcRelativeConstraints"])(this.visualElement.getLayoutState().layout, dragConstraints);
        }
        else {
            this.constraints = false;
        }
        this.elastic = Object(_utils_constraints_js__WEBPACK_IMPORTED_MODULE_12__["resolveDragElastic"])(dragElastic);
        /**
         * If we're outputting to external MotionValues, we want to rebase the measured constraints
         * from viewport-relative to component-relative.
         */
        if (this.constraints && !this.hasMutatedConstraints) {
            Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_10__["eachAxis"])(function (axis) {
                if (_this.getAxisMotionValue(axis)) {
                    _this.constraints[axis] = Object(_utils_constraints_js__WEBPACK_IMPORTED_MODULE_12__["rebaseAxisConstraints"])(_this.visualElement.getLayoutState().layout[axis], _this.constraints[axis]);
                }
            });
        }
    };
    VisualElementDragControls.prototype.resolveRefConstraints = function (layoutBox, constraints) {
        var _a = this.props, onMeasureDragConstraints = _a.onMeasureDragConstraints, transformPagePoint = _a.transformPagePoint;
        var constraintsElement = constraints.current;
        Object(hey_listen__WEBPACK_IMPORTED_MODULE_2__["invariant"])(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
        this.constraintsBox = Object(_render_dom_projection_measure_js__WEBPACK_IMPORTED_MODULE_13__["getBoundingBox"])(constraintsElement, transformPagePoint);
        var measuredConstraints = Object(_utils_constraints_js__WEBPACK_IMPORTED_MODULE_12__["calcViewportConstraints"])(layoutBox, this.constraintsBox);
        /**
         * If there's an onMeasureDragConstraints listener we call it and
         * if different constraints are returned, set constraints to that
         */
        if (onMeasureDragConstraints) {
            var userConstraints = onMeasureDragConstraints(Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_9__["convertAxisBoxToBoundingBox"])(measuredConstraints));
            this.hasMutatedConstraints = !!userConstraints;
            if (userConstraints) {
                measuredConstraints = Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_9__["convertBoundingBoxToAxisBox"])(userConstraints);
            }
        }
        return measuredConstraints;
    };
    VisualElementDragControls.prototype.cancelDrag = function () {
        var _a;
        this.isDragging = false;
        this.panSession && this.panSession.end();
        this.panSession = null;
        if (!this.props.dragPropagation && this.openGlobalLock) {
            this.openGlobalLock();
            this.openGlobalLock = null;
        }
        (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(_render_utils_types_js__WEBPACK_IMPORTED_MODULE_15__["AnimationType"].Drag, false);
    };
    VisualElementDragControls.prototype.stop = function (event, info) {
        var _a;
        this.visualElement.unlockProjectionTarget();
        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();
        this.panSession = null;
        var isDragging = this.isDragging;
        this.cancelDrag();
        if (!isDragging)
            return;
        var _b = this.props, dragMomentum = _b.dragMomentum, onDragEnd = _b.onDragEnd;
        if (dragMomentum || this.elastic) {
            var velocity = info.velocity;
            this.animateDragEnd(velocity);
        }
        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);
    };
    VisualElementDragControls.prototype.snapToCursor = function (event) {
        var _this = this;
        this.prepareBoundingBox();
        Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_10__["eachAxis"])(function (axis) {
            var drag = _this.props.drag;
            // If we're not dragging this axis, do an early return.
            if (!shouldDrag(axis, drag, _this.currentDirection))
                return;
            var axisValue = _this.getAxisMotionValue(axis);
            if (axisValue) {
                var point = Object(_events_event_info_js__WEBPACK_IMPORTED_MODULE_4__["getViewportPointFromEvent"])(event).point;
                var box = _this.visualElement.getLayoutState().layout;
                var length_1 = box[axis].max - box[axis].min;
                var center = box[axis].min + length_1 / 2;
                var offset = point[axis] - center;
                _this.originPoint[axis] = point[axis];
                axisValue.set(offset);
            }
            else {
                _this.cursorProgress[axis] = 0.5;
                _this.updateVisualElementAxis(axis, event);
            }
        });
    };
    /**
     * Update the specified axis with the latest pointer information.
     */
    VisualElementDragControls.prototype.updateAxis = function (axis, event, offset) {
        var drag = this.props.drag;
        // If we're not dragging this axis, do an early return.
        if (!shouldDrag(axis, drag, this.currentDirection))
            return;
        return this.getAxisMotionValue(axis)
            ? this.updateAxisMotionValue(axis, offset)
            : this.updateVisualElementAxis(axis, event);
    };
    VisualElementDragControls.prototype.updateAxisMotionValue = function (axis, offset) {
        var axisValue = this.getAxisMotionValue(axis);
        if (!offset || !axisValue)
            return;
        var nextValue = this.originPoint[axis] + offset[axis];
        var update = this.constraints
            ? Object(_utils_constraints_js__WEBPACK_IMPORTED_MODULE_12__["applyConstraints"])(nextValue, this.constraints[axis], this.elastic[axis])
            : nextValue;
        axisValue.set(update);
    };
    VisualElementDragControls.prototype.updateVisualElementAxis = function (axis, event) {
        var _a;
        // Get the actual layout bounding box of the element
        var axisLayout = this.visualElement.getLayoutState().layout[axis];
        // Calculate its current length. In the future we might want to lerp this to animate
        // between lengths if the layout changes as we change the DOM
        var axisLength = axisLayout.max - axisLayout.min;
        // Get the initial progress that the pointer sat on this axis on gesture start.
        var axisProgress = this.cursorProgress[axis];
        var point = Object(_events_event_info_js__WEBPACK_IMPORTED_MODULE_4__["getViewportPointFromEvent"])(event).point;
        // Calculate a new min point based on the latest pointer position, constraints and elastic
        var min = Object(_utils_constraints_js__WEBPACK_IMPORTED_MODULE_12__["calcConstrainedMinPoint"])(point[axis], axisLength, axisProgress, (_a = this.constraints) === null || _a === void 0 ? void 0 : _a[axis], this.elastic[axis]);
        // Update the axis viewport target with this new min and the length
        this.visualElement.setProjectionTargetAxis(axis, min, min + axisLength);
    };
    VisualElementDragControls.prototype.setProps = function (_a) {
        var _b = _a.drag, drag = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? _utils_constraints_js__WEBPACK_IMPORTED_MODULE_12__["defaultElastic"] : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["drag", "dragDirectionLock", "dragPropagation", "dragConstraints", "dragElastic", "dragMomentum"]);
        this.props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ drag: drag,
            dragDirectionLock: dragDirectionLock,
            dragPropagation: dragPropagation,
            dragConstraints: dragConstraints,
            dragElastic: dragElastic,
            dragMomentum: dragMomentum }, remainingProps);
    };
    /**
     * Drag works differently depending on which props are provided.
     *
     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
     * - If the component will perform layout animations, we output the gesture to the component's
     *      visual bounding box
     * - Otherwise, we apply the delta to the x/y motion values.
     */
    VisualElementDragControls.prototype.getAxisMotionValue = function (axis) {
        var _a = this.props, layout = _a.layout, layoutId = _a.layoutId;
        var dragKey = "_drag" + axis.toUpperCase();
        if (this.props[dragKey]) {
            return this.props[dragKey];
        }
        else if (!layout && layoutId === undefined) {
            return this.visualElement.getValue(axis, 0);
        }
    };
    VisualElementDragControls.prototype.animateDragEnd = function (velocity) {
        var _this = this;
        var _a = this.props, drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition;
        var momentumAnimations = Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_10__["eachAxis"])(function (axis) {
            if (!shouldDrag(axis, drag, _this.currentDirection)) {
                return;
            }
            var transition = _this.constraints ? _this.constraints[axis] : {};
            /**
             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame
             * of spring animations so we should look into adding a disable spring option to `inertia`.
             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`
             * using the value of `dragElastic`.
             */
            var bounceStiffness = dragElastic ? 200 : 1000000;
            var bounceDamping = dragElastic ? 40 : 10000000;
            var inertia = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ type: "inertia", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness,
                bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);
            // If we're not animating on an externally-provided `MotionValue` we can use the
            // component's animation controls which will handle interactions with whileHover (etc),
            // otherwise we just have to animate the `MotionValue` itself.
            return _this.getAxisMotionValue(axis)
                ? _this.startAxisValueAnimation(axis, inertia)
                : _this.visualElement.startLayoutAnimation(axis, inertia);
        });
        // Run all animations and then resolve the new drag constraints.
        return Promise.all(momentumAnimations).then(function () {
            var _a, _b;
            (_b = (_a = _this.props).onDragTransitionEnd) === null || _b === void 0 ? void 0 : _b.call(_a);
        });
    };
    VisualElementDragControls.prototype.stopMotion = function () {
        var _this = this;
        Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_10__["eachAxis"])(function (axis) {
            var axisValue = _this.getAxisMotionValue(axis);
            axisValue
                ? axisValue.stop()
                : _this.visualElement.stopLayoutAnimation();
        });
    };
    VisualElementDragControls.prototype.startAxisValueAnimation = function (axis, transition) {
        var axisValue = this.getAxisMotionValue(axis);
        if (!axisValue)
            return;
        var currentValue = axisValue.get();
        axisValue.set(currentValue);
        axisValue.set(currentValue); // Set twice to hard-reset velocity
        return Object(_animation_utils_transitions_js__WEBPACK_IMPORTED_MODULE_14__["startAnimation"])(axis, axisValue, 0, transition);
    };
    VisualElementDragControls.prototype.scalePoint = function () {
        var _this = this;
        var _a = this.props, drag = _a.drag, dragConstraints = _a.dragConstraints;
        if (!Object(_utils_is_ref_object_js__WEBPACK_IMPORTED_MODULE_1__["isRefObject"])(dragConstraints) || !this.constraintsBox)
            return;
        // Stop any current animations as there can be some visual glitching if we resize mid animation
        this.stopMotion();
        // Record the relative progress of the targetBox relative to the constraintsBox
        var boxProgress = { x: 0, y: 0 };
        Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_10__["eachAxis"])(function (axis) {
            boxProgress[axis] = Object(_utils_geometry_delta_calc_js__WEBPACK_IMPORTED_MODULE_11__["calcOrigin"])(_this.visualElement.projection.target[axis], _this.constraintsBox[axis]);
        });
        /**
         * For each axis, calculate the current progress of the layout axis within the constraints.
         * Then, using the latest layout and constraints measurements, reposition the new layout axis
         * proportionally within the constraints.
         */
        this.prepareBoundingBox();
        this.resolveDragConstraints();
        Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_10__["eachAxis"])(function (axis) {
            if (!shouldDrag(axis, drag, null))
                return;
            // Calculate the position of the targetBox relative to the constraintsBox using the
            // previously calculated progress
            var _a = Object(_utils_constraints_js__WEBPACK_IMPORTED_MODULE_12__["calcPositionFromProgress"])(_this.visualElement.projection.target[axis], _this.constraintsBox[axis], boxProgress[axis]), min = _a.min, max = _a.max;
            _this.visualElement.setProjectionTargetAxis(axis, min, max);
        });
    };
    VisualElementDragControls.prototype.mount = function (visualElement) {
        var _this = this;
        var element = visualElement.getInstance();
        /**
         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.
         */
        var stopPointerListener = Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_6__["addPointerEvent"])(element, "pointerdown", function (event) {
            var _a = _this.props, drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;
            drag && dragListener && _this.start(event);
        });
        /**
         * Attach a window resize listener to scale the draggable target within its defined
         * constraints as the window resizes.
         */
        var stopResizeListener = Object(_events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_5__["addDomEvent"])(window, "resize", function () {
            _this.scalePoint();
        });
        /**
         * Ensure drag constraints are resolved correctly relative to the dragging element
         * whenever its layout changes.
         */
        var stopLayoutUpdateListener = visualElement.onLayoutUpdate(function () {
            if (_this.isDragging)
                _this.resolveDragConstraints();
        });
        /**
         * If the previous component with this same layoutId was dragging at the time
         * it was unmounted, we want to continue the same gesture on this component.
         */
        var prevDragCursor = visualElement.prevDragCursor;
        if (prevDragCursor) {
            this.start(lastPointerEvent, { cursorProgress: prevDragCursor });
        }
        /**
         * Return a function that will teardown the drag gesture
         */
        return function () {
            stopPointerListener === null || stopPointerListener === void 0 ? void 0 : stopPointerListener();
            stopResizeListener === null || stopResizeListener === void 0 ? void 0 : stopResizeListener();
            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();
            _this.cancelDrag();
        };
    };
    return VisualElementDragControls;
}());
function shouldDrag(direction, drag, currentDirection) {
    return ((drag === true || drag === direction) &&
        (currentDirection === null || currentDirection === direction));
}
/**
 * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower
 * than the provided threshold, return `null`.
 *
 * @param offset - The x/y offset from origin.
 * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.
 */
function getCurrentDirection(offset, lockThreshold) {
    if (lockThreshold === void 0) { lockThreshold = 10; }
    var direction = null;
    if (Math.abs(offset.y) > lockThreshold) {
        direction = "y";
    }
    else if (Math.abs(offset.x) > lockThreshold) {
        direction = "x";
    }
    return direction;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.js":
/*!***********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.js ***!
  \***********************************************************************************************************************/
/*! exports provided: DragControls, useDragControls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DragControls", function() { return DragControls; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useDragControls", function() { return useDragControls; });
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");


/**
 * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.
 *
 * @library
 *
 * ```jsx
 * const dragControls = useDragControls()
 *
 * function startDrag(event) {
 *   dragControls.start(event, { snapToCursor: true })
 * }
 *
 * return (
 *   <>
 *     <Frame onTapStart={startDrag} />
 *     <Frame drag="x" dragControls={dragControls} />
 *   </>
 * )
 * ```
 *
 * @motion
 *
 * ```jsx
 * const dragControls = useDragControls()
 *
 * function startDrag(event) {
 *   dragControls.start(event, { snapToCursor: true })
 * }
 *
 * return (
 *   <>
 *     <div onPointerDown={startDrag} />
 *     <motion.div drag="x" dragControls={dragControls} />
 *   </>
 * )
 * ```
 *
 * @public
 */
var DragControls = /** @class */ (function () {
    function DragControls() {
        this.componentControls = new Set();
    }
    /**
     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.
     *
     * @internal
     */
    DragControls.prototype.subscribe = function (controls) {
        var _this = this;
        this.componentControls.add(controls);
        return function () { return _this.componentControls.delete(controls); };
    };
    /**
     * Start a drag gesture on every `motion` component that has this set of drag controls
     * passed into it via the `dragControls` prop.
     *
     * ```jsx
     * dragControls.start(e, {
     *   snapToCursor: true
     * })
     * ```
     *
     * @param event - PointerEvent
     * @param options - Options
     *
     * @public
     */
    DragControls.prototype.start = function (event, options) {
        this.componentControls.forEach(function (controls) {
            controls.start(event.nativeEvent || event, options);
        });
    };
    DragControls.prototype.updateConstraints = function () {
        this.componentControls.forEach(function (controls) {
            controls.prepareBoundingBox();
            controls.resolveDragConstraints();
        });
    };
    return DragControls;
}());
var createDragControls = function () { return new DragControls(); };
/**
 * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop
 * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we
 * might want to initiate that dragging from a different component than the draggable one.
 *
 * By creating a `dragControls` using the `useDragControls` hook, we can pass this into
 * the draggable component's `dragControls` prop. It exposes a `start` method
 * that can start dragging from pointer events on other components.
 *
 * @library
 *
 * ```jsx
 * const dragControls = useDragControls()
 *
 * function startDrag(event) {
 *   dragControls.start(event, { snapToCursor: true })
 * }
 *
 * return (
 *   <>
 *     <Frame onTapStart={startDrag} />
 *     <Frame drag="x" dragControls={dragControls} />
 *   </>
 * )
 * ```
 *
 * @motion
 *
 * ```jsx
 * const dragControls = useDragControls()
 *
 * function startDrag(event) {
 *   dragControls.start(event, { snapToCursor: true })
 * }
 *
 * return (
 *   <>
 *     <div onPointerDown={startDrag} />
 *     <motion.div drag="x" dragControls={dragControls} />
 *   </>
 * )
 * ```
 *
 * @public
 */
function useDragControls() {
    return Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_0__["useConstant"])(createDragControls);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/drag/use-drag.js":
/*!**************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/drag/use-drag.js ***!
  \**************************************************************************************************************/
/*! exports provided: useDrag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useDrag", function() { return useDrag; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/MotionConfigContext.js */ "../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js");
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");
/* harmony import */ var _VisualElementDragControls_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./VisualElementDragControls.js */ "../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.js");






/**
 * A hook that allows an element to be dragged.
 *
 * @internal
 */
function useDrag(props, visualElement) {
    var groupDragControls = props.dragControls;
    var transformPagePoint = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__["MotionConfigContext"]).transformPagePoint;
    var dragControls = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_3__["useConstant"])(function () {
        return new _VisualElementDragControls_js__WEBPACK_IMPORTED_MODULE_4__["VisualElementDragControls"]({
            visualElement: visualElement,
        });
    });
    dragControls.setProps(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, props), { transformPagePoint: transformPagePoint }));
    // If we've been provided a DragControls for manual control over the drag gesture,
    // subscribe this component to it on mount.
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);
    // Mount the drag controls with the visualElement
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () { return dragControls.mount(visualElement); }, []);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.js":
/*!***********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.js ***!
  \***********************************************************************************************************************/
/*! exports provided: applyConstraints, calcConstrainedMinPoint, calcPositionFromProgress, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyConstraints", function() { return applyConstraints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcConstrainedMinPoint", function() { return calcConstrainedMinPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcPositionFromProgress", function() { return calcPositionFromProgress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcRelativeAxisConstraints", function() { return calcRelativeAxisConstraints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcRelativeConstraints", function() { return calcRelativeConstraints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcViewportAxisConstraints", function() { return calcViewportAxisConstraints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcViewportConstraints", function() { return calcViewportConstraints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultElastic", function() { return defaultElastic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rebaseAxisConstraints", function() { return rebaseAxisConstraints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveAxisElastic", function() { return resolveAxisElastic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveDragElastic", function() { return resolveDragElastic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolvePointElastic", function() { return resolvePointElastic; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");



/**
 * Apply constraints to a point. These constraints are both physical along an
 * axis, and an elastic factor that determines how much to constrain the point
 * by if it does lie outside the defined parameters.
 */
function applyConstraints(point, _a, elastic) {
    var min = _a.min, max = _a.max;
    if (min !== undefined && point < min) {
        // If we have a min point defined, and this is outside of that, constrain
        point = elastic ? Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(min, point, elastic.min) : Math.max(point, min);
    }
    else if (max !== undefined && point > max) {
        // If we have a max point defined, and this is outside of that, constrain
        point = elastic ? Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(max, point, elastic.max) : Math.min(point, max);
    }
    return point;
}
/**
 * Calculates a min projection point based on a pointer, pointer progress
 * within the drag target, and constraints.
 *
 * For instance if an element was 100px width, we were dragging from 0.25
 * along this axis, the pointer is at 200px, and there were no constraints,
 * we would calculate a min projection point of 175px.
 */
function calcConstrainedMinPoint(point, length, progress, constraints, elastic) {
    // Calculate a min point for this axis and apply it to the current pointer
    var min = point - length * progress;
    return constraints ? applyConstraints(min, constraints, elastic) : min;
}
/**
 * Calculate constraints in terms of the viewport when defined relatively to the
 * measured axis. This is measured from the nearest edge, so a max constraint of 200
 * on an axis with a max value of 300 would return a constraint of 500 - axis length
 */
function calcRelativeAxisConstraints(axis, min, max) {
    return {
        min: min !== undefined ? axis.min + min : undefined,
        max: max !== undefined
            ? axis.max + max - (axis.max - axis.min)
            : undefined,
    };
}
/**
 * Calculate constraints in terms of the viewport when
 * defined relatively to the measured bounding box.
 */
function calcRelativeConstraints(layoutBox, _a) {
    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;
    return {
        x: calcRelativeAxisConstraints(layoutBox.x, left, right),
        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),
    };
}
/**
 * Calculate viewport constraints when defined as another viewport-relative axis
 */
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
    var _a;
    var min = constraintsAxis.min - layoutAxis.min;
    var max = constraintsAxis.max - layoutAxis.max;
    // If the constraints axis is actually smaller than the layout axis then we can
    // flip the constraints
    if (constraintsAxis.max - constraintsAxis.min <
        layoutAxis.max - layoutAxis.min) {
        _a = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([max, min], 2), min = _a[0], max = _a[1];
    }
    return {
        min: layoutAxis.min + min,
        max: layoutAxis.min + max,
    };
}
/**
 * Calculate viewport constraints when defined as another viewport-relative box
 */
function calcViewportConstraints(layoutBox, constraintsBox) {
    return {
        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),
    };
}
/**
 * Calculate the an axis position based on two axes and a progress value.
 */
function calcPositionFromProgress(axis, constraints, progress) {
    var axisLength = axis.max - axis.min;
    var min = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(constraints.min, constraints.max - axisLength, progress);
    return { min: min, max: min + axisLength };
}
/**
 * Rebase the calculated viewport constraints relative to the layout.min point.
 */
function rebaseAxisConstraints(layout, constraints) {
    var relativeConstraints = {};
    if (constraints.min !== undefined) {
        relativeConstraints.min = constraints.min - layout.min;
    }
    if (constraints.max !== undefined) {
        relativeConstraints.max = constraints.max - layout.min;
    }
    return relativeConstraints;
}
var defaultElastic = 0.35;
/**
 * Accepts a dragElastic prop and returns resolved elastic values for each axis.
 */
function resolveDragElastic(dragElastic) {
    if (dragElastic === false) {
        dragElastic = 0;
    }
    else if (dragElastic === true) {
        dragElastic = defaultElastic;
    }
    return {
        x: resolveAxisElastic(dragElastic, "left", "right"),
        y: resolveAxisElastic(dragElastic, "top", "bottom"),
    };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
    return {
        min: resolvePointElastic(dragElastic, minLabel),
        max: resolvePointElastic(dragElastic, maxLabel),
    };
}
function resolvePointElastic(dragElastic, label) {
    var _a;
    return typeof dragElastic === "number"
        ? dragElastic
        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/drag/utils/lock.js ***!
  \****************************************************************************************************************/
/*! exports provided: createLock, getGlobalLock, isDragActive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLock", function() { return createLock; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGlobalLock", function() { return getGlobalLock; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDragActive", function() { return isDragActive; });
function createLock(name) {
    var lock = null;
    return function () {
        var openLock = function () {
            lock = null;
        };
        if (lock === null) {
            lock = name;
            return openLock;
        }
        return false;
    };
}
var globalHorizontalLock = createLock("dragHorizontal");
var globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag) {
    var lock = false;
    if (drag === "y") {
        lock = globalVerticalLock();
    }
    else if (drag === "x") {
        lock = globalHorizontalLock();
    }
    else {
        var openHorizontal_1 = globalHorizontalLock();
        var openVertical_1 = globalVerticalLock();
        if (openHorizontal_1 && openVertical_1) {
            lock = function () {
                openHorizontal_1();
                openVertical_1();
            };
        }
        else {
            // Release the locks because we don't use them
            if (openHorizontal_1)
                openHorizontal_1();
            if (openVertical_1)
                openVertical_1();
        }
    }
    return lock;
}
function isDragActive() {
    // Check the gesture lock - if we get it, it means no drag gesture is active
    // and we can safely fire the tap gesture.
    var openGestureLock = getGlobalLock(true);
    if (!openGestureLock)
        return true;
    openGestureLock();
    return false;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/types.js":
/*!******************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/types.js ***!
  \******************************************************************************************************/
/*! exports provided: gestureProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gestureProps", function() { return gestureProps; });
/**
 * @internal
 */
var gestureProps = [
    "onPan",
    "onPanStart",
    "onPanEnd",
    "onPanSessionStart",
    "onTap",
    "onTapStart",
    "onTapCancel",
    "onHoverStart",
    "onHoverEnd",
    "whileFocus",
    "whileTap",
    "whileHover",
];




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.js":
/*!******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/use-focus-gesture.js ***!
  \******************************************************************************************************************/
/*! exports provided: useFocusGesture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useFocusGesture", function() { return useFocusGesture; });
/* harmony import */ var _events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../events/use-dom-event.js */ "../../node_modules/framer-motion/dist/es/events/use-dom-event.js");
/* harmony import */ var _render_utils_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../render/utils/types.js */ "../../node_modules/framer-motion/dist/es/render/utils/types.js");



/**
 *
 * @param props
 * @param ref
 * @internal
 */
function useFocusGesture(_a, visualElement) {
    var whileFocus = _a.whileFocus;
    var onFocus = function () {
        var _a;
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(_render_utils_types_js__WEBPACK_IMPORTED_MODULE_1__["AnimationType"].Focus, true);
    };
    var onBlur = function () {
        var _a;
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(_render_utils_types_js__WEBPACK_IMPORTED_MODULE_1__["AnimationType"].Focus, false);
    };
    Object(_events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_0__["useDomEvent"])(visualElement, "focus", whileFocus ? onFocus : undefined);
    Object(_events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_0__["useDomEvent"])(visualElement, "blur", whileFocus ? onBlur : undefined);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/use-gestures.js":
/*!*************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/use-gestures.js ***!
  \*************************************************************************************************************/
/*! exports provided: useGestures */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useGestures", function() { return useGestures; });
/* harmony import */ var _use_pan_gesture_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./use-pan-gesture.js */ "../../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.js");
/* harmony import */ var _use_tap_gesture_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-tap-gesture.js */ "../../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.js");
/* harmony import */ var _use_hover_gesture_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-hover-gesture.js */ "../../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.js");
/* harmony import */ var _use_focus_gesture_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use-focus-gesture.js */ "../../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.js");





/**
 * Add pan and tap gesture recognition to an element.
 *
 * @param props - Gesture event handlers
 * @param ref - React `ref` containing a DOM `Element`
 * @public
 */
function useGestures(props, visualElement) {
    Object(_use_pan_gesture_js__WEBPACK_IMPORTED_MODULE_0__["usePanGesture"])(props, visualElement);
    Object(_use_tap_gesture_js__WEBPACK_IMPORTED_MODULE_1__["useTapGesture"])(props, visualElement);
    Object(_use_hover_gesture_js__WEBPACK_IMPORTED_MODULE_2__["useHoverGesture"])(props, visualElement);
    Object(_use_focus_gesture_js__WEBPACK_IMPORTED_MODULE_3__["useFocusGesture"])(props, visualElement);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.js":
/*!******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/use-hover-gesture.js ***!
  \******************************************************************************************************************/
/*! exports provided: useHoverGesture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useHoverGesture", function() { return useHoverGesture; });
/* harmony import */ var _utils_event_type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/event-type.js */ "../../node_modules/framer-motion/dist/es/gestures/utils/event-type.js");
/* harmony import */ var _events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events/use-pointer-event.js */ "../../node_modules/framer-motion/dist/es/events/use-pointer-event.js");
/* harmony import */ var _render_utils_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../render/utils/types.js */ "../../node_modules/framer-motion/dist/es/render/utils/types.js");




function createHoverEvent(visualElement, isActive, callback) {
    return function (event, info) {
        var _a;
        if (!Object(_utils_event_type_js__WEBPACK_IMPORTED_MODULE_0__["isMouseEvent"])(event) || !visualElement.isHoverEventsEnabled)
            return;
        callback === null || callback === void 0 ? void 0 : callback(event, info);
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(_render_utils_types_js__WEBPACK_IMPORTED_MODULE_2__["AnimationType"].Hover, isActive);
    };
}
function useHoverGesture(_a, visualElement) {
    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover;
    Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_1__["usePointerEvent"])(visualElement, "pointerenter", onHoverStart || whileHover
        ? createHoverEvent(visualElement, true, onHoverStart)
        : undefined);
    Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_1__["usePointerEvent"])(visualElement, "pointerleave", onHoverEnd || whileHover
        ? createHoverEvent(visualElement, false, onHoverEnd)
        : undefined);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/use-pan-gesture.js ***!
  \****************************************************************************************************************/
/*! exports provided: usePanGesture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "usePanGesture", function() { return usePanGesture; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context/MotionConfigContext.js */ "../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js");
/* harmony import */ var _events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/use-pointer-event.js */ "../../node_modules/framer-motion/dist/es/events/use-pointer-event.js");
/* harmony import */ var _PanSession_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PanSession.js */ "../../node_modules/framer-motion/dist/es/gestures/PanSession.js");
/* harmony import */ var _utils_use_unmount_effect_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/use-unmount-effect.js */ "../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.js");






/**
 *
 * @param handlers -
 * @param ref -
 *
 * @internalremarks
 * Currently this sets new pan gesture functions every render. The memo route has been explored
 * in the past but ultimately we're still creating new functions every render. An optimisation
 * to explore is creating the pan gestures and loading them into a `ref`.
 *
 * @internal
 */
function usePanGesture(_a, ref) {
    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart;
    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;
    var panSession = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
    var transformPagePoint = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_1__["MotionConfigContext"]).transformPagePoint;
    var handlers = {
        onSessionStart: onPanSessionStart,
        onStart: onPanStart,
        onMove: onPan,
        onEnd: function (event, info) {
            panSession.current = null;
            onPanEnd && onPanEnd(event, info);
        },
    };
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        if (panSession.current !== null) {
            panSession.current.updateHandlers(handlers);
        }
    });
    function onPointerDown(event) {
        panSession.current = new _PanSession_js__WEBPACK_IMPORTED_MODULE_3__["PanSession"](event, handlers, {
            transformPagePoint: transformPagePoint,
        });
    }
    Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_2__["usePointerEvent"])(ref, "pointerdown", hasPanEvents && onPointerDown);
    Object(_utils_use_unmount_effect_js__WEBPACK_IMPORTED_MODULE_4__["useUnmountEffect"])(function () { return panSession.current && panSession.current.end(); });
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.js ***!
  \****************************************************************************************************************/
/*! exports provided: useTapGesture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useTapGesture", function() { return useTapGesture; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
/* harmony import */ var _events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../events/use-pointer-event.js */ "../../node_modules/framer-motion/dist/es/events/use-pointer-event.js");
/* harmony import */ var _drag_utils_lock_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./drag/utils/lock.js */ "../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.js");
/* harmony import */ var _render_utils_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../render/utils/types.js */ "../../node_modules/framer-motion/dist/es/render/utils/types.js");
/* harmony import */ var _utils_use_unmount_effect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/use-unmount-effect.js */ "../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.js");
/* harmony import */ var _utils_is_node_or_child_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/is-node-or-child.js */ "../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.js");








/**
 * @param handlers -
 * @internal
 */
function useTapGesture(_a, visualElement) {
    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap;
    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;
    var isPressing = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(false);
    var cancelPointerEndListeners = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
    function removePointerEndListener() {
        var _a;
        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);
        cancelPointerEndListeners.current = null;
    }
    function checkPointerEnd() {
        var _a;
        removePointerEndListener();
        isPressing.current = false;
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(_render_utils_types_js__WEBPACK_IMPORTED_MODULE_4__["AnimationType"].Tap, false);
        return !Object(_drag_utils_lock_js__WEBPACK_IMPORTED_MODULE_3__["isDragActive"])();
    }
    function onPointerUp(event, info) {
        if (!checkPointerEnd())
            return;
        /**
         * We only count this as a tap gesture if the event.target is the same
         * as, or a child of, this component's element
         */
        !Object(_utils_is_node_or_child_js__WEBPACK_IMPORTED_MODULE_6__["isNodeOrChild"])(visualElement.getInstance(), event.target)
            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);
    }
    function onPointerCancel(event, info) {
        if (!checkPointerEnd())
            return;
        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);
    }
    function onPointerDown(event, info) {
        var _a;
        removePointerEndListener();
        if (isPressing.current)
            return;
        isPressing.current = true;
        cancelPointerEndListeners.current = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["pipe"])(Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_2__["addPointerEvent"])(window, "pointerup", onPointerUp), Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_2__["addPointerEvent"])(window, "pointercancel", onPointerCancel));
        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(_render_utils_types_js__WEBPACK_IMPORTED_MODULE_4__["AnimationType"].Tap, true);
    }
    Object(_events_use_pointer_event_js__WEBPACK_IMPORTED_MODULE_2__["usePointerEvent"])(visualElement, "pointerdown", hasPressListeners ? onPointerDown : undefined);
    Object(_utils_use_unmount_effect_js__WEBPACK_IMPORTED_MODULE_5__["useUnmountEffect"])(removePointerEndListener);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/utils/event-type.js":
/*!*****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/utils/event-type.js ***!
  \*****************************************************************************************************************/
/*! exports provided: isMouseEvent, isTouchEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMouseEvent", function() { return isMouseEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTouchEvent", function() { return isTouchEvent; });
function isMouseEvent(event) {
    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.
    if (typeof PointerEvent !== "undefined" && event instanceof PointerEvent) {
        return !!(event.pointerType === "mouse");
    }
    return event instanceof MouseEvent;
}
function isTouchEvent(event) {
    var hasTouches = !!event.touches;
    return hasTouches;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.js":
/*!***********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.js ***!
  \***********************************************************************************************************************/
/*! exports provided: isNodeOrChild */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNodeOrChild", function() { return isNodeOrChild; });
/**
 * Recursively traverse up the tree to check whether the provided child node
 * is the parent or a descendant of it.
 *
 * @param parent - Element to find
 * @param child - Element to test against parent
 */
var isNodeOrChild = function (parent, child) {
    if (!child) {
        return false;
    }
    else if (parent === child) {
        return true;
    }
    else {
        return isNodeOrChild(parent, child.parentElement);
    }
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/index.js":
/*!*********************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/index.js ***!
  \*********************************************************************************************/
/*! exports provided: MotionConfig, MotionConfigContext, PresenceContext, useIsPresent, usePresence, LayoutGroupContext, VisibilityAction, createBatcher, FramerTreeLayoutContext, SharedLayoutContext, createMotionComponent, useDomEvent, DragFeature, usePanGesture, useTapGesture, useGestures, GesturesFeature, ExitFeature, MotionValue, motionValue, animateVisualElement, animationControls, AnimationFeature, AnimateLayoutFeature, addScaleCorrection, isValidMotionProp, visualElement, resolveMotionValue, createDomMotionComponent, motion, m, AnimatePresence, animate, createCrossfader, AnimateSharedLayout, useMotionValue, useMotionTemplate, transform, useTransform, useSpring, useVelocity, useElementScroll, useViewportScroll, useReducedMotion, useAnimation, useCycle, DragControls, useDragControls, useDeprecatedAnimatedState, useDeprecatedInvertedScale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context/MotionConfigContext.js */ "../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MotionConfig", function() { return _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_0__["MotionConfig"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MotionConfigContext", function() { return _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_0__["MotionConfigContext"]; });

/* harmony import */ var _context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context/PresenceContext.js */ "../../node_modules/framer-motion/dist/es/context/PresenceContext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PresenceContext", function() { return _context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_1__["PresenceContext"]; });

/* harmony import */ var _components_AnimatePresence_use_presence_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/AnimatePresence/use-presence.js */ "../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useIsPresent", function() { return _components_AnimatePresence_use_presence_js__WEBPACK_IMPORTED_MODULE_2__["useIsPresent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "usePresence", function() { return _components_AnimatePresence_use_presence_js__WEBPACK_IMPORTED_MODULE_2__["usePresence"]; });

/* harmony import */ var _context_LayoutGroupContext_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./context/LayoutGroupContext.js */ "../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LayoutGroupContext", function() { return _context_LayoutGroupContext_js__WEBPACK_IMPORTED_MODULE_3__["LayoutGroupContext"]; });

/* harmony import */ var _components_AnimateSharedLayout_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/AnimateSharedLayout/types.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/types.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisibilityAction", function() { return _components_AnimateSharedLayout_types_js__WEBPACK_IMPORTED_MODULE_4__["VisibilityAction"]; });

/* harmony import */ var _components_AnimateSharedLayout_utils_batcher_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/AnimateSharedLayout/utils/batcher.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/batcher.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBatcher", function() { return _components_AnimateSharedLayout_utils_batcher_js__WEBPACK_IMPORTED_MODULE_5__["createBatcher"]; });

/* harmony import */ var _context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./context/SharedLayoutContext.js */ "../../node_modules/framer-motion/dist/es/context/SharedLayoutContext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FramerTreeLayoutContext", function() { return _context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_6__["FramerTreeLayoutContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharedLayoutContext", function() { return _context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_6__["SharedLayoutContext"]; });

/* harmony import */ var _motion_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./motion/index.js */ "../../node_modules/framer-motion/dist/es/motion/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createMotionComponent", function() { return _motion_index_js__WEBPACK_IMPORTED_MODULE_7__["createMotionComponent"]; });

/* harmony import */ var _events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./events/use-dom-event.js */ "../../node_modules/framer-motion/dist/es/events/use-dom-event.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useDomEvent", function() { return _events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_8__["useDomEvent"]; });

/* harmony import */ var _motion_features_drag_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./motion/features/drag.js */ "../../node_modules/framer-motion/dist/es/motion/features/drag.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DragFeature", function() { return _motion_features_drag_js__WEBPACK_IMPORTED_MODULE_9__["Drag"]; });

/* harmony import */ var _gestures_use_pan_gesture_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./gestures/use-pan-gesture.js */ "../../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "usePanGesture", function() { return _gestures_use_pan_gesture_js__WEBPACK_IMPORTED_MODULE_10__["usePanGesture"]; });

/* harmony import */ var _gestures_use_tap_gesture_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./gestures/use-tap-gesture.js */ "../../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useTapGesture", function() { return _gestures_use_tap_gesture_js__WEBPACK_IMPORTED_MODULE_11__["useTapGesture"]; });

/* harmony import */ var _gestures_use_gestures_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./gestures/use-gestures.js */ "../../node_modules/framer-motion/dist/es/gestures/use-gestures.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useGestures", function() { return _gestures_use_gestures_js__WEBPACK_IMPORTED_MODULE_12__["useGestures"]; });

/* harmony import */ var _motion_features_gestures_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./motion/features/gestures.js */ "../../node_modules/framer-motion/dist/es/motion/features/gestures.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GesturesFeature", function() { return _motion_features_gestures_js__WEBPACK_IMPORTED_MODULE_13__["Gestures"]; });

/* harmony import */ var _motion_features_exit_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./motion/features/exit.js */ "../../node_modules/framer-motion/dist/es/motion/features/exit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExitFeature", function() { return _motion_features_exit_js__WEBPACK_IMPORTED_MODULE_14__["Exit"]; });

/* harmony import */ var _value_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./value/index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MotionValue", function() { return _value_index_js__WEBPACK_IMPORTED_MODULE_15__["MotionValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "motionValue", function() { return _value_index_js__WEBPACK_IMPORTED_MODULE_15__["motionValue"]; });

/* harmony import */ var _render_utils_animation_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./render/utils/animation.js */ "../../node_modules/framer-motion/dist/es/render/utils/animation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animateVisualElement", function() { return _render_utils_animation_js__WEBPACK_IMPORTED_MODULE_16__["animateVisualElement"]; });

/* harmony import */ var _animation_animation_controls_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./animation/animation-controls.js */ "../../node_modules/framer-motion/dist/es/animation/animation-controls.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animationControls", function() { return _animation_animation_controls_js__WEBPACK_IMPORTED_MODULE_17__["animationControls"]; });

/* harmony import */ var _motion_features_animation_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./motion/features/animation.js */ "../../node_modules/framer-motion/dist/es/motion/features/animation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AnimationFeature", function() { return _motion_features_animation_js__WEBPACK_IMPORTED_MODULE_18__["Animation"]; });

/* harmony import */ var _motion_features_layout_Animate_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./motion/features/layout/Animate.js */ "../../node_modules/framer-motion/dist/es/motion/features/layout/Animate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AnimateLayoutFeature", function() { return _motion_features_layout_Animate_js__WEBPACK_IMPORTED_MODULE_19__["AnimateLayout"]; });

/* harmony import */ var _render_dom_projection_scale_correction_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./render/dom/projection/scale-correction.js */ "../../node_modules/framer-motion/dist/es/render/dom/projection/scale-correction.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addScaleCorrection", function() { return _render_dom_projection_scale_correction_js__WEBPACK_IMPORTED_MODULE_20__["addScaleCorrection"]; });

/* harmony import */ var _motion_utils_valid_prop_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./motion/utils/valid-prop.js */ "../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isValidMotionProp", function() { return _motion_utils_valid_prop_js__WEBPACK_IMPORTED_MODULE_21__["isValidMotionProp"]; });

/* harmony import */ var _render_index_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./render/index.js */ "../../node_modules/framer-motion/dist/es/render/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "visualElement", function() { return _render_index_js__WEBPACK_IMPORTED_MODULE_22__["visualElement"]; });

/* harmony import */ var _value_utils_resolve_motion_value_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./value/utils/resolve-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resolveMotionValue", function() { return _value_utils_resolve_motion_value_js__WEBPACK_IMPORTED_MODULE_23__["resolveMotionValue"]; });

/* harmony import */ var _render_dom_motion_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./render/dom/motion.js */ "../../node_modules/framer-motion/dist/es/render/dom/motion.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createDomMotionComponent", function() { return _render_dom_motion_js__WEBPACK_IMPORTED_MODULE_24__["createDomMotionComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "motion", function() { return _render_dom_motion_js__WEBPACK_IMPORTED_MODULE_24__["motion"]; });

/* harmony import */ var _render_dom_motion_minimal_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./render/dom/motion-minimal.js */ "../../node_modules/framer-motion/dist/es/render/dom/motion-minimal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "m", function() { return _render_dom_motion_minimal_js__WEBPACK_IMPORTED_MODULE_25__["m"]; });

/* harmony import */ var _components_AnimatePresence_index_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./components/AnimatePresence/index.js */ "../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AnimatePresence", function() { return _components_AnimatePresence_index_js__WEBPACK_IMPORTED_MODULE_26__["AnimatePresence"]; });

/* harmony import */ var _animation_animate_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./animation/animate.js */ "../../node_modules/framer-motion/dist/es/animation/animate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animate", function() { return _animation_animate_js__WEBPACK_IMPORTED_MODULE_27__["animate"]; });

/* harmony import */ var _components_AnimateSharedLayout_utils_crossfader_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./components/AnimateSharedLayout/utils/crossfader.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/crossfader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCrossfader", function() { return _components_AnimateSharedLayout_utils_crossfader_js__WEBPACK_IMPORTED_MODULE_28__["createCrossfader"]; });

/* harmony import */ var _components_AnimateSharedLayout_index_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./components/AnimateSharedLayout/index.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AnimateSharedLayout", function() { return _components_AnimateSharedLayout_index_js__WEBPACK_IMPORTED_MODULE_29__["AnimateSharedLayout"]; });

/* harmony import */ var _value_use_motion_value_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./value/use-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/use-motion-value.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useMotionValue", function() { return _value_use_motion_value_js__WEBPACK_IMPORTED_MODULE_30__["useMotionValue"]; });

/* harmony import */ var _value_use_motion_template_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./value/use-motion-template.js */ "../../node_modules/framer-motion/dist/es/value/use-motion-template.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useMotionTemplate", function() { return _value_use_motion_template_js__WEBPACK_IMPORTED_MODULE_31__["useMotionTemplate"]; });

/* harmony import */ var _utils_transform_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./utils/transform.js */ "../../node_modules/framer-motion/dist/es/utils/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return _utils_transform_js__WEBPACK_IMPORTED_MODULE_32__["transform"]; });

/* harmony import */ var _value_use_transform_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./value/use-transform.js */ "../../node_modules/framer-motion/dist/es/value/use-transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useTransform", function() { return _value_use_transform_js__WEBPACK_IMPORTED_MODULE_33__["useTransform"]; });

/* harmony import */ var _value_use_spring_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./value/use-spring.js */ "../../node_modules/framer-motion/dist/es/value/use-spring.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useSpring", function() { return _value_use_spring_js__WEBPACK_IMPORTED_MODULE_34__["useSpring"]; });

/* harmony import */ var _value_use_velocity_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./value/use-velocity.js */ "../../node_modules/framer-motion/dist/es/value/use-velocity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useVelocity", function() { return _value_use_velocity_js__WEBPACK_IMPORTED_MODULE_35__["useVelocity"]; });

/* harmony import */ var _value_scroll_use_element_scroll_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./value/scroll/use-element-scroll.js */ "../../node_modules/framer-motion/dist/es/value/scroll/use-element-scroll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useElementScroll", function() { return _value_scroll_use_element_scroll_js__WEBPACK_IMPORTED_MODULE_36__["useElementScroll"]; });

/* harmony import */ var _value_scroll_use_viewport_scroll_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./value/scroll/use-viewport-scroll.js */ "../../node_modules/framer-motion/dist/es/value/scroll/use-viewport-scroll.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useViewportScroll", function() { return _value_scroll_use_viewport_scroll_js__WEBPACK_IMPORTED_MODULE_37__["useViewportScroll"]; });

/* harmony import */ var _utils_use_reduced_motion_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./utils/use-reduced-motion.js */ "../../node_modules/framer-motion/dist/es/utils/use-reduced-motion.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useReducedMotion", function() { return _utils_use_reduced_motion_js__WEBPACK_IMPORTED_MODULE_38__["useReducedMotion"]; });

/* harmony import */ var _animation_use_animation_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./animation/use-animation.js */ "../../node_modules/framer-motion/dist/es/animation/use-animation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useAnimation", function() { return _animation_use_animation_js__WEBPACK_IMPORTED_MODULE_39__["useAnimation"]; });

/* harmony import */ var _utils_use_cycle_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./utils/use-cycle.js */ "../../node_modules/framer-motion/dist/es/utils/use-cycle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useCycle", function() { return _utils_use_cycle_js__WEBPACK_IMPORTED_MODULE_40__["useCycle"]; });

/* harmony import */ var _gestures_drag_use_drag_controls_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./gestures/drag/use-drag-controls.js */ "../../node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DragControls", function() { return _gestures_drag_use_drag_controls_js__WEBPACK_IMPORTED_MODULE_41__["DragControls"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useDragControls", function() { return _gestures_drag_use_drag_controls_js__WEBPACK_IMPORTED_MODULE_41__["useDragControls"]; });

/* harmony import */ var _animation_use_animated_state_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./animation/use-animated-state.js */ "../../node_modules/framer-motion/dist/es/animation/use-animated-state.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useDeprecatedAnimatedState", function() { return _animation_use_animated_state_js__WEBPACK_IMPORTED_MODULE_42__["useAnimatedState"]; });

/* harmony import */ var _value_use_inverted_scale_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./value/use-inverted-scale.js */ "../../node_modules/framer-motion/dist/es/value/use-inverted-scale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "useDeprecatedInvertedScale", function() { return _value_use_inverted_scale_js__WEBPACK_IMPORTED_MODULE_43__["useInvertedScale"]; });















































/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/features/animation.js":
/*!*****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/features/animation.js ***!
  \*****************************************************************************************************************/
/*! exports provided: Animation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return Animation; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_make_renderless_component_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/make-renderless-component.js */ "../../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.js");
/* harmony import */ var _animation_animation_controls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../animation/animation-controls.js */ "../../node_modules/framer-motion/dist/es/animation/animation-controls.js");
/* harmony import */ var _render_utils_animation_state_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../render/utils/animation-state.js */ "../../node_modules/framer-motion/dist/es/render/utils/animation-state.js");





var AnimationState = Object(_utils_make_renderless_component_js__WEBPACK_IMPORTED_MODULE_1__["makeRenderlessComponent"])(function (props) {
    var visualElement = props.visualElement, animate = props.animate;
    /**
     * We dynamically generate the AnimationState manager as it contains a reference
     * to the underlying animation library. We only want to load that if we load this,
     * so people can optionally code split it out using the `m` component.
     */
    visualElement.animationState || (visualElement.animationState = Object(_render_utils_animation_state_js__WEBPACK_IMPORTED_MODULE_3__["createAnimationState"])(visualElement));
    /**
     * Subscribe any provided AnimationControls to the component's VisualElement
     */
    if (Object(_animation_animation_controls_js__WEBPACK_IMPORTED_MODULE_2__["isAnimationControls"])(animate)) {
        Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () { return animate.subscribe(visualElement); }, [animate]);
    }
});
/**
 * @public
 */
var Animation = {
    key: "animation",
    shouldRender: function () { return true; },
    getComponent: function (_a) {
        var animate = _a.animate, whileHover = _a.whileHover, whileFocus = _a.whileFocus, whileTap = _a.whileTap, whileDrag = _a.whileDrag, exit = _a.exit, variants = _a.variants;
        return animate ||
            whileHover ||
            whileFocus ||
            whileTap ||
            whileDrag ||
            exit ||
            variants
            ? AnimationState
            : undefined;
    },
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/features/drag.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/features/drag.js ***!
  \************************************************************************************************************/
/*! exports provided: Drag */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Drag", function() { return Drag; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _gestures_drag_use_drag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gestures/drag/use-drag.js */ "../../node_modules/framer-motion/dist/es/gestures/drag/use-drag.js");
/* harmony import */ var _utils_make_renderless_component_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/make-renderless-component.js */ "../../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.js");




var Component = Object(_utils_make_renderless_component_js__WEBPACK_IMPORTED_MODULE_2__["makeRenderlessComponent"])(function (_a) {
    var visualElement = _a.visualElement, props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["visualElement"]);
    return Object(_gestures_drag_use_drag_js__WEBPACK_IMPORTED_MODULE_1__["useDrag"])(props, visualElement);
});
/**
 * @public
 */
var Drag = {
    key: "drag",
    shouldRender: function (props) { return !!props.drag || !!props.dragControls; },
    getComponent: function () { return Component; },
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/features/exit.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/features/exit.js ***!
  \************************************************************************************************************/
/*! exports provided: Exit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Exit", function() { return Exit; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/PresenceContext.js */ "../../node_modules/framer-motion/dist/es/context/PresenceContext.js");
/* harmony import */ var _components_AnimatePresence_use_presence_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/AnimatePresence/use-presence.js */ "../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.js");
/* harmony import */ var _render_utils_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../render/utils/types.js */ "../../node_modules/framer-motion/dist/es/render/utils/types.js");
/* harmony import */ var _utils_make_renderless_component_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/make-renderless-component.js */ "../../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.js");
/* harmony import */ var _utils_should_inherit_variant_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/should-inherit-variant.js */ "../../node_modules/framer-motion/dist/es/motion/utils/should-inherit-variant.js");








/**
 * TODO: This component is quite small and no longer directly imports animation code.
 * It could be a candidate for folding back into the main `motion` component.
 */
var ExitComponent = Object(_utils_make_renderless_component_js__WEBPACK_IMPORTED_MODULE_5__["makeRenderlessComponent"])(function (props) {
    var custom = props.custom, visualElement = props.visualElement;
    var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(Object(_components_AnimatePresence_use_presence_js__WEBPACK_IMPORTED_MODULE_3__["usePresence"])(), 2), isPresent = _a[0], onExitComplete = _a[1];
    var presenceContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_2__["PresenceContext"]);
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        var _a, _b;
        var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(_render_utils_types_js__WEBPACK_IMPORTED_MODULE_4__["AnimationType"].Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });
        !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(onExitComplete));
    }, [isPresent]);
});
/**
 * @public
 */
var Exit = {
    key: "exit",
    shouldRender: function (props) { return !!props.exit && !Object(_utils_should_inherit_variant_js__WEBPACK_IMPORTED_MODULE_6__["checkShouldInheritVariant"])(props); },
    getComponent: function () { return ExitComponent; },
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/features/gestures.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/features/gestures.js ***!
  \****************************************************************************************************************/
/*! exports provided: Gestures */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gestures", function() { return Gestures; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_make_renderless_component_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/make-renderless-component.js */ "../../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.js");
/* harmony import */ var _gestures_use_gestures_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../gestures/use-gestures.js */ "../../node_modules/framer-motion/dist/es/gestures/use-gestures.js");
/* harmony import */ var _gestures_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gestures/types.js */ "../../node_modules/framer-motion/dist/es/gestures/types.js");





var GestureComponent = Object(_utils_make_renderless_component_js__WEBPACK_IMPORTED_MODULE_1__["makeRenderlessComponent"])(function (_a) {
    var visualElement = _a.visualElement, props = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["visualElement"]);
    Object(_gestures_use_gestures_js__WEBPACK_IMPORTED_MODULE_2__["useGestures"])(props, visualElement);
});
/**
 * @public
 */
var Gestures = {
    key: "gestures",
    shouldRender: function (props) {
        return _gestures_types_js__WEBPACK_IMPORTED_MODULE_3__["gestureProps"].some(function (key) { return props.hasOwnProperty(key); });
    },
    getComponent: function () { return GestureComponent; },
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/features/layout/Animate.js":
/*!**********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/features/layout/Animate.js ***!
  \**********************************************************************************************************************/
/*! exports provided: AnimateLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimateLayout", function() { return AnimateLayout; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _components_AnimatePresence_use_presence_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../components/AnimatePresence/use-presence.js */ "../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.js");
/* harmony import */ var _components_AnimateSharedLayout_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../components/AnimateSharedLayout/types.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/types.js");
/* harmony import */ var _utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../utils/geometry/index.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/index.js");
/* harmony import */ var _utils_each_axis_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../utils/each-axis.js */ "../../node_modules/framer-motion/dist/es/utils/each-axis.js");
/* harmony import */ var _animation_utils_transitions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../animation/utils/transitions.js */ "../../node_modules/framer-motion/dist/es/animation/utils/transitions.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ "../../node_modules/framer-motion/dist/es/motion/features/layout/utils.js");









var progressTarget = 1000;
var Animate = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__extends"])(Animate, _super);
    function Animate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * A mutable object that tracks the target viewport box
         * for the current animation frame.
         */
        _this.frameTarget = Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_4__["axisBox"])();
        /**
         * The current animation target, we use this to check whether to start
         * a new animation or continue the existing one.
         */
        _this.currentAnimationTarget = Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_4__["axisBox"])();
        /**
         * Track whether we're animating this axis.
         */
        _this.isAnimating = {
            x: false,
            y: false,
        };
        _this.stopAxisAnimation = {
            x: undefined,
            y: undefined,
        };
        _this.isAnimatingTree = false;
        _this.animate = function (target, origin, _a) {
            if (_a === void 0) { _a = {}; }
            var originBox = _a.originBox, targetBox = _a.targetBox, visibilityAction = _a.visibilityAction, shouldStackAnimate = _a.shouldStackAnimate, onComplete = _a.onComplete, config = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__rest"])(_a, ["originBox", "targetBox", "visibilityAction", "shouldStackAnimate", "onComplete"]);
            var _b = _this.props, visualElement = _b.visualElement, layout = _b.layout;
            /**
             * Early return if we've been instructed not to animate this render.
             */
            if (shouldStackAnimate === false) {
                _this.isAnimatingTree = false;
                return _this.safeToRemove();
            }
            /**
             * Prioritise tree animations
             */
            if (_this.isAnimatingTree && shouldStackAnimate !== true) {
                return;
            }
            else if (shouldStackAnimate) {
                _this.isAnimatingTree = true;
            }
            /**
             * Allow the measured origin (prev bounding box) and target (actual layout) to be
             * overridden by the provided config.
             */
            origin = originBox || origin;
            target = targetBox || target;
            var boxHasMoved = hasMoved(origin, target);
            var animations = Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_5__["eachAxis"])(function (axis) {
                /**
                 * If layout is set to "position", we can resize the origin box based on the target
                 * box and only animate its position.
                 */
                if (layout === "position") {
                    var targetLength = target[axis].max - target[axis].min;
                    origin[axis].max = origin[axis].min + targetLength;
                }
                if (visualElement.projection.isTargetLocked) {
                    return;
                }
                else if (visibilityAction !== undefined) {
                    visualElement.setVisibility(visibilityAction === _components_AnimateSharedLayout_types_js__WEBPACK_IMPORTED_MODULE_3__["VisibilityAction"].Show);
                }
                else if (boxHasMoved) {
                    // If the box has moved, animate between it's current visual state and its
                    // final state
                    return _this.animateAxis(axis, target[axis], origin[axis], config);
                }
                else {
                    // If the box has remained in the same place, immediately set the axis target
                    // to the final desired state
                    return visualElement.setProjectionTargetAxis(axis, target[axis].min, target[axis].max);
                }
            });
            // Force a render to ensure there's no flash of uncorrected bounding box.
            visualElement.syncRender();
            /**
             * If this visualElement isn't present (ie it's been removed from the tree by the user but
             * kept in by the tree by AnimatePresence) then call safeToRemove when all axis animations
             * have successfully finished.
             */
            return Promise.all(animations).then(function () {
                _this.isAnimatingTree = false;
                onComplete && onComplete();
                visualElement.notifyLayoutAnimationComplete();
            });
        };
        return _this;
    }
    Animate.prototype.componentDidMount = function () {
        var _this = this;
        var visualElement = this.props.visualElement;
        visualElement.animateMotionValue = _animation_utils_transitions_js__WEBPACK_IMPORTED_MODULE_6__["startAnimation"];
        visualElement.enableLayoutProjection();
        this.unsubLayoutReady = visualElement.onLayoutUpdate(this.animate);
        visualElement.layoutSafeToRemove = function () { return _this.safeToRemove(); };
    };
    Animate.prototype.componentWillUnmount = function () {
        var _this = this;
        this.unsubLayoutReady();
        Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_5__["eachAxis"])(function (axis) { var _a, _b; return (_b = (_a = _this.stopAxisAnimation)[axis]) === null || _b === void 0 ? void 0 : _b.call(_a); });
    };
    /**
     * TODO: This manually performs animations on the visualElement's layout progress
     * values. It'd be preferable to amend the startLayoutAxisAnimation
     * API to accept more custom animations like this.
     */
    Animate.prototype.animateAxis = function (axis, target, origin, _a) {
        var _this = this;
        var _b, _c;
        var transition = (_a === void 0 ? {} : _a).transition;
        /**
         * If we're not animating to a new target, don't run this animation
         */
        if (this.isAnimating[axis] &&
            axisIsEqual(target, this.currentAnimationTarget[axis])) {
            return;
        }
        (_c = (_b = this.stopAxisAnimation)[axis]) === null || _c === void 0 ? void 0 : _c.call(_b);
        this.isAnimating[axis] = true;
        var visualElement = this.props.visualElement;
        var frameTarget = this.frameTarget[axis];
        var layoutProgress = visualElement.getProjectionAnimationProgress()[axis];
        /**
         * Set layout progress back to 0. We set it twice to hard-reset any velocity that might
         * be re-incoporated into a subsequent spring animation.
         */
        layoutProgress.clearListeners();
        layoutProgress.set(0);
        layoutProgress.set(0);
        /**
         * Create an animation function to run once per frame. This will tween the visual bounding box from
         * origin to target using the latest progress value.
         */
        var frame = function () {
            // Convert the latest layoutProgress, which is a value from 0-1000, into a 0-1 progress
            var p = layoutProgress.get() / progressTarget;
            // Tween the axis and update the visualElement with the latest values
            Object(_utils_js__WEBPACK_IMPORTED_MODULE_7__["tweenAxis"])(frameTarget, origin, target, p);
            visualElement.setProjectionTargetAxis(axis, frameTarget.min, frameTarget.max);
        };
        // Synchronously run a frame to ensure there's no flash of the uncorrected bounding box.
        frame();
        // Ensure that the layout delta is updated for this frame.
        visualElement.updateLayoutProjection();
        // Create a function to stop animation on this specific axis
        var unsubscribeProgress = layoutProgress.onChange(frame);
        this.stopAxisAnimation[axis] = function () {
            _this.isAnimating[axis] = false;
            layoutProgress.stop();
            unsubscribeProgress();
        };
        this.currentAnimationTarget[axis] = target;
        // Start the animation on this axis
        var animation = Object(_animation_utils_transitions_js__WEBPACK_IMPORTED_MODULE_6__["startAnimation"])(axis === "x" ? "layoutX" : "layoutY", layoutProgress, progressTarget, transition || this.props.transition || defaultTransition).then(this.stopAxisAnimation[axis]);
        return animation;
    };
    Animate.prototype.safeToRemove = function () {
        var _a, _b;
        (_b = (_a = this.props).safeToRemove) === null || _b === void 0 ? void 0 : _b.call(_a);
    };
    Animate.prototype.render = function () {
        return null;
    };
    return Animate;
}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]));
function AnimateLayoutContextProvider(props) {
    var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(Object(_components_AnimatePresence_use_presence_js__WEBPACK_IMPORTED_MODULE_2__["usePresence"])(), 2), safeToRemove = _a[1];
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(Animate, Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, props, { safeToRemove: safeToRemove }));
}
function hasMoved(a, b) {
    return (!isZeroBox(a) &&
        !isZeroBox(b) &&
        (!axisIsEqual(a.x, b.x) || !axisIsEqual(a.y, b.y)));
}
var zeroAxis = { min: 0, max: 0 };
function isZeroBox(a) {
    return axisIsEqual(a.x, zeroAxis) && axisIsEqual(a.y, zeroAxis);
}
function axisIsEqual(a, b) {
    return a.min === b.min && a.max === b.max;
}
var defaultTransition = {
    duration: 0.45,
    ease: [0.4, 0, 0.1, 1],
};
/**
 * @public
 */
var AnimateLayout = {
    key: "animate-layout",
    shouldRender: function (props) {
        return !!props.layout || props.layoutId !== undefined;
    },
    getComponent: function () { return AnimateLayoutContextProvider; },
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/features/layout/Measure.js":
/*!**********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/features/layout/Measure.js ***!
  \**********************************************************************************************************************/
/*! exports provided: MeasureLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasureLayout", function() { return MeasureLayout; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../context/SharedLayoutContext.js */ "../../node_modules/framer-motion/dist/es/context/SharedLayoutContext.js");




/**
 * This component is responsible for scheduling the measuring of the motion component
 */
var Measure = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__extends"])(Measure, _super);
    function Measure() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * If this is a child of a SyncContext, register the VisualElement with it on mount.
     */
    Measure.prototype.componentDidMount = function () {
        var _a = this.props, syncLayout = _a.syncLayout, framerSyncLayout = _a.framerSyncLayout, visualElement = _a.visualElement;
        Object(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__["isSharedLayout"])(syncLayout) && syncLayout.register(visualElement);
        Object(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__["isSharedLayout"])(framerSyncLayout) &&
            framerSyncLayout.register(visualElement);
    };
    /**
     * If this is a child of a SyncContext, notify it that it needs to re-render. It will then
     * handle the snapshotting.
     *
     * If it is stand-alone component, add it to the batcher.
     */
    Measure.prototype.getSnapshotBeforeUpdate = function () {
        var _a = this.props, syncLayout = _a.syncLayout, visualElement = _a.visualElement;
        if (Object(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__["isSharedLayout"])(syncLayout)) {
            syncLayout.syncUpdate();
        }
        else {
            visualElement.snapshotViewportBox();
            syncLayout.add(visualElement);
        }
        return null;
    };
    Measure.prototype.componentDidUpdate = function () {
        var _a = this.props, syncLayout = _a.syncLayout, visualElement = _a.visualElement;
        if (!Object(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__["isSharedLayout"])(syncLayout))
            syncLayout.flush();
        /**
         * If this axis isn't animating as a result of this render we want to reset the targetBox
         * to the measured box
         */
        visualElement.rebaseProjectionTarget();
    };
    Measure.prototype.render = function () {
        return null;
    };
    return Measure;
}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component));
function MeasureContextProvider(props) {
    var syncLayout = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__["SharedLayoutContext"]);
    var framerSyncLayout = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_2__["FramerTreeLayoutContext"]);
    return (react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Measure, Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, props, { syncLayout: syncLayout, framerSyncLayout: framerSyncLayout })));
}
var MeasureLayout = {
    key: "measure-layout",
    shouldRender: function (props) {
        return !!props.drag || !!props.layout || props.layoutId !== undefined;
    },
    getComponent: function () { return MeasureContextProvider; },
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/features/layout/use-snapshot-on-unmount.js":
/*!**************************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/features/layout/use-snapshot-on-unmount.js ***!
  \**************************************************************************************************************************************/
/*! exports provided: useSnapshotOnUnmount */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useSnapshotOnUnmount", function() { return useSnapshotOnUnmount; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../context/SharedLayoutContext.js */ "../../node_modules/framer-motion/dist/es/context/SharedLayoutContext.js");
/* harmony import */ var _utils_use_isomorphic_effect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/use-isomorphic-effect.js */ "../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.js");




function useSnapshotOnUnmount(visualElement) {
    var syncLayout = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_1__["SharedLayoutContext"]);
    var framerSyncLayout = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_1__["FramerTreeLayoutContext"]);
    Object(_utils_use_isomorphic_effect_js__WEBPACK_IMPORTED_MODULE_2__["useIsomorphicLayoutEffect"])(function () { return function () {
        if (Object(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_1__["isSharedLayout"])(syncLayout)) {
            syncLayout.remove(visualElement);
        }
        if (Object(_context_SharedLayoutContext_js__WEBPACK_IMPORTED_MODULE_1__["isSharedLayout"])(framerSyncLayout)) {
            framerSyncLayout.remove(visualElement);
        }
    }; }, []);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/features/layout/utils.js":
/*!********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/features/layout/utils.js ***!
  \********************************************************************************************************************/
/*! exports provided: tweenAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tweenAxis", function() { return tweenAxis; });
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");


function tweenAxis(target, prev, next, p) {
    target.min = Object(popmotion__WEBPACK_IMPORTED_MODULE_0__["mix"])(prev.min, next.min, p);
    target.max = Object(popmotion__WEBPACK_IMPORTED_MODULE_0__["mix"])(prev.max, next.max, p);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/features/use-features.js":
/*!********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/features/use-features.js ***!
  \********************************************************************************************************************/
/*! exports provided: useFeatures */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useFeatures", function() { return useFeatures; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/MotionConfigContext.js */ "../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js");




/**
 * Load features via renderless components based on the provided MotionProps.
 * TODO: Look into porting this to a component-less appraoch.
 */
function useFeatures(defaultFeatures, visualElement, props) {
    var plugins = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__["MotionConfigContext"]);
    var allFeatures = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__spread"])(defaultFeatures, plugins.features);
    var numFeatures = allFeatures.length;
    var features = [];
    // Decide which features we should render and add them to the returned array
    for (var i = 0; i < numFeatures; i++) {
        var _a = allFeatures[i], shouldRender = _a.shouldRender, key = _a.key, getComponent = _a.getComponent;
        if (shouldRender(props)) {
            var Component = getComponent(props);
            Component &&
                features.push(Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(Component, Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({ key: key }, props, { visualElement: visualElement })));
        }
    }
    return features;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/index.js":
/*!****************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/index.js ***!
  \****************************************************************************************************/
/*! exports provided: createMotionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMotionComponent", function() { return createMotionComponent; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context/MotionConfigContext.js */ "../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js");
/* harmony import */ var _features_use_features_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./features/use-features.js */ "../../node_modules/framer-motion/dist/es/motion/features/use-features.js");
/* harmony import */ var _context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/MotionContext/index.js */ "../../node_modules/framer-motion/dist/es/context/MotionContext/index.js");
/* harmony import */ var _utils_use_visual_element_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/use-visual-element.js */ "../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.js");
/* harmony import */ var _utils_use_motion_ref_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/use-motion-ref.js */ "../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.js");
/* harmony import */ var _context_MotionContext_create_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../context/MotionContext/create.js */ "../../node_modules/framer-motion/dist/es/context/MotionContext/create.js");








/**
 * Create a `motion` component.
 *
 * This function accepts a Component argument, which can be either a string (ie "div"
 * for `motion.div`), or an actual React component.
 *
 * Alongside this is a config option which provides a way of rendering the provided
 * component "offline", or outside the React render cycle.
 *
 * @internal
 */
function createMotionComponent(_a) {
    var defaultFeatures = _a.defaultFeatures, createVisualElement = _a.createVisualElement, useRender = _a.useRender, useVisualState = _a.useVisualState;
    function MotionComponent(props, externalRef) {
        /**
         * If we're rendering in a static environment, we only visually update the component
         * as a result of a React-rerender rather than interactions or animations. This
         * means we don't need to load additional memory structures like VisualElement,
         * or any gesture/animation features.
         */
        var isStatic = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_1__["MotionConfigContext"]).isStatic;
        var features = null;
        /**
         * Create the tree context. This is memoized and will only trigger renders
         * when the current tree variant changes in static mode.
         */
        var context = Object(_context_MotionContext_create_js__WEBPACK_IMPORTED_MODULE_6__["useCreateMotionContext"])(props, isStatic);
        /**
         *
         */
        var visualState = useVisualState(props, isStatic);
        if (!isStatic && typeof window !== "undefined") {
            /**
             * Create a VisualElement for this component. A VisualElement provides a common
             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as
             * providing a way of rendering to these APIs outside of the React render loop
             * for more performant animations and interactions
             */
            context.visualElement = Object(_utils_use_visual_element_js__WEBPACK_IMPORTED_MODULE_4__["useVisualElement"])(isStatic, visualState, createVisualElement, props);
            /**
             * Load Motion gesture and animation features. These are rendered as renderless
             * components so each feature can optionally make use of React lifecycle methods.
             *
             * TODO: The intention is to move these away from a React-centric to a
             * VisualElement-centric lifecycle scheme.
             */
            features = Object(_features_use_features_js__WEBPACK_IMPORTED_MODULE_2__["useFeatures"])(defaultFeatures, context.visualElement, props);
        }
        /**
         * The mount order and hierarchy is specific to ensure our element ref
         * is hydrated by the time features fire their effects.
         */
        return (Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null,
            Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(_context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_3__["MotionContext"].Provider, { value: context }, useRender(props, Object(_utils_use_motion_ref_js__WEBPACK_IMPORTED_MODULE_5__["useMotionRef"])(visualState, context.visualElement, externalRef), visualState, isStatic)),
            features));
    }
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(MotionComponent);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.js":
/*!***************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.js ***!
  \***************************************************************************************************************************/
/*! exports provided: isForcedMotionValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isForcedMotionValue", function() { return isForcedMotionValue; });
/* harmony import */ var _render_dom_projection_scale_correction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../render/dom/projection/scale-correction.js */ "../../node_modules/framer-motion/dist/es/render/dom/projection/scale-correction.js");
/* harmony import */ var _render_html_utils_transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../render/html/utils/transform.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/transform.js");



function isForcedMotionValue(key, _a) {
    var layout = _a.layout, layoutId = _a.layoutId;
    return (Object(_render_html_utils_transform_js__WEBPACK_IMPORTED_MODULE_1__["isTransformProp"])(key) ||
        Object(_render_html_utils_transform_js__WEBPACK_IMPORTED_MODULE_1__["isTransformOriginProp"])(key) ||
        ((layout || layoutId !== undefined) && !!_render_dom_projection_scale_correction_js__WEBPACK_IMPORTED_MODULE_0__["valueScaleCorrection"][key]));
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.js":
/*!******************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.js ***!
  \******************************************************************************************************************************/
/*! exports provided: makeRenderlessComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeRenderlessComponent", function() { return makeRenderlessComponent; });
var makeRenderlessComponent = function (hook) { return function (props) {
    hook(props);
    return null;
}; };




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/utils/should-inherit-variant.js":
/*!***************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/utils/should-inherit-variant.js ***!
  \***************************************************************************************************************************/
/*! exports provided: checkShouldInheritVariant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkShouldInheritVariant", function() { return checkShouldInheritVariant; });
function checkShouldInheritVariant(_a) {
    var animate = _a.animate, variants = _a.variants, inherit = _a.inherit;
    return inherit !== null && inherit !== void 0 ? inherit : (!!variants && !animate);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.js ***!
  \*******************************************************************************************************************/
/*! exports provided: useMotionRef */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useMotionRef", function() { return useMotionRef; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_is_ref_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is-ref-object.js */ "../../node_modules/framer-motion/dist/es/utils/is-ref-object.js");



/**
 * Creates a ref function that, when called, hydrates the provided
 * external ref and VisualElement.
 */
function useMotionRef(visualState, visualElement, externalRef) {
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function (instance) {
        var _a;
        instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));
        if (visualElement) {
            instance ? visualElement.mount(instance) : visualElement.unmount();
        }
        if (externalRef) {
            if (typeof externalRef === "function") {
                externalRef(instance);
            }
            else if (Object(_utils_is_ref_object_js__WEBPACK_IMPORTED_MODULE_1__["isRefObject"])(externalRef)) {
                externalRef.current = instance;
            }
        }
    }, []);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.js":
/*!***********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.js ***!
  \***********************************************************************************************************************/
/*! exports provided: useVisualElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useVisualElement", function() { return useVisualElement; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/MotionConfigContext.js */ "../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js");
/* harmony import */ var _context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../context/MotionContext/index.js */ "../../node_modules/framer-motion/dist/es/context/MotionContext/index.js");
/* harmony import */ var _context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../context/PresenceContext.js */ "../../node_modules/framer-motion/dist/es/context/PresenceContext.js");
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");
/* harmony import */ var _components_AnimatePresence_use_presence_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../components/AnimatePresence/use-presence.js */ "../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.js");
/* harmony import */ var _context_LayoutGroupContext_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../context/LayoutGroupContext.js */ "../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.js");
/* harmony import */ var _utils_use_isomorphic_effect_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/use-isomorphic-effect.js */ "../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.js");
/* harmony import */ var _features_layout_use_snapshot_on_unmount_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../features/layout/use-snapshot-on-unmount.js */ "../../node_modules/framer-motion/dist/es/motion/features/layout/use-snapshot-on-unmount.js");











function useLayoutId(_a) {
    var layoutId = _a.layoutId;
    var layoutGroupId = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_LayoutGroupContext_js__WEBPACK_IMPORTED_MODULE_7__["LayoutGroupContext"]);
    return layoutGroupId && layoutId !== undefined
        ? layoutGroupId + "-" + layoutId
        : layoutId;
}
function useVisualElement(isStatic, visualState, createVisualElement, props) {
    var config = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__["MotionConfigContext"]);
    var parent = Object(_context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_3__["useVisualElementContext"])();
    var presenceContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_4__["PresenceContext"]);
    var layoutId = useLayoutId(props);
    var visualElement = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_5__["useConstant"])(function () {
        return createVisualElement(isStatic, {
            visualState: visualState,
            parent: parent,
            props: Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, props), { layoutId: layoutId }),
            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,
            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,
        });
    });
    Object(_utils_use_isomorphic_effect_js__WEBPACK_IMPORTED_MODULE_8__["useIsomorphicLayoutEffect"])(function () {
        visualElement.setProps(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, config), props), { layoutId: layoutId }));
        visualElement.isPresent = Object(_components_AnimatePresence_use_presence_js__WEBPACK_IMPORTED_MODULE_6__["isPresent"])(presenceContext);
        visualElement.isPresenceRoot =
            !parent || parent.presenceId !== (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id);
        /**
         * Fire a render to ensure the latest state is reflected on-screen.
         */
        visualElement.syncRender();
    });
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        var _a;
        /**
         * In a future refactor we can replace the features-as-components and
         * have this loop through them all firing "effect" listeners
         */
        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();
    });
    /**
     * If this component is a child of AnimateSharedLayout, we need to snapshot the component
     * before it's unmounted. This lives here rather than in features/layout/Measure because
     * as a child component its unmount effect runs after this component has been unmounted.
     */
    Object(_features_layout_use_snapshot_on_unmount_js__WEBPACK_IMPORTED_MODULE_9__["useSnapshotOnUnmount"])(visualElement);
    return visualElement;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.js":
/*!*********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.js ***!
  \*********************************************************************************************************************/
/*! exports provided: makeUseVisualState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeUseVisualState", function() { return makeUseVisualState; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/MotionContext/index.js */ "../../node_modules/framer-motion/dist/es/context/MotionContext/index.js");
/* harmony import */ var _context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../context/PresenceContext.js */ "../../node_modules/framer-motion/dist/es/context/PresenceContext.js");
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");
/* harmony import */ var _render_utils_variants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../render/utils/variants.js */ "../../node_modules/framer-motion/dist/es/render/utils/variants.js");
/* harmony import */ var _animation_animation_controls_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../animation/animation-controls.js */ "../../node_modules/framer-motion/dist/es/animation/animation-controls.js");
/* harmony import */ var _value_utils_resolve_motion_value_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../value/utils/resolve-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.js");









function makeState(_a, props, context, presenceContext) {
    var scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;
    var state = {
        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),
        renderState: createRenderState(),
    };
    if (onMount) {
        state.mount = function (instance) { return onMount(props, instance, state); };
    }
    return state;
}
var makeUseVisualState = function (config) { return function (props, isStatic) {
    var context = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_2__["MotionContext"]);
    var presenceContext = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_PresenceContext_js__WEBPACK_IMPORTED_MODULE_3__["PresenceContext"]);
    return isStatic
        ? makeState(config, props, context, presenceContext)
        : Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_4__["useConstant"])(function () { return makeState(config, props, context, presenceContext); });
}; };
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
    var values = {};
    var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;
    var motionValues = scrapeMotionValues(props);
    for (var key in motionValues) {
        values[key] = Object(_value_utils_resolve_motion_value_js__WEBPACK_IMPORTED_MODULE_7__["resolveMotionValue"])(motionValues[key]);
    }
    var initial = props.initial, animate = props.animate;
    var isControllingVariants = Object(_render_utils_variants_js__WEBPACK_IMPORTED_MODULE_5__["checkIfControllingVariants"])(props);
    var isVariantNode = isControllingVariants || props.variants;
    if (context &&
        isVariantNode &&
        !isControllingVariants &&
        props.inherit !== false) {
        initial !== null && initial !== void 0 ? initial : (initial = context.initial);
        animate !== null && animate !== void 0 ? animate : (animate = context.animate);
    }
    var variantToSet = blockInitialAnimation || initial === false ? animate : initial;
    if (variantToSet &&
        typeof variantToSet !== "boolean" &&
        !Object(_animation_animation_controls_js__WEBPACK_IMPORTED_MODULE_6__["isAnimationControls"])(variantToSet)) {
        var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
        list.forEach(function (definition) {
            var resolved = Object(_render_utils_variants_js__WEBPACK_IMPORTED_MODULE_5__["resolveVariantFromProps"])(props, definition);
            if (!resolved)
                return;
            var transitionEnd = resolved.transitionEnd, transition = resolved.transition, target = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__rest"])(resolved, ["transitionEnd", "transition"]);
            for (var key in target)
                values[key] = target[key];
            for (var key in transitionEnd)
                values[key] = transitionEnd[key];
        });
    }
    return values;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.js":
/*!***************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/motion/utils/valid-prop.js ***!
  \***************************************************************************************************************/
/*! exports provided: isValidMotionProp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidMotionProp", function() { return isValidMotionProp; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _gestures_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gestures/types.js */ "../../node_modules/framer-motion/dist/es/gestures/types.js");



/**
 * A list of all valid MotionProps.
 *
 * @internalremarks
 * This doesn't throw if a `MotionProp` name is missing - it should.
 */
var validMotionProps = new Set(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])([
    "initial",
    "animate",
    "exit",
    "style",
    "variants",
    "transition",
    "transformTemplate",
    "transformValues",
    "custom",
    "inherit",
    "layout",
    "layoutId",
    "onLayoutAnimationComplete",
    "onViewportBoxUpdate",
    "onLayoutMeasure",
    "onBeforeLayoutMeasure",
    "onAnimationStart",
    "onAnimationComplete",
    "onUpdate",
    "onDragStart",
    "onDrag",
    "onDragEnd",
    "onMeasureDragConstraints",
    "onDirectionLock",
    "onDragTransitionEnd",
    "drag",
    "dragControls",
    "dragListener",
    "dragConstraints",
    "dragDirectionLock",
    "_dragX",
    "_dragY",
    "dragElastic",
    "dragMomentum",
    "dragPropagation",
    "dragTransition",
    "whileDrag"
], _gestures_types_js__WEBPACK_IMPORTED_MODULE_1__["gestureProps"]));
/**
 * Check whether a prop name is a valid `MotionProp` key.
 *
 * @param key - Name of the property to check
 * @returns `true` is key is a valid `MotionProp`.
 *
 * @public
 */
function isValidMotionProp(key) {
    return validMotionProps.has(key);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/motion-minimal.js":
/*!*****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/motion-minimal.js ***!
  \*****************************************************************************************************************/
/*! exports provided: m */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return m; });
/* harmony import */ var _motion_features_layout_Measure_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../motion/features/layout/Measure.js */ "../../node_modules/framer-motion/dist/es/motion/features/layout/Measure.js");
/* harmony import */ var _motion_proxy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./motion-proxy.js */ "../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.js");



/**
 * @public
 */
var m = Object(_motion_proxy_js__WEBPACK_IMPORTED_MODULE_1__["createMotionProxy"])([_motion_features_layout_Measure_js__WEBPACK_IMPORTED_MODULE_0__["MeasureLayout"]]);




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.js":
/*!***************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/motion-proxy.js ***!
  \***************************************************************************************************************/
/*! exports provided: createMotionProxy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMotionProxy", function() { return createMotionProxy; });
/* harmony import */ var _motion_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../motion/index.js */ "../../node_modules/framer-motion/dist/es/motion/index.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var _utils_create_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/create-config.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.js");




/**
 * Convert any React component into a `motion` component. The provided component
 * **must** use `React.forwardRef` to the underlying DOM component you want to animate.
 *
 * ```jsx
 * const Component = React.forwardRef((props, ref) => {
 *   return <div ref={ref} />
 * })
 *
 * const MotionComponent = motion(Component)
 * ```
 *
 * @public
 */
function createMotionProxy(defaultFeatures) {
    function custom(Component, _a) {
        var _b = (_a === void 0 ? {} : _a).forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;
        return Object(_motion_index_js__WEBPACK_IMPORTED_MODULE_0__["createMotionComponent"])(Object(_utils_create_config_js__WEBPACK_IMPORTED_MODULE_2__["createDomMotionConfig"])(defaultFeatures, Component, forwardMotionProps));
    }
    function deprecatedCustom(Component) {
        Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["warning"])(false, "motion.custom() is deprecated. Use motion() instead.");
        return custom(Component, { forwardMotionProps: true });
    }
    /**
     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.
     * Rather than generating them anew every render.
     */
    var componentCache = new Map();
    return new Proxy(custom, {
        /**
         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
         * The prop name is passed through as `key` and we can use that to generate a `motion`
         * DOM component with that name.
         */
        get: function (_target, key) {
            /**
             * Can be removed in 4.0
             */
            if (key === "custom")
                return deprecatedCustom;
            /**
             * If this element doesn't exist in the component cache, create it and cache.
             */
            if (!componentCache.has(key)) {
                componentCache.set(key, custom(key));
            }
            return componentCache.get(key);
        },
    });
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/motion.js":
/*!*********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/motion.js ***!
  \*********************************************************************************************************/
/*! exports provided: createDomMotionComponent, motion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDomMotionComponent", function() { return createDomMotionComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "motion", function() { return motion; });
/* harmony import */ var _motion_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../motion/index.js */ "../../node_modules/framer-motion/dist/es/motion/index.js");
/* harmony import */ var _motion_features_drag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../motion/features/drag.js */ "../../node_modules/framer-motion/dist/es/motion/features/drag.js");
/* harmony import */ var _motion_features_gestures_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../motion/features/gestures.js */ "../../node_modules/framer-motion/dist/es/motion/features/gestures.js");
/* harmony import */ var _motion_features_exit_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../motion/features/exit.js */ "../../node_modules/framer-motion/dist/es/motion/features/exit.js");
/* harmony import */ var _motion_features_animation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../motion/features/animation.js */ "../../node_modules/framer-motion/dist/es/motion/features/animation.js");
/* harmony import */ var _motion_features_layout_Animate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../motion/features/layout/Animate.js */ "../../node_modules/framer-motion/dist/es/motion/features/layout/Animate.js");
/* harmony import */ var _motion_features_layout_Measure_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../motion/features/layout/Measure.js */ "../../node_modules/framer-motion/dist/es/motion/features/layout/Measure.js");
/* harmony import */ var _utils_create_config_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/create-config.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.js");
/* harmony import */ var _motion_proxy_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./motion-proxy.js */ "../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.js");










var allMotionFeatures = [
    _motion_features_layout_Measure_js__WEBPACK_IMPORTED_MODULE_6__["MeasureLayout"],
    _motion_features_animation_js__WEBPACK_IMPORTED_MODULE_4__["Animation"],
    _motion_features_drag_js__WEBPACK_IMPORTED_MODULE_1__["Drag"],
    _motion_features_gestures_js__WEBPACK_IMPORTED_MODULE_2__["Gestures"],
    _motion_features_exit_js__WEBPACK_IMPORTED_MODULE_3__["Exit"],
    _motion_features_layout_Animate_js__WEBPACK_IMPORTED_MODULE_5__["AnimateLayout"],
];
/**
 * HTML & SVG components, optimised for use with gestures and animation. These can be used as
 * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.
 *
 * @public
 */
var motion = /*@__PURE__*/ Object(_motion_proxy_js__WEBPACK_IMPORTED_MODULE_8__["createMotionProxy"])(allMotionFeatures);
/**
 * Create a DOM `motion` component with the provided string. This is primarily intended
 * as a full alternative to `motion` for consumers who have to support environments that don't
 * support `Proxy`.
 *
 * ```javascript
 * import { createDomMotionComponent } from "framer-motion"
 *
 * const motion = {
 *   div: createDomMotionComponent('div')
 * }
 * ```
 *
 * @public
 */
function createDomMotionComponent(key) {
    return Object(_motion_index_js__WEBPACK_IMPORTED_MODULE_0__["createMotionComponent"])(Object(_utils_create_config_js__WEBPACK_IMPORTED_MODULE_7__["createDomMotionConfig"])(allMotionFeatures, key, false));
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/projection/measure.js":
/*!*********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/projection/measure.js ***!
  \*********************************************************************************************************************/
/*! exports provided: getBoundingBox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBoundingBox", function() { return getBoundingBox; });
/* harmony import */ var _utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/geometry/index.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/index.js");


/**
 * Measure and return the element bounding box.
 *
 * We convert the box into an AxisBox2D to make it easier to work with each axis
 * individually and programmatically.
 *
 * This function optionally accepts a transformPagePoint function which allows us to compensate
 * for, for instance, measuring the element within a scaled plane like a Framer devivce preview component.
 */
function getBoundingBox(element, transformPagePoint) {
    var box = element.getBoundingClientRect();
    return Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__["convertBoundingBoxToAxisBox"])(Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__["transformBoundingBox"])(box, transformPagePoint));
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/projection/scale-correction.js":
/*!******************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/projection/scale-correction.js ***!
  \******************************************************************************************************************************/
/*! exports provided: addScaleCorrection, correctBorderRadius, correctBoxShadow, pixelsToPercent, valueScaleCorrection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addScaleCorrection", function() { return addScaleCorrection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "correctBorderRadius", function() { return correctBorderRadius; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "correctBoxShadow", function() { return correctBoxShadow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pixelsToPercent", function() { return pixelsToPercent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "valueScaleCorrection", function() { return valueScaleCorrection; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");
/* harmony import */ var _utils_css_variables_conversion_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/css-variables-conversion.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.js");





function pixelsToPercent(pixels, axis) {
    return (pixels / (axis.max - axis.min)) * 100;
}
/**
 * We always correct borderRadius as a percentage rather than pixels to reduce paints.
 * For example, if you are projecting a box that is 100px wide with a 10px borderRadius
 * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%
 * borderRadius in both states. If we animate between the two in pixels that will trigger
 * a paint each time. If we animate between the two in percentage we'll avoid a paint.
 */
function correctBorderRadius(latest, _layoutState, _a) {
    var target = _a.target;
    /**
     * If latest is a string, if it's a percentage we can return immediately as it's
     * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.
     */
    if (typeof latest === "string") {
        if (style_value_types__WEBPACK_IMPORTED_MODULE_2__["px"].test(latest)) {
            latest = parseFloat(latest);
        }
        else {
            return latest;
        }
    }
    /**
     * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that
     * pixel value as a percentage of each axis
     */
    var x = pixelsToPercent(latest, target.x);
    var y = pixelsToPercent(latest, target.y);
    return x + "% " + y + "%";
}
var varToken = "_$css";
function correctBoxShadow(latest, _a) {
    var delta = _a.delta, treeScale = _a.treeScale;
    var original = latest;
    /**
     * We need to first strip and store CSS variables from the string.
     */
    var containsCSSVariables = latest.includes("var(");
    var cssVariables = [];
    if (containsCSSVariables) {
        latest = latest.replace(_utils_css_variables_conversion_js__WEBPACK_IMPORTED_MODULE_3__["cssVariableRegex"], function (match) {
            cssVariables.push(match);
            return varToken;
        });
    }
    var shadow = style_value_types__WEBPACK_IMPORTED_MODULE_2__["complex"].parse(latest);
    // TODO: Doesn't support multiple shadows
    if (shadow.length > 5)
        return original;
    var template = style_value_types__WEBPACK_IMPORTED_MODULE_2__["complex"].createTransformer(latest);
    var offset = typeof shadow[0] !== "number" ? 1 : 0;
    // Calculate the overall context scale
    var xScale = delta.x.scale * treeScale.x;
    var yScale = delta.y.scale * treeScale.y;
    shadow[0 + offset] /= xScale;
    shadow[1 + offset] /= yScale;
    /**
     * Ideally we'd correct x and y scales individually, but because blur and
     * spread apply to both we have to take a scale average and apply that instead.
     * We could potentially improve the outcome of this by incorporating the ratio between
     * the two scales.
     */
    var averageScale = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(xScale, yScale, 0.5);
    // Blur
    if (typeof shadow[2 + offset] === "number")
        shadow[2 + offset] /= averageScale;
    // Spread
    if (typeof shadow[3 + offset] === "number")
        shadow[3 + offset] /= averageScale;
    var output = template(shadow);
    if (containsCSSVariables) {
        var i_1 = 0;
        output = output.replace(varToken, function () {
            var cssVariable = cssVariables[i_1];
            i_1++;
            return cssVariable;
        });
    }
    return output;
}
var borderCorrectionDefinition = {
    process: correctBorderRadius,
};
var valueScaleCorrection = {
    borderRadius: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, borderCorrectionDefinition), { applyTo: [
            "borderTopLeftRadius",
            "borderTopRightRadius",
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
        ] }),
    borderTopLeftRadius: borderCorrectionDefinition,
    borderTopRightRadius: borderCorrectionDefinition,
    borderBottomLeftRadius: borderCorrectionDefinition,
    borderBottomRightRadius: borderCorrectionDefinition,
    boxShadow: {
        process: correctBoxShadow,
    },
};
/**
 * @internal
 */
function addScaleCorrection(correctors) {
    for (var key in correctors) {
        valueScaleCorrection[key] = correctors[key];
    }
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/use-render.js":
/*!*************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/use-render.js ***!
  \*************************************************************************************************************/
/*! exports provided: createUseRender */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUseRender", function() { return createUseRender; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_is_svg_component_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/is-svg-component.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.js");
/* harmony import */ var _html_use_props_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../html/use-props.js */ "../../node_modules/framer-motion/dist/es/render/html/use-props.js");
/* harmony import */ var _utils_filter_props_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/filter-props.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.js");
/* harmony import */ var _svg_use_props_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../svg/use-props.js */ "../../node_modules/framer-motion/dist/es/render/svg/use-props.js");







function createUseRender(Component, forwardMotionProps) {
    if (forwardMotionProps === void 0) { forwardMotionProps = false; }
    var useRender = function (props, ref, _a, isStatic) {
        var latestValues = _a.latestValues;
        var useVisualProps = Object(_utils_is_svg_component_js__WEBPACK_IMPORTED_MODULE_2__["isSVGComponent"])(Component)
            ? _svg_use_props_js__WEBPACK_IMPORTED_MODULE_5__["useSVGProps"]
            : _html_use_props_js__WEBPACK_IMPORTED_MODULE_3__["useHTMLProps"];
        var visualProps = useVisualProps(props, latestValues, isStatic);
        var filteredProps = Object(_utils_filter_props_js__WEBPACK_IMPORTED_MODULE_4__["filterProps"])(props, typeof Component === "string", forwardMotionProps);
        var elementProps = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, filteredProps), visualProps), { ref: ref });
        return Object(react__WEBPACK_IMPORTED_MODULE_0__["createElement"])(Component, elementProps);
    };
    return useRender;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.js":
/*!**********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.js ***!
  \**********************************************************************************************************************/
/*! exports provided: camelToDash */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "camelToDash", function() { return camelToDash; });
var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;
var REPLACE_TEMPLATE = "$1-$2";
/**
 * Convert camelCase to dash-case properties.
 */
var camelToDash = function (str) {
    return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.js":
/*!**********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/utils/create-config.js ***!
  \**********************************************************************************************************************/
/*! exports provided: createDomMotionConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDomMotionConfig", function() { return createDomMotionConfig; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _is_svg_component_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is-svg-component.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.js");
/* harmony import */ var _use_render_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../use-render.js */ "../../node_modules/framer-motion/dist/es/render/dom/use-render.js");
/* harmony import */ var _svg_config_motion_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../svg/config-motion.js */ "../../node_modules/framer-motion/dist/es/render/svg/config-motion.js");
/* harmony import */ var _html_config_motion_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../html/config-motion.js */ "../../node_modules/framer-motion/dist/es/render/html/config-motion.js");






function createDomMotionConfig(defaultFeatures, Component, forwardMotionProps) {
    var baseConfig = Object(_is_svg_component_js__WEBPACK_IMPORTED_MODULE_1__["isSVGComponent"])(Component)
        ? _svg_config_motion_js__WEBPACK_IMPORTED_MODULE_3__["svgMotionConfig"]
        : _html_config_motion_js__WEBPACK_IMPORTED_MODULE_4__["htmlMotionConfig"];
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, baseConfig), { defaultFeatures: defaultFeatures, useRender: Object(_use_render_js__WEBPACK_IMPORTED_MODULE_2__["createUseRender"])(Component, forwardMotionProps) });
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.js":
/*!*********************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.js ***!
  \*********************************************************************************************************************************/
/*! exports provided: cssVariableRegex, parseCSSVariable, resolveCSSVariables */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cssVariableRegex", function() { return cssVariableRegex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseCSSVariable", function() { return parseCSSVariable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveCSSVariables", function() { return resolveCSSVariables; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");



function isCSSVariable(value) {
    return typeof value === "string" && value.startsWith("var(--");
}
/**
 * Parse Framer's special CSS variable format into a CSS token and a fallback.
 *
 * ```
 * `var(--foo, #fff)` => [`--foo`, '#fff']
 * ```
 *
 * @param current
 */
var cssVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(current) {
    var match = cssVariableRegex.exec(current);
    if (!match)
        return [,];
    var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(match, 3), token = _a[1], fallback = _a[2];
    return [token, fallback];
}
var maxDepth = 4;
function getVariableValue(current, element, depth) {
    if (depth === void 0) { depth = 1; }
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["invariant"])(depth <= maxDepth, "Max CSS variable fallback depth detected in property \"" + current + "\". This may indicate a circular fallback dependency.");
    var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];
    // No CSS variable detected
    if (!token)
        return;
    // Attempt to read this CSS variable off the element
    var resolved = window.getComputedStyle(element).getPropertyValue(token);
    if (resolved) {
        return resolved.trim();
    }
    else if (isCSSVariable(fallback)) {
        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.
        return getVariableValue(fallback, element, depth + 1);
    }
    else {
        return fallback;
    }
}
/**
 * Resolve CSS variables from
 *
 * @internal
 */
function resolveCSSVariables(visualElement, _a, transitionEnd) {
    var _b;
    var target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, []);
    var element = visualElement.getInstance();
    if (!(element instanceof HTMLElement))
        return { target: target, transitionEnd: transitionEnd };
    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`
    // only if they change but I think this reads clearer and this isn't a performance-critical path.
    if (transitionEnd) {
        transitionEnd = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, transitionEnd);
    }
    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved
    visualElement.forEachValue(function (value) {
        var current = value.get();
        if (!isCSSVariable(current))
            return;
        var resolved = getVariableValue(current, element);
        if (resolved)
            value.set(resolved);
    });
    // Cycle through every target property and resolve CSS variables. Currently
    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`
    for (var key in target) {
        var current = target[key];
        if (!isCSSVariable(current))
            continue;
        var resolved = getVariableValue(current, element);
        if (!resolved)
            continue;
        // Clone target if it hasn't already been
        target[key] = resolved;
        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved
        // CSS variable. This will ensure that after the animation the component will reflect
        // changes in the value of the CSS variable.
        if (transitionEnd)
            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);
    }
    return { target: target, transitionEnd: transitionEnd };
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.js":
/*!*********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.js ***!
  \*********************************************************************************************************************/
/*! exports provided: filterProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterProps", function() { return filterProps; });
/* harmony import */ var _motion_utils_valid_prop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../motion/utils/valid-prop.js */ "../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.js");


var shouldForward = function (key) { return !Object(_motion_utils_valid_prop_js__WEBPACK_IMPORTED_MODULE_0__["isValidMotionProp"])(key); };
/**
 * Emotion and Styled Components both allow users to pass through arbitrary props to their components
 * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which
 * of these should be passed to the underlying DOM node.
 *
 * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props
 * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props
 * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of
 * `@emotion/is-prop-valid`, however to fix this problem we need to use it.
 *
 * By making it an optionalDependency we can offer this functionality only in the situations where it's
 * actually required.
 */
try {
    var emotionIsPropValid_1 = __webpack_require__(/*! @emotion/is-prop-valid */ "../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js").default;
    shouldForward = function (key) {
        // Handle events explicitly as Emotion validates them all as true
        if (key.startsWith("on")) {
            return !Object(_motion_utils_valid_prop_js__WEBPACK_IMPORTED_MODULE_0__["isValidMotionProp"])(key);
        }
        else {
            return emotionIsPropValid_1(key);
        }
    };
}
catch (_a) {
    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.
}
function filterProps(props, isDom, forwardMotionProps) {
    var filteredProps = {};
    for (var key in props) {
        if (shouldForward(key) ||
            (forwardMotionProps === true && Object(_motion_utils_valid_prop_js__WEBPACK_IMPORTED_MODULE_0__["isValidMotionProp"])(key)) ||
            (!isDom && !Object(_motion_utils_valid_prop_js__WEBPACK_IMPORTED_MODULE_0__["isValidMotionProp"])(key))) {
            filteredProps[key] = props[key];
        }
    }
    return filteredProps;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.js":
/*!************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.js ***!
  \************************************************************************************************************************/
/*! exports provided: isCSSVariable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCSSVariable", function() { return isCSSVariable; });
/**
 * Returns true if the provided key is a CSS variable
 */
function isCSSVariable(key) {
    return key.startsWith("--");
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.js":
/*!*************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.js ***!
  \*************************************************************************************************************************/
/*! exports provided: isSVGComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSVGComponent", function() { return isSVGComponent; });
/* harmony import */ var _svg_supported_elements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../svg/supported-elements.js */ "../../node_modules/framer-motion/dist/es/render/svg/supported-elements.js");


function isSVGComponent(Component) {
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    if (typeof Component !== "string")
        return false;
    /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    if (Component.includes("-"))
        return false;
    /**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */
    if (_svg_supported_elements_js__WEBPACK_IMPORTED_MODULE_0__["lowercaseSVGElements"].indexOf(Component) > -1)
        return true;
    /**
     * If it contains a capital letter, it's an SVG component
     */
    if (/[A-Z]/.test(Component))
        return true;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.js":
/*!**************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.js ***!
  \**************************************************************************************************************************/
/*! exports provided: parseDomVariant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseDomVariant", function() { return parseDomVariant; });
/* harmony import */ var _css_variables_conversion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css-variables-conversion.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.js");
/* harmony import */ var _unit_conversion_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./unit-conversion.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.js");



/**
 * Parse a DOM variant to make it animatable. This involves resolving CSS variables
 * and ensuring animations like "20%" => "calc(50vw)" are performed in pixels.
 */
var parseDomVariant = function (visualElement, target, origin, transitionEnd) {
    var resolved = Object(_css_variables_conversion_js__WEBPACK_IMPORTED_MODULE_0__["resolveCSSVariables"])(visualElement, target, transitionEnd);
    target = resolved.target;
    transitionEnd = resolved.transitionEnd;
    return Object(_unit_conversion_js__WEBPACK_IMPORTED_MODULE_1__["unitConversion"])(visualElement, target, origin, transitionEnd);
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.js":
/*!************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.js ***!
  \************************************************************************************************************************/
/*! exports provided: BoundingBoxDimension, unitConversion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BoundingBoxDimension", function() { return BoundingBoxDimension; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unitConversion", function() { return unitConversion; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");
/* harmony import */ var _animation_utils_is_keyframes_target_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../animation/utils/is-keyframes-target.js */ "../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.js");
/* harmony import */ var _value_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./value-types.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/value-types.js");
/* harmony import */ var _html_utils_transform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../html/utils/transform.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/transform.js");







var positionalKeys = new Set([
    "width",
    "height",
    "top",
    "left",
    "right",
    "bottom",
    "x",
    "y",
]);
var isPositionalKey = function (key) { return positionalKeys.has(key); };
var hasPositionalKey = function (target) {
    return Object.keys(target).some(isPositionalKey);
};
var setAndResetVelocity = function (value, to) {
    // Looks odd but setting it twice doesn't render, it'll just
    // set both prev and current to the latest value
    value.set(to, false);
    value.set(to);
};
var isNumOrPxType = function (v) {
    return v === style_value_types__WEBPACK_IMPORTED_MODULE_2__["number"] || v === style_value_types__WEBPACK_IMPORTED_MODULE_2__["px"];
};
var BoundingBoxDimension;
(function (BoundingBoxDimension) {
    BoundingBoxDimension["width"] = "width";
    BoundingBoxDimension["height"] = "height";
    BoundingBoxDimension["left"] = "left";
    BoundingBoxDimension["right"] = "right";
    BoundingBoxDimension["top"] = "top";
    BoundingBoxDimension["bottom"] = "bottom";
})(BoundingBoxDimension || (BoundingBoxDimension = {}));
var getPosFromMatrix = function (matrix, pos) {
    return parseFloat(matrix.split(", ")[pos]);
};
var getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {
    var transform = _a.transform;
    if (transform === "none" || !transform)
        return 0;
    var matrix3d = transform.match(/^matrix3d\((.+)\)$/);
    if (matrix3d) {
        return getPosFromMatrix(matrix3d[1], pos3);
    }
    else {
        var matrix = transform.match(/^matrix\((.+)\)$/);
        if (matrix) {
            return getPosFromMatrix(matrix[1], pos2);
        }
        else {
            return 0;
        }
    }
}; };
var transformKeys = new Set(["x", "y", "z"]);
var nonTranslationalTransformKeys = _html_utils_transform_js__WEBPACK_IMPORTED_MODULE_5__["transformProps"].filter(function (key) { return !transformKeys.has(key); });
function removeNonTranslationalTransform(visualElement) {
    var removedTransforms = [];
    nonTranslationalTransformKeys.forEach(function (key) {
        var value = visualElement.getValue(key);
        if (value !== undefined) {
            removedTransforms.push([key, value.get()]);
            value.set(key.startsWith("scale") ? 1 : 0);
        }
    });
    // Apply changes to element before measurement
    if (removedTransforms.length)
        visualElement.syncRender();
    return removedTransforms;
}
var positionalValues = {
    // Dimensions
    width: function (_a) {
        var x = _a.x;
        return x.max - x.min;
    },
    height: function (_a) {
        var y = _a.y;
        return y.max - y.min;
    },
    top: function (_bbox, _a) {
        var top = _a.top;
        return parseFloat(top);
    },
    left: function (_bbox, _a) {
        var left = _a.left;
        return parseFloat(left);
    },
    bottom: function (_a, _b) {
        var y = _a.y;
        var top = _b.top;
        return parseFloat(top) + (y.max - y.min);
    },
    right: function (_a, _b) {
        var x = _a.x;
        var left = _b.left;
        return parseFloat(left) + (x.max - x.min);
    },
    // Transform
    x: getTranslateFromMatrix(4, 13),
    y: getTranslateFromMatrix(5, 14),
};
var convertChangedValueTypes = function (target, visualElement, changedKeys) {
    var originBbox = visualElement.measureViewportBox();
    var element = visualElement.getInstance();
    var elementComputedStyle = getComputedStyle(element);
    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;
    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };
    // If the element is currently set to display: "none", make it visible before
    // measuring the target bounding box
    if (display === "none") {
        visualElement.setStaticValue("display", target.display || "block");
    }
    // Apply the latest values (as set in checkAndConvertChangedValueTypes)
    visualElement.syncRender();
    var targetBbox = visualElement.measureViewportBox();
    changedKeys.forEach(function (key) {
        // Restore styles to their **calculated computed style**, not their actual
        // originally set style. This allows us to animate between equivalent pixel units.
        var value = visualElement.getValue(key);
        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));
        target[key] = positionalValues[key](targetBbox, elementComputedStyle);
    });
    return target;
};
var checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {
    if (origin === void 0) { origin = {}; }
    if (transitionEnd === void 0) { transitionEnd = {}; }
    target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, target);
    transitionEnd = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, transitionEnd);
    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);
    // We want to remove any transform values that could affect the element's bounding box before
    // it's measured. We'll reapply these later.
    var removedTransformValues = [];
    var hasAttemptedToRemoveTransformValues = false;
    var changedValueTypeKeys = [];
    targetPositionalKeys.forEach(function (key) {
        var value = visualElement.getValue(key);
        if (!visualElement.hasValue(key))
            return;
        var from = origin[key];
        var to = target[key];
        var fromType = Object(_value_types_js__WEBPACK_IMPORTED_MODULE_4__["findDimensionValueType"])(from);
        var toType;
        // TODO: The current implementation of this basically throws an error
        // if you try and do value conversion via keyframes. There's probably
        // a way of doing this but the performance implications would need greater scrutiny,
        // as it'd be doing multiple resize-remeasure operations.
        if (Object(_animation_utils_is_keyframes_target_js__WEBPACK_IMPORTED_MODULE_3__["isKeyframesTarget"])(to)) {
            var numKeyframes = to.length;
            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {
                if (!toType) {
                    toType = Object(_value_types_js__WEBPACK_IMPORTED_MODULE_4__["findDimensionValueType"])(to[i]);
                    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["invariant"])(toType === fromType ||
                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), "Keyframes must be of the same dimension as the current value");
                }
                else {
                    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["invariant"])(Object(_value_types_js__WEBPACK_IMPORTED_MODULE_4__["findDimensionValueType"])(to[i]) === toType, "All keyframes must be of the same type");
                }
            }
        }
        else {
            toType = Object(_value_types_js__WEBPACK_IMPORTED_MODULE_4__["findDimensionValueType"])(to);
        }
        if (fromType !== toType) {
            // If they're both just number or px, convert them both to numbers rather than
            // relying on resize/remeasure to convert (which is wasteful in this situation)
            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
                var current = value.get();
                if (typeof current === "string") {
                    value.set(parseFloat(current));
                }
                if (typeof to === "string") {
                    target[key] = parseFloat(to);
                }
                else if (Array.isArray(to) && toType === style_value_types__WEBPACK_IMPORTED_MODULE_2__["px"]) {
                    target[key] = to.map(parseFloat);
                }
            }
            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) &&
                (from === 0 || to === 0)) {
                // If one or the other value is 0, it's safe to coerce it to the
                // type of the other without measurement
                if (from === 0) {
                    value.set(toType.transform(from));
                }
                else {
                    target[key] = fromType.transform(to);
                }
            }
            else {
                // If we're going to do value conversion via DOM measurements, we first
                // need to remove non-positional transform values that could affect the bbox measurements.
                if (!hasAttemptedToRemoveTransformValues) {
                    removedTransformValues = removeNonTranslationalTransform(visualElement);
                    hasAttemptedToRemoveTransformValues = true;
                }
                changedValueTypeKeys.push(key);
                transitionEnd[key] =
                    transitionEnd[key] !== undefined
                        ? transitionEnd[key]
                        : target[key];
                setAndResetVelocity(value, to);
            }
        }
    });
    if (changedValueTypeKeys.length) {
        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);
        // If we removed transform values, reapply them before the next render
        if (removedTransformValues.length) {
            removedTransformValues.forEach(function (_a) {
                var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a, 2), key = _b[0], value = _b[1];
                visualElement.getValue(key).set(value);
            });
        }
        // Reapply original values
        visualElement.syncRender();
        return { target: convertedTarget, transitionEnd: transitionEnd };
    }
    else {
        return { target: target, transitionEnd: transitionEnd };
    }
};
/**
 * Convert value types for x/y/width/height/top/left/bottom/right
 *
 * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`
 *
 * @internal
 */
function unitConversion(visualElement, target, origin, transitionEnd) {
    return hasPositionalKey(target)
        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)
        : { target: target, transitionEnd: transitionEnd };
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/dom/utils/value-types.js":
/*!********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/dom/utils/value-types.js ***!
  \********************************************************************************************************************/
/*! exports provided: auto, findDimensionValueType, findValueType, getAnimatableNone, getDefaultValueType, getValueAsType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "auto", function() { return auto; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findDimensionValueType", function() { return findDimensionValueType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findValueType", function() { return findValueType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAnimatableNone", function() { return getAnimatableNone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultValueType", function() { return getDefaultValueType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getValueAsType", function() { return getValueAsType; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");



/**
 * ValueType for "auto"
 */
var auto = {
    test: function (v) { return v === "auto"; },
    parse: function (v) { return v; },
};
/**
 * ValueType for ints
 */
var int = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, style_value_types__WEBPACK_IMPORTED_MODULE_1__["number"]), { transform: Math.round });
/**
 * A map of default value types for common values
 */
var defaultValueTypes = {
    // Color props
    color: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    backgroundColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    outlineColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    fill: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    stroke: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    // Border props
    borderColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    borderTopColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    borderRightColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    borderBottomColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    borderLeftColor: style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"],
    borderWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    borderTopWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    borderRightWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    borderBottomWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    borderLeftWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    borderRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    radius: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    borderTopLeftRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    borderTopRightRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    borderBottomRightRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    borderBottomLeftRadius: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    // Positioning props
    width: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    maxWidth: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    height: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    maxHeight: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    size: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    top: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    right: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    bottom: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    left: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    // Spacing props
    padding: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    paddingTop: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    paddingRight: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    paddingBottom: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    paddingLeft: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    margin: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    marginTop: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    marginRight: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    marginBottom: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    marginLeft: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    // Transform props
    rotate: style_value_types__WEBPACK_IMPORTED_MODULE_1__["degrees"],
    rotateX: style_value_types__WEBPACK_IMPORTED_MODULE_1__["degrees"],
    rotateY: style_value_types__WEBPACK_IMPORTED_MODULE_1__["degrees"],
    rotateZ: style_value_types__WEBPACK_IMPORTED_MODULE_1__["degrees"],
    scale: style_value_types__WEBPACK_IMPORTED_MODULE_1__["scale"],
    scaleX: style_value_types__WEBPACK_IMPORTED_MODULE_1__["scale"],
    scaleY: style_value_types__WEBPACK_IMPORTED_MODULE_1__["scale"],
    scaleZ: style_value_types__WEBPACK_IMPORTED_MODULE_1__["scale"],
    skew: style_value_types__WEBPACK_IMPORTED_MODULE_1__["degrees"],
    skewX: style_value_types__WEBPACK_IMPORTED_MODULE_1__["degrees"],
    skewY: style_value_types__WEBPACK_IMPORTED_MODULE_1__["degrees"],
    distance: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    translateX: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    translateY: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    translateZ: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    x: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    y: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    z: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    perspective: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    transformPerspective: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    opacity: style_value_types__WEBPACK_IMPORTED_MODULE_1__["alpha"],
    originX: style_value_types__WEBPACK_IMPORTED_MODULE_1__["progressPercentage"],
    originY: style_value_types__WEBPACK_IMPORTED_MODULE_1__["progressPercentage"],
    originZ: style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"],
    // Misc
    zIndex: int,
    filter: style_value_types__WEBPACK_IMPORTED_MODULE_1__["filter"],
    WebkitFilter: style_value_types__WEBPACK_IMPORTED_MODULE_1__["filter"],
    // SVG
    fillOpacity: style_value_types__WEBPACK_IMPORTED_MODULE_1__["alpha"],
    strokeOpacity: style_value_types__WEBPACK_IMPORTED_MODULE_1__["alpha"],
    numOctaves: int,
};
/**
 * A list of value types commonly used for dimensions
 */
var dimensionValueTypes = [style_value_types__WEBPACK_IMPORTED_MODULE_1__["number"], style_value_types__WEBPACK_IMPORTED_MODULE_1__["px"], style_value_types__WEBPACK_IMPORTED_MODULE_1__["percent"], style_value_types__WEBPACK_IMPORTED_MODULE_1__["degrees"], style_value_types__WEBPACK_IMPORTED_MODULE_1__["vw"], style_value_types__WEBPACK_IMPORTED_MODULE_1__["vh"], auto];
/**
 * Tests a provided value against a ValueType
 */
var testValueType = function (v) { return function (type) { return type.test(v); }; };
/**
 * Tests a dimensional value against the list of dimension ValueTypes
 */
var findDimensionValueType = function (v) {
    return dimensionValueTypes.find(testValueType(v));
};
/**
 * A list of all ValueTypes
 */
var valueTypes = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(dimensionValueTypes, [style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"], style_value_types__WEBPACK_IMPORTED_MODULE_1__["complex"]]);
/**
 * Tests a value against the list of ValueTypes
 */
var findValueType = function (v) { return valueTypes.find(testValueType(v)); };
/**
 * Gets the default ValueType for the provided value key
 */
var getDefaultValueType = function (key) { return defaultValueTypes[key]; };
/**
 * Provided a value and a ValueType, returns the value as that value type.
 */
var getValueAsType = function (value, type) {
    return type && typeof value === "number"
        ? type.transform(value)
        : value;
};
function getAnimatableNone(key, value) {
    var _a;
    var defaultValueType = getDefaultValueType(key);
    if (defaultValueType !== style_value_types__WEBPACK_IMPORTED_MODULE_1__["filter"])
        defaultValueType = style_value_types__WEBPACK_IMPORTED_MODULE_1__["complex"];
    // If value is not recognised as animatable, ie "none", create an animatable version origin based on the target
    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/html/config-motion.js":
/*!*****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/html/config-motion.js ***!
  \*****************************************************************************************************************/
/*! exports provided: htmlMotionConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "htmlMotionConfig", function() { return htmlMotionConfig; });
/* harmony import */ var _utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/create-render-state.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.js");
/* harmony import */ var _utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/scrape-motion-values.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.js");
/* harmony import */ var _visual_element_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./visual-element.js */ "../../node_modules/framer-motion/dist/es/render/html/visual-element.js");
/* harmony import */ var _motion_utils_use_visual_state_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../motion/utils/use-visual-state.js */ "../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.js");





var htmlMotionConfig = {
    createVisualElement: function (isStatic, options) {
        return Object(_visual_element_js__WEBPACK_IMPORTED_MODULE_2__["htmlVisualElement"])(options, { enableHardwareAcceleration: !isStatic });
    },
    useVisualState: Object(_motion_utils_use_visual_state_js__WEBPACK_IMPORTED_MODULE_3__["makeUseVisualState"])({
        scrapeMotionValuesFromProps: _utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_1__["scrapeMotionValuesFromProps"],
        createRenderState: _utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_0__["createHtmlRenderState"],
    }),
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/html/use-props.js":
/*!*************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/html/use-props.js ***!
  \*************************************************************************************************************/
/*! exports provided: copyRawValuesOnly, useHTMLProps, useStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyRawValuesOnly", function() { return copyRawValuesOnly; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useHTMLProps", function() { return useHTMLProps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useStyle", function() { return useStyle; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _motion_utils_is_forced_motion_value_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../motion/utils/is-forced-motion-value.js */ "../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.js");
/* harmony import */ var _value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../value/utils/is-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js");
/* harmony import */ var _utils_build_styles_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/build-styles.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.js");
/* harmony import */ var _utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/create-render-state.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.js");







function copyRawValuesOnly(target, source, props) {
    for (var key in source) {
        if (!Object(_value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_3__["isMotionValue"])(source[key]) && !Object(_motion_utils_is_forced_motion_value_js__WEBPACK_IMPORTED_MODULE_2__["isForcedMotionValue"])(key, props)) {
            target[key] = source[key];
        }
    }
}
function useInitialMotionValues(_a, visualState, isStatic) {
    var transformTemplate = _a.transformTemplate;
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
        var state = Object(_utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_5__["createHtmlRenderState"])();
        Object(_utils_build_styles_js__WEBPACK_IMPORTED_MODULE_4__["buildHTMLStyles"])(state, visualState, undefined, undefined, { enableHardwareAcceleration: !isStatic }, transformTemplate);
        var vars = state.vars, style = state.style;
        return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, vars), style);
    }, [visualState]);
}
function useStyle(props, visualState, isStatic) {
    var styleProp = props.style || {};
    var style = {};
    /**
     * Copy non-Motion Values straight into style
     */
    copyRawValuesOnly(style, styleProp, props);
    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));
    if (props.transformValues) {
        style = props.transformValues(style);
    }
    return style;
}
function useHTMLProps(props, visualState, isStatic) {
    // The `any` isn't ideal but it is the type of createElement props argument
    var htmlProps = {};
    var style = useStyle(props, visualState, isStatic);
    if (Boolean(props.drag)) {
        // Disable the ghost element when a user drags
        htmlProps.draggable = false;
        // Disable text selection
        style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout =
            "none";
        // Disable scrolling on the draggable direction
        style.touchAction =
            props.drag === true
                ? "none"
                : "pan-" + (props.drag === "x" ? "y" : "x");
    }
    htmlProps.style = style;
    return htmlProps;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.js":
/*!**********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/html/utils/build-styles.js ***!
  \**********************************************************************************************************************/
/*! exports provided: buildHTMLStyles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildHTMLStyles", function() { return buildHTMLStyles; });
/* harmony import */ var _dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dom/utils/value-types.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/value-types.js");
/* harmony import */ var _dom_projection_scale_correction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dom/projection/scale-correction.js */ "../../node_modules/framer-motion/dist/es/render/dom/projection/scale-correction.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transform.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/transform.js");
/* harmony import */ var _build_transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./build-transform.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.js");
/* harmony import */ var _dom_utils_is_css_variable_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../dom/utils/is-css-variable.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.js");






function buildHTMLStyles(state, latestValues, projection, layoutState, options, transformTemplate) {
    var _a;
    var style = state.style, vars = state.vars, transform = state.transform, transformKeys = state.transformKeys, transformOrigin = state.transformOrigin;
    // Empty the transformKeys array. As we're throwing out refs to its items
    // this might not be as cheap as suspected. Maybe using the array as a buffer
    // with a manual incrementation would be better.
    transformKeys.length = 0;
    // Track whether we encounter any transform or transformOrigin values.
    var hasTransform = false;
    var hasTransformOrigin = false;
    // Does the calculated transform essentially equal "none"?
    var transformIsNone = true;
    /**
     * Loop over all our latest animated values and decide whether to handle them
     * as a style or CSS variable.
     *
     * Transforms and transform origins are kept seperately for further processing.
     */
    for (var key in latestValues) {
        var value = latestValues[key];
        /**
         * If this is a CSS variable we don't do any further processing.
         */
        if (Object(_dom_utils_is_css_variable_js__WEBPACK_IMPORTED_MODULE_4__["isCSSVariable"])(key)) {
            vars[key] = value;
            continue;
        }
        // Convert the value to its default value type, ie 0 -> "0px"
        var valueType = Object(_dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_0__["getDefaultValueType"])(key);
        var valueAsType = Object(_dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_0__["getValueAsType"])(value, valueType);
        if (Object(_transform_js__WEBPACK_IMPORTED_MODULE_2__["isTransformProp"])(key)) {
            // If this is a transform, flag to enable further transform processing
            hasTransform = true;
            transform[key] = valueAsType;
            transformKeys.push(key);
            // If we already know we have a non-default transform, early return
            if (!transformIsNone)
                continue;
            // Otherwise check to see if this is a default transform
            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))
                transformIsNone = false;
        }
        else if (Object(_transform_js__WEBPACK_IMPORTED_MODULE_2__["isTransformOriginProp"])(key)) {
            transformOrigin[key] = valueAsType;
            // If this is a transform origin, flag and enable further transform-origin processing
            hasTransformOrigin = true;
        }
        else {
            /**
             * If layout projection is on, and we need to perform scale correction for this
             * value type, perform it.
             */
            if (layoutState &&
                projection &&
                layoutState.isHydrated &&
                _dom_projection_scale_correction_js__WEBPACK_IMPORTED_MODULE_1__["valueScaleCorrection"][key]) {
                var correctedValue = _dom_projection_scale_correction_js__WEBPACK_IMPORTED_MODULE_1__["valueScaleCorrection"][key].process(value, layoutState, projection);
                /**
                 * Scale-correctable values can define a number of other values to break
                 * down into. For instance borderRadius needs applying to borderBottomLeftRadius etc
                 */
                var applyTo = _dom_projection_scale_correction_js__WEBPACK_IMPORTED_MODULE_1__["valueScaleCorrection"][key].applyTo;
                if (applyTo) {
                    var num = applyTo.length;
                    for (var i = 0; i < num; i++) {
                        style[applyTo[i]] = correctedValue;
                    }
                }
                else {
                    style[key] = correctedValue;
                }
            }
            else {
                style[key] = valueAsType;
            }
        }
    }
    if (layoutState &&
        projection &&
        projection.isEnabled &&
        layoutState.isHydrated) {
        style.transform = Object(_build_transform_js__WEBPACK_IMPORTED_MODULE_3__["buildLayoutProjectionTransform"])(layoutState.deltaFinal, layoutState.treeScale, hasTransform ? transform : undefined);
        if (transformTemplate) {
            style.transform = transformTemplate(transform, style.transform);
        }
        style.transformOrigin = Object(_build_transform_js__WEBPACK_IMPORTED_MODULE_3__["buildLayoutProjectionTransformOrigin"])(layoutState);
    }
    else {
        if (hasTransform) {
            style.transform = Object(_build_transform_js__WEBPACK_IMPORTED_MODULE_3__["buildTransform"])(state, options, transformIsNone, transformTemplate);
        }
        if (hasTransformOrigin) {
            style.transformOrigin = Object(_build_transform_js__WEBPACK_IMPORTED_MODULE_3__["buildTransformOrigin"])(transformOrigin);
        }
    }
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.js":
/*!*************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/html/utils/build-transform.js ***!
  \*************************************************************************************************************************/
/*! exports provided: buildLayoutProjectionTransform, buildLayoutProjectionTransformOrigin, buildTransform, buildTransformOrigin, identityProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildLayoutProjectionTransform", function() { return buildLayoutProjectionTransform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildLayoutProjectionTransformOrigin", function() { return buildLayoutProjectionTransformOrigin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildTransform", function() { return buildTransform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildTransformOrigin", function() { return buildTransformOrigin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identityProjection", function() { return identityProjection; });
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/transform.js");
/* harmony import */ var _utils_state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/state.js */ "../../node_modules/framer-motion/dist/es/render/utils/state.js");



var translateAlias = {
    x: "translateX",
    y: "translateY",
    z: "translateZ",
    transformPerspective: "perspective",
};
/**
 * Build a CSS transform style from individual x/y/scale etc properties.
 *
 * This outputs with a default order of transforms/scales/rotations, this can be customised by
 * providing a transformTemplate function.
 */
function buildTransform(_a, _b, transformIsDefault, transformTemplate) {
    var transform = _a.transform, transformKeys = _a.transformKeys;
    var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;
    // The transform string we're going to build into.
    var transformString = "";
    // Transform keys into their default order - this will determine the output order.
    transformKeys.sort(_transform_js__WEBPACK_IMPORTED_MODULE_0__["sortTransformProps"]);
    // Track whether the defined transform has a defined z so we don't add a
    // second to enable hardware acceleration
    var transformHasZ = false;
    // Loop over each transform and build them into transformString
    var numTransformKeys = transformKeys.length;
    for (var i = 0; i < numTransformKeys; i++) {
        var key = transformKeys[i];
        transformString += (translateAlias[key] || key) + "(" + transform[key] + ") ";
        if (key === "z")
            transformHasZ = true;
    }
    if (!transformHasZ && enableHardwareAcceleration) {
        transformString += "translateZ(0)";
    }
    else {
        transformString = transformString.trim();
    }
    // If we have a custom `transform` template, pass our transform values and
    // generated transformString to that before returning
    if (transformTemplate) {
        transformString = transformTemplate(transform, transformIsDefault ? "" : transformString);
    }
    else if (allowTransformNone && transformIsDefault) {
        transformString = "none";
    }
    return transformString;
}
/**
 * Build a transformOrigin style. Uses the same defaults as the browser for
 * undefined origins.
 */
function buildTransformOrigin(_a) {
    var _b = _a.originX, originX = _b === void 0 ? "50%" : _b, _c = _a.originY, originY = _c === void 0 ? "50%" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;
    return originX + " " + originY + " " + originZ;
}
/**
 * Build a transform style that takes a calculated delta between the element's current
 * space on screen and projects it into the desired space.
 */
function buildLayoutProjectionTransform(_a, treeScale, latestTransform) {
    var x = _a.x, y = _a.y;
    /**
     * The translations we use to calculate are always relative to the viewport coordinate space.
     * But when we apply scales, we also scale the coordinate space of an element and its children.
     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need
     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.
     */
    var xTranslate = x.translate / treeScale.x;
    var yTranslate = y.translate / treeScale.y;
    var transform = "translate3d(" + xTranslate + "px, " + yTranslate + "px, 0) ";
    if (latestTransform) {
        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;
        if (rotate)
            transform += "rotate(" + rotate + ") ";
        if (rotateX)
            transform += "rotateX(" + rotateX + ") ";
        if (rotateY)
            transform += "rotateY(" + rotateY + ") ";
    }
    transform += "scale(" + x.scale + ", " + y.scale + ")";
    return !latestTransform && transform === identityProjection ? "" : transform;
}
/**
 * Take the calculated delta origin and apply it as a transform string.
 */
function buildLayoutProjectionTransformOrigin(_a) {
    var deltaFinal = _a.deltaFinal;
    return deltaFinal.x.origin * 100 + "% " + deltaFinal.y.origin * 100 + "% 0";
}
var identityProjection = buildLayoutProjectionTransform(_utils_state_js__WEBPACK_IMPORTED_MODULE_1__["zeroLayout"].delta, _utils_state_js__WEBPACK_IMPORTED_MODULE_1__["zeroLayout"].treeScale, { x: 1, y: 1 });




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.js":
/*!*****************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.js ***!
  \*****************************************************************************************************************************/
/*! exports provided: createHtmlRenderState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createHtmlRenderState", function() { return createHtmlRenderState; });
var createHtmlRenderState = function () { return ({
    style: {},
    transform: {},
    transformKeys: [],
    transformOrigin: {},
    vars: {},
}); };




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.js":
/*!******************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.js ***!
  \******************************************************************************************************************************/
/*! exports provided: scrapeMotionValuesFromProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scrapeMotionValuesFromProps", function() { return scrapeMotionValuesFromProps; });
/* harmony import */ var _motion_utils_is_forced_motion_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../motion/utils/is-forced-motion-value.js */ "../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.js");
/* harmony import */ var _value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../value/utils/is-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js");



function scrapeMotionValuesFromProps(props) {
    var style = props.style;
    var newValues = {};
    for (var key in style) {
        if (Object(_value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_1__["isMotionValue"])(style[key]) || Object(_motion_utils_is_forced_motion_value_js__WEBPACK_IMPORTED_MODULE_0__["isForcedMotionValue"])(key, props)) {
            newValues[key] = style[key];
        }
    }
    return newValues;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/html/utils/transform.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/html/utils/transform.js ***!
  \*******************************************************************************************************************/
/*! exports provided: isTransformOriginProp, isTransformProp, sortTransformProps, transformAxes, transformProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTransformOriginProp", function() { return isTransformOriginProp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isTransformProp", function() { return isTransformProp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortTransformProps", function() { return sortTransformProps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformAxes", function() { return transformAxes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformProps", function() { return transformProps; });
/**
 * A list of all transformable axes. We'll use this list to generated a version
 * of each axes for each transform.
 */
var transformAxes = ["", "X", "Y", "Z"];
/**
 * An ordered array of each transformable value. By default, transform values
 * will be sorted to this order.
 */
var order = ["translate", "scale", "rotate", "skew"];
/**
 * Generate a list of every possible transform key.
 */
var transformProps = ["transformPerspective", "x", "y", "z"];
order.forEach(function (operationKey) {
    return transformAxes.forEach(function (axesKey) {
        return transformProps.push(operationKey + axesKey);
    });
});
/**
 * A function to use with Array.sort to sort transform keys by their default order.
 */
function sortTransformProps(a, b) {
    return transformProps.indexOf(a) - transformProps.indexOf(b);
}
/**
 * A quick lookup for transform props.
 */
var transformPropSet = new Set(transformProps);
function isTransformProp(key) {
    return transformPropSet.has(key);
}
/**
 * A quick lookup for transform origin props
 */
var transformOriginProps = new Set(["originX", "originY", "originZ"]);
function isTransformOriginProp(key) {
    return transformOriginProps.has(key);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/html/visual-element.js":
/*!******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/html/visual-element.js ***!
  \******************************************************************************************************************/
/*! exports provided: getComputedStyle, htmlConfig, htmlVisualElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getComputedStyle", function() { return getComputedStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "htmlConfig", function() { return htmlConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "htmlVisualElement", function() { return htmlVisualElement; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _dom_projection_measure_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/projection/measure.js */ "../../node_modules/framer-motion/dist/es/render/dom/projection/measure.js");
/* harmony import */ var _dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom/utils/value-types.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/value-types.js");
/* harmony import */ var _utils_setters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/setters.js */ "../../node_modules/framer-motion/dist/es/render/utils/setters.js");
/* harmony import */ var _utils_transform_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/transform.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/transform.js");
/* harmony import */ var _dom_utils_is_css_variable_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom/utils/is-css-variable.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.js");
/* harmony import */ var _utils_build_styles_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/build-styles.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../index.js */ "../../node_modules/framer-motion/dist/es/render/index.js");
/* harmony import */ var _utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/scrape-motion-values.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.js");
/* harmony import */ var _dom_utils_parse_dom_variant_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../dom/utils/parse-dom-variant.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.js");











function getComputedStyle(element) {
    return window.getComputedStyle(element);
}
var htmlConfig = {
    treeType: "dom",
    readValueFromInstance: function (domElement, key) {
        if (Object(_utils_transform_js__WEBPACK_IMPORTED_MODULE_4__["isTransformProp"])(key)) {
            var defaultType = Object(_dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_2__["getDefaultValueType"])(key);
            return defaultType ? defaultType.default || 0 : 0;
        }
        else {
            var computedStyle = getComputedStyle(domElement);
            return ((Object(_dom_utils_is_css_variable_js__WEBPACK_IMPORTED_MODULE_5__["isCSSVariable"])(key)
                ? computedStyle.getPropertyValue(key)
                : computedStyle[key]) || 0);
        }
    },
    sortNodePosition: function (a, b) {
        /**
         * compareDocumentPosition returns a bitmask, by using the bitwise &
         * we're returning true if 2 in that bitmask is set to true. 2 is set
         * to true if b preceeds a.
         */
        return a.compareDocumentPosition(b) & 2 ? 1 : -1;
    },
    getBaseTarget: function (props, key) {
        var _a;
        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];
    },
    measureViewportBox: function (element, _a) {
        var transformPagePoint = _a.transformPagePoint;
        return Object(_dom_projection_measure_js__WEBPACK_IMPORTED_MODULE_1__["getBoundingBox"])(element, transformPagePoint);
    },
    /**
     * Reset the transform on the current Element. This is called as part
     * of a batched process across the entire layout tree. To remove this write
     * cycle it'd be interesting to see if it's possible to "undo" all the current
     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms
     * works
     */
    resetTransform: function (element, domElement, props) {
        /**
         * When we reset the transform of an element, there's a fair possibility that
         * the element will visually move from underneath the pointer, triggering attached
         * pointerenter/leave events. We temporarily suspend these while measurement takes place.
         */
        element.suspendHoverEvents();
        var transformTemplate = props.transformTemplate;
        domElement.style.transform = transformTemplate
            ? transformTemplate({}, "")
            : "none";
        // Ensure that whatever happens next, we restore our transform on the next frame
        element.scheduleRender();
    },
    restoreTransform: function (instance, mutableState) {
        instance.style.transform = mutableState.style.transform;
    },
    removeValueFromRenderState: function (key, _a) {
        var vars = _a.vars, style = _a.style;
        delete vars[key];
        delete style[key];
    },
    /**
     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`
     * can be animated by Motion.
     */
    makeTargetAnimatable: function (element, _a, _b, isMounted) {
        var transformValues = _b.transformValues;
        if (isMounted === void 0) { isMounted = true; }
        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["transition", "transitionEnd"]);
        var origin = Object(_utils_setters_js__WEBPACK_IMPORTED_MODULE_3__["getOrigin"])(target, transition || {}, element);
        /**
         * If Framer has provided a function to convert `Color` etc value types, convert them
         */
        if (transformValues) {
            if (transitionEnd)
                transitionEnd = transformValues(transitionEnd);
            if (target)
                target = transformValues(target);
            if (origin)
                origin = transformValues(origin);
        }
        if (isMounted) {
            Object(_utils_setters_js__WEBPACK_IMPORTED_MODULE_3__["checkTargetForNewValues"])(element, target, origin);
            var parsed = Object(_dom_utils_parse_dom_variant_js__WEBPACK_IMPORTED_MODULE_9__["parseDomVariant"])(element, target, origin, transitionEnd);
            transitionEnd = parsed.transitionEnd;
            target = parsed.target;
        }
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ transition: transition,
            transitionEnd: transitionEnd }, target);
    },
    scrapeMotionValuesFromProps: _utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_8__["scrapeMotionValuesFromProps"],
    build: function (element, renderState, latestValues, projection, layoutState, options, props) {
        if (element.isVisible !== undefined) {
            renderState.style.visibility = element.isVisible
                ? "visible"
                : "hidden";
        }
        Object(_utils_build_styles_js__WEBPACK_IMPORTED_MODULE_6__["buildHTMLStyles"])(renderState, latestValues, projection, layoutState, options, props.transformTemplate);
    },
    render: function (element, _a) {
        var style = _a.style, vars = _a.vars;
        // Directly assign style into the Element's style prop. In tests Object.assign is the
        // fastest way to assign styles.
        Object.assign(element.style, style);
        // Loop over any CSS variables and assign those.
        for (var key in vars) {
            element.style.setProperty(key, vars[key]);
        }
    },
};
var htmlVisualElement = Object(_index_js__WEBPACK_IMPORTED_MODULE_7__["visualElement"])(htmlConfig);




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/index.js":
/*!****************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/index.js ***!
  \****************************************************************************************************/
/*! exports provided: visualElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visualElement", function() { return visualElement; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _components_AnimateSharedLayout_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/AnimateSharedLayout/types.js */ "../../node_modules/framer-motion/dist/es/components/AnimateSharedLayout/types.js");
/* harmony import */ var _utils_variants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/variants.js */ "../../node_modules/framer-motion/dist/es/render/utils/variants.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framesync */ "../../node_modules/framesync/dist/es/index.js");
/* harmony import */ var _utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/geometry/index.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/index.js");
/* harmony import */ var _utils_each_axis_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/each-axis.js */ "../../node_modules/framer-motion/dist/es/utils/each-axis.js");
/* harmony import */ var _utils_geometry_delta_calc_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/geometry/delta-calc.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/delta-calc.js");
/* harmony import */ var _value_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../value/index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");
/* harmony import */ var _utils_animation_state_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/animation-state.js */ "../../node_modules/framer-motion/dist/es/render/utils/animation-state.js");
/* harmony import */ var _value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../value/utils/is-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js");
/* harmony import */ var _utils_state_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/state.js */ "../../node_modules/framer-motion/dist/es/render/utils/state.js");
/* harmony import */ var _html_utils_build_transform_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./html/utils/build-transform.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.js");
/* harmony import */ var _utils_geometry_delta_apply_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/geometry/delta-apply.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/delta-apply.js");
/* harmony import */ var _utils_lifecycles_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/lifecycles.js */ "../../node_modules/framer-motion/dist/es/render/utils/lifecycles.js");
/* harmony import */ var _utils_motion_values_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/motion-values.js */ "../../node_modules/framer-motion/dist/es/render/utils/motion-values.js");
/* harmony import */ var _utils_projection_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/projection.js */ "../../node_modules/framer-motion/dist/es/render/utils/projection.js");


















var visualElement = function (_a) {
    var _b = _a.treeType, treeType = _b === void 0 ? "" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, resetTransform = _a.resetTransform, restoreTransform = _a.restoreTransform, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;
    return function (_a, options) {
        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState;
        if (options === void 0) { options = {}; }
        var latestValues = visualState.latestValues, renderState = visualState.renderState;
        /**
         * The instance of the render-specific node that will be hydrated by the
         * exposed React ref. So for example, this visual element can host a
         * HTMLElement, plain object, or Three.js object. The functions provided
         * in VisualElementConfig allow us to interface with this instance.
         */
        var instance;
        /**
         * A set of all children of this visual element. We use this to traverse
         * the tree when updating layout projections.
         */
        var children = new Set();
        /**
         * Manages the subscriptions for a visual element's lifecycle, for instance
         * onRender and onViewportBoxUpdate.
         */
        var lifecycles = Object(_utils_lifecycles_js__WEBPACK_IMPORTED_MODULE_14__["createLifecycles"])();
        /**
         *
         */
        var projection = Object(_utils_state_js__WEBPACK_IMPORTED_MODULE_11__["createProjectionState"])();
        /**
         * This is a reference to the visual state of the "lead" visual element.
         * Usually, this will be this visual element. But if it shares a layoutId
         * with other visual elements, only one of them will be designated lead by
         * AnimateSharedLayout. All the other visual elements will take on the visual
         * appearance of the lead while they crossfade to it.
         */
        var leadProjection = projection;
        var leadLatestValues = latestValues;
        var unsubscribeFromLeadVisualElement;
        /**
         * The latest layout measurements and calculated projections. This
         * is seperate from the target projection data in visualState as
         * many visual elements might point to the same piece of visualState as
         * a target, whereas they might each have different layouts and thus
         * projection calculations needed to project into the same viewport box.
         */
        var layoutState = Object(_utils_state_js__WEBPACK_IMPORTED_MODULE_11__["createLayoutState"])();
        /**
         *
         */
        var crossfader;
        /**
         * Keep track of whether the viewport box has been updated since the
         * last time the layout projection was re-calculated.
         */
        var hasViewportBoxUpdated = false;
        /**
         * A map of all motion values attached to this visual element. Motion
         * values are source of truth for any given animated value. A motion
         * value might be provided externally by the component via props.
         */
        var values = new Map();
        /**
         * A map of every subscription that binds the provided or generated
         * motion values onChange listeners to this visual element.
         */
        var valueSubscriptions = new Map();
        /**
         * A reference to the previously-provided motion values as returned
         * from scrapeMotionValuesFromProps. We use the keys in here to determine
         * if any motion values need to be removed after props are updated.
         */
        var prevMotionValues = {};
        /**
         * x/y motion values that track the progress of initiated layout
         * animations.
         *
         * TODO: Target for removal
         */
        var projectionTargetProgress;
        /**
         * When values are removed from all animation props we need to search
         * for a fallback value to animate to. These values are tracked in baseTarget.
         */
        var baseTarget = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, latestValues);
        // Internal methods ========================
        /**
         * On mount, this will be hydrated with a callback to disconnect
         * this visual element from its parent on unmount.
         */
        var removeFromMotionTree;
        var removeFromVariantTree;
        /**
         *
         */
        function isProjecting() {
            return projection.isEnabled && layoutState.isHydrated;
        }
        /**
         *
         */
        function render() {
            if (!instance)
                return;
            if (isProjecting()) {
                /**
                 * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.
                 * This is the final box that we will then project into by calculating a transform delta and
                 * applying it to the corrected box.
                 */
                Object(_utils_geometry_delta_apply_js__WEBPACK_IMPORTED_MODULE_13__["applyBoxTransforms"])(leadProjection.targetFinal, leadProjection.target, leadLatestValues);
                /**
                 * Update the delta between the corrected box and the final target box, after
                 * user-set transforms are applied to it. This will be used by the renderer to
                 * create a transform style that will reproject the element from its actual layout
                 * into the desired bounding box.
                 */
                Object(_utils_geometry_delta_calc_js__WEBPACK_IMPORTED_MODULE_7__["updateBoxDelta"])(layoutState.deltaFinal, layoutState.layoutCorrected, leadProjection.targetFinal, latestValues);
            }
            triggerBuild();
            renderInstance(instance, renderState);
        }
        function triggerBuild() {
            var valuesToRender = latestValues;
            if (crossfader && crossfader.isActive()) {
                var crossfadedValues = crossfader.getCrossfadeState(element);
                if (crossfadedValues)
                    valuesToRender = crossfadedValues;
            }
            build(element, renderState, valuesToRender, leadProjection, layoutState, options, props);
        }
        function update() {
            lifecycles.notifyUpdate(latestValues);
        }
        function updateLayoutProjection() {
            var delta = layoutState.delta, treeScale = layoutState.treeScale;
            var prevTreeScaleX = treeScale.x;
            var prevTreeScaleY = treeScale.x;
            var prevDeltaTransform = layoutState.deltaTransform;
            Object(_utils_projection_js__WEBPACK_IMPORTED_MODULE_16__["updateLayoutDeltas"])(layoutState, leadProjection, element.path, latestValues);
            hasViewportBoxUpdated &&
                element.notifyViewportBoxUpdate(leadProjection.target, delta);
            hasViewportBoxUpdated = false;
            var deltaTransform = Object(_html_utils_build_transform_js__WEBPACK_IMPORTED_MODULE_12__["buildLayoutProjectionTransform"])(delta, treeScale);
            if (deltaTransform !== prevDeltaTransform ||
                // Also compare calculated treeScale, for values that rely on this only for scale correction
                prevTreeScaleX !== treeScale.x ||
                prevTreeScaleY !== treeScale.y) {
                element.scheduleRender();
            }
            layoutState.deltaTransform = deltaTransform;
        }
        /**
         *
         */
        function bindToMotionValue(key, value) {
            var removeOnChange = value.onChange(function (latestValue) {
                latestValues[key] = latestValue;
                props.onUpdate && framesync__WEBPACK_IMPORTED_MODULE_4__["default"].update(update, false, true);
            });
            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);
            valueSubscriptions.set(key, function () {
                removeOnChange();
                removeOnRenderRequest();
            });
        }
        /**
         * Any motion values that are provided to the element when created
         * aren't yet bound to the element, as this would technically be impure.
         * However, we iterate through the motion values and set them to the
         * initial values for this component.
         *
         * TODO: This is impure and we should look at changing this to run on mount.
         * Doing so will break some tests but this isn't neccessarily a breaking change,
         * more a reflection of the test.
         */
        var initialMotionValues = scrapeMotionValuesFromProps(props);
        for (var key in initialMotionValues) {
            var value = initialMotionValues[key];
            if (latestValues[key] !== undefined && Object(_value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_10__["isMotionValue"])(value)) {
                value.set(latestValues[key], false);
            }
        }
        /**
         * Determine what role this visual element should take in the variant tree.
         */
        var isControllingVariants = Object(_utils_variants_js__WEBPACK_IMPORTED_MODULE_2__["checkIfControllingVariants"])(props);
        var definesInitialVariant = Object(_utils_variants_js__WEBPACK_IMPORTED_MODULE_2__["isVariantLabel"])(props.initial);
        var isVariantNode = Boolean(definesInitialVariant || isControllingVariants || props.variants);
        var element = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ treeType: treeType, 
            /**
             * This is a mirror of the internal instance prop, which keeps
             * VisualElement type-compatible with React's RefObject.
             */
            current: null, 
            /**
             * The depth of this visual element within the visual element tree.
             */
            depth: parent ? parent.depth + 1 : 0, 
            /**
             * An ancestor path back to the root visual element. This is used
             * by layout projection to quickly recurse back up the tree.
             */
            path: parent ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(parent.path, [parent]) : [], 
            /**
             *
             */
            presenceId: presenceId,
            projection: projection, 
            /**
             * If this component is part of the variant tree, it should track
             * any children that are also part of the tree. This is essentially
             * a shadow tree to simplify logic around how to stagger over children.
             */
            variantChildren: isVariantNode ? new Set() : undefined, 
            /**
             * Whether this instance is visible. This can be changed imperatively
             * by AnimateSharedLayout, is analogous to CSS's visibility in that
             * hidden elements should take up layout, and needs enacting by the configured
             * render function.
             */
            isVisible: undefined, 
            /**
             * Normally, if a component is controlled by a parent's variants, it can
             * rely on that ancestor to trigger animations further down the tree.
             * However, if a component is created after its parent is mounted, the parent
             * won't trigger that mount animation so the child needs to.
             *
             * TODO: This might be better replaced with a method isParentMounted
             */
            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), 
            /**
             * This can be set by AnimatePresence to force components that mount
             * at the same time as it to mount as if they have initial={false} set.
             */
            blockInitialAnimation: blockInitialAnimation, 
            /**
             * A boolean that can be used to determine whether to respect hover events.
             * For layout measurements we often have to reposition the instance by
             * removing its transform. This can trigger hover events, which is
             * undesired.
             */
            isHoverEventsEnabled: true, 
            /**
             * Determine whether this component has mounted yet. This is mostly used
             * by variant children to determine whether they need to trigger their
             * own animations on mount.
             */
            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {
                instance = element.current = newInstance;
                element.pointTo(element);
                removeFromMotionTree = parent === null || parent === void 0 ? void 0 : parent.addChild(element);
                if (isVariantNode && parent && !isControllingVariants) {
                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);
                }
            },
            /**
             *
             */
            unmount: function () {
                framesync__WEBPACK_IMPORTED_MODULE_4__["cancelSync"].update(update);
                framesync__WEBPACK_IMPORTED_MODULE_4__["cancelSync"].render(render);
                framesync__WEBPACK_IMPORTED_MODULE_4__["cancelSync"].preRender(element.updateLayoutProjection);
                valueSubscriptions.forEach(function (remove) { return remove(); });
                element.stopLayoutAnimation();
                removeFromMotionTree === null || removeFromMotionTree === void 0 ? void 0 : removeFromMotionTree();
                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();
                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();
                lifecycles.clearAllListeners();
            },
            /**
             * Add a child visual element to our set of children.
             */
            addChild: function (child) {
                children.add(child);
                return function () { return children.delete(child); };
            },
            /**
             * Add a child visual element to our set of children.
             */
            addVariantChild: function (child) {
                var _a;
                var closestVariantNode = element.getClosestVariantNode();
                if (closestVariantNode) {
                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);
                    return function () { return closestVariantNode.variantChildren.delete(child); };
                }
            },
            sortNodePosition: function (other) {
                /**
                 * If these nodes aren't even of the same type we can't compare their depth.
                 */
                if (!sortNodePosition || treeType !== other.treeType)
                    return 0;
                return sortNodePosition(element.getInstance(), other.getInstance());
            }, 
            /**
             * Returns the closest variant node in the tree starting from
             * this visual element.
             */
            getClosestVariantNode: function () {
                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();
            }, 
            /**
             * A method that schedules an update to layout projections throughout
             * the tree. We inherit from the parent so there's only ever one
             * job scheduled on the next frame - that of the root visual element.
             */
            scheduleUpdateLayoutProjection: parent
                ? parent.scheduleUpdateLayoutProjection
                : function () { return framesync__WEBPACK_IMPORTED_MODULE_4__["default"].preRender(element.updateLayoutProjection, false, true); }, 
            /**
             * Expose the latest layoutId prop.
             */
            getLayoutId: function () { return props.layoutId; }, 
            /**
             * Returns the current instance.
             */
            getInstance: function () { return instance; }, 
            /**
             * Get/set the latest static values.
             */
            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, 
            /**
             * Returns the latest motion value state. Currently only used to take
             * a snapshot of the visual element - perhaps this can return the whole
             * visual state
             */
            getLatestValues: function () { return latestValues; }, 
            /**
             * Set the visiblity of the visual element. If it's changed, schedule
             * a render to reflect these changes.
             */
            setVisibility: function (visibility) {
                if (element.isVisible === visibility)
                    return;
                element.isVisible = visibility;
                element.scheduleRender();
            },
            /**
             * Make a target animatable by Popmotion. For instance, if we're
             * trying to animate width from 100px to 100vw we need to measure 100vw
             * in pixels to determine what we really need to animate to. This is also
             * pluggable to support Framer's custom value types like Color,
             * and CSS variables.
             */
            makeTargetAnimatable: function (target, canMutate) {
                if (canMutate === void 0) { canMutate = true; }
                return makeTargetAnimatable(element, target, props, canMutate);
            },
            /**
             * Temporarily suspend hover events while we remove transforms in order to measure the layout.
             *
             * This seems like an odd bit of scheduling but what we're doing is saying after
             * the next render, wait 10 milliseconds before reenabling hover events. Waiting until
             * the next frame results in missed, valid hover events. But triggering on the postRender
             * frame is too soon to avoid triggering events with layout measurements.
             *
             * Note: If we figure out a way of measuring layout while transforms remain applied, this can be removed.
             */
            suspendHoverEvents: function () {
                element.isHoverEventsEnabled = false;
                framesync__WEBPACK_IMPORTED_MODULE_4__["default"].postRender(function () {
                    return setTimeout(function () { return (element.isHoverEventsEnabled = true); }, 10);
                });
            },
            // Motion values ========================
            /**
             * Add a motion value and bind it to this visual element.
             */
            addValue: function (key, value) {
                // Remove existing value if it exists
                if (element.hasValue(key))
                    element.removeValue(key);
                values.set(key, value);
                latestValues[key] = value.get();
                bindToMotionValue(key, value);
            },
            /**
             * Remove a motion value and unbind any active subscriptions.
             */
            removeValue: function (key) {
                var _a;
                values.delete(key);
                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();
                valueSubscriptions.delete(key);
                delete latestValues[key];
                removeValueFromRenderState(key, renderState);
            }, 
            /**
             * Check whether we have a motion value for this key
             */
            hasValue: function (key) { return values.has(key); }, 
            /**
             * Get a motion value for this key. If called with a default
             * value, we'll create one if none exists.
             */
            getValue: function (key, defaultValue) {
                var value = values.get(key);
                if (value === undefined && defaultValue !== undefined) {
                    value = Object(_value_index_js__WEBPACK_IMPORTED_MODULE_8__["motionValue"])(defaultValue);
                    element.addValue(key, value);
                }
                return value;
            }, 
            /**
             * Iterate over our motion values.
             */
            forEachValue: function (callback) { return values.forEach(callback); }, 
            /**
             * If we're trying to animate to a previously unencountered value,
             * we need to check for it in our state and as a last resort read it
             * directly from the instance (which might have performance implications).
             */
            readValue: function (key) { var _a; return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options); }, 
            /**
             * Set the base target to later animate back to. This is currently
             * only hydrated on creation and when we first read a value.
             */
            setBaseTarget: function (key, value) {
                baseTarget[key] = value;
            },
            /**
             * Find the base target for a value thats been removed from all animation
             * props.
             */
            getBaseTarget: function (key) {
                if (getBaseTarget) {
                    var target = getBaseTarget(props, key);
                    if (target !== undefined && !Object(_value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_10__["isMotionValue"])(target))
                        return target;
                }
                return baseTarget[key];
            } }, lifecycles), { 
            /**
             * Build the renderer state based on the latest visual state.
             */
            build: function () {
                triggerBuild();
                return renderState;
            },
            /**
             * Schedule a render on the next animation frame.
             */
            scheduleRender: function () {
                framesync__WEBPACK_IMPORTED_MODULE_4__["default"].render(render, false, true);
            }, 
            /**
             * Synchronously fire render. It's prefered that we batch renders but
             * in many circumstances, like layout measurement, we need to run this
             * synchronously. However in those instances other measures should be taken
             * to batch reads/writes.
             */
            syncRender: render, 
            /**
             * Update the provided props. Ensure any newly-added motion values are
             * added to our map, old ones removed, and listeners updated.
             */
            setProps: function (newProps) {
                props = newProps;
                lifecycles.updatePropListeners(newProps);
                prevMotionValues = Object(_utils_motion_values_js__WEBPACK_IMPORTED_MODULE_15__["updateMotionValuesFromProps"])(element, scrapeMotionValuesFromProps(props), prevMotionValues);
            }, getProps: function () { return props; }, 
            // Variants ==============================
            /**
             * Returns the variant definition with a given name.
             */
            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, 
            /**
             * Returns the defined default transition on this component.
             */
            getDefaultTransition: function () { return props.transition; }, 
            /**
             * Used by child variant nodes to get the closest ancestor variant props.
             */
            getVariantContext: function (startAtParent) {
                if (startAtParent === void 0) { startAtParent = false; }
                if (startAtParent)
                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();
                if (!isControllingVariants) {
                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};
                    if (props.initial !== undefined) {
                        context_1.initial = props.initial;
                    }
                    return context_1;
                }
                var context = {};
                for (var i = 0; i < numVariantProps; i++) {
                    var name_1 = variantProps[i];
                    var prop = props[name_1];
                    if (Object(_utils_variants_js__WEBPACK_IMPORTED_MODULE_2__["isVariantLabel"])(prop) || prop === false) {
                        context[name_1] = prop;
                    }
                }
                return context;
            },
            // Layout projection ==============================
            /**
             * Enable layout projection for this visual element. Won't actually
             * occur until we also have hydrated layout measurements.
             */
            enableLayoutProjection: function () {
                projection.isEnabled = true;
            },
            /**
             * Lock the projection target, for instance when dragging, so
             * nothing else can try and animate it.
             */
            lockProjectionTarget: function () {
                projection.isTargetLocked = true;
            },
            unlockProjectionTarget: function () {
                element.stopLayoutAnimation();
                projection.isTargetLocked = false;
            },
            /**
             * Record the viewport box as it was before an expected mutation/re-render
             */
            snapshotViewportBox: function () {
                // TODO: Store this snapshot in LayoutState
                element.prevViewportBox = element.measureViewportBox(false);
                /**
                 * Update targetBox to match the prevViewportBox. This is just to ensure
                 * that targetBox is affected by scroll in the same way as the measured box
                 */
                element.rebaseProjectionTarget(false, element.prevViewportBox);
            }, getLayoutState: function () { return layoutState; }, setCrossfader: function (newCrossfader) {
                crossfader = newCrossfader;
            },
            /**
             * Start a layout animation on a given axis.
             * TODO: This could be better.
             */
            startLayoutAnimation: function (axis, transition) {
                var progress = element.getProjectionAnimationProgress()[axis];
                var _a = projection.target[axis], min = _a.min, max = _a.max;
                var length = max - min;
                progress.clearListeners();
                progress.set(min);
                progress.set(min); // Set twice to hard-reset velocity
                progress.onChange(function (v) {
                    return element.setProjectionTargetAxis(axis, v, v + length);
                });
                return element.animateMotionValue(axis, progress, 0, transition);
            },
            /**
             * Stop layout animations.
             */
            stopLayoutAnimation: function () {
                Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_6__["eachAxis"])(function (axis) {
                    return element.getProjectionAnimationProgress()[axis].stop();
                });
            },
            /**
             * Measure the current viewport box with or without transforms.
             * Only measures axis-aligned boxes, rotate and skew must be manually
             * removed with a re-render to work.
             */
            measureViewportBox: function (withTransform) {
                if (withTransform === void 0) { withTransform = true; }
                var viewportBox = measureViewportBox(instance, options);
                if (!withTransform)
                    Object(_utils_geometry_delta_apply_js__WEBPACK_IMPORTED_MODULE_13__["removeBoxTransforms"])(viewportBox, latestValues);
                return viewportBox;
            },
            /**
             * Update the layoutState by measuring the DOM layout. This
             * should be called after resetting any layout-affecting transforms.
             */
            updateLayoutMeasurement: function () {
                element.notifyBeforeLayoutMeasure(layoutState.layout);
                layoutState.isHydrated = true;
                layoutState.layout = element.measureViewportBox();
                layoutState.layoutCorrected = Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_5__["copyAxisBox"])(layoutState.layout);
                element.notifyLayoutMeasure(layoutState.layout, element.prevViewportBox || layoutState.layout);
                framesync__WEBPACK_IMPORTED_MODULE_4__["default"].update(function () { return element.rebaseProjectionTarget(); });
            },
            /**
             * Get the motion values tracking the layout animations on each
             * axis. Lazy init if not already created.
             */
            getProjectionAnimationProgress: function () {
                projectionTargetProgress || (projectionTargetProgress = {
                    x: Object(_value_index_js__WEBPACK_IMPORTED_MODULE_8__["motionValue"])(0),
                    y: Object(_value_index_js__WEBPACK_IMPORTED_MODULE_8__["motionValue"])(0),
                });
                return projectionTargetProgress;
            },
            /**
             * Update the projection of a single axis. Schedule an update to
             * the tree layout projection.
             */
            setProjectionTargetAxis: function (axis, min, max) {
                var target = projection.target[axis];
                target.min = min;
                target.max = max;
                // Flag that we want to fire the onViewportBoxUpdate event handler
                hasViewportBoxUpdated = true;
                lifecycles.notifySetAxisTarget();
            },
            /**
             * Rebase the projection target on top of the provided viewport box
             * or the measured layout. This ensures that non-animating elements
             * don't fall out of sync differences in measurements vs projections
             * after a page scroll or other relayout.
             */
            rebaseProjectionTarget: function (force, box) {
                if (box === void 0) { box = layoutState.layout; }
                var _a = element.getProjectionAnimationProgress(), x = _a.x, y = _a.y;
                var shouldRebase = !projection.isTargetLocked &&
                    !x.isAnimating() &&
                    !y.isAnimating();
                if (force || shouldRebase) {
                    Object(_utils_each_axis_js__WEBPACK_IMPORTED_MODULE_6__["eachAxis"])(function (axis) {
                        var _a = box[axis], min = _a.min, max = _a.max;
                        element.setProjectionTargetAxis(axis, min, max);
                    });
                }
            },
            /**
             * Notify the visual element that its layout is up-to-date.
             * Currently Animate.tsx uses this to check whether a layout animation
             * needs to be performed.
             */
            notifyLayoutReady: function (config) {
                element.notifyLayoutUpdate(layoutState.layout, element.prevViewportBox || layoutState.layout, config);
            }, 
            /**
             * Temporarily reset the transform of the instance.
             */
            resetTransform: function () { return resetTransform(element, instance, props); }, 
            /**
             * Perform the callback after temporarily unapplying the transform
             * upwards through the tree.
             */
            withoutTransform: function (callback) {
                var isEnabled = projection.isEnabled;
                isEnabled && element.resetTransform();
                parent ? parent.withoutTransform(callback) : callback();
                isEnabled && restoreTransform(instance, renderState);
            },
            updateLayoutProjection: function () {
                isProjecting() && updateLayoutProjection();
                children.forEach(fireUpdateLayoutProjection);
            },
            /**
             *
             */
            pointTo: function (newLead) {
                leadProjection = newLead.projection;
                leadLatestValues = newLead.getLatestValues();
                /**
                 * Subscribe to lead component's layout animations
                 */
                unsubscribeFromLeadVisualElement === null || unsubscribeFromLeadVisualElement === void 0 ? void 0 : unsubscribeFromLeadVisualElement();
                unsubscribeFromLeadVisualElement = Object(popmotion__WEBPACK_IMPORTED_MODULE_3__["pipe"])(newLead.onSetAxisTarget(element.scheduleUpdateLayoutProjection), newLead.onLayoutAnimationComplete(function () {
                    var _a;
                    if (element.isPresent) {
                        element.presence = _components_AnimateSharedLayout_types_js__WEBPACK_IMPORTED_MODULE_1__["Presence"].Present;
                    }
                    else {
                        (_a = element.layoutSafeToRemove) === null || _a === void 0 ? void 0 : _a.call(element);
                    }
                }));
            }, 
            // TODO: Clean this up
            isPresent: true, presence: _components_AnimateSharedLayout_types_js__WEBPACK_IMPORTED_MODULE_1__["Presence"].Entering });
        return element;
    };
};
function fireUpdateLayoutProjection(child) {
    child.updateLayoutProjection();
}
var variantProps = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(["initial"], _utils_animation_state_js__WEBPACK_IMPORTED_MODULE_9__["variantPriorityOrder"]);
var numVariantProps = variantProps.length;




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/config-motion.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/config-motion.js ***!
  \****************************************************************************************************************/
/*! exports provided: svgMotionConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svgMotionConfig", function() { return svgMotionConfig; });
/* harmony import */ var _utils_build_attrs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/build-attrs.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.js");
/* harmony import */ var _utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/create-render-state.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.js");
/* harmony import */ var _utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/scrape-motion-values.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.js");
/* harmony import */ var _visual_element_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./visual-element.js */ "../../node_modules/framer-motion/dist/es/render/svg/visual-element.js");
/* harmony import */ var _motion_utils_use_visual_state_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../motion/utils/use-visual-state.js */ "../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.js");






var svgMotionConfig = {
    createVisualElement: function (_, options) {
        return Object(_visual_element_js__WEBPACK_IMPORTED_MODULE_3__["svgVisualElement"])(options, { enableHardwareAcceleration: false });
    },
    useVisualState: Object(_motion_utils_use_visual_state_js__WEBPACK_IMPORTED_MODULE_4__["makeUseVisualState"])({
        scrapeMotionValuesFromProps: _utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_2__["scrapeMotionValuesFromProps"],
        createRenderState: _utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_1__["createSvgRenderState"],
        onMount: function (props, instance, _a) {
            var renderState = _a.renderState, latestValues = _a.latestValues;
            try {
                renderState.dimensions =
                    typeof instance.getBBox ===
                        "function"
                        ? instance.getBBox()
                        : instance.getBoundingClientRect();
            }
            catch (e) {
                // Most likely trying to measure an unrendered element under Firefox
                renderState.dimensions = {
                    x: 0,
                    y: 0,
                    width: 0,
                    height: 0,
                };
            }
            if (isPath(instance)) {
                renderState.totalPathLength = instance.getTotalLength();
            }
            Object(_utils_build_attrs_js__WEBPACK_IMPORTED_MODULE_0__["buildSVGAttrs"])(renderState, latestValues, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);
            Object(_visual_element_js__WEBPACK_IMPORTED_MODULE_3__["renderSVG"])(instance, renderState);
        },
    }),
};
function isPath(element) {
    return element.tagName === "path";
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/supported-elements.js":
/*!*********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/supported-elements.js ***!
  \*********************************************************************************************************************/
/*! exports provided: lowercaseSVGElements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lowercaseSVGElements", function() { return lowercaseSVGElements; });
/**
 * We keep these listed seperately as we use the lowercase tag names as part
 * of the runtime bundle to detect SVG components
 */
var lowercaseSVGElements = [
    "animate",
    "circle",
    "defs",
    "desc",
    "ellipse",
    "g",
    "image",
    "line",
    "filter",
    "marker",
    "mask",
    "metadata",
    "path",
    "pattern",
    "polygon",
    "polyline",
    "rect",
    "stop",
    "svg",
    "switch",
    "symbol",
    "text",
    "tspan",
    "use",
    "view",
];




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/use-props.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/use-props.js ***!
  \************************************************************************************************************/
/*! exports provided: useSVGProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useSVGProps", function() { return useSVGProps; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _html_use_props_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../html/use-props.js */ "../../node_modules/framer-motion/dist/es/render/html/use-props.js");
/* harmony import */ var _utils_build_attrs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/build-attrs.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.js");
/* harmony import */ var _utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/create-render-state.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.js");






function useSVGProps(props, visualState) {
    var visualProps = Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
        var state = Object(_utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_4__["createSvgRenderState"])();
        Object(_utils_build_attrs_js__WEBPACK_IMPORTED_MODULE_3__["buildSVGAttrs"])(state, visualState, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);
        return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, state.attrs), { style: Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, state.style) });
    }, [visualState]);
    if (props.style) {
        var rawStyles = {};
        Object(_html_use_props_js__WEBPACK_IMPORTED_MODULE_2__["copyRawValuesOnly"])(rawStyles, props.style, props);
        visualProps.style = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({}, rawStyles), visualProps.style);
    }
    return visualProps;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.js":
/*!********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.js ***!
  \********************************************************************************************************************/
/*! exports provided: buildSVGAttrs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildSVGAttrs", function() { return buildSVGAttrs; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _html_utils_build_styles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../html/utils/build-styles.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.js");
/* harmony import */ var _transform_origin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transform-origin.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.js");
/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./path.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/path.js");





/**
 * Build SVG visual attrbutes, like cx and style.transform
 */
function buildSVGAttrs(state, _a, projection, layoutState, options, transformTemplate) {
    var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, 
    // This is object creation, which we try to avoid per-frame.
    latest = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset"]);
    Object(_html_utils_build_styles_js__WEBPACK_IMPORTED_MODULE_1__["buildHTMLStyles"])(state, latest, projection, layoutState, options, transformTemplate);
    state.attrs = state.style;
    state.style = {};
    var attrs = state.attrs, style = state.style, dimensions = state.dimensions, totalPathLength = state.totalPathLength;
    /**
     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs
     * and copy it into style.
     */
    if (attrs.transform) {
        if (dimensions)
            style.transform = attrs.transform;
        delete attrs.transform;
    }
    // Parse transformOrigin
    if (dimensions &&
        (originX !== undefined || originY !== undefined || style.transform)) {
        style.transformOrigin = Object(_transform_origin_js__WEBPACK_IMPORTED_MODULE_2__["calcSVGTransformOrigin"])(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);
    }
    // Treat x/y not as shortcuts but as actual attributes
    if (attrX !== undefined)
        attrs.x = attrX;
    if (attrY !== undefined)
        attrs.y = attrY;
    // Build SVG path if one has been measured
    if (totalPathLength !== undefined && pathLength !== undefined) {
        Object(_path_js__WEBPACK_IMPORTED_MODULE_3__["buildSVGPath"])(attrs, totalPathLength, pathLength, pathSpacing, pathOffset, false);
    }
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.js":
/*!*************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.js ***!
  \*************************************************************************************************************************/
/*! exports provided: camelCaseAttributes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "camelCaseAttributes", function() { return camelCaseAttributes; });
/**
 * A set of attribute names that are always read/written as camel case.
 */
var camelCaseAttributes = new Set([
    "baseFrequency",
    "diffuseConstant",
    "kernelMatrix",
    "kernelUnitLength",
    "keySplines",
    "keyTimes",
    "limitingConeAngle",
    "markerHeight",
    "markerWidth",
    "numOctaves",
    "targetX",
    "targetY",
    "surfaceScale",
    "specularConstant",
    "specularExponent",
    "stdDeviation",
    "tableValues",
    "viewBox",
]);




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.js":
/*!****************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.js ***!
  \****************************************************************************************************************************/
/*! exports provided: createSvgRenderState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSvgRenderState", function() { return createSvgRenderState; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _html_utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../html/utils/create-render-state.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.js");



var createSvgRenderState = function () { return (Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, Object(_html_utils_create_render_state_js__WEBPACK_IMPORTED_MODULE_1__["createHtmlRenderState"])()), { attrs: {} })); };




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/utils/path.js":
/*!*************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/utils/path.js ***!
  \*************************************************************************************************************/
/*! exports provided: buildSVGPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildSVGPath", function() { return buildSVGPath; });
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");


// Convert a progress 0-1 to a pixels value based on the provided length
var progressToPixels = function (progress, length) {
    return style_value_types__WEBPACK_IMPORTED_MODULE_0__["px"].transform(progress * length);
};
var dashKeys = {
    offset: "stroke-dashoffset",
    array: "stroke-dasharray",
};
var camelKeys = {
    offset: "strokeDashoffset",
    array: "strokeDasharray",
};
/**
 * Build SVG path properties. Uses the path's measured length to convert
 * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset
 * and stroke-dasharray attributes.
 *
 * This function is mutative to reduce per-frame GC.
 */
function buildSVGPath(attrs, totalLength, length, spacing, offset, useDashCase) {
    if (spacing === void 0) { spacing = 1; }
    if (offset === void 0) { offset = 0; }
    if (useDashCase === void 0) { useDashCase = true; }
    // We use dash case when setting attributes directly to the DOM node and camel case
    // when defining props on a React component.
    var keys = useDashCase ? dashKeys : camelKeys;
    // Build the dash offset
    attrs[keys.offset] = progressToPixels(-offset, totalLength);
    // Build the dash array
    var pathLength = progressToPixels(length, totalLength);
    var pathSpacing = progressToPixels(spacing, totalLength);
    attrs[keys.array] = pathLength + " " + pathSpacing;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.js":
/*!*****************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.js ***!
  \*****************************************************************************************************************************/
/*! exports provided: scrapeMotionValuesFromProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scrapeMotionValuesFromProps", function() { return scrapeMotionValuesFromProps; });
/* harmony import */ var _value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../value/utils/is-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js");
/* harmony import */ var _html_utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../html/utils/scrape-motion-values.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.js");



function scrapeMotionValuesFromProps(props) {
    var newValues = Object(_html_utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_1__["scrapeMotionValuesFromProps"])(props);
    for (var key in props) {
        if (Object(_value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_0__["isMotionValue"])(props[key])) {
            var targetKey = key === "x" || key === "y" ? "attr" + key.toUpperCase() : key;
            newValues[targetKey] = props[key];
        }
    }
    return newValues;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.js":
/*!*************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.js ***!
  \*************************************************************************************************************************/
/*! exports provided: calcSVGTransformOrigin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcSVGTransformOrigin", function() { return calcSVGTransformOrigin; });
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");


function calcOrigin(origin, offset, size) {
    return typeof origin === "string"
        ? origin
        : style_value_types__WEBPACK_IMPORTED_MODULE_0__["px"].transform(offset + size * origin);
}
/**
 * The SVG transform origin defaults are different to CSS and is less intuitive,
 * so we use the measured dimensions of the SVG to reconcile these.
 */
function calcSVGTransformOrigin(dimensions, originX, originY) {
    var pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);
    var pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);
    return pxOriginX + " " + pxOriginY;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/svg/visual-element.js":
/*!*****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/svg/visual-element.js ***!
  \*****************************************************************************************************************/
/*! exports provided: renderSVG, svgVisualElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderSVG", function() { return renderSVG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svgVisualElement", function() { return svgVisualElement; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom/utils/value-types.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/value-types.js");
/* harmony import */ var _html_utils_transform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../html/utils/transform.js */ "../../node_modules/framer-motion/dist/es/render/html/utils/transform.js");
/* harmony import */ var _utils_build_attrs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/build-attrs.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../index.js */ "../../node_modules/framer-motion/dist/es/render/index.js");
/* harmony import */ var _utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/scrape-motion-values.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.js");
/* harmony import */ var _html_visual_element_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../html/visual-element.js */ "../../node_modules/framer-motion/dist/es/render/html/visual-element.js");
/* harmony import */ var _dom_utils_camel_to_dash_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../dom/utils/camel-to-dash.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.js");
/* harmony import */ var _utils_camel_case_attrs_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/camel-case-attrs.js */ "../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.js");










function renderSVG(element, renderState) {
    _html_visual_element_js__WEBPACK_IMPORTED_MODULE_6__["htmlConfig"].render(element, renderState);
    for (var key in renderState.attrs) {
        element.setAttribute(!_utils_camel_case_attrs_js__WEBPACK_IMPORTED_MODULE_8__["camelCaseAttributes"].has(key) ? Object(_dom_utils_camel_to_dash_js__WEBPACK_IMPORTED_MODULE_7__["camelToDash"])(key) : key, renderState.attrs[key]);
    }
}
var svgVisualElement = Object(_index_js__WEBPACK_IMPORTED_MODULE_4__["visualElement"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, _html_visual_element_js__WEBPACK_IMPORTED_MODULE_6__["htmlConfig"]), { getBaseTarget: function (props, key) {
        return props[key];
    },
    readValueFromInstance: function (domElement, key) {
        var _a;
        if (Object(_html_utils_transform_js__WEBPACK_IMPORTED_MODULE_2__["isTransformProp"])(key)) {
            return ((_a = Object(_dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_1__["getDefaultValueType"])(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;
        }
        key = !_utils_camel_case_attrs_js__WEBPACK_IMPORTED_MODULE_8__["camelCaseAttributes"].has(key) ? Object(_dom_utils_camel_to_dash_js__WEBPACK_IMPORTED_MODULE_7__["camelToDash"])(key) : key;
        return domElement.getAttribute(key);
    },
    scrapeMotionValuesFromProps: _utils_scrape_motion_values_js__WEBPACK_IMPORTED_MODULE_5__["scrapeMotionValuesFromProps"],
    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {
        Object(_utils_build_attrs_js__WEBPACK_IMPORTED_MODULE_3__["buildSVGAttrs"])(renderState, latestValues, projection, layoutState, options, props.transformTemplate);
    }, render: renderSVG }));




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/utils/animation-state.js":
/*!********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/utils/animation-state.js ***!
  \********************************************************************************************************************/
/*! exports provided: createAnimationState, variantPriorityOrder, variantsHaveChanged */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAnimationState", function() { return createAnimationState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "variantPriorityOrder", function() { return variantPriorityOrder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "variantsHaveChanged", function() { return variantsHaveChanged; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _variants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./variants.js */ "../../node_modules/framer-motion/dist/es/render/utils/variants.js");
/* harmony import */ var _animation_utils_is_keyframes_target_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../animation/utils/is-keyframes-target.js */ "../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.js");
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ "../../node_modules/framer-motion/dist/es/render/utils/types.js");
/* harmony import */ var _animation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./animation.js */ "../../node_modules/framer-motion/dist/es/render/utils/animation.js");
/* harmony import */ var _animation_animation_controls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../animation/animation-controls.js */ "../../node_modules/framer-motion/dist/es/animation/animation-controls.js");
/* harmony import */ var _utils_shallow_compare_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/shallow-compare.js */ "../../node_modules/framer-motion/dist/es/utils/shallow-compare.js");








var variantPriorityOrder = [
    _types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Animate,
    _types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Hover,
    _types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Tap,
    _types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Drag,
    _types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Focus,
    _types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Exit,
];
var reversePriorityOrder = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(variantPriorityOrder).reverse();
var numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement) {
    return function (animations) {
        return Promise.all(animations.map(function (_a) {
            var animation = _a.animation, options = _a.options;
            return Object(_animation_js__WEBPACK_IMPORTED_MODULE_4__["animateVisualElement"])(visualElement, animation, options);
        }));
    };
}
function createAnimationState(visualElement) {
    var animate = animateList(visualElement);
    var state = createState();
    var allAnimatedKeys = {};
    var isInitialRender = true;
    /**
     * This function will be used to reduce the animation definitions for
     * each active animation type into an object of resolved values for it.
     */
    var buildResolvedTypeValues = function (acc, definition) {
        var resolved = Object(_variants_js__WEBPACK_IMPORTED_MODULE_1__["resolveVariant"])(visualElement, definition);
        if (resolved) {
            var transition = resolved.transition, transitionEnd = resolved.transitionEnd, target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(resolved, ["transition", "transitionEnd"]);
            acc = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, acc), target), transitionEnd);
        }
        return acc;
    };
    function isAnimated(key) {
        return allAnimatedKeys[key] !== undefined;
    }
    /**
     * This just allows us to inject mocked animation functions
     * @internal
     */
    function setAnimateFunction(makeAnimator) {
        animate = makeAnimator(visualElement);
    }
    /**
     * When we receive new props, we need to:
     * 1. Create a list of protected keys for each type. This is a directory of
     *    value keys that are currently being "handled" by types of a higher priority
     *    so that whenever an animation is played of a given type, these values are
     *    protected from being animated.
     * 2. Determine if an animation type needs animating.
     * 3. Determine if any values have been removed from a type and figure out
     *    what to animate those to.
     */
    function animateChanges(options, changedActiveType) {
        var props = visualElement.getProps();
        var context = visualElement.getVariantContext(true) || {};
        /**
         * A list of animations that we'll build into as we iterate through the animation
         * types. This will get executed at the end of the function.
         */
        var animations = [];
        /**
         * Keep track of which values have been removed. Then, as we hit lower priority
         * animation types, we can check if they contain removed values and animate to that.
         */
        var removedKeys = new Set();
        /**
         * A dictionary of all encountered keys. This is an object to let us build into and
         * copy it without iteration. Each time we hit an animation type we set its protected
         * keys - the keys its not allowed to animate - to the latest version of this object.
         */
        var encounteredKeys = {};
        /**
         * If a variant has been removed at a given index, and this component is controlling
         * variant animations, we want to ensure lower-priority variants are forced to animate.
         */
        var removedVariantIndex = Infinity;
        var _loop_1 = function (i) {
            var type = reversePriorityOrder[i];
            var typeState = state[type];
            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];
            var propIsVariant = Object(_variants_js__WEBPACK_IMPORTED_MODULE_1__["isVariantLabel"])(prop);
            /**
             * If this type has *just* changed isActive status, set activeDelta
             * to that status. Otherwise set to null.
             */
            var activeDelta = type === changedActiveType ? typeState.isActive : null;
            if (activeDelta === false)
                removedVariantIndex = i;
            /**
             * If this prop is an inherited variant, rather than been set directly on the
             * component itself, we want to make sure we allow the parent to trigger animations.
             *
             * TODO: Can probably change this to a !isControllingVariants check
             */
            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
            /**
             *
             */
            if (isInherited &&
                isInitialRender &&
                visualElement.manuallyAnimateOnMount) {
                isInherited = false;
            }
            /**
             * Set all encountered keys so far as the protected keys for this type. This will
             * be any key that has been animated or otherwise handled by active, higher-priortiy types.
             */
            typeState.protectedKeys = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, encounteredKeys);
            // Check if we can skip analysing this prop early
            if (
            // If it isn't active and hasn't *just* been set as inactive
            (!typeState.isActive && activeDelta === null) ||
                // If we didn't and don't have any defined prop for this animation type
                (!prop && !typeState.prevProp) ||
                // Or if the prop doesn't define an animation
                Object(_animation_animation_controls_js__WEBPACK_IMPORTED_MODULE_5__["isAnimationControls"])(prop) ||
                typeof prop === "boolean") {
                return "continue";
            }
            /**
             * As we go look through the values defined on this type, if we detect
             * a changed value or a value that was removed in a higher priority, we set
             * this to true and add this prop to the animation list.
             */
            var shouldAnimateType = variantsHaveChanged(typeState.prevProp, prop) ||
                // If we're making this variant active, we want to always make it active
                (type === changedActiveType &&
                    typeState.isActive &&
                    !isInherited &&
                    propIsVariant) ||
                // If we removed a higher-priority variant (i is in reverse order)
                (i > removedVariantIndex && propIsVariant);
            /**
             * As animations can be set as variant lists, variants or target objects, we
             * coerce everything to an array if it isn't one already
             */
            var definitionList = Array.isArray(prop) ? prop : [prop];
            /**
             * Build an object of all the resolved values. We'll use this in the subsequent
             * animateChanges calls to determine whether a value has changed.
             */
            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
            if (activeDelta === false)
                resolvedValues = {};
            /**
             * Now we need to loop through all the keys in the prev prop and this prop,
             * and decide:
             * 1. If the value has changed, and needs animating
             * 2. If it has been removed, and needs adding to the removedKeys set
             * 3. If it has been removed in a higher priority type and needs animating
             * 4. If it hasn't been removed in a higher priority but hasn't changed, and
             *    needs adding to the type's protectedKeys list.
             */
            var _a = typeState.prevResolvedValues, prevResolvedValues = _a === void 0 ? {} : _a;
            var allKeys = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, prevResolvedValues), resolvedValues);
            var markToAnimate = function (key) {
                shouldAnimateType = true;
                removedKeys.delete(key);
                typeState.needsAnimating[key] = true;
            };
            for (var key in allKeys) {
                var next = resolvedValues[key];
                var prev = prevResolvedValues[key];
                // If we've already handled this we can just skip ahead
                if (encounteredKeys.hasOwnProperty(key))
                    continue;
                /**
                 * If the value has changed, we probably want to animate it.
                 */
                if (next !== prev) {
                    /**
                     * If both values are keyframes, we need to shallow compare them to
                     * detect whether any value has changed. If it has, we animate it.
                     */
                    if (Object(_animation_utils_is_keyframes_target_js__WEBPACK_IMPORTED_MODULE_2__["isKeyframesTarget"])(next) && Object(_animation_utils_is_keyframes_target_js__WEBPACK_IMPORTED_MODULE_2__["isKeyframesTarget"])(prev)) {
                        if (!Object(_utils_shallow_compare_js__WEBPACK_IMPORTED_MODULE_6__["shallowCompare"])(next, prev)) {
                            markToAnimate(key);
                        }
                        else {
                            /**
                             * If it hasn't changed, we want to ensure it doesn't animate by
                             * adding it to the list of protected keys.
                             */
                            typeState.protectedKeys[key] = true;
                        }
                    }
                    else if (next !== undefined) {
                        // If next is defined and doesn't equal prev, it needs animating
                        markToAnimate(key);
                    }
                    else {
                        // If it's undefined, it's been removed.
                        removedKeys.add(key);
                    }
                }
                else if (next !== undefined && removedKeys.has(key)) {
                    /**
                     * If next hasn't changed and it isn't undefined, we want to check if it's
                     * been removed by a higher priority
                     */
                    markToAnimate(key);
                }
                else {
                    /**
                     * If it hasn't changed, we add it to the list of protected values
                     * to ensure it doesn't get animated.
                     */
                    typeState.protectedKeys[key] = true;
                }
            }
            /**
             * Update the typeState so next time animateChanges is called we can compare the
             * latest prop and resolvedValues to these.
             */
            typeState.prevProp = prop;
            typeState.prevResolvedValues = resolvedValues;
            /**
             *
             */
            if (typeState.isActive) {
                encounteredKeys = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, encounteredKeys), resolvedValues);
            }
            if (isInitialRender && visualElement.blockInitialAnimation) {
                shouldAnimateType = false;
            }
            /**
             * If this is an inherited prop we want to hard-block animations
             * TODO: Test as this should probably still handle animations triggered
             * by removed values?
             */
            if (shouldAnimateType && !isInherited) {
                animations.push.apply(animations, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(definitionList.map(function (animation) { return ({
                    animation: animation,
                    options: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ type: type }, options),
                }); })));
            }
        };
        /**
         * Iterate through all animation types in reverse priority order. For each, we want to
         * detect which values it's handling and whether or not they've changed (and therefore
         * need to be animated). If any values have been removed, we want to detect those in
         * lower priority props and flag for animation.
         */
        for (var i = 0; i < numAnimationTypes; i++) {
            _loop_1(i);
        }
        allAnimatedKeys = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, encounteredKeys);
        /**
         * If there are some removed value that haven't been dealt with,
         * we need to create a new animation that falls back either to the value
         * defined in the style prop, or the last read value.
         */
        if (removedKeys.size) {
            var fallbackAnimation_1 = {};
            removedKeys.forEach(function (key) {
                var fallbackTarget = visualElement.getBaseTarget(key);
                if (fallbackTarget !== undefined) {
                    fallbackAnimation_1[key] = fallbackTarget;
                }
            });
            animations.push({ animation: fallbackAnimation_1 });
        }
        var shouldAnimate = Boolean(animations.length);
        if (isInitialRender &&
            props.initial === false &&
            !visualElement.manuallyAnimateOnMount) {
            shouldAnimate = false;
        }
        isInitialRender = false;
        return shouldAnimate ? animate(animations) : Promise.resolve();
    }
    /**
     * Change whether a certain animation type is active.
     */
    function setActive(type, isActive, options) {
        var _a;
        // If the active state hasn't changed, we can safely do nothing here
        if (state[type].isActive === isActive)
            return Promise.resolve();
        // Propagate active change to children
        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });
        state[type].isActive = isActive;
        return animateChanges(options, type);
    }
    return {
        isAnimated: isAnimated,
        animateChanges: animateChanges,
        setActive: setActive,
        setAnimateFunction: setAnimateFunction,
        getState: function () { return state; },
    };
}
function variantsHaveChanged(prev, next) {
    if (typeof next === "string") {
        return next !== prev;
    }
    else if (Object(_variants_js__WEBPACK_IMPORTED_MODULE_1__["isVariantLabels"])(next)) {
        return !Object(_utils_shallow_compare_js__WEBPACK_IMPORTED_MODULE_6__["shallowCompare"])(next, prev);
    }
    return false;
}
function createTypeState(isActive) {
    if (isActive === void 0) { isActive = false; }
    return {
        isActive: isActive,
        protectedKeys: {},
        needsAnimating: {},
        prevResolvedValues: {},
    };
}
function createState() {
    var _a;
    return _a = {},
        _a[_types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Animate] = createTypeState(true),
        _a[_types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Hover] = createTypeState(),
        _a[_types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Tap] = createTypeState(),
        _a[_types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Drag] = createTypeState(),
        _a[_types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Focus] = createTypeState(),
        _a[_types_js__WEBPACK_IMPORTED_MODULE_3__["AnimationType"].Exit] = createTypeState(),
        _a;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/utils/animation.js":
/*!**************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/utils/animation.js ***!
  \**************************************************************************************************************/
/*! exports provided: animateVisualElement, sortByTreeOrder, stopAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animateVisualElement", function() { return animateVisualElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortByTreeOrder", function() { return sortByTreeOrder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stopAnimation", function() { return stopAnimation; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _variants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./variants.js */ "../../node_modules/framer-motion/dist/es/render/utils/variants.js");
/* harmony import */ var _animation_utils_transitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../animation/utils/transitions.js */ "../../node_modules/framer-motion/dist/es/animation/utils/transitions.js");
/* harmony import */ var _setters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./setters.js */ "../../node_modules/framer-motion/dist/es/render/utils/setters.js");





/**
 * @internal
 */
function animateVisualElement(visualElement, definition, options) {
    if (options === void 0) { options = {}; }
    visualElement.notifyAnimationStart();
    var animation;
    if (Array.isArray(definition)) {
        var animations = definition.map(function (variant) {
            return animateVariant(visualElement, variant, options);
        });
        animation = Promise.all(animations);
    }
    else if (typeof definition === "string") {
        animation = animateVariant(visualElement, definition, options);
    }
    else {
        var resolvedDefinition = typeof definition === "function"
            ? Object(_variants_js__WEBPACK_IMPORTED_MODULE_1__["resolveVariant"])(visualElement, definition, options.custom)
            : definition;
        animation = animateTarget(visualElement, resolvedDefinition, options);
    }
    return animation.then(function () {
        return visualElement.notifyAnimationComplete(definition);
    });
}
function animateVariant(visualElement, variant, options) {
    var _a;
    if (options === void 0) { options = {}; }
    var resolved = Object(_variants_js__WEBPACK_IMPORTED_MODULE_1__["resolveVariant"])(visualElement, variant, options.custom);
    var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement.getDefaultTransition() || {} : _b;
    if (options.transitionOverride) {
        transition = options.transitionOverride;
    }
    /**
     * If we have a variant, create a callback that runs it as an animation.
     * Otherwise, we resolve a Promise immediately for a composable no-op.
     */
    var getAnimation = resolved
        ? function () { return animateTarget(visualElement, resolved, options); }
        : function () { return Promise.resolve(); };
    /**
     * If we have children, create a callback that runs all their animations.
     * Otherwise, we resolve a Promise immediately for a composable no-op.
     */
    var getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function (forwardDelay) {
        if (forwardDelay === void 0) { forwardDelay = 0; }
        var _a = transition.delayChildren, delayChildren = _a === void 0 ? 0 : _a, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;
        return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
    }
        : function () { return Promise.resolve(); };
    /**
     * If the transition explicitly defines a "when" option, we need to resolve either
     * this animation or all children animations before playing the other.
     */
    var when = transition.when;
    if (when) {
        var _c = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(when === "beforeChildren"
            ? [getAnimation, getChildAnimations]
            : [getChildAnimations, getAnimation], 2), first = _c[0], last = _c[1];
        return first().then(last);
    }
    else {
        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);
    }
}
/**
 * @internal
 */
function animateTarget(visualElement, definition, _a) {
    var _b;
    var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;
    var _e = visualElement.makeTargetAnimatable(definition), _f = _e.transition, transition = _f === void 0 ? visualElement.getDefaultTransition() : _f, transitionEnd = _e.transitionEnd, target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_e, ["transition", "transitionEnd"]);
    if (transitionOverride)
        transition = transitionOverride;
    var animations = [];
    var animationTypeState = type && ((_b = visualElement.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);
    for (var key in target) {
        var value = visualElement.getValue(key);
        var valueTarget = target[key];
        if (!value ||
            valueTarget === undefined ||
            (animationTypeState &&
                shouldBlockAnimation(animationTypeState, key))) {
            continue;
        }
        var animation = Object(_animation_utils_transitions_js__WEBPACK_IMPORTED_MODULE_2__["startAnimation"])(key, value, valueTarget, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ delay: delay }, transition));
        animations.push(animation);
    }
    return Promise.all(animations).then(function () {
        transitionEnd && Object(_setters_js__WEBPACK_IMPORTED_MODULE_3__["setTarget"])(visualElement, transitionEnd);
    });
}
function animateChildren(visualElement, variant, delayChildren, staggerChildren, staggerDirection, options) {
    if (delayChildren === void 0) { delayChildren = 0; }
    if (staggerChildren === void 0) { staggerChildren = 0; }
    if (staggerDirection === void 0) { staggerDirection = 1; }
    var animations = [];
    var maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;
    var generateStaggerDuration = staggerDirection === 1
        ? function (i) {
            if (i === void 0) { i = 0; }
            return i * staggerChildren;
        }
        : function (i) {
            if (i === void 0) { i = 0; }
            return maxStaggerDuration - i * staggerChildren;
        };
    Array.from(visualElement.variantChildren)
        .sort(sortByTreeOrder)
        .forEach(function (child, i) {
        animations.push(animateVariant(child, variant, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), { delay: delayChildren + generateStaggerDuration(i) })).then(function () { return child.notifyAnimationComplete(variant); }));
    });
    return Promise.all(animations);
}
function stopAnimation(visualElement) {
    visualElement.forEachValue(function (value) { return value.stop(); });
}
function sortByTreeOrder(a, b) {
    return a.sortNodePosition(b);
}
/**
 * Decide whether we should block this animation. Previously, we achieved this
 * just by checking whether the key was listed in protectedKeys, but this
 * posed problems if an animation was triggered by afterChildren and protectedKeys
 * had been set to true in the meantime.
 */
function shouldBlockAnimation(_a, key) {
    var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;
    var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
    needsAnimating[key] = false;
    return shouldBlock;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/utils/lifecycles.js":
/*!***************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/utils/lifecycles.js ***!
  \***************************************************************************************************************/
/*! exports provided: createLifecycles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLifecycles", function() { return createLifecycles; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_subscription_manager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/subscription-manager.js */ "../../node_modules/framer-motion/dist/es/utils/subscription-manager.js");



var names = [
    "LayoutMeasure",
    "BeforeLayoutMeasure",
    "LayoutUpdate",
    "ViewportBoxUpdate",
    "Update",
    "Render",
    "AnimationComplete",
    "LayoutAnimationComplete",
    "AnimationStart",
    "SetAxisTarget",
];
function createLifecycles() {
    var managers = names.map(function () { return new _utils_subscription_manager_js__WEBPACK_IMPORTED_MODULE_1__["SubscriptionManager"](); });
    var propSubscriptions = {};
    var lifecycles = {
        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },
        updatePropListeners: function (props) {
            return names.forEach(function (name) {
                var _a;
                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);
                var on = "on" + name;
                var propListener = props[on];
                if (propListener) {
                    propSubscriptions[name] = lifecycles[on](propListener);
                }
            });
        },
    };
    managers.forEach(function (manager, i) {
        lifecycles["on" + names[i]] = function (handler) { return manager.add(handler); };
        lifecycles["notify" + names[i]] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return manager.notify.apply(manager, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(args));
        };
    });
    return lifecycles;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/utils/motion-values.js":
/*!******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/utils/motion-values.js ***!
  \******************************************************************************************************************/
/*! exports provided: updateMotionValuesFromProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateMotionValuesFromProps", function() { return updateMotionValuesFromProps; });
/* harmony import */ var _value_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../value/index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");
/* harmony import */ var _value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../value/utils/is-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js");



function updateMotionValuesFromProps(element, next, prev) {
    var _a;
    for (var key in next) {
        var nextValue = next[key];
        var prevValue = prev[key];
        if (Object(_value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_1__["isMotionValue"])(nextValue)) {
            /**
             * If this is a motion value found in props or style, we want to add it
             * to our visual element's motion value map.
             */
            element.addValue(key, nextValue);
        }
        else if (Object(_value_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_1__["isMotionValue"])(prevValue)) {
            /**
             * If we're swapping to a new motion value, create a new motion value
             * from that
             */
            element.addValue(key, Object(_value_index_js__WEBPACK_IMPORTED_MODULE_0__["motionValue"])(nextValue));
        }
        else if (prevValue !== nextValue) {
            /**
             * If this is a flat value that has changed, update the motion value
             * or create one if it doesn't exist. We only want to do this if we're
             * not handling the value with our animation state.
             */
            if (element.hasValue(key)) {
                var existingValue = element.getValue(key);
                // TODO: Only update values that aren't being animated or even looked at
                !existingValue.hasAnimated && existingValue.set(nextValue);
            }
            else {
                element.addValue(key, Object(_value_index_js__WEBPACK_IMPORTED_MODULE_0__["motionValue"])((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));
            }
        }
    }
    // Handle removed values
    for (var key in prev) {
        if (next[key] === undefined)
            element.removeValue(key);
    }
    return next;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/utils/projection.js":
/*!***************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/utils/projection.js ***!
  \***************************************************************************************************************/
/*! exports provided: updateLayoutDeltas */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateLayoutDeltas", function() { return updateLayoutDeltas; });
/* harmony import */ var _utils_geometry_delta_calc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/geometry/delta-calc.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/delta-calc.js");
/* harmony import */ var _utils_geometry_delta_apply_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/geometry/delta-apply.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/delta-apply.js");



function updateLayoutDeltas(_a, _b, treePath, transformOrigin) {
    var delta = _a.delta, layout = _a.layout, layoutCorrected = _a.layoutCorrected, treeScale = _a.treeScale;
    var target = _b.target;
    /**
     * Reset the corrected box with the latest values from box, as we're then going
     * to perform mutative operations on it.
     */
    Object(_utils_geometry_delta_apply_js__WEBPACK_IMPORTED_MODULE_1__["resetBox"])(layoutCorrected, layout);
    /**
     * Apply all the parent deltas to this box to produce the corrected box. This
     * is the layout box, as it will appear on screen as a result of the transforms of its parents.
     */
    Object(_utils_geometry_delta_apply_js__WEBPACK_IMPORTED_MODULE_1__["applyTreeDeltas"])(layoutCorrected, treeScale, treePath);
    /**
     * Update the delta between the corrected box and the target box before user-set transforms were applied.
     * This will allow us to calculate the corrected borderRadius and boxShadow to compensate
     * for our layout reprojection, but still allow them to be scaled correctly by the user.
     * It might be that to simplify this we may want to accept that user-set scale1 is also corrected
     * and we wouldn't have to keep and calc both deltas, OR we could support a user setting
     * to allow people to choose whether these styles are corrected based on just the
     * layout reprojection or the final bounding box.
     */
    Object(_utils_geometry_delta_calc_js__WEBPACK_IMPORTED_MODULE_0__["updateBoxDelta"])(delta, layoutCorrected, target, transformOrigin);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/utils/setters.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/utils/setters.js ***!
  \************************************************************************************************************/
/*! exports provided: checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkTargetForNewValues", function() { return checkTargetForNewValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getOrigin", function() { return getOrigin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getOriginFromTransition", function() { return getOriginFromTransition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTarget", function() { return setTarget; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setValues", function() { return setValues; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _variants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./variants.js */ "../../node_modules/framer-motion/dist/es/render/utils/variants.js");
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");
/* harmony import */ var _dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom/utils/value-types.js */ "../../node_modules/framer-motion/dist/es/render/dom/utils/value-types.js");
/* harmony import */ var _utils_is_numerical_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/is-numerical-string.js */ "../../node_modules/framer-motion/dist/es/utils/is-numerical-string.js");
/* harmony import */ var _utils_resolve_value_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/resolve-value.js */ "../../node_modules/framer-motion/dist/es/utils/resolve-value.js");
/* harmony import */ var _value_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../value/index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");








/**
 * Set VisualElement's MotionValue, creating a new MotionValue for it if
 * it doesn't exist.
 */
function setMotionValue(visualElement, key, value) {
    if (visualElement.hasValue(key)) {
        visualElement.getValue(key).set(value);
    }
    else {
        visualElement.addValue(key, Object(_value_index_js__WEBPACK_IMPORTED_MODULE_6__["motionValue"])(value));
    }
}
function setTarget(visualElement, definition) {
    var resolved = Object(_variants_js__WEBPACK_IMPORTED_MODULE_1__["resolveVariant"])(visualElement, definition);
    var _a = resolved
        ? visualElement.makeTargetAnimatable(resolved, false)
        : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b, _c = _a.transition, target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["transitionEnd", "transition"]);
    target = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, target), transitionEnd);
    for (var key in target) {
        var value = Object(_utils_resolve_value_js__WEBPACK_IMPORTED_MODULE_5__["resolveFinalValueInKeyframes"])(target[key]);
        setMotionValue(visualElement, key, value);
    }
}
function setVariants(visualElement, variantLabels) {
    var reversedLabels = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(variantLabels).reverse();
    reversedLabels.forEach(function (key) {
        var _a;
        var variant = visualElement.getVariant(key);
        variant && setTarget(visualElement, variant);
        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {
            setVariants(child, variantLabels);
        });
    });
}
function setValues(visualElement, definition) {
    if (Array.isArray(definition)) {
        return setVariants(visualElement, definition);
    }
    else if (typeof definition === "string") {
        return setVariants(visualElement, [definition]);
    }
    else {
        setTarget(visualElement, definition);
    }
}
function checkTargetForNewValues(visualElement, target, origin) {
    var _a, _b, _c;
    var _d;
    var newValueKeys = Object.keys(target).filter(function (key) { return !visualElement.hasValue(key); });
    var numNewValues = newValueKeys.length;
    if (!numNewValues)
        return;
    for (var i = 0; i < numNewValues; i++) {
        var key = newValueKeys[i];
        var targetValue = target[key];
        var value = null;
        /**
         * If the target is a series of keyframes, we can use the first value
         * in the array. If this first value is null, we'll still need to read from the DOM.
         */
        if (Array.isArray(targetValue)) {
            value = targetValue[0];
        }
        /**
         * If the target isn't keyframes, or the first keyframe was null, we need to
         * first check if an origin value was explicitly defined in the transition as "from",
         * if not read the value from the DOM. As an absolute fallback, take the defined target value.
         */
        if (value === null) {
            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];
        }
        /**
         * If value is still undefined or null, ignore it. Preferably this would throw,
         * but this was causing issues in Framer.
         */
        if (value === undefined || value === null)
            continue;
        if (typeof value === "string" && Object(_utils_is_numerical_string_js__WEBPACK_IMPORTED_MODULE_4__["isNumericalString"])(value)) {
            // If this is a number read as a string, ie "0" or "200", convert it to a number
            value = parseFloat(value);
        }
        else if (!Object(_dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_3__["findValueType"])(value) && style_value_types__WEBPACK_IMPORTED_MODULE_2__["complex"].test(targetValue)) {
            value = Object(_dom_utils_value_types_js__WEBPACK_IMPORTED_MODULE_3__["getAnimatableNone"])(key, targetValue);
        }
        visualElement.addValue(key, Object(_value_index_js__WEBPACK_IMPORTED_MODULE_6__["motionValue"])(value));
        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);
        visualElement.setBaseTarget(key, value);
    }
}
function getOriginFromTransition(key, transition) {
    if (!transition)
        return;
    var valueTransition = transition[key] || transition["default"] || transition;
    return valueTransition.from;
}
function getOrigin(target, transition, visualElement) {
    var _a, _b;
    var origin = {};
    for (var key in target) {
        origin[key] = (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();
    }
    return origin;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/utils/state.js":
/*!**********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/utils/state.js ***!
  \**********************************************************************************************************/
/*! exports provided: createLayoutState, createProjectionState, zeroLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLayoutState", function() { return createLayoutState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createProjectionState", function() { return createProjectionState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zeroLayout", function() { return zeroLayout; });
/* harmony import */ var _utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/geometry/index.js */ "../../node_modules/framer-motion/dist/es/utils/geometry/index.js");


var createProjectionState = function () { return ({
    isEnabled: false,
    isTargetLocked: false,
    target: Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__["axisBox"])(),
    targetFinal: Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__["axisBox"])(),
}); };
function createLayoutState() {
    return {
        isHydrated: false,
        layout: Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__["axisBox"])(),
        layoutCorrected: Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__["axisBox"])(),
        treeScale: { x: 1, y: 1 },
        delta: Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__["delta"])(),
        deltaFinal: Object(_utils_geometry_index_js__WEBPACK_IMPORTED_MODULE_0__["delta"])(),
        deltaTransform: "",
    };
}
var zeroLayout = createLayoutState();




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/utils/types.js":
/*!**********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/utils/types.js ***!
  \**********************************************************************************************************/
/*! exports provided: AnimationType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationType", function() { return AnimationType; });
var AnimationType;
(function (AnimationType) {
    AnimationType["Animate"] = "animate";
    AnimationType["Hover"] = "whileHover";
    AnimationType["Tap"] = "whileTap";
    AnimationType["Drag"] = "whileDrag";
    AnimationType["Focus"] = "whileFocus";
    AnimationType["Exit"] = "exit";
})(AnimationType || (AnimationType = {}));




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/render/utils/variants.js":
/*!*************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/render/utils/variants.js ***!
  \*************************************************************************************************************/
/*! exports provided: checkIfControllingVariants, isVariantLabel, isVariantLabels, resolveVariant, resolveVariantFromProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkIfControllingVariants", function() { return checkIfControllingVariants; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVariantLabel", function() { return isVariantLabel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVariantLabels", function() { return isVariantLabels; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveVariant", function() { return resolveVariant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveVariantFromProps", function() { return resolveVariantFromProps; });
/**
 * Decides if the supplied variable is an array of variant labels
 */
function isVariantLabels(v) {
    return Array.isArray(v);
}
/**
 * Decides if the supplied variable is variant label
 */
function isVariantLabel(v) {
    return typeof v === "string" || isVariantLabels(v);
}
/**
 * Creates an object containing the latest state of every MotionValue on a VisualElement
 */
function getCurrent(visualElement) {
    var current = {};
    visualElement.forEachValue(function (value, key) { return (current[key] = value.get()); });
    return current;
}
/**
 * Creates an object containing the latest velocity of every MotionValue on a VisualElement
 */
function getVelocity(visualElement) {
    var velocity = {};
    visualElement.forEachValue(function (value, key) { return (velocity[key] = value.getVelocity()); });
    return velocity;
}
function resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {
    var _a;
    if (currentValues === void 0) { currentValues = {}; }
    if (currentVelocity === void 0) { currentVelocity = {}; }
    if (typeof definition === "string") {
        definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];
    }
    return typeof definition === "function"
        ? definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)
        : definition;
}
function resolveVariant(visualElement, definition, custom) {
    var props = visualElement.getProps();
    return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));
}
function checkIfControllingVariants(props) {
    var _a;
    return (typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === "function" ||
        isVariantLabel(props.initial) ||
        isVariantLabel(props.animate) ||
        isVariantLabel(props.whileHover) ||
        isVariantLabel(props.whileDrag) ||
        isVariantLabel(props.whileTap) ||
        isVariantLabel(props.whileFocus) ||
        isVariantLabel(props.exit));
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/array.js":
/*!***************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/array.js ***!
  \***************************************************************************************************/
/*! exports provided: addUniqueItem, removeItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addUniqueItem", function() { return addUniqueItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeItem", function() { return removeItem; });
function addUniqueItem(arr, item) {
    arr.indexOf(item) === -1 && arr.push(item);
}
function removeItem(arr, item) {
    var index = arr.indexOf(item);
    index > -1 && arr.splice(index, 1);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/each-axis.js":
/*!*******************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/each-axis.js ***!
  \*******************************************************************************************************/
/*! exports provided: eachAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eachAxis", function() { return eachAxis; });
// Call a handler once for each axis
function eachAxis(handler) {
    return [handler("x"), handler("y")];
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/geometry/delta-apply.js":
/*!******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/geometry/delta-apply.js ***!
  \******************************************************************************************************************/
/*! exports provided: applyAxisDelta, applyAxisTransforms, applyBoxDelta, applyBoxTransforms, applyPointDelta, applyTreeDeltas, removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta, resetAxis, resetBox, scalePoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyAxisDelta", function() { return applyAxisDelta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyAxisTransforms", function() { return applyAxisTransforms; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyBoxDelta", function() { return applyBoxDelta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyBoxTransforms", function() { return applyBoxTransforms; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyPointDelta", function() { return applyPointDelta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyTreeDeltas", function() { return applyTreeDeltas; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeAxisDelta", function() { return removeAxisDelta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeAxisTransforms", function() { return removeAxisTransforms; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeBoxTransforms", function() { return removeBoxTransforms; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removePointDelta", function() { return removePointDelta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetAxis", function() { return resetAxis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetBox", function() { return resetBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scalePoint", function() { return scalePoint; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");



/**
 * Reset an axis to the provided origin box.
 *
 * This is a mutative operation.
 */
function resetAxis(axis, originAxis) {
    axis.min = originAxis.min;
    axis.max = originAxis.max;
}
/**
 * Reset a box to the provided origin box.
 *
 * This is a mutative operation.
 */
function resetBox(box, originBox) {
    resetAxis(box.x, originBox.x);
    resetAxis(box.y, originBox.y);
}
/**
 * Scales a point based on a factor and an originPoint
 */
function scalePoint(point, scale, originPoint) {
    var distanceFromOrigin = point - originPoint;
    var scaled = scale * distanceFromOrigin;
    return originPoint + scaled;
}
/**
 * Applies a translate/scale delta to a point
 */
function applyPointDelta(point, translate, scale, originPoint, boxScale) {
    if (boxScale !== undefined) {
        point = scalePoint(point, boxScale, originPoint);
    }
    return scalePoint(point, scale, originPoint) + translate;
}
/**
 * Applies a translate/scale delta to an axis
 */
function applyAxisDelta(axis, translate, scale, originPoint, boxScale) {
    if (translate === void 0) { translate = 0; }
    if (scale === void 0) { scale = 1; }
    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);
    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);
}
/**
 * Applies a translate/scale delta to a box
 */
function applyBoxDelta(box, _a) {
    var x = _a.x, y = _a.y;
    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);
    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);
}
/**
 * Apply a transform to an axis from the latest resolved motion values.
 * This function basically acts as a bridge between a flat motion value map
 * and applyAxisDelta
 */
function applyAxisTransforms(final, axis, transforms, _a) {
    var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
    // Copy the current axis to the final axis before mutation
    final.min = axis.min;
    final.max = axis.max;
    var axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;
    var originPoint = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(axis.min, axis.max, axisOrigin);
    // Apply the axis delta to the final axis
    applyAxisDelta(final, transforms[key], transforms[scaleKey], originPoint, transforms.scale);
}
/**
 * The names of the motion values we want to apply as translation, scale and origin.
 */
var xKeys = ["x", "scaleX", "originX"];
var yKeys = ["y", "scaleY", "originY"];
/**
 * Apply a transform to a box from the latest resolved motion values.
 */
function applyBoxTransforms(finalBox, box, transforms) {
    applyAxisTransforms(finalBox.x, box.x, transforms, xKeys);
    applyAxisTransforms(finalBox.y, box.y, transforms, yKeys);
}
/**
 * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse
 */
function removePointDelta(point, translate, scale, originPoint, boxScale) {
    point -= translate;
    point = scalePoint(point, 1 / scale, originPoint);
    if (boxScale !== undefined) {
        point = scalePoint(point, 1 / boxScale, originPoint);
    }
    return point;
}
/**
 * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse
 */
function removeAxisDelta(axis, translate, scale, origin, boxScale) {
    if (translate === void 0) { translate = 0; }
    if (scale === void 0) { scale = 1; }
    if (origin === void 0) { origin = 0.5; }
    var originPoint = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["mix"])(axis.min, axis.max, origin) - translate;
    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);
    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);
}
/**
 * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse
 * and acts as a bridge between motion values and removeAxisDelta
 */
function removeAxisTransforms(axis, transforms, _a) {
    var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale);
}
/**
 * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse
 * and acts as a bridge between motion values and removeAxisDelta
 */
function removeBoxTransforms(box, transforms) {
    removeAxisTransforms(box.x, transforms, xKeys);
    removeAxisTransforms(box.y, transforms, yKeys);
}
/**
 * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms
 * in a tree upon our box before then calculating how to project it into our desired viewport-relative box
 *
 * This is the final nested loop within updateLayoutDelta for future refactoring
 */
function applyTreeDeltas(box, treeScale, treePath) {
    var treeLength = treePath.length;
    if (!treeLength)
        return;
    // Reset the treeScale
    treeScale.x = treeScale.y = 1;
    for (var i = 0; i < treeLength; i++) {
        var delta = treePath[i].getLayoutState().delta;
        // Incoporate each ancestor's scale into a culmulative treeScale for this component
        treeScale.x *= delta.x.scale;
        treeScale.y *= delta.y.scale;
        // Apply each ancestor's calculated delta into this component's recorded layout box
        applyBoxDelta(box, delta);
    }
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/geometry/delta-calc.js":
/*!*****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/geometry/delta-calc.js ***!
  \*****************************************************************************************************************/
/*! exports provided: calcOrigin, isNear, updateAxisDelta, updateBoxDelta */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcOrigin", function() { return calcOrigin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNear", function() { return isNear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateAxisDelta", function() { return updateAxisDelta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBoxDelta", function() { return updateBoxDelta; });
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");


var clampProgress = function (v) { return Object(popmotion__WEBPACK_IMPORTED_MODULE_0__["clamp"])(0, 1, v); };
/**
 * Returns true if the provided value is within maxDistance of the provided target
 */
function isNear(value, target, maxDistance) {
    if (target === void 0) { target = 0; }
    if (maxDistance === void 0) { maxDistance = 0.01; }
    return Object(popmotion__WEBPACK_IMPORTED_MODULE_0__["distance"])(value, target) < maxDistance;
}
function calcLength(axis) {
    return axis.max - axis.min;
}
/**
 * Calculate a transform origin relative to the source axis, between 0-1, that results
 * in an asthetically pleasing scale/transform needed to project from source to target.
 */
function calcOrigin(source, target) {
    var origin = 0.5;
    var sourceLength = calcLength(source);
    var targetLength = calcLength(target);
    if (targetLength > sourceLength) {
        origin = Object(popmotion__WEBPACK_IMPORTED_MODULE_0__["progress"])(target.min, target.max - sourceLength, source.min);
    }
    else if (sourceLength > targetLength) {
        origin = Object(popmotion__WEBPACK_IMPORTED_MODULE_0__["progress"])(source.min, source.max - targetLength, target.min);
    }
    return clampProgress(origin);
}
/**
 * Update the AxisDelta with a transform that projects source into target.
 *
 * The transform `origin` is optional. If not provided, it'll be automatically
 * calculated based on the relative positions of the two bounding boxes.
 */
function updateAxisDelta(delta, source, target, origin) {
    if (origin === void 0) { origin = 0.5; }
    delta.origin = origin;
    delta.originPoint = Object(popmotion__WEBPACK_IMPORTED_MODULE_0__["mix"])(source.min, source.max, delta.origin);
    delta.scale = calcLength(target) / calcLength(source);
    if (isNear(delta.scale, 1, 0.0001))
        delta.scale = 1;
    delta.translate =
        Object(popmotion__WEBPACK_IMPORTED_MODULE_0__["mix"])(target.min, target.max, delta.origin) - delta.originPoint;
    if (isNear(delta.translate))
        delta.translate = 0;
}
/**
 * Update the BoxDelta with a transform that projects the source into the target.
 *
 * The transform `origin` is optional. If not provided, it'll be automatically
 * calculated based on the relative positions of the two bounding boxes.
 */
function updateBoxDelta(delta, source, target, origin) {
    updateAxisDelta(delta.x, source.x, target.x, defaultOrigin(origin.originX));
    updateAxisDelta(delta.y, source.y, target.y, defaultOrigin(origin.originY));
}
/**
 * Currently this only accepts numerical origins, measured as 0-1, but could
 * accept pixel values by comparing to the target axis.
 */
function defaultOrigin(origin) {
    return typeof origin === "number" ? origin : 0.5;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/geometry/index.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/geometry/index.js ***!
  \************************************************************************************************************/
/*! exports provided: axisBox, convertAxisBoxToBoundingBox, convertBoundingBoxToAxisBox, copyAxisBox, delta, transformBoundingBox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisBox", function() { return axisBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertAxisBoxToBoundingBox", function() { return convertAxisBoxToBoundingBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertBoundingBoxToAxisBox", function() { return convertBoundingBoxToAxisBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyAxisBox", function() { return copyAxisBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delta", function() { return delta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformBoundingBox", function() { return transformBoundingBox; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop.js */ "../../node_modules/framer-motion/dist/es/utils/noop.js");



/**
 * Bounding boxes tend to be defined as top, left, right, bottom. For various operations
 * it's easier to consider each axis individually. This function returns a bounding box
 * as a map of single-axis min/max values.
 */
function convertBoundingBoxToAxisBox(_a) {
    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;
    return {
        x: { min: left, max: right },
        y: { min: top, max: bottom },
    };
}
function convertAxisBoxToBoundingBox(_a) {
    var x = _a.x, y = _a.y;
    return {
        top: y.min,
        bottom: y.max,
        left: x.min,
        right: x.max,
    };
}
/**
 * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function
 * provided by Framer to allow measured points to be corrected for device scaling. This is used
 * when measuring DOM elements and DOM event points.
 */
function transformBoundingBox(_a, transformPoint) {
    var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;
    if (transformPoint === void 0) { transformPoint = _noop_js__WEBPACK_IMPORTED_MODULE_1__["noop"]; }
    var topLeft = transformPoint({ x: left, y: top });
    var bottomRight = transformPoint({ x: right, y: bottom });
    return {
        top: topLeft.y,
        left: topLeft.x,
        bottom: bottomRight.y,
        right: bottomRight.x,
    };
}
/**
 * Create an empty axis box of zero size
 */
function axisBox() {
    return { x: { min: 0, max: 1 }, y: { min: 0, max: 1 } };
}
function copyAxisBox(box) {
    return {
        x: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, box.x),
        y: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, box.y),
    };
}
/**
 * Create an empty box delta
 */
var zeroDelta = {
    translate: 0,
    scale: 1,
    origin: 0,
    originPoint: 0,
};
function delta() {
    return {
        x: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, zeroDelta),
        y: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, zeroDelta),
    };
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/is-numerical-string.js":
/*!*****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/is-numerical-string.js ***!
  \*****************************************************************************************************************/
/*! exports provided: isNumericalString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumericalString", function() { return isNumericalString; });
/**
 * Check if value is a numerical string, ie a string that is purely a number eg "100" or "-100.1"
 */
var isNumericalString = function (v) { return /^\-?\d*\.?\d+$/.test(v); };




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/is-ref-object.js":
/*!***********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/is-ref-object.js ***!
  \***********************************************************************************************************/
/*! exports provided: isRefObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRefObject", function() { return isRefObject; });
function isRefObject(ref) {
    return (typeof ref === "object" &&
        Object.prototype.hasOwnProperty.call(ref, "current"));
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/noop.js":
/*!**************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/noop.js ***!
  \**************************************************************************************************/
/*! exports provided: noop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return noop; });
function noop(any) {
    return any;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/resolve-value.js":
/*!***********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/resolve-value.js ***!
  \***********************************************************************************************************/
/*! exports provided: isCustomValue, resolveFinalValueInKeyframes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCustomValue", function() { return isCustomValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveFinalValueInKeyframes", function() { return resolveFinalValueInKeyframes; });
/* harmony import */ var _animation_utils_is_keyframes_target_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../animation/utils/is-keyframes-target.js */ "../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.js");


var isCustomValue = function (v) {
    return Boolean(v && typeof v === "object" && v.mix && v.toValue);
};
var resolveFinalValueInKeyframes = function (v) {
    // TODO maybe throw if v.length - 1 is placeholder token?
    return Object(_animation_utils_is_keyframes_target_js__WEBPACK_IMPORTED_MODULE_0__["isKeyframesTarget"])(v) ? v[v.length - 1] || 0 : v;
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/shallow-compare.js":
/*!*************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/shallow-compare.js ***!
  \*************************************************************************************************************/
/*! exports provided: shallowCompare */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shallowCompare", function() { return shallowCompare; });
function shallowCompare(next, prev) {
    if (!Array.isArray(prev))
        return false;
    var prevLength = prev.length;
    if (prevLength !== next.length)
        return false;
    for (var i = 0; i < prevLength; i++) {
        if (prev[i] !== next[i])
            return false;
    }
    return true;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/subscription-manager.js":
/*!******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/subscription-manager.js ***!
  \******************************************************************************************************************/
/*! exports provided: SubscriptionManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubscriptionManager", function() { return SubscriptionManager; });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ "../../node_modules/framer-motion/dist/es/utils/array.js");


var SubscriptionManager = /** @class */ (function () {
    function SubscriptionManager() {
        this.subscriptions = [];
    }
    SubscriptionManager.prototype.add = function (handler) {
        var _this = this;
        Object(_array_js__WEBPACK_IMPORTED_MODULE_0__["addUniqueItem"])(this.subscriptions, handler);
        return function () { return Object(_array_js__WEBPACK_IMPORTED_MODULE_0__["removeItem"])(_this.subscriptions, handler); };
    };
    SubscriptionManager.prototype.notify = function (a, b, c) {
        var numSubscriptions = this.subscriptions.length;
        if (!numSubscriptions)
            return;
        if (numSubscriptions === 1) {
            /**
             * If there's only a single handler we can just call it without invoking a loop.
             */
            this.subscriptions[0](a, b, c);
        }
        else {
            for (var i = 0; i < numSubscriptions; i++) {
                /**
                 * Check whether the handler exists before firing as it's possible
                 * the subscriptions were modified during this loop running.
                 */
                var handler = this.subscriptions[i];
                handler && handler(a, b, c);
            }
        }
    };
    SubscriptionManager.prototype.getSize = function () {
        return this.subscriptions.length;
    };
    SubscriptionManager.prototype.clear = function () {
        this.subscriptions.length = 0;
    };
    return SubscriptionManager;
}());




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/time-conversion.js":
/*!*************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/time-conversion.js ***!
  \*************************************************************************************************************/
/*! exports provided: secondsToMilliseconds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "secondsToMilliseconds", function() { return secondsToMilliseconds; });
/**
 * Converts seconds to milliseconds
 *
 * @param seconds - Time in seconds.
 * @return milliseconds - Converted time in milliseconds.
 */
var secondsToMilliseconds = function (seconds) { return seconds * 1000; };




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/transform.js":
/*!*******************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/transform.js ***!
  \*******************************************************************************************************/
/*! exports provided: transform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return transform; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");



var isCustomValueType = function (v) {
    return typeof v === "object" && v.mix;
};
var getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };
function transform() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var useImmediate = !Array.isArray(args[0]);
    var argOffset = useImmediate ? 0 : -1;
    var inputValue = args[0 + argOffset];
    var inputRange = args[1 + argOffset];
    var outputRange = args[2 + argOffset];
    var options = args[3 + argOffset];
    var interpolator = Object(popmotion__WEBPACK_IMPORTED_MODULE_1__["interpolate"])(inputRange, outputRange, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ mixer: getMixer(outputRange[0]) }, options));
    return useImmediate ? interpolator(inputValue) : interpolator;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/use-constant.js":
/*!**********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/use-constant.js ***!
  \**********************************************************************************************************/
/*! exports provided: useConstant */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useConstant", function() { return useConstant; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


/**
 * Creates a constant value over the lifecycle of a component.
 *
 * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer
 * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`
 * you can ensure that initialisers don't execute twice or more.
 */
function useConstant(init) {
    var ref = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
    if (ref.current === null) {
        ref.current = init();
    }
    return ref.current;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/use-cycle.js":
/*!*******************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/use-cycle.js ***!
  \*******************************************************************************************************/
/*! exports provided: useCycle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCycle", function() { return useCycle; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");




/**
 * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.
 *
 * @library
 *
 * ```jsx
 * import * as React from "react"
 * import { Frame, useCycle } from "framer"
 *
 * export function MyComponent() {
 *   const [x, cycleX] = useCycle(0, 50, 100)
 *
 *   return (
 *     <Frame
 *       animate={{ x: x }}
 *       onTap={() => cycleX()}
 *      />
 *    )
 * }
 * ```
 *
 * @motion
 *
 * An index value can be passed to the returned `cycle` function to cycle to a specific index.
 *
 * ```jsx
 * import * as React from "react"
 * import { motion, useCycle } from "framer-motion"
 *
 * export const MyComponent = () => {
 *   const [x, cycleX] = useCycle(0, 50, 100)
 *
 *   return (
 *     <motion.div
 *       animate={{ x: x }}
 *       onTap={() => cycleX()}
 *      />
 *    )
 * }
 * ```
 *
 * @param items - items to cycle through
 * @returns [currentState, cycleState]
 *
 * @public
 */
function useCycle() {
    var items = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        items[_i] = arguments[_i];
    }
    var index = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(0);
    var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(items[index.current]), 2), item = _a[0], setItem = _a[1];
    return [
        item,
        function (next) {
            index.current =
                typeof next !== "number"
                    ? Object(popmotion__WEBPACK_IMPORTED_MODULE_2__["wrap"])(0, items.length, index.current + 1)
                    : next;
            setItem(items[index.current]);
        },
    ];
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/use-force-update.js":
/*!**************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/use-force-update.js ***!
  \**************************************************************************************************************/
/*! exports provided: useForceUpdate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useForceUpdate", function() { return useForceUpdate; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _use_unmount_effect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-unmount-effect.js */ "../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.js");




function useForceUpdate() {
    var unloadingRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(false);
    var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];
    Object(_use_unmount_effect_js__WEBPACK_IMPORTED_MODULE_2__["useUnmountEffect"])(function () { return (unloadingRef.current = true); });
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(function () {
        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);
    }, [forcedRenderCount]);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.js ***!
  \*******************************************************************************************************************/
/*! exports provided: useIsomorphicLayoutEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useIsomorphicLayoutEffect", function() { return useIsomorphicLayoutEffect; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


var isBrowser = typeof window !== "undefined";
var useIsomorphicLayoutEffect = isBrowser ? react__WEBPACK_IMPORTED_MODULE_0__["useLayoutEffect"] : react__WEBPACK_IMPORTED_MODULE_0__["useEffect"];




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/use-reduced-motion.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/use-reduced-motion.js ***!
  \****************************************************************************************************************/
/*! exports provided: useReducedMotion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useReducedMotion", function() { return useReducedMotion; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _value_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../value/index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");
/* harmony import */ var _value_use_on_change_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../value/use-on-change.js */ "../../node_modules/framer-motion/dist/es/value/use-on-change.js");





// Does this device prefer reduced motion? Returns `null` server-side.
var prefersReducedMotion;
function initPrefersReducedMotion() {
    prefersReducedMotion = Object(_value_index_js__WEBPACK_IMPORTED_MODULE_2__["motionValue"])(null);
    if (typeof window === "undefined")
        return;
    if (window.matchMedia) {
        var motionMediaQuery_1 = window.matchMedia("(prefers-reduced-motion)");
        var setReducedMotionPreferences = function () {
            return prefersReducedMotion.set(motionMediaQuery_1.matches);
        };
        motionMediaQuery_1.addListener(setReducedMotionPreferences);
        setReducedMotionPreferences();
    }
    else {
        prefersReducedMotion.set(false);
    }
}
/**
 * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.
 *
 * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing
 * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.
 *
 * It will actively respond to changes and re-render your components with the latest setting.
 *
 * ```jsx
 * export function Sidebar({ isOpen }) {
 *   const shouldReduceMotion = useReducedMotion()
 *   const closedX = shouldReduceMotion ? 0 : "-100%"
 *
 *   return (
 *     <motion.div animate={{
 *       opacity: isOpen ? 1 : 0,
 *       x: isOpen ? 0 : closedX
 *     }} />
 *   )
 * }
 * ```
 *
 * @return boolean
 *
 * @public
 */
function useReducedMotion() {
    /**
     * Lazy initialisation of prefersReducedMotion
     */
    !prefersReducedMotion && initPrefersReducedMotion();
    var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(prefersReducedMotion.get()), 2), shouldReduceMotion = _a[0], setShouldReduceMotion = _a[1];
    Object(_value_use_on_change_js__WEBPACK_IMPORTED_MODULE_3__["useOnChange"])(prefersReducedMotion, setShouldReduceMotion);
    return shouldReduceMotion;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/utils/use-unmount-effect.js ***!
  \****************************************************************************************************************/
/*! exports provided: useUnmountEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useUnmountEffect", function() { return useUnmountEffect; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


function useUnmountEffect(callback) {
    return Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () { return function () { return callback(); }; }, []);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/index.js":
/*!***************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/index.js ***!
  \***************************************************************************************************/
/*! exports provided: MotionValue, motionValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MotionValue", function() { return MotionValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "motionValue", function() { return motionValue; });
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! framesync */ "../../node_modules/framesync/dist/es/index.js");
/* harmony import */ var _utils_subscription_manager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/subscription-manager.js */ "../../node_modules/framer-motion/dist/es/utils/subscription-manager.js");




var isFloat = function (value) {
    return !isNaN(parseFloat(value));
};
/**
 * `MotionValue` is used to track the state and velocity of motion values.
 *
 * @public
 */
var MotionValue = /** @class */ (function () {
    /**
     * @param init - The initiating value
     * @param config - Optional configuration options
     *
     * -  `transformer`: A function to transform incoming values with.
     *
     * @internal
     */
    function MotionValue(init) {
        var _this = this;
        /**
         * Duration, in milliseconds, since last updating frame.
         *
         * @internal
         */
        this.timeDelta = 0;
        /**
         * Timestamp of the last time this `MotionValue` was updated.
         *
         * @internal
         */
        this.lastUpdated = 0;
        /**
         * Functions to notify when the `MotionValue` updates.
         *
         * @internal
         */
        this.updateSubscribers = new _utils_subscription_manager_js__WEBPACK_IMPORTED_MODULE_2__["SubscriptionManager"]();
        /**
         * Functions to notify when the velocity updates.
         *
         * @internal
         */
        this.velocityUpdateSubscribers = new _utils_subscription_manager_js__WEBPACK_IMPORTED_MODULE_2__["SubscriptionManager"]();
        /**
         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.
         *
         * @internal
         */
        this.renderSubscribers = new _utils_subscription_manager_js__WEBPACK_IMPORTED_MODULE_2__["SubscriptionManager"]();
        /**
         * Tracks whether this value can output a velocity. Currently this is only true
         * if the value is numerical, but we might be able to widen the scope here and support
         * other value types.
         *
         * @internal
         */
        this.canTrackVelocity = false;
        this.updateAndNotify = function (v, render) {
            if (render === void 0) { render = true; }
            _this.prev = _this.current;
            _this.current = v;
            // Update timestamp
            var _a = Object(framesync__WEBPACK_IMPORTED_MODULE_1__["getFrameData"])(), delta = _a.delta, timestamp = _a.timestamp;
            if (_this.lastUpdated !== timestamp) {
                _this.timeDelta = delta;
                _this.lastUpdated = timestamp;
                framesync__WEBPACK_IMPORTED_MODULE_1__["default"].postRender(_this.scheduleVelocityCheck);
            }
            // Update update subscribers
            if (_this.prev !== _this.current) {
                _this.updateSubscribers.notify(_this.current);
            }
            // Update velocity subscribers
            if (_this.velocityUpdateSubscribers.getSize()) {
                _this.velocityUpdateSubscribers.notify(_this.getVelocity());
            }
            // Update render subscribers
            if (render) {
                _this.renderSubscribers.notify(_this.current);
            }
        };
        /**
         * Schedule a velocity check for the next frame.
         *
         * This is an instanced and bound function to prevent generating a new
         * function once per frame.
         *
         * @internal
         */
        this.scheduleVelocityCheck = function () { return framesync__WEBPACK_IMPORTED_MODULE_1__["default"].postRender(_this.velocityCheck); };
        /**
         * Updates `prev` with `current` if the value hasn't been updated this frame.
         * This ensures velocity calculations return `0`.
         *
         * This is an instanced and bound function to prevent generating a new
         * function once per frame.
         *
         * @internal
         */
        this.velocityCheck = function (_a) {
            var timestamp = _a.timestamp;
            if (timestamp !== _this.lastUpdated) {
                _this.prev = _this.current;
                _this.velocityUpdateSubscribers.notify(_this.getVelocity());
            }
        };
        this.hasAnimated = false;
        this.prev = this.current = init;
        this.canTrackVelocity = isFloat(this.current);
    }
    /**
     * Adds a function that will be notified when the `MotionValue` is updated.
     *
     * It returns a function that, when called, will cancel the subscription.
     *
     * When calling `onChange` inside a React component, it should be wrapped with the
     * `useEffect` hook. As it returns an unsubscribe function, this should be returned
     * from the `useEffect` function to ensure you don't add duplicate subscribers..
     *
     * @library
     *
     * ```jsx
     * function MyComponent() {
     *   const x = useMotionValue(0)
     *   const y = useMotionValue(0)
     *   const opacity = useMotionValue(1)
     *
     *   useEffect(() => {
     *     function updateOpacity() {
     *       const maxXY = Math.max(x.get(), y.get())
     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
     *       opacity.set(newOpacity)
     *     }
     *
     *     const unsubscribeX = x.onChange(updateOpacity)
     *     const unsubscribeY = y.onChange(updateOpacity)
     *
     *     return () => {
     *       unsubscribeX()
     *       unsubscribeY()
     *     }
     *   }, [])
     *
     *   return <Frame x={x} />
     * }
     * ```
     *
     * @motion
     *
     * ```jsx
     * export const MyComponent = () => {
     *   const x = useMotionValue(0)
     *   const y = useMotionValue(0)
     *   const opacity = useMotionValue(1)
     *
     *   useEffect(() => {
     *     function updateOpacity() {
     *       const maxXY = Math.max(x.get(), y.get())
     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
     *       opacity.set(newOpacity)
     *     }
     *
     *     const unsubscribeX = x.onChange(updateOpacity)
     *     const unsubscribeY = y.onChange(updateOpacity)
     *
     *     return () => {
     *       unsubscribeX()
     *       unsubscribeY()
     *     }
     *   }, [])
     *
     *   return <motion.div style={{ x }} />
     * }
     * ```
     *
     * @internalremarks
     *
     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.
     *
     * ```jsx
     * useOnChange(x, () => {})
     * ```
     *
     * @param subscriber - A function that receives the latest value.
     * @returns A function that, when called, will cancel this subscription.
     *
     * @public
     */
    MotionValue.prototype.onChange = function (subscription) {
        return this.updateSubscribers.add(subscription);
    };
    MotionValue.prototype.clearListeners = function () {
        this.updateSubscribers.clear();
    };
    /**
     * Adds a function that will be notified when the `MotionValue` requests a render.
     *
     * @param subscriber - A function that's provided the latest value.
     * @returns A function that, when called, will cancel this subscription.
     *
     * @internal
     */
    MotionValue.prototype.onRenderRequest = function (subscription) {
        // Render immediately
        subscription(this.get());
        return this.renderSubscribers.add(subscription);
    };
    /**
     * Attaches a passive effect to the `MotionValue`.
     *
     * @internal
     */
    MotionValue.prototype.attach = function (passiveEffect) {
        this.passiveEffect = passiveEffect;
    };
    /**
     * Sets the state of the `MotionValue`.
     *
     * @remarks
     *
     * ```jsx
     * const x = useMotionValue(0)
     * x.set(10)
     * ```
     *
     * @param latest - Latest value to set.
     * @param render - Whether to notify render subscribers. Defaults to `true`
     *
     * @public
     */
    MotionValue.prototype.set = function (v, render) {
        if (render === void 0) { render = true; }
        if (!render || !this.passiveEffect) {
            this.updateAndNotify(v, render);
        }
        else {
            this.passiveEffect(v, this.updateAndNotify);
        }
    };
    /**
     * Returns the latest state of `MotionValue`
     *
     * @returns - The latest state of `MotionValue`
     *
     * @public
     */
    MotionValue.prototype.get = function () {
        return this.current;
    };
    /**
     * @public
     */
    MotionValue.prototype.getPrevious = function () {
        return this.prev;
    };
    /**
     * Returns the latest velocity of `MotionValue`
     *
     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
     *
     * @public
     */
    MotionValue.prototype.getVelocity = function () {
        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful
        return this.canTrackVelocity
            ? // These casts could be avoided if parseFloat would be typed better
                Object(popmotion__WEBPACK_IMPORTED_MODULE_0__["velocityPerSecond"])(parseFloat(this.current) -
                    parseFloat(this.prev), this.timeDelta)
            : 0;
    };
    /**
     * Registers a new animation to control this `MotionValue`. Only one
     * animation can drive a `MotionValue` at one time.
     *
     * ```jsx
     * value.start()
     * ```
     *
     * @param animation - A function that starts the provided animation
     *
     * @internal
     */
    MotionValue.prototype.start = function (animation) {
        var _this = this;
        this.stop();
        return new Promise(function (resolve) {
            _this.hasAnimated = true;
            _this.stopAnimation = animation(resolve);
        }).then(function () { return _this.clearAnimation(); });
    };
    /**
     * Stop the currently active animation.
     *
     * @public
     */
    MotionValue.prototype.stop = function () {
        if (this.stopAnimation)
            this.stopAnimation();
        this.clearAnimation();
    };
    /**
     * Returns `true` if this value is currently animating.
     *
     * @public
     */
    MotionValue.prototype.isAnimating = function () {
        return !!this.stopAnimation;
    };
    MotionValue.prototype.clearAnimation = function () {
        this.stopAnimation = null;
    };
    /**
     * Destroy and clean up subscribers to this `MotionValue`.
     *
     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
     * created a `MotionValue` via the `motionValue` function.
     *
     * @public
     */
    MotionValue.prototype.destroy = function () {
        this.updateSubscribers.clear();
        this.renderSubscribers.clear();
        this.stop();
    };
    return MotionValue;
}());
/**
 * @internal
 */
function motionValue(init) {
    return new MotionValue(init);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/scroll/use-element-scroll.js":
/*!***********************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/scroll/use-element-scroll.js ***!
  \***********************************************************************************************************************/
/*! exports provided: useElementScroll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useElementScroll", function() { return useElementScroll; });
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");
/* harmony import */ var _utils_use_isomorphic_effect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/use-isomorphic-effect.js */ "../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var _events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../events/use-dom-event.js */ "../../node_modules/framer-motion/dist/es/events/use-dom-event.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ "../../node_modules/framer-motion/dist/es/value/scroll/utils.js");






var getElementScrollOffsets = function (element) { return function () {
    return {
        xOffset: element.scrollLeft,
        yOffset: element.scrollTop,
        xMaxOffset: element.scrollWidth - element.offsetWidth,
        yMaxOffset: element.scrollHeight - element.offsetHeight,
    };
}; };
/**
 * Returns MotionValues that update when the provided element scrolls:
 *
 * - `scrollX` — Horizontal scroll distance in pixels.
 * - `scrollY` — Vertical scroll distance in pixels.
 * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.
 * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.
 *
 * This element must be set to `overflow: scroll` on either or both axes to report scroll offset.
 *
 * @library
 *
 * ```jsx
 * import * as React from "react"
 * import {
 *   Frame,
 *   useElementScroll,
 *   useTransform
 * } from "framer"
 *
 * export function MyComponent() {
 *   const ref = React.useRef()
 *   const { scrollYProgress } = useElementScroll(ref)
 *
 *   return (
 *     <Frame ref={ref}>
 *       <Frame scaleX={scrollYProgress} />
 *     </Frame>
 *   )
 * }
 * ```
 *
 * @motion
 *
 * ```jsx
 * export const MyComponent = () => {
 *   const ref = useRef()
 *   const { scrollYProgress } = useElementScroll(ref)
 *
 *   return (
 *     <div ref={ref}>
 *       <motion.div style={{ scaleX: scrollYProgress }} />
 *     </div>
 *   )
 * }
 * ```
 *
 * @public
 */
function useElementScroll(ref) {
    var values = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_0__["useConstant"])(_utils_js__WEBPACK_IMPORTED_MODULE_4__["createScrollMotionValues"]);
    Object(_utils_use_isomorphic_effect_js__WEBPACK_IMPORTED_MODULE_1__["useIsomorphicLayoutEffect"])(function () {
        var element = ref.current;
        Object(hey_listen__WEBPACK_IMPORTED_MODULE_2__["invariant"])(!!element, "ref provided to useScroll must be passed into a HTML element.");
        if (!element)
            return;
        var updateScrollValues = Object(_utils_js__WEBPACK_IMPORTED_MODULE_4__["createScrollUpdater"])(values, getElementScrollOffsets(element));
        var scrollListener = Object(_events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_3__["addDomEvent"])(element, "scroll", updateScrollValues, { passive: true });
        var resizeListener = Object(_events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_3__["addDomEvent"])(element, "resize", updateScrollValues);
        return function () {
            scrollListener && scrollListener();
            resizeListener && resizeListener();
        };
    }, []);
    return values;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/scroll/use-viewport-scroll.js":
/*!************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/scroll/use-viewport-scroll.js ***!
  \************************************************************************************************************************/
/*! exports provided: useViewportScroll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useViewportScroll", function() { return useViewportScroll; });
/* harmony import */ var _utils_use_isomorphic_effect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/use-isomorphic-effect.js */ "../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.js");
/* harmony import */ var _events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../events/use-dom-event.js */ "../../node_modules/framer-motion/dist/es/events/use-dom-event.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "../../node_modules/framer-motion/dist/es/value/scroll/utils.js");




var viewportScrollValues;
function getViewportScrollOffsets() {
    return {
        xOffset: window.pageXOffset,
        yOffset: window.pageYOffset,
        xMaxOffset: document.body.clientWidth - window.innerWidth,
        yMaxOffset: document.body.clientHeight - window.innerHeight,
    };
}
var hasListeners = false;
function addEventListeners() {
    hasListeners = true;
    if (typeof window === "undefined")
        return;
    var updateScrollValues = Object(_utils_js__WEBPACK_IMPORTED_MODULE_2__["createScrollUpdater"])(viewportScrollValues, getViewportScrollOffsets);
    Object(_events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_1__["addDomEvent"])(window, "scroll", updateScrollValues, { passive: true });
    Object(_events_use_dom_event_js__WEBPACK_IMPORTED_MODULE_1__["addDomEvent"])(window, "resize", updateScrollValues);
}
/**
 * Returns MotionValues that update when the viewport scrolls:
 *
 * - `scrollX` — Horizontal scroll distance in pixels.
 * - `scrollY` — Vertical scroll distance in pixels.
 * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.
 * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.
 *
 * **Warning:** Setting `body` or `html` to `height: 100%` or similar will break the `Progress`
 * values as this breaks the browser's capability to accurately measure the page length.
 *
 * @library
 *
 * ```jsx
 * import * as React from "react"
 * import {
 *   Frame,
 *   useViewportScroll,
 *   useTransform
 * } from "framer"
 *
 * export function MyComponent() {
 *   const { scrollYProgress } = useViewportScroll()
 *   return <Frame scaleX={scrollYProgress} />
 * }
 * ```
 *
 * @motion
 *
 * ```jsx
 * export const MyComponent = () => {
 *   const { scrollYProgress } = useViewportScroll()
 *   return <motion.div style={{ scaleX: scrollYProgress }} />
 * }
 * ```
 *
 * @public
 */
function useViewportScroll() {
    /**
     * Lazy-initialise the viewport scroll values
     */
    if (!viewportScrollValues) {
        viewportScrollValues = Object(_utils_js__WEBPACK_IMPORTED_MODULE_2__["createScrollMotionValues"])();
    }
    Object(_utils_use_isomorphic_effect_js__WEBPACK_IMPORTED_MODULE_0__["useIsomorphicLayoutEffect"])(function () {
        !hasListeners && addEventListeners();
    }, []);
    return viewportScrollValues;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/scroll/utils.js":
/*!**********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/scroll/utils.js ***!
  \**********************************************************************************************************/
/*! exports provided: createScrollMotionValues, createScrollUpdater */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createScrollMotionValues", function() { return createScrollMotionValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createScrollUpdater", function() { return createScrollUpdater; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");


function createScrollMotionValues() {
    return {
        scrollX: Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["motionValue"])(0),
        scrollY: Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["motionValue"])(0),
        scrollXProgress: Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["motionValue"])(0),
        scrollYProgress: Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["motionValue"])(0),
    };
}
function setProgress(offset, maxOffset, value) {
    value.set(!offset || !maxOffset ? 0 : offset / maxOffset);
}
function createScrollUpdater(values, getOffsets) {
    var update = function () {
        var _a = getOffsets(), xOffset = _a.xOffset, yOffset = _a.yOffset, xMaxOffset = _a.xMaxOffset, yMaxOffset = _a.yMaxOffset;
        // Set absolute positions
        values.scrollX.set(xOffset);
        values.scrollY.set(yOffset);
        // Set 0-1 progress
        setProgress(xOffset, xMaxOffset, values.scrollXProgress);
        setProgress(yOffset, yMaxOffset, values.scrollYProgress);
    };
    update();
    return update;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/use-combine-values.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/use-combine-values.js ***!
  \****************************************************************************************************************/
/*! exports provided: useCombineMotionValues */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useCombineMotionValues", function() { return useCombineMotionValues; });
/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! framesync */ "../../node_modules/framesync/dist/es/index.js");
/* harmony import */ var _use_motion_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/use-motion-value.js");
/* harmony import */ var _use_on_change_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-on-change.js */ "../../node_modules/framer-motion/dist/es/value/use-on-change.js");




function useCombineMotionValues(values, combineValues) {
    /**
     * Initialise the returned motion value. This remains the same between renders.
     */
    var value = Object(_use_motion_value_js__WEBPACK_IMPORTED_MODULE_1__["useMotionValue"])(combineValues());
    /**
     * Create a function that will update the template motion value with the latest values.
     * This is pre-bound so whenever a motion value updates it can schedule its
     * execution in Framesync. If it's already been scheduled it won't be fired twice
     * in a single frame.
     */
    var updateValue = function () { return value.set(combineValues()); };
    /**
     * Synchronously update the motion value with the latest values during the render.
     * This ensures that within a React render, the styles applied to the DOM are up-to-date.
     */
    updateValue();
    /**
     * Subscribe to all motion values found within the template. Whenever any of them change,
     * schedule an update.
     */
    Object(_use_on_change_js__WEBPACK_IMPORTED_MODULE_2__["useMultiOnChange"])(values, function () { return framesync__WEBPACK_IMPORTED_MODULE_0__["default"].update(updateValue, false, true); });
    return value;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/use-inverted-scale.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/use-inverted-scale.js ***!
  \****************************************************************************************************************/
/*! exports provided: invertScale, useInvertedScale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invertScale", function() { return invertScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useInvertedScale", function() { return useInvertedScale; });
/* harmony import */ var _context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/MotionContext/index.js */ "../../node_modules/framer-motion/dist/es/context/MotionContext/index.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var _use_motion_value_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/use-motion-value.js");
/* harmony import */ var _use_transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use-transform.js */ "../../node_modules/framer-motion/dist/es/value/use-transform.js");





// Keep things reasonable and avoid scale: Infinity. In practise we might need
// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]
// to simply hide content at unreasonable scales.
var maxScale = 100000;
var invertScale = function (scale) {
    return scale > 0.001 ? 1 / scale : maxScale;
};
var hasWarned = false;
/**
 * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse
 * of their respective parent scales.
 *
 * This is useful for undoing the distortion of content when scaling a parent component.
 *
 * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.
 * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output
 * of those instead.
 *
 * @motion
 *
 * ```jsx
 * const MyComponent = () => {
 *   const { scaleX, scaleY } = useInvertedScale()
 *   return <motion.div style={{ scaleX, scaleY }} />
 * }
 * ```
 *
 * @library
 *
 * ```jsx
 * function MyComponent() {
 *   const { scaleX, scaleY } = useInvertedScale()
 *   return <Frame scaleX={scaleX} scaleY={scaleY} />
 * }
 * ```
 *
 * @deprecated
 */
function useInvertedScale(scale) {
    var parentScaleX = Object(_use_motion_value_js__WEBPACK_IMPORTED_MODULE_2__["useMotionValue"])(1);
    var parentScaleY = Object(_use_motion_value_js__WEBPACK_IMPORTED_MODULE_2__["useMotionValue"])(1);
    var visualElement = Object(_context_MotionContext_index_js__WEBPACK_IMPORTED_MODULE_0__["useVisualElementContext"])();
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["invariant"])(!!(scale || visualElement), "If no scale values are provided, useInvertedScale must be used within a child of another motion component.");
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_1__["warning"])(hasWarned, "useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead.");
    hasWarned = true;
    if (scale) {
        parentScaleX = scale.scaleX || parentScaleX;
        parentScaleY = scale.scaleY || parentScaleY;
    }
    else if (visualElement) {
        parentScaleX = visualElement.getValue("scaleX", 1);
        parentScaleY = visualElement.getValue("scaleY", 1);
    }
    var scaleX = Object(_use_transform_js__WEBPACK_IMPORTED_MODULE_3__["useTransform"])(parentScaleX, invertScale);
    var scaleY = Object(_use_transform_js__WEBPACK_IMPORTED_MODULE_3__["useTransform"])(parentScaleY, invertScale);
    return { scaleX: scaleX, scaleY: scaleY };
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/use-motion-template.js":
/*!*****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/use-motion-template.js ***!
  \*****************************************************************************************************************/
/*! exports provided: useMotionTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useMotionTemplate", function() { return useMotionTemplate; });
/* harmony import */ var _use_combine_values_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./use-combine-values.js */ "../../node_modules/framer-motion/dist/es/value/use-combine-values.js");


/**
 * Combine multiple motion values into a new one using a string template literal.
 *
 * ```jsx
 * import {
 *   motion,
 *   useSpring,
 *   useMotionValue,
 *   useMotionTemplate
 * } from "framer-motion"
 *
 * function Component() {
 *   const shadowX = useSpring(0)
 *   const shadowY = useMotionValue(0)
 *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`
 *
 *   return <motion.div style={{ filter: shadow }} />
 * }
 * ```
 *
 * @public
 */
function useMotionTemplate(fragments) {
    var values = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        values[_i - 1] = arguments[_i];
    }
    /**
     * Create a function that will build a string from the latest motion values.
     */
    var numFragments = fragments.length;
    function buildValue() {
        var output = "";
        for (var i = 0; i < numFragments; i++) {
            output += fragments[i];
            var value = values[i];
            if (value)
                output += values[i].get();
        }
        return output;
    }
    return Object(_use_combine_values_js__WEBPACK_IMPORTED_MODULE_0__["useCombineMotionValues"])(values, buildValue);
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/use-motion-value.js":
/*!**************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/use-motion-value.js ***!
  \**************************************************************************************************************/
/*! exports provided: useMotionValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useMotionValue", function() { return useMotionValue; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/MotionConfigContext.js */ "../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js");
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");






/**
 * Creates a `MotionValue` to track the state and velocity of a value.
 *
 * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.
 *
 * @library
 *
 * ```jsx
 * export function MyComponent() {
 *   const scale = useMotionValue(1)
 *
 *   return <Frame scale={scale} />
 * }
 * ```
 *
 * @motion
 *
 * ```jsx
 * export const MyComponent = () => {
 *   const scale = useMotionValue(1)
 *
 *   return <motion.div style={{ scale }} />
 * }
 * ```
 *
 * @param initial - The initial state.
 *
 * @public
 */
function useMotionValue(initial) {
    var value = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_3__["useConstant"])(function () { return Object(_index_js__WEBPACK_IMPORTED_MODULE_4__["motionValue"])(initial); });
    /**
     * If this motion value is being used in static mode, like on
     * the Framer canvas, force components to rerender when the motion
     * value is updated.
     */
    var isStatic = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__["MotionConfigContext"]).isStatic;
    if (isStatic) {
        var _a = Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__read"])(Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(initial), 2), setLatest_1 = _a[1];
        Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () { return value.onChange(setLatest_1); }, []);
    }
    return value;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/use-on-change.js":
/*!***********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/use-on-change.js ***!
  \***********************************************************************************************************/
/*! exports provided: useMultiOnChange, useOnChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useMultiOnChange", function() { return useMultiOnChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useOnChange", function() { return useOnChange; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/is-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js");



function useOnChange(value, callback) {
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        if (Object(_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_1__["isMotionValue"])(value))
            return value.onChange(callback);
    }, [callback]);
}
function useMultiOnChange(values, handler) {
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        var subscriptions = values.map(function (value) { return value.onChange(handler); });
        return function () { return subscriptions.forEach(function (unsubscribe) { return unsubscribe(); }); };
    });
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/use-spring.js":
/*!********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/use-spring.js ***!
  \********************************************************************************************************/
/*! exports provided: useSpring */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useSpring", function() { return useSpring; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/MotionConfigContext.js */ "../../node_modules/framer-motion/dist/es/context/MotionConfigContext.js");
/* harmony import */ var popmotion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
/* harmony import */ var _utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/is-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js");
/* harmony import */ var _use_motion_value_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./use-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/use-motion-value.js");
/* harmony import */ var _use_on_change_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./use-on-change.js */ "../../node_modules/framer-motion/dist/es/value/use-on-change.js");








/**
 * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.
 *
 * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber
 * to another `MotionValue`.
 *
 * @remarks
 *
 * ```jsx
 * const x = useSpring(0, { stiffness: 300 })
 * const y = useSpring(x, { damping: 10 })
 * ```
 *
 * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.
 * @param springConfig - Configuration options for the spring.
 * @returns `MotionValue`
 *
 * @public
 */
function useSpring(source, config) {
    if (config === void 0) { config = {}; }
    var isStatic = Object(react__WEBPACK_IMPORTED_MODULE_0__["useContext"])(_context_MotionConfigContext_js__WEBPACK_IMPORTED_MODULE_2__["MotionConfigContext"]).isStatic;
    var activeSpringAnimation = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
    var value = Object(_use_motion_value_js__WEBPACK_IMPORTED_MODULE_5__["useMotionValue"])(Object(_utils_is_motion_value_js__WEBPACK_IMPORTED_MODULE_4__["isMotionValue"])(source) ? source.get() : source);
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useMemo"])(function () {
        return value.attach(function (v, set) {
            /**
             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations
             * at that level, but this will work for now
             */
            if (isStatic)
                return set(v);
            if (activeSpringAnimation.current) {
                activeSpringAnimation.current.stop();
            }
            activeSpringAnimation.current = Object(popmotion__WEBPACK_IMPORTED_MODULE_3__["animate"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__assign"])({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));
            return value.get();
        });
    }, Object.values(config));
    Object(_use_on_change_js__WEBPACK_IMPORTED_MODULE_6__["useOnChange"])(source, function (v) { return value.set(parseFloat(v)); });
    return value;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/use-transform.js":
/*!***********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/use-transform.js ***!
  \***********************************************************************************************************/
/*! exports provided: useTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useTransform", function() { return useTransform; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_use_constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/use-constant.js */ "../../node_modules/framer-motion/dist/es/utils/use-constant.js");
/* harmony import */ var _use_combine_values_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use-combine-values.js */ "../../node_modules/framer-motion/dist/es/value/use-combine-values.js");
/* harmony import */ var _utils_transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/transform.js */ "../../node_modules/framer-motion/dist/es/utils/transform.js");





function useTransform(input, inputRangeOrTransformer, outputRange, options) {
    var transformer = typeof inputRangeOrTransformer === "function"
        ? inputRangeOrTransformer
        : Object(_utils_transform_js__WEBPACK_IMPORTED_MODULE_3__["transform"])(inputRangeOrTransformer, outputRange, options);
    return Array.isArray(input)
        ? useListTransform(input, transformer)
        : useListTransform([input], function (_a) {
            var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])(_a, 1), latest = _b[0];
            return transformer(latest);
        });
}
function useListTransform(values, transformer) {
    var latest = Object(_utils_use_constant_js__WEBPACK_IMPORTED_MODULE_1__["useConstant"])(function () { return []; });
    return Object(_use_combine_values_js__WEBPACK_IMPORTED_MODULE_2__["useCombineMotionValues"])(values, function () {
        latest.length = 0;
        var numValues = values.length;
        for (var i = 0; i < numValues; i++) {
            latest[i] = values[i].get();
        }
        return transformer(latest);
    });
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/use-velocity.js":
/*!**********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/use-velocity.js ***!
  \**********************************************************************************************************/
/*! exports provided: useVelocity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "useVelocity", function() { return useVelocity; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _use_motion_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-motion-value.js */ "../../node_modules/framer-motion/dist/es/value/use-motion-value.js");



/**
 * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.
 *
 * ```javascript
 * const x = useMotionValue(0)
 * const xVelocity = useVelocity(x)
 * const xAcceleration = useVelocity(xVelocity)
 * ```
 *
 * @public
 */
function useVelocity(value) {
    var velocity = Object(_use_motion_value_js__WEBPACK_IMPORTED_MODULE_1__["useMotionValue"])(value.getVelocity());
    Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(function () {
        return value.velocityUpdateSubscribers.add(function (newVelocity) {
            velocity.set(newVelocity);
        });
    }, [value]);
    return velocity;
}




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/utils/is-motion-value.js ***!
  \*******************************************************************************************************************/
/*! exports provided: isMotionValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMotionValue", function() { return isMotionValue; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");


var isMotionValue = function (value) {
    return value instanceof _index_js__WEBPACK_IMPORTED_MODULE_0__["MotionValue"];
};




/***/ }),

/***/ "../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.js":
/*!************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.js ***!
  \************************************************************************************************************************/
/*! exports provided: resolveMotionValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resolveMotionValue", function() { return resolveMotionValue; });
/* harmony import */ var _utils_resolve_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/resolve-value.js */ "../../node_modules/framer-motion/dist/es/utils/resolve-value.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index.js */ "../../node_modules/framer-motion/dist/es/value/index.js");



/**
 * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself
 *
 * TODO: Remove and move to library
 *
 * @internal
 */
function resolveMotionValue(value) {
    var unwrappedValue = value instanceof _index_js__WEBPACK_IMPORTED_MODULE_1__["MotionValue"] ? value.get() : value;
    return Object(_utils_resolve_value_js__WEBPACK_IMPORTED_MODULE_0__["isCustomValue"])(unwrappedValue)
        ? unwrappedValue.toValue()
        : unwrappedValue;
}




/***/ }),

/***/ "../../node_modules/framesync/dist/es/create-render-step.js":
/*!******************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framesync/dist/es/create-render-step.js ***!
  \******************************************************************************************************/
/*! exports provided: createRenderStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRenderStep", function() { return createRenderStep; });
function createRenderStep(runNextFrame) {
    var toRun = [];
    var toRunNextFrame = [];
    var numToRun = 0;
    var isProcessing = false;
    var toKeepAlive = new WeakSet();
    var step = {
        schedule: function (callback, keepAlive, immediate) {
            if (keepAlive === void 0) { keepAlive = false; }
            if (immediate === void 0) { immediate = false; }
            var addToCurrentFrame = immediate && isProcessing;
            var buffer = addToCurrentFrame ? toRun : toRunNextFrame;
            if (keepAlive)
                toKeepAlive.add(callback);
            if (buffer.indexOf(callback) === -1) {
                buffer.push(callback);
                if (addToCurrentFrame && isProcessing)
                    numToRun = toRun.length;
            }
            return callback;
        },
        cancel: function (callback) {
            var index = toRunNextFrame.indexOf(callback);
            if (index !== -1)
                toRunNextFrame.splice(index, 1);
            toKeepAlive.delete(callback);
        },
        process: function (frameData) {
            var _a;
            isProcessing = true;
            _a = [toRunNextFrame, toRun], toRun = _a[0], toRunNextFrame = _a[1];
            toRunNextFrame.length = 0;
            numToRun = toRun.length;
            if (numToRun) {
                for (var i = 0; i < numToRun; i++) {
                    var callback = toRun[i];
                    callback(frameData);
                    if (toKeepAlive.has(callback)) {
                        step.schedule(callback);
                        runNextFrame();
                    }
                }
            }
            isProcessing = false;
        },
    };
    return step;
}




/***/ }),

/***/ "../../node_modules/framesync/dist/es/index.js":
/*!*****************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framesync/dist/es/index.js ***!
  \*****************************************************************************************/
/*! exports provided: default, cancelSync, getFrameData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cancelSync", function() { return cancelSync; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFrameData", function() { return getFrameData; });
/* harmony import */ var _on_next_frame_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./on-next-frame.js */ "../../node_modules/framesync/dist/es/on-next-frame.js");
/* harmony import */ var _create_render_step_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-render-step.js */ "../../node_modules/framesync/dist/es/create-render-step.js");



var maxElapsed = 40;
var useDefaultElapsed = true;
var runNextFrame = false;
var isProcessing = false;
var frame = {
    delta: 0,
    timestamp: 0
};
var stepsOrder = ["read", "update", "preRender", "render", "postRender"];
var steps = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {
    acc[key] = Object(_create_render_step_js__WEBPACK_IMPORTED_MODULE_1__["createRenderStep"])(function () {
        return runNextFrame = true;
    });
    return acc;
}, {});
var sync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {
    var step = steps[key];
    acc[key] = function (process, keepAlive, immediate) {
        if (keepAlive === void 0) {
            keepAlive = false;
        }
        if (immediate === void 0) {
            immediate = false;
        }
        if (!runNextFrame) startLoop();
        return step.schedule(process, keepAlive, immediate);
    };
    return acc;
}, {});
var cancelSync = /*#__PURE__*/stepsOrder.reduce(function (acc, key) {
    acc[key] = steps[key].cancel;
    return acc;
}, {});
var processStep = function (stepId) {
    return steps[stepId].process(frame);
};
var processFrame = function (timestamp) {
    runNextFrame = false;
    frame.delta = useDefaultElapsed ? _on_next_frame_js__WEBPACK_IMPORTED_MODULE_0__["defaultTimestep"] : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);
    frame.timestamp = timestamp;
    isProcessing = true;
    stepsOrder.forEach(processStep);
    isProcessing = false;
    if (runNextFrame) {
        useDefaultElapsed = false;
        Object(_on_next_frame_js__WEBPACK_IMPORTED_MODULE_0__["onNextFrame"])(processFrame);
    }
};
var startLoop = function () {
    runNextFrame = true;
    useDefaultElapsed = true;
    if (!isProcessing) Object(_on_next_frame_js__WEBPACK_IMPORTED_MODULE_0__["onNextFrame"])(processFrame);
};
var getFrameData = function () {
    return frame;
};

/* harmony default export */ __webpack_exports__["default"] = (sync);



/***/ }),

/***/ "../../node_modules/framesync/dist/es/on-next-frame.js":
/*!*************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/framesync/dist/es/on-next-frame.js ***!
  \*************************************************************************************************/
/*! exports provided: defaultTimestep, onNextFrame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultTimestep", function() { return defaultTimestep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onNextFrame", function() { return onNextFrame; });
var defaultTimestep = (1 / 60) * 1000;
var getCurrentTime = typeof performance !== "undefined"
    ? function () { return performance.now(); }
    : function () { return Date.now(); };
var onNextFrame = typeof window !== "undefined"
    ? function (callback) {
        return window.requestAnimationFrame(callback);
    }
    : function (callback) {
        return setTimeout(function () { return callback(getCurrentTime()); }, defaultTimestep);
    };




/***/ }),

/***/ "../../node_modules/hey-listen/dist/hey-listen.es.js":
/*!***********************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/hey-listen/dist/hey-listen.es.js ***!
  \***********************************************************************************************/
/*! exports provided: invariant, warning */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invariant", function() { return invariant; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warning", function() { return warning; });
var warning = function () { };
var invariant = function () { };
if (true) {
    warning = function (check, message) {
        if (!check && typeof console !== 'undefined') {
            console.warn(message);
        }
    };
    invariant = function (check, message) {
        if (!check) {
            throw new Error(message);
        }
    };
}




/***/ }),

/***/ "../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var reactIs = __webpack_require__(/*! react-is */ "../../node_modules/react-is/index.js");

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),

/***/ "../../node_modules/hsluv/hsluv.js":
/*!*****************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/hsluv/hsluv.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Generated by Haxe 3.4.4
var hsluv = hsluv || {};
hsluv.Geometry = function() { };
hsluv.Geometry.intersectLineLine = function(a,b) {
	var x = (a.intercept - b.intercept) / (b.slope - a.slope);
	var y = a.slope * x + a.intercept;
	return { x : x, y : y};
};
hsluv.Geometry.distanceFromOrigin = function(point) {
	return Math.sqrt(Math.pow(point.x,2) + Math.pow(point.y,2));
};
hsluv.Geometry.distanceLineFromOrigin = function(line) {
	return Math.abs(line.intercept) / Math.sqrt(Math.pow(line.slope,2) + 1);
};
hsluv.Geometry.perpendicularThroughPoint = function(line,point) {
	var slope = -1 / line.slope;
	var intercept = point.y - slope * point.x;
	return { slope : slope, intercept : intercept};
};
hsluv.Geometry.angleFromOrigin = function(point) {
	return Math.atan2(point.y,point.x);
};
hsluv.Geometry.normalizeAngle = function(angle) {
	var m = 2 * Math.PI;
	return (angle % m + m) % m;
};
hsluv.Geometry.lengthOfRayUntilIntersect = function(theta,line) {
	return line.intercept / (Math.sin(theta) - line.slope * Math.cos(theta));
};
hsluv.Hsluv = function() { };
hsluv.Hsluv.getBounds = function(L) {
	var result = [];
	var sub1 = Math.pow(L + 16,3) / 1560896;
	var sub2 = sub1 > hsluv.Hsluv.epsilon ? sub1 : L / hsluv.Hsluv.kappa;
	var _g = 0;
	while(_g < 3) {
		var c = _g++;
		var m1 = hsluv.Hsluv.m[c][0];
		var m2 = hsluv.Hsluv.m[c][1];
		var m3 = hsluv.Hsluv.m[c][2];
		var _g1 = 0;
		while(_g1 < 2) {
			var t = _g1++;
			var top1 = (284517 * m1 - 94839 * m3) * sub2;
			var top2 = (838422 * m3 + 769860 * m2 + 731718 * m1) * L * sub2 - 769860 * t * L;
			var bottom = (632260 * m3 - 126452 * m2) * sub2 + 126452 * t;
			result.push({ slope : top1 / bottom, intercept : top2 / bottom});
		}
	}
	return result;
};
hsluv.Hsluv.maxSafeChromaForL = function(L) {
	var bounds = hsluv.Hsluv.getBounds(L);
	var min = Infinity;
	var _g = 0;
	while(_g < bounds.length) {
		var bound = bounds[_g];
		++_g;
		var length = hsluv.Geometry.distanceLineFromOrigin(bound);
		min = Math.min(min,length);
	}
	return min;
};
hsluv.Hsluv.maxChromaForLH = function(L,H) {
	var hrad = H / 360 * Math.PI * 2;
	var bounds = hsluv.Hsluv.getBounds(L);
	var min = Infinity;
	var _g = 0;
	while(_g < bounds.length) {
		var bound = bounds[_g];
		++_g;
		var length = hsluv.Geometry.lengthOfRayUntilIntersect(hrad,bound);
		if(length >= 0) {
			min = Math.min(min,length);
		}
	}
	return min;
};
hsluv.Hsluv.dotProduct = function(a,b) {
	var sum = 0;
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		sum += a[i] * b[i];
	}
	return sum;
};
hsluv.Hsluv.fromLinear = function(c) {
	if(c <= 0.0031308) {
		return 12.92 * c;
	} else {
		return 1.055 * Math.pow(c,0.416666666666666685) - 0.055;
	}
};
hsluv.Hsluv.toLinear = function(c) {
	if(c > 0.04045) {
		return Math.pow((c + 0.055) / 1.055,2.4);
	} else {
		return c / 12.92;
	}
};
hsluv.Hsluv.xyzToRgb = function(tuple) {
	return [hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[0],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[1],tuple)),hsluv.Hsluv.fromLinear(hsluv.Hsluv.dotProduct(hsluv.Hsluv.m[2],tuple))];
};
hsluv.Hsluv.rgbToXyz = function(tuple) {
	var rgbl = [hsluv.Hsluv.toLinear(tuple[0]),hsluv.Hsluv.toLinear(tuple[1]),hsluv.Hsluv.toLinear(tuple[2])];
	return [hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[0],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[1],rgbl),hsluv.Hsluv.dotProduct(hsluv.Hsluv.minv[2],rgbl)];
};
hsluv.Hsluv.yToL = function(Y) {
	if(Y <= hsluv.Hsluv.epsilon) {
		return Y / hsluv.Hsluv.refY * hsluv.Hsluv.kappa;
	} else {
		return 116 * Math.pow(Y / hsluv.Hsluv.refY,0.333333333333333315) - 16;
	}
};
hsluv.Hsluv.lToY = function(L) {
	if(L <= 8) {
		return hsluv.Hsluv.refY * L / hsluv.Hsluv.kappa;
	} else {
		return hsluv.Hsluv.refY * Math.pow((L + 16) / 116,3);
	}
};
hsluv.Hsluv.xyzToLuv = function(tuple) {
	var X = tuple[0];
	var Y = tuple[1];
	var Z = tuple[2];
	var divider = X + 15 * Y + 3 * Z;
	var varU = 4 * X;
	var varV = 9 * Y;
	if(divider != 0) {
		varU /= divider;
		varV /= divider;
	} else {
		varU = NaN;
		varV = NaN;
	}
	var L = hsluv.Hsluv.yToL(Y);
	if(L == 0) {
		return [0,0,0];
	}
	var U = 13 * L * (varU - hsluv.Hsluv.refU);
	var V = 13 * L * (varV - hsluv.Hsluv.refV);
	return [L,U,V];
};
hsluv.Hsluv.luvToXyz = function(tuple) {
	var L = tuple[0];
	var U = tuple[1];
	var V = tuple[2];
	if(L == 0) {
		return [0,0,0];
	}
	var varU = U / (13 * L) + hsluv.Hsluv.refU;
	var varV = V / (13 * L) + hsluv.Hsluv.refV;
	var Y = hsluv.Hsluv.lToY(L);
	var X = 0 - 9 * Y * varU / ((varU - 4) * varV - varU * varV);
	var Z = (9 * Y - 15 * varV * Y - varV * X) / (3 * varV);
	return [X,Y,Z];
};
hsluv.Hsluv.luvToLch = function(tuple) {
	var L = tuple[0];
	var U = tuple[1];
	var V = tuple[2];
	var C = Math.sqrt(U * U + V * V);
	var H;
	if(C < 0.00000001) {
		H = 0;
	} else {
		var Hrad = Math.atan2(V,U);
		H = Hrad * 180.0 / Math.PI;
		if(H < 0) {
			H = 360 + H;
		}
	}
	return [L,C,H];
};
hsluv.Hsluv.lchToLuv = function(tuple) {
	var L = tuple[0];
	var C = tuple[1];
	var H = tuple[2];
	var Hrad = H / 360.0 * 2 * Math.PI;
	var U = Math.cos(Hrad) * C;
	var V = Math.sin(Hrad) * C;
	return [L,U,V];
};
hsluv.Hsluv.hsluvToLch = function(tuple) {
	var H = tuple[0];
	var S = tuple[1];
	var L = tuple[2];
	if(L > 99.9999999) {
		return [100,0,H];
	}
	if(L < 0.00000001) {
		return [0,0,H];
	}
	var max = hsluv.Hsluv.maxChromaForLH(L,H);
	var C = max / 100 * S;
	return [L,C,H];
};
hsluv.Hsluv.lchToHsluv = function(tuple) {
	var L = tuple[0];
	var C = tuple[1];
	var H = tuple[2];
	if(L > 99.9999999) {
		return [H,0,100];
	}
	if(L < 0.00000001) {
		return [H,0,0];
	}
	var max = hsluv.Hsluv.maxChromaForLH(L,H);
	var S = C / max * 100;
	return [H,S,L];
};
hsluv.Hsluv.hpluvToLch = function(tuple) {
	var H = tuple[0];
	var S = tuple[1];
	var L = tuple[2];
	if(L > 99.9999999) {
		return [100,0,H];
	}
	if(L < 0.00000001) {
		return [0,0,H];
	}
	var max = hsluv.Hsluv.maxSafeChromaForL(L);
	var C = max / 100 * S;
	return [L,C,H];
};
hsluv.Hsluv.lchToHpluv = function(tuple) {
	var L = tuple[0];
	var C = tuple[1];
	var H = tuple[2];
	if(L > 99.9999999) {
		return [H,0,100];
	}
	if(L < 0.00000001) {
		return [H,0,0];
	}
	var max = hsluv.Hsluv.maxSafeChromaForL(L);
	var S = C / max * 100;
	return [H,S,L];
};
hsluv.Hsluv.rgbToHex = function(tuple) {
	var h = "#";
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var chan = tuple[i];
		var c = Math.round(chan * 255);
		var digit2 = c % 16;
		var digit1 = (c - digit2) / 16 | 0;
		h += hsluv.Hsluv.hexChars.charAt(digit1) + hsluv.Hsluv.hexChars.charAt(digit2);
	}
	return h;
};
hsluv.Hsluv.hexToRgb = function(hex) {
	hex = hex.toLowerCase();
	var ret = [];
	var _g = 0;
	while(_g < 3) {
		var i = _g++;
		var digit1 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 1));
		var digit2 = hsluv.Hsluv.hexChars.indexOf(hex.charAt(i * 2 + 2));
		var n = digit1 * 16 + digit2;
		ret.push(n / 255.0);
	}
	return ret;
};
hsluv.Hsluv.lchToRgb = function(tuple) {
	return hsluv.Hsluv.xyzToRgb(hsluv.Hsluv.luvToXyz(hsluv.Hsluv.lchToLuv(tuple)));
};
hsluv.Hsluv.rgbToLch = function(tuple) {
	return hsluv.Hsluv.luvToLch(hsluv.Hsluv.xyzToLuv(hsluv.Hsluv.rgbToXyz(tuple)));
};
hsluv.Hsluv.hsluvToRgb = function(tuple) {
	return hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hsluvToLch(tuple));
};
hsluv.Hsluv.rgbToHsluv = function(tuple) {
	return hsluv.Hsluv.lchToHsluv(hsluv.Hsluv.rgbToLch(tuple));
};
hsluv.Hsluv.hpluvToRgb = function(tuple) {
	return hsluv.Hsluv.lchToRgb(hsluv.Hsluv.hpluvToLch(tuple));
};
hsluv.Hsluv.rgbToHpluv = function(tuple) {
	return hsluv.Hsluv.lchToHpluv(hsluv.Hsluv.rgbToLch(tuple));
};
hsluv.Hsluv.hsluvToHex = function(tuple) {
	return hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hsluvToRgb(tuple));
};
hsluv.Hsluv.hpluvToHex = function(tuple) {
	return hsluv.Hsluv.rgbToHex(hsluv.Hsluv.hpluvToRgb(tuple));
};
hsluv.Hsluv.hexToHsluv = function(s) {
	return hsluv.Hsluv.rgbToHsluv(hsluv.Hsluv.hexToRgb(s));
};
hsluv.Hsluv.hexToHpluv = function(s) {
	return hsluv.Hsluv.rgbToHpluv(hsluv.Hsluv.hexToRgb(s));
};
hsluv.Hsluv.m = [[3.240969941904521,-1.537383177570093,-0.498610760293],[-0.96924363628087,1.87596750150772,0.041555057407175],[0.055630079696993,-0.20397695888897,1.056971514242878]];
hsluv.Hsluv.minv = [[0.41239079926595,0.35758433938387,0.18048078840183],[0.21263900587151,0.71516867876775,0.072192315360733],[0.019330818715591,0.11919477979462,0.95053215224966]];
hsluv.Hsluv.refY = 1.0;
hsluv.Hsluv.refU = 0.19783000664283;
hsluv.Hsluv.refV = 0.46831999493879;
hsluv.Hsluv.kappa = 903.2962962;
hsluv.Hsluv.epsilon = 0.0088564516;
hsluv.Hsluv.hexChars = "0123456789abcdef";
var root = {
    "hsluvToRgb": hsluv.Hsluv.hsluvToRgb,
    "rgbToHsluv": hsluv.Hsluv.rgbToHsluv,
    "hpluvToRgb": hsluv.Hsluv.hpluvToRgb,
    "rgbToHpluv": hsluv.Hsluv.rgbToHpluv,
    "hsluvToHex": hsluv.Hsluv.hsluvToHex,
    "hexToHsluv": hsluv.Hsluv.hexToHsluv,
    "hpluvToHex": hsluv.Hsluv.hpluvToHex,
    "hexToHpluv": hsluv.Hsluv.hexToHpluv,
    "lchToHpluv": hsluv.Hsluv.lchToHpluv,
    "hpluvToLch": hsluv.Hsluv.hpluvToLch,
    "lchToHsluv": hsluv.Hsluv.lchToHsluv,
    "hsluvToLch": hsluv.Hsluv.hsluvToLch,
    "lchToLuv": hsluv.Hsluv.lchToLuv,
    "luvToLch": hsluv.Hsluv.luvToLch,
    "xyzToLuv": hsluv.Hsluv.xyzToLuv,
    "luvToXyz": hsluv.Hsluv.luvToXyz,
    "xyzToRgb": hsluv.Hsluv.xyzToRgb,
    "rgbToXyz": hsluv.Hsluv.rgbToXyz,
    "lchToRgb": hsluv.Hsluv.lchToRgb,
    "rgbToLch": hsluv.Hsluv.rgbToLch
};

module.exports = root;


/***/ }),

/***/ "../../node_modules/immutable/dist/immutable.js":
/*!******************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/immutable/dist/immutable.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;

  function createClass(ctor, superClass) {
    if (superClass) {
      ctor.prototype = Object.create(superClass.prototype);
    }
    ctor.prototype.constructor = ctor;
  }

  function Iterable(value) {
      return isIterable(value) ? value : Seq(value);
    }


  createClass(KeyedIterable, Iterable);
    function KeyedIterable(value) {
      return isKeyed(value) ? value : KeyedSeq(value);
    }


  createClass(IndexedIterable, Iterable);
    function IndexedIterable(value) {
      return isIndexed(value) ? value : IndexedSeq(value);
    }


  createClass(SetIterable, Iterable);
    function SetIterable(value) {
      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
    }



  function isIterable(maybeIterable) {
    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
  }

  function isKeyed(maybeKeyed) {
    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
  }

  function isIndexed(maybeIndexed) {
    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
  }

  function isAssociative(maybeAssociative) {
    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
  }

  function isOrdered(maybeOrdered) {
    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
  }

  Iterable.isIterable = isIterable;
  Iterable.isKeyed = isKeyed;
  Iterable.isIndexed = isIndexed;
  Iterable.isAssociative = isAssociative;
  Iterable.isOrdered = isOrdered;

  Iterable.Keyed = KeyedIterable;
  Iterable.Indexed = IndexedIterable;
  Iterable.Set = SetIterable;


  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

  // Used for setting prototype methods that IE8 chokes on.
  var DELETE = 'delete';

  // Constants describing the size of trie nodes.
  var SHIFT = 5; // Resulted in best performance after ______?
  var SIZE = 1 << SHIFT;
  var MASK = SIZE - 1;

  // A consistent shared value representing "not set" which equals nothing other
  // than itself, and nothing that could be provided externally.
  var NOT_SET = {};

  // Boolean references, Rough equivalent of `bool &`.
  var CHANGE_LENGTH = { value: false };
  var DID_ALTER = { value: false };

  function MakeRef(ref) {
    ref.value = false;
    return ref;
  }

  function SetRef(ref) {
    ref && (ref.value = true);
  }

  // A function which returns a value representing an "owner" for transient writes
  // to tries. The return value will only ever equal itself, and will not equal
  // the return of any subsequent call of this function.
  function OwnerID() {}

  // http://jsperf.com/copy-array-inline
  function arrCopy(arr, offset) {
    offset = offset || 0;
    var len = Math.max(0, arr.length - offset);
    var newArr = new Array(len);
    for (var ii = 0; ii < len; ii++) {
      newArr[ii] = arr[ii + offset];
    }
    return newArr;
  }

  function ensureSize(iter) {
    if (iter.size === undefined) {
      iter.size = iter.__iterate(returnTrue);
    }
    return iter.size;
  }

  function wrapIndex(iter, index) {
    // This implements "is array index" which the ECMAString spec defines as:
    //
    //     A String property name P is an array index if and only if
    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
    //     to 2^32−1.
    //
    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
    if (typeof index !== 'number') {
      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
      if ('' + uint32Index !== index || uint32Index === 4294967295) {
        return NaN;
      }
      index = uint32Index;
    }
    return index < 0 ? ensureSize(iter) + index : index;
  }

  function returnTrue() {
    return true;
  }

  function wholeSlice(begin, end, size) {
    return (begin === 0 || (size !== undefined && begin <= -size)) &&
      (end === undefined || (size !== undefined && end >= size));
  }

  function resolveBegin(begin, size) {
    return resolveIndex(begin, size, 0);
  }

  function resolveEnd(end, size) {
    return resolveIndex(end, size, size);
  }

  function resolveIndex(index, size, defaultIndex) {
    return index === undefined ?
      defaultIndex :
      index < 0 ?
        Math.max(0, size + index) :
        size === undefined ?
          index :
          Math.min(size, index);
  }

  /* global Symbol */

  var ITERATE_KEYS = 0;
  var ITERATE_VALUES = 1;
  var ITERATE_ENTRIES = 2;

  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator';

  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


  function Iterator(next) {
      this.next = next;
    }

    Iterator.prototype.toString = function() {
      return '[Iterator]';
    };


  Iterator.KEYS = ITERATE_KEYS;
  Iterator.VALUES = ITERATE_VALUES;
  Iterator.ENTRIES = ITERATE_ENTRIES;

  Iterator.prototype.inspect =
  Iterator.prototype.toSource = function () { return this.toString(); }
  Iterator.prototype[ITERATOR_SYMBOL] = function () {
    return this;
  };


  function iteratorValue(type, k, v, iteratorResult) {
    var value = type === 0 ? k : type === 1 ? v : [k, v];
    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
      value: value, done: false
    });
    return iteratorResult;
  }

  function iteratorDone() {
    return { value: undefined, done: true };
  }

  function hasIterator(maybeIterable) {
    return !!getIteratorFn(maybeIterable);
  }

  function isIterator(maybeIterator) {
    return maybeIterator && typeof maybeIterator.next === 'function';
  }

  function getIterator(iterable) {
    var iteratorFn = getIteratorFn(iterable);
    return iteratorFn && iteratorFn.call(iterable);
  }

  function getIteratorFn(iterable) {
    var iteratorFn = iterable && (
      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
      iterable[FAUX_ITERATOR_SYMBOL]
    );
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  function isArrayLike(value) {
    return value && typeof value.length === 'number';
  }

  createClass(Seq, Iterable);
    function Seq(value) {
      return value === null || value === undefined ? emptySequence() :
        isIterable(value) ? value.toSeq() : seqFromValue(value);
    }

    Seq.of = function(/*...values*/) {
      return Seq(arguments);
    };

    Seq.prototype.toSeq = function() {
      return this;
    };

    Seq.prototype.toString = function() {
      return this.__toString('Seq {', '}');
    };

    Seq.prototype.cacheResult = function() {
      if (!this._cache && this.__iterateUncached) {
        this._cache = this.entrySeq().toArray();
        this.size = this._cache.length;
      }
      return this;
    };

    // abstract __iterateUncached(fn, reverse)

    Seq.prototype.__iterate = function(fn, reverse) {
      return seqIterate(this, fn, reverse, true);
    };

    // abstract __iteratorUncached(type, reverse)

    Seq.prototype.__iterator = function(type, reverse) {
      return seqIterator(this, type, reverse, true);
    };



  createClass(KeyedSeq, Seq);
    function KeyedSeq(value) {
      return value === null || value === undefined ?
        emptySequence().toKeyedSeq() :
        isIterable(value) ?
          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
          keyedSeqFromValue(value);
    }

    KeyedSeq.prototype.toKeyedSeq = function() {
      return this;
    };



  createClass(IndexedSeq, Seq);
    function IndexedSeq(value) {
      return value === null || value === undefined ? emptySequence() :
        !isIterable(value) ? indexedSeqFromValue(value) :
        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
    }

    IndexedSeq.of = function(/*...values*/) {
      return IndexedSeq(arguments);
    };

    IndexedSeq.prototype.toIndexedSeq = function() {
      return this;
    };

    IndexedSeq.prototype.toString = function() {
      return this.__toString('Seq [', ']');
    };

    IndexedSeq.prototype.__iterate = function(fn, reverse) {
      return seqIterate(this, fn, reverse, false);
    };

    IndexedSeq.prototype.__iterator = function(type, reverse) {
      return seqIterator(this, type, reverse, false);
    };



  createClass(SetSeq, Seq);
    function SetSeq(value) {
      return (
        value === null || value === undefined ? emptySequence() :
        !isIterable(value) ? indexedSeqFromValue(value) :
        isKeyed(value) ? value.entrySeq() : value
      ).toSetSeq();
    }

    SetSeq.of = function(/*...values*/) {
      return SetSeq(arguments);
    };

    SetSeq.prototype.toSetSeq = function() {
      return this;
    };



  Seq.isSeq = isSeq;
  Seq.Keyed = KeyedSeq;
  Seq.Set = SetSeq;
  Seq.Indexed = IndexedSeq;

  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

  Seq.prototype[IS_SEQ_SENTINEL] = true;



  createClass(ArraySeq, IndexedSeq);
    function ArraySeq(array) {
      this._array = array;
      this.size = array.length;
    }

    ArraySeq.prototype.get = function(index, notSetValue) {
      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
    };

    ArraySeq.prototype.__iterate = function(fn, reverse) {
      var array = this._array;
      var maxIndex = array.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
          return ii + 1;
        }
      }
      return ii;
    };

    ArraySeq.prototype.__iterator = function(type, reverse) {
      var array = this._array;
      var maxIndex = array.length - 1;
      var ii = 0;
      return new Iterator(function() 
        {return ii > maxIndex ?
          iteratorDone() :
          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
      );
    };



  createClass(ObjectSeq, KeyedSeq);
    function ObjectSeq(object) {
      var keys = Object.keys(object);
      this._object = object;
      this._keys = keys;
      this.size = keys.length;
    }

    ObjectSeq.prototype.get = function(key, notSetValue) {
      if (notSetValue !== undefined && !this.has(key)) {
        return notSetValue;
      }
      return this._object[key];
    };

    ObjectSeq.prototype.has = function(key) {
      return this._object.hasOwnProperty(key);
    };

    ObjectSeq.prototype.__iterate = function(fn, reverse) {
      var object = this._object;
      var keys = this._keys;
      var maxIndex = keys.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        var key = keys[reverse ? maxIndex - ii : ii];
        if (fn(object[key], key, this) === false) {
          return ii + 1;
        }
      }
      return ii;
    };

    ObjectSeq.prototype.__iterator = function(type, reverse) {
      var object = this._object;
      var keys = this._keys;
      var maxIndex = keys.length - 1;
      var ii = 0;
      return new Iterator(function()  {
        var key = keys[reverse ? maxIndex - ii : ii];
        return ii++ > maxIndex ?
          iteratorDone() :
          iteratorValue(type, key, object[key]);
      });
    };

  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


  createClass(IterableSeq, IndexedSeq);
    function IterableSeq(iterable) {
      this._iterable = iterable;
      this.size = iterable.length || iterable.size;
    }

    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterable = this._iterable;
      var iterator = getIterator(iterable);
      var iterations = 0;
      if (isIterator(iterator)) {
        var step;
        while (!(step = iterator.next()).done) {
          if (fn(step.value, iterations++, this) === false) {
            break;
          }
        }
      }
      return iterations;
    };

    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterable = this._iterable;
      var iterator = getIterator(iterable);
      if (!isIterator(iterator)) {
        return new Iterator(iteratorDone);
      }
      var iterations = 0;
      return new Iterator(function()  {
        var step = iterator.next();
        return step.done ? step : iteratorValue(type, iterations++, step.value);
      });
    };



  createClass(IteratorSeq, IndexedSeq);
    function IteratorSeq(iterator) {
      this._iterator = iterator;
      this._iteratorCache = [];
    }

    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterator = this._iterator;
      var cache = this._iteratorCache;
      var iterations = 0;
      while (iterations < cache.length) {
        if (fn(cache[iterations], iterations++, this) === false) {
          return iterations;
        }
      }
      var step;
      while (!(step = iterator.next()).done) {
        var val = step.value;
        cache[iterations] = val;
        if (fn(val, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };

    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = this._iterator;
      var cache = this._iteratorCache;
      var iterations = 0;
      return new Iterator(function()  {
        if (iterations >= cache.length) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          cache[iterations] = step.value;
        }
        return iteratorValue(type, iterations, cache[iterations++]);
      });
    };




  // # pragma Helper functions

  function isSeq(maybeSeq) {
    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
  }

  var EMPTY_SEQ;

  function emptySequence() {
    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
  }

  function keyedSeqFromValue(value) {
    var seq =
      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
      typeof value === 'object' ? new ObjectSeq(value) :
      undefined;
    if (!seq) {
      throw new TypeError(
        'Expected Array or iterable object of [k, v] entries, '+
        'or keyed object: ' + value
      );
    }
    return seq;
  }

  function indexedSeqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value);
    if (!seq) {
      throw new TypeError(
        'Expected Array or iterable object of values: ' + value
      );
    }
    return seq;
  }

  function seqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value) ||
      (typeof value === 'object' && new ObjectSeq(value));
    if (!seq) {
      throw new TypeError(
        'Expected Array or iterable object of values, or keyed object: ' + value
      );
    }
    return seq;
  }

  function maybeIndexedSeqFromValue(value) {
    return (
      isArrayLike(value) ? new ArraySeq(value) :
      isIterator(value) ? new IteratorSeq(value) :
      hasIterator(value) ? new IterableSeq(value) :
      undefined
    );
  }

  function seqIterate(seq, fn, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        var entry = cache[reverse ? maxIndex - ii : ii];
        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
          return ii + 1;
        }
      }
      return ii;
    }
    return seq.__iterateUncached(fn, reverse);
  }

  function seqIterator(seq, type, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      var ii = 0;
      return new Iterator(function()  {
        var entry = cache[reverse ? maxIndex - ii : ii];
        return ii++ > maxIndex ?
          iteratorDone() :
          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
      });
    }
    return seq.__iteratorUncached(type, reverse);
  }

  function fromJS(json, converter) {
    return converter ?
      fromJSWith(converter, json, '', {'': json}) :
      fromJSDefault(json);
  }

  function fromJSWith(converter, json, key, parentJSON) {
    if (Array.isArray(json)) {
      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
    }
    if (isPlainObj(json)) {
      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
    }
    return json;
  }

  function fromJSDefault(json) {
    if (Array.isArray(json)) {
      return IndexedSeq(json).map(fromJSDefault).toList();
    }
    if (isPlainObj(json)) {
      return KeyedSeq(json).map(fromJSDefault).toMap();
    }
    return json;
  }

  function isPlainObj(value) {
    return value && (value.constructor === Object || value.constructor === undefined);
  }

  /**
   * An extension of the "same-value" algorithm as [described for use by ES6 Map
   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
   *
   * NaN is considered the same as NaN, however -0 and 0 are considered the same
   * value, which is different from the algorithm described by
   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
   *
   * This is extended further to allow Objects to describe the values they
   * represent, by way of `valueOf` or `equals` (and `hashCode`).
   *
   * Note: because of this extension, the key equality of Immutable.Map and the
   * value equality of Immutable.Set will differ from ES6 Map and Set.
   *
   * ### Defining custom values
   *
   * The easiest way to describe the value an object represents is by implementing
   * `valueOf`. For example, `Date` represents a value by returning a unix
   * timestamp for `valueOf`:
   *
   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
   *     var date2 = new Date(1234567890000);
   *     date1.valueOf(); // 1234567890000
   *     assert( date1 !== date2 );
   *     assert( Immutable.is( date1, date2 ) );
   *
   * Note: overriding `valueOf` may have other implications if you use this object
   * where JavaScript expects a primitive, such as implicit string coercion.
   *
   * For more complex types, especially collections, implementing `valueOf` may
   * not be performant. An alternative is to implement `equals` and `hashCode`.
   *
   * `equals` takes another object, presumably of similar type, and returns true
   * if the it is equal. Equality is symmetrical, so the same result should be
   * returned if this and the argument are flipped.
   *
   *     assert( a.equals(b) === b.equals(a) );
   *
   * `hashCode` returns a 32bit integer number representing the object which will
   * be used to determine how to store the value object in a Map or Set. You must
   * provide both or neither methods, one must not exist without the other.
   *
   * Also, an important relationship between these methods must be upheld: if two
   * values are equal, they *must* return the same hashCode. If the values are not
   * equal, they might have the same hashCode; this is called a hash collision,
   * and while undesirable for performance reasons, it is acceptable.
   *
   *     if (a.equals(b)) {
   *       assert( a.hashCode() === b.hashCode() );
   *     }
   *
   * All Immutable collections implement `equals` and `hashCode`.
   *
   */
  function is(valueA, valueB) {
    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
      return true;
    }
    if (!valueA || !valueB) {
      return false;
    }
    if (typeof valueA.valueOf === 'function' &&
        typeof valueB.valueOf === 'function') {
      valueA = valueA.valueOf();
      valueB = valueB.valueOf();
      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
        return true;
      }
      if (!valueA || !valueB) {
        return false;
      }
    }
    if (typeof valueA.equals === 'function' &&
        typeof valueB.equals === 'function' &&
        valueA.equals(valueB)) {
      return true;
    }
    return false;
  }

  function deepEqual(a, b) {
    if (a === b) {
      return true;
    }

    if (
      !isIterable(b) ||
      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
      isKeyed(a) !== isKeyed(b) ||
      isIndexed(a) !== isIndexed(b) ||
      isOrdered(a) !== isOrdered(b)
    ) {
      return false;
    }

    if (a.size === 0 && b.size === 0) {
      return true;
    }

    var notAssociative = !isAssociative(a);

    if (isOrdered(a)) {
      var entries = a.entries();
      return b.every(function(v, k)  {
        var entry = entries.next().value;
        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
      }) && entries.next().done;
    }

    var flipped = false;

    if (a.size === undefined) {
      if (b.size === undefined) {
        if (typeof a.cacheResult === 'function') {
          a.cacheResult();
        }
      } else {
        flipped = true;
        var _ = a;
        a = b;
        b = _;
      }
    }

    var allEqual = true;
    var bSize = b.__iterate(function(v, k)  {
      if (notAssociative ? !a.has(v) :
          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
        allEqual = false;
        return false;
      }
    });

    return allEqual && a.size === bSize;
  }

  createClass(Repeat, IndexedSeq);

    function Repeat(value, times) {
      if (!(this instanceof Repeat)) {
        return new Repeat(value, times);
      }
      this._value = value;
      this.size = times === undefined ? Infinity : Math.max(0, times);
      if (this.size === 0) {
        if (EMPTY_REPEAT) {
          return EMPTY_REPEAT;
        }
        EMPTY_REPEAT = this;
      }
    }

    Repeat.prototype.toString = function() {
      if (this.size === 0) {
        return 'Repeat []';
      }
      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
    };

    Repeat.prototype.get = function(index, notSetValue) {
      return this.has(index) ? this._value : notSetValue;
    };

    Repeat.prototype.includes = function(searchValue) {
      return is(this._value, searchValue);
    };

    Repeat.prototype.slice = function(begin, end) {
      var size = this.size;
      return wholeSlice(begin, end, size) ? this :
        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
    };

    Repeat.prototype.reverse = function() {
      return this;
    };

    Repeat.prototype.indexOf = function(searchValue) {
      if (is(this._value, searchValue)) {
        return 0;
      }
      return -1;
    };

    Repeat.prototype.lastIndexOf = function(searchValue) {
      if (is(this._value, searchValue)) {
        return this.size;
      }
      return -1;
    };

    Repeat.prototype.__iterate = function(fn, reverse) {
      for (var ii = 0; ii < this.size; ii++) {
        if (fn(this._value, ii, this) === false) {
          return ii + 1;
        }
      }
      return ii;
    };

    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
      var ii = 0;
      return new Iterator(function() 
        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
      );
    };

    Repeat.prototype.equals = function(other) {
      return other instanceof Repeat ?
        is(this._value, other._value) :
        deepEqual(other);
    };


  var EMPTY_REPEAT;

  function invariant(condition, error) {
    if (!condition) throw new Error(error);
  }

  createClass(Range, IndexedSeq);

    function Range(start, end, step) {
      if (!(this instanceof Range)) {
        return new Range(start, end, step);
      }
      invariant(step !== 0, 'Cannot step a Range by 0');
      start = start || 0;
      if (end === undefined) {
        end = Infinity;
      }
      step = step === undefined ? 1 : Math.abs(step);
      if (end < start) {
        step = -step;
      }
      this._start = start;
      this._end = end;
      this._step = step;
      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
      if (this.size === 0) {
        if (EMPTY_RANGE) {
          return EMPTY_RANGE;
        }
        EMPTY_RANGE = this;
      }
    }

    Range.prototype.toString = function() {
      if (this.size === 0) {
        return 'Range []';
      }
      return 'Range [ ' +
        this._start + '...' + this._end +
        (this._step !== 1 ? ' by ' + this._step : '') +
      ' ]';
    };

    Range.prototype.get = function(index, notSetValue) {
      return this.has(index) ?
        this._start + wrapIndex(this, index) * this._step :
        notSetValue;
    };

    Range.prototype.includes = function(searchValue) {
      var possibleIndex = (searchValue - this._start) / this._step;
      return possibleIndex >= 0 &&
        possibleIndex < this.size &&
        possibleIndex === Math.floor(possibleIndex);
    };

    Range.prototype.slice = function(begin, end) {
      if (wholeSlice(begin, end, this.size)) {
        return this;
      }
      begin = resolveBegin(begin, this.size);
      end = resolveEnd(end, this.size);
      if (end <= begin) {
        return new Range(0, 0);
      }
      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
    };

    Range.prototype.indexOf = function(searchValue) {
      var offsetValue = searchValue - this._start;
      if (offsetValue % this._step === 0) {
        var index = offsetValue / this._step;
        if (index >= 0 && index < this.size) {
          return index
        }
      }
      return -1;
    };

    Range.prototype.lastIndexOf = function(searchValue) {
      return this.indexOf(searchValue);
    };

    Range.prototype.__iterate = function(fn, reverse) {
      var maxIndex = this.size - 1;
      var step = this._step;
      var value = reverse ? this._start + maxIndex * step : this._start;
      for (var ii = 0; ii <= maxIndex; ii++) {
        if (fn(value, ii, this) === false) {
          return ii + 1;
        }
        value += reverse ? -step : step;
      }
      return ii;
    };

    Range.prototype.__iterator = function(type, reverse) {
      var maxIndex = this.size - 1;
      var step = this._step;
      var value = reverse ? this._start + maxIndex * step : this._start;
      var ii = 0;
      return new Iterator(function()  {
        var v = value;
        value += reverse ? -step : step;
        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
      });
    };

    Range.prototype.equals = function(other) {
      return other instanceof Range ?
        this._start === other._start &&
        this._end === other._end &&
        this._step === other._step :
        deepEqual(this, other);
    };


  var EMPTY_RANGE;

  createClass(Collection, Iterable);
    function Collection() {
      throw TypeError('Abstract');
    }


  createClass(KeyedCollection, Collection);function KeyedCollection() {}

  createClass(IndexedCollection, Collection);function IndexedCollection() {}

  createClass(SetCollection, Collection);function SetCollection() {}


  Collection.Keyed = KeyedCollection;
  Collection.Indexed = IndexedCollection;
  Collection.Set = SetCollection;

  var imul =
    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
    Math.imul :
    function imul(a, b) {
      a = a | 0; // int
      b = b | 0; // int
      var c = a & 0xffff;
      var d = b & 0xffff;
      // Shift by 0 fixes the sign on the high part.
      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
    };

  // v8 has an optimization for storing 31-bit signed numbers.
  // Values which have either 00 or 11 as the high order bits qualify.
  // This function drops the highest order bit in a signed number, maintaining
  // the sign bit.
  function smi(i32) {
    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
  }

  function hash(o) {
    if (o === false || o === null || o === undefined) {
      return 0;
    }
    if (typeof o.valueOf === 'function') {
      o = o.valueOf();
      if (o === false || o === null || o === undefined) {
        return 0;
      }
    }
    if (o === true) {
      return 1;
    }
    var type = typeof o;
    if (type === 'number') {
      if (o !== o || o === Infinity) {
        return 0;
      }
      var h = o | 0;
      if (h !== o) {
        h ^= o * 0xFFFFFFFF;
      }
      while (o > 0xFFFFFFFF) {
        o /= 0xFFFFFFFF;
        h ^= o;
      }
      return smi(h);
    }
    if (type === 'string') {
      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
    }
    if (typeof o.hashCode === 'function') {
      return o.hashCode();
    }
    if (type === 'object') {
      return hashJSObj(o);
    }
    if (typeof o.toString === 'function') {
      return hashString(o.toString());
    }
    throw new Error('Value type ' + type + ' cannot be hashed.');
  }

  function cachedHashString(string) {
    var hash = stringHashCache[string];
    if (hash === undefined) {
      hash = hashString(string);
      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
        STRING_HASH_CACHE_SIZE = 0;
        stringHashCache = {};
      }
      STRING_HASH_CACHE_SIZE++;
      stringHashCache[string] = hash;
    }
    return hash;
  }

  // http://jsperf.com/hashing-strings
  function hashString(string) {
    // This is the hash from JVM
    // The hash code for a string is computed as
    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
    // where s[i] is the ith character of the string and n is the length of
    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
    // (exclusive) by dropping high bits.
    var hash = 0;
    for (var ii = 0; ii < string.length; ii++) {
      hash = 31 * hash + string.charCodeAt(ii) | 0;
    }
    return smi(hash);
  }

  function hashJSObj(obj) {
    var hash;
    if (usingWeakMap) {
      hash = weakMap.get(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = obj[UID_HASH_KEY];
    if (hash !== undefined) {
      return hash;
    }

    if (!canDefineProperty) {
      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
      if (hash !== undefined) {
        return hash;
      }

      hash = getIENodeHash(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = ++objHashUID;
    if (objHashUID & 0x40000000) {
      objHashUID = 0;
    }

    if (usingWeakMap) {
      weakMap.set(obj, hash);
    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
      throw new Error('Non-extensible objects are not allowed as keys.');
    } else if (canDefineProperty) {
      Object.defineProperty(obj, UID_HASH_KEY, {
        'enumerable': false,
        'configurable': false,
        'writable': false,
        'value': hash
      });
    } else if (obj.propertyIsEnumerable !== undefined &&
               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
      // Since we can't define a non-enumerable property on the object
      // we'll hijack one of the less-used non-enumerable properties to
      // save our hash on it. Since this is a function it will not show up in
      // `JSON.stringify` which is what we want.
      obj.propertyIsEnumerable = function() {
        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
      };
      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
    } else if (obj.nodeType !== undefined) {
      // At this point we couldn't get the IE `uniqueID` to use as a hash
      // and we couldn't use a non-enumerable property to exploit the
      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
      // itself.
      obj[UID_HASH_KEY] = hash;
    } else {
      throw new Error('Unable to set a non-enumerable property on object.');
    }

    return hash;
  }

  // Get references to ES5 object methods.
  var isExtensible = Object.isExtensible;

  // True if Object.defineProperty works as expected. IE8 fails this test.
  var canDefineProperty = (function() {
    try {
      Object.defineProperty({}, '@', {});
      return true;
    } catch (e) {
      return false;
    }
  }());

  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
  // and avoid memory leaks from the IE cloneNode bug.
  function getIENodeHash(node) {
    if (node && node.nodeType > 0) {
      switch (node.nodeType) {
        case 1: // Element
          return node.uniqueID;
        case 9: // Document
          return node.documentElement && node.documentElement.uniqueID;
      }
    }
  }

  // If possible, use a WeakMap.
  var usingWeakMap = typeof WeakMap === 'function';
  var weakMap;
  if (usingWeakMap) {
    weakMap = new WeakMap();
  }

  var objHashUID = 0;

  var UID_HASH_KEY = '__immutablehash__';
  if (typeof Symbol === 'function') {
    UID_HASH_KEY = Symbol(UID_HASH_KEY);
  }

  var STRING_HASH_CACHE_MIN_STRLEN = 16;
  var STRING_HASH_CACHE_MAX_SIZE = 255;
  var STRING_HASH_CACHE_SIZE = 0;
  var stringHashCache = {};

  function assertNotInfinite(size) {
    invariant(
      size !== Infinity,
      'Cannot perform this action with an infinite size.'
    );
  }

  createClass(Map, KeyedCollection);

    // @pragma Construction

    function Map(value) {
      return value === null || value === undefined ? emptyMap() :
        isMap(value) && !isOrdered(value) ? value :
        emptyMap().withMutations(function(map ) {
          var iter = KeyedIterable(value);
          assertNotInfinite(iter.size);
          iter.forEach(function(v, k)  {return map.set(k, v)});
        });
    }

    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
      return emptyMap().withMutations(function(map ) {
        for (var i = 0; i < keyValues.length; i += 2) {
          if (i + 1 >= keyValues.length) {
            throw new Error('Missing value for key: ' + keyValues[i]);
          }
          map.set(keyValues[i], keyValues[i + 1]);
        }
      });
    };

    Map.prototype.toString = function() {
      return this.__toString('Map {', '}');
    };

    // @pragma Access

    Map.prototype.get = function(k, notSetValue) {
      return this._root ?
        this._root.get(0, undefined, k, notSetValue) :
        notSetValue;
    };

    // @pragma Modification

    Map.prototype.set = function(k, v) {
      return updateMap(this, k, v);
    };

    Map.prototype.setIn = function(keyPath, v) {
      return this.updateIn(keyPath, NOT_SET, function()  {return v});
    };

    Map.prototype.remove = function(k) {
      return updateMap(this, k, NOT_SET);
    };

    Map.prototype.deleteIn = function(keyPath) {
      return this.updateIn(keyPath, function()  {return NOT_SET});
    };

    Map.prototype.update = function(k, notSetValue, updater) {
      return arguments.length === 1 ?
        k(this) :
        this.updateIn([k], notSetValue, updater);
    };

    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
      if (!updater) {
        updater = notSetValue;
        notSetValue = undefined;
      }
      var updatedValue = updateInDeepMap(
        this,
        forceIterator(keyPath),
        notSetValue,
        updater
      );
      return updatedValue === NOT_SET ? undefined : updatedValue;
    };

    Map.prototype.clear = function() {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._root = null;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyMap();
    };

    // @pragma Composition

    Map.prototype.merge = function(/*...iters*/) {
      return mergeIntoMapWith(this, undefined, arguments);
    };

    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return mergeIntoMapWith(this, merger, iters);
    };

    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
      return this.updateIn(
        keyPath,
        emptyMap(),
        function(m ) {return typeof m.merge === 'function' ?
          m.merge.apply(m, iters) :
          iters[iters.length - 1]}
      );
    };

    Map.prototype.mergeDeep = function(/*...iters*/) {
      return mergeIntoMapWith(this, deepMerger, arguments);
    };

    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
    };

    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
      return this.updateIn(
        keyPath,
        emptyMap(),
        function(m ) {return typeof m.mergeDeep === 'function' ?
          m.mergeDeep.apply(m, iters) :
          iters[iters.length - 1]}
      );
    };

    Map.prototype.sort = function(comparator) {
      // Late binding
      return OrderedMap(sortFactory(this, comparator));
    };

    Map.prototype.sortBy = function(mapper, comparator) {
      // Late binding
      return OrderedMap(sortFactory(this, comparator, mapper));
    };

    // @pragma Mutability

    Map.prototype.withMutations = function(fn) {
      var mutable = this.asMutable();
      fn(mutable);
      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
    };

    Map.prototype.asMutable = function() {
      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
    };

    Map.prototype.asImmutable = function() {
      return this.__ensureOwner();
    };

    Map.prototype.wasAltered = function() {
      return this.__altered;
    };

    Map.prototype.__iterator = function(type, reverse) {
      return new MapIterator(this, type, reverse);
    };

    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      var iterations = 0;
      this._root && this._root.iterate(function(entry ) {
        iterations++;
        return fn(entry[1], entry[0], this$0);
      }, reverse);
      return iterations;
    };

    Map.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        this.__ownerID = ownerID;
        this.__altered = false;
        return this;
      }
      return makeMap(this.size, this._root, ownerID, this.__hash);
    };


  function isMap(maybeMap) {
    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
  }

  Map.isMap = isMap;

  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

  var MapPrototype = Map.prototype;
  MapPrototype[IS_MAP_SENTINEL] = true;
  MapPrototype[DELETE] = MapPrototype.remove;
  MapPrototype.removeIn = MapPrototype.deleteIn;


  // #pragma Trie Nodes



    function ArrayMapNode(ownerID, entries) {
      this.ownerID = ownerID;
      this.entries = entries;
    }

    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      var entries = this.entries;
      for (var ii = 0, len = entries.length; ii < len; ii++) {
        if (is(key, entries[ii][0])) {
          return entries[ii][1];
        }
      }
      return notSetValue;
    };

    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      var removed = value === NOT_SET;

      var entries = this.entries;
      var idx = 0;
      for (var len = entries.length; idx < len; idx++) {
        if (is(key, entries[idx][0])) {
          break;
        }
      }
      var exists = idx < len;

      if (exists ? entries[idx][1] === value : removed) {
        return this;
      }

      SetRef(didAlter);
      (removed || !exists) && SetRef(didChangeSize);

      if (removed && entries.length === 1) {
        return; // undefined
      }

      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
        return createNodes(ownerID, entries, key, value);
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newEntries = isEditable ? entries : arrCopy(entries);

      if (exists) {
        if (removed) {
          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
        } else {
          newEntries[idx] = [key, value];
        }
      } else {
        newEntries.push([key, value]);
      }

      if (isEditable) {
        this.entries = newEntries;
        return this;
      }

      return new ArrayMapNode(ownerID, newEntries);
    };




    function BitmapIndexedNode(ownerID, bitmap, nodes) {
      this.ownerID = ownerID;
      this.bitmap = bitmap;
      this.nodes = nodes;
    }

    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
      var bitmap = this.bitmap;
      return (bitmap & bit) === 0 ? notSetValue :
        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
    };

    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
      var bit = 1 << keyHashFrag;
      var bitmap = this.bitmap;
      var exists = (bitmap & bit) !== 0;

      if (!exists && value === NOT_SET) {
        return this;
      }

      var idx = popCount(bitmap & (bit - 1));
      var nodes = this.nodes;
      var node = exists ? nodes[idx] : undefined;
      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

      if (newNode === node) {
        return this;
      }

      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
      }

      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
        return nodes[idx ^ 1];
      }

      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
        return newNode;
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
      var newNodes = exists ? newNode ?
        setIn(nodes, idx, newNode, isEditable) :
        spliceOut(nodes, idx, isEditable) :
        spliceIn(nodes, idx, newNode, isEditable);

      if (isEditable) {
        this.bitmap = newBitmap;
        this.nodes = newNodes;
        return this;
      }

      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
    };




    function HashArrayMapNode(ownerID, count, nodes) {
      this.ownerID = ownerID;
      this.count = count;
      this.nodes = nodes;
    }

    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
      var node = this.nodes[idx];
      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
    };

    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
      var removed = value === NOT_SET;
      var nodes = this.nodes;
      var node = nodes[idx];

      if (removed && !node) {
        return this;
      }

      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
      if (newNode === node) {
        return this;
      }

      var newCount = this.count;
      if (!node) {
        newCount++;
      } else if (!newNode) {
        newCount--;
        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
          return packNodes(ownerID, nodes, newCount, idx);
        }
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newNodes = setIn(nodes, idx, newNode, isEditable);

      if (isEditable) {
        this.count = newCount;
        this.nodes = newNodes;
        return this;
      }

      return new HashArrayMapNode(ownerID, newCount, newNodes);
    };




    function HashCollisionNode(ownerID, keyHash, entries) {
      this.ownerID = ownerID;
      this.keyHash = keyHash;
      this.entries = entries;
    }

    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      var entries = this.entries;
      for (var ii = 0, len = entries.length; ii < len; ii++) {
        if (is(key, entries[ii][0])) {
          return entries[ii][1];
        }
      }
      return notSetValue;
    };

    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }

      var removed = value === NOT_SET;

      if (keyHash !== this.keyHash) {
        if (removed) {
          return this;
        }
        SetRef(didAlter);
        SetRef(didChangeSize);
        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
      }

      var entries = this.entries;
      var idx = 0;
      for (var len = entries.length; idx < len; idx++) {
        if (is(key, entries[idx][0])) {
          break;
        }
      }
      var exists = idx < len;

      if (exists ? entries[idx][1] === value : removed) {
        return this;
      }

      SetRef(didAlter);
      (removed || !exists) && SetRef(didChangeSize);

      if (removed && len === 2) {
        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newEntries = isEditable ? entries : arrCopy(entries);

      if (exists) {
        if (removed) {
          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
        } else {
          newEntries[idx] = [key, value];
        }
      } else {
        newEntries.push([key, value]);
      }

      if (isEditable) {
        this.entries = newEntries;
        return this;
      }

      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
    };




    function ValueNode(ownerID, keyHash, entry) {
      this.ownerID = ownerID;
      this.keyHash = keyHash;
      this.entry = entry;
    }

    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
    };

    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      var removed = value === NOT_SET;
      var keyMatch = is(key, this.entry[0]);
      if (keyMatch ? value === this.entry[1] : removed) {
        return this;
      }

      SetRef(didAlter);

      if (removed) {
        SetRef(didChangeSize);
        return; // undefined
      }

      if (keyMatch) {
        if (ownerID && ownerID === this.ownerID) {
          this.entry[1] = value;
          return this;
        }
        return new ValueNode(ownerID, this.keyHash, [key, value]);
      }

      SetRef(didChangeSize);
      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
    };



  // #pragma Iterators

  ArrayMapNode.prototype.iterate =
  HashCollisionNode.prototype.iterate = function (fn, reverse) {
    var entries = this.entries;
    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
        return false;
      }
    }
  }

  BitmapIndexedNode.prototype.iterate =
  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
    var nodes = this.nodes;
    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
      var node = nodes[reverse ? maxIndex - ii : ii];
      if (node && node.iterate(fn, reverse) === false) {
        return false;
      }
    }
  }

  ValueNode.prototype.iterate = function (fn, reverse) {
    return fn(this.entry);
  }

  createClass(MapIterator, Iterator);

    function MapIterator(map, type, reverse) {
      this._type = type;
      this._reverse = reverse;
      this._stack = map._root && mapIteratorFrame(map._root);
    }

    MapIterator.prototype.next = function() {
      var type = this._type;
      var stack = this._stack;
      while (stack) {
        var node = stack.node;
        var index = stack.index++;
        var maxIndex;
        if (node.entry) {
          if (index === 0) {
            return mapIteratorValue(type, node.entry);
          }
        } else if (node.entries) {
          maxIndex = node.entries.length - 1;
          if (index <= maxIndex) {
            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
          }
        } else {
          maxIndex = node.nodes.length - 1;
          if (index <= maxIndex) {
            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
            if (subNode) {
              if (subNode.entry) {
                return mapIteratorValue(type, subNode.entry);
              }
              stack = this._stack = mapIteratorFrame(subNode, stack);
            }
            continue;
          }
        }
        stack = this._stack = this._stack.__prev;
      }
      return iteratorDone();
    };


  function mapIteratorValue(type, entry) {
    return iteratorValue(type, entry[0], entry[1]);
  }

  function mapIteratorFrame(node, prev) {
    return {
      node: node,
      index: 0,
      __prev: prev
    };
  }

  function makeMap(size, root, ownerID, hash) {
    var map = Object.create(MapPrototype);
    map.size = size;
    map._root = root;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_MAP;
  function emptyMap() {
    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
  }

  function updateMap(map, k, v) {
    var newRoot;
    var newSize;
    if (!map._root) {
      if (v === NOT_SET) {
        return map;
      }
      newSize = 1;
      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
    } else {
      var didChangeSize = MakeRef(CHANGE_LENGTH);
      var didAlter = MakeRef(DID_ALTER);
      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
      if (!didAlter.value) {
        return map;
      }
      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
    }
    if (map.__ownerID) {
      map.size = newSize;
      map._root = newRoot;
      map.__hash = undefined;
      map.__altered = true;
      return map;
    }
    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
  }

  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (!node) {
      if (value === NOT_SET) {
        return node;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return new ValueNode(ownerID, keyHash, [key, value]);
    }
    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
  }

  function isLeafNode(node) {
    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
  }

  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
    if (node.keyHash === keyHash) {
      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
    }

    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

    var newNode;
    var nodes = idx1 === idx2 ?
      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);

    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
  }

  function createNodes(ownerID, entries, key, value) {
    if (!ownerID) {
      ownerID = new OwnerID();
    }
    var node = new ValueNode(ownerID, hash(key), [key, value]);
    for (var ii = 0; ii < entries.length; ii++) {
      var entry = entries[ii];
      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
    }
    return node;
  }

  function packNodes(ownerID, nodes, count, excluding) {
    var bitmap = 0;
    var packedII = 0;
    var packedNodes = new Array(count);
    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
      var node = nodes[ii];
      if (node !== undefined && ii !== excluding) {
        bitmap |= bit;
        packedNodes[packedII++] = node;
      }
    }
    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
  }

  function expandNodes(ownerID, nodes, bitmap, including, node) {
    var count = 0;
    var expandedNodes = new Array(SIZE);
    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
    }
    expandedNodes[including] = node;
    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
  }

  function mergeIntoMapWith(map, merger, iterables) {
    var iters = [];
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = KeyedIterable(value);
      if (!isIterable(value)) {
        iter = iter.map(function(v ) {return fromJS(v)});
      }
      iters.push(iter);
    }
    return mergeIntoCollectionWith(map, merger, iters);
  }

  function deepMerger(existing, value, key) {
    return existing && existing.mergeDeep && isIterable(value) ?
      existing.mergeDeep(value) :
      is(existing, value) ? existing : value;
  }

  function deepMergerWith(merger) {
    return function(existing, value, key)  {
      if (existing && existing.mergeDeepWith && isIterable(value)) {
        return existing.mergeDeepWith(merger, value);
      }
      var nextValue = merger(existing, value, key);
      return is(existing, nextValue) ? existing : nextValue;
    };
  }

  function mergeIntoCollectionWith(collection, merger, iters) {
    iters = iters.filter(function(x ) {return x.size !== 0});
    if (iters.length === 0) {
      return collection;
    }
    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
      return collection.constructor(iters[0]);
    }
    return collection.withMutations(function(collection ) {
      var mergeIntoMap = merger ?
        function(value, key)  {
          collection.update(key, NOT_SET, function(existing )
            {return existing === NOT_SET ? value : merger(existing, value, key)}
          );
        } :
        function(value, key)  {
          collection.set(key, value);
        }
      for (var ii = 0; ii < iters.length; ii++) {
        iters[ii].forEach(mergeIntoMap);
      }
    });
  }

  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
    var isNotSet = existing === NOT_SET;
    var step = keyPathIter.next();
    if (step.done) {
      var existingValue = isNotSet ? notSetValue : existing;
      var newValue = updater(existingValue);
      return newValue === existingValue ? existing : newValue;
    }
    invariant(
      isNotSet || (existing && existing.set),
      'invalid keyPath'
    );
    var key = step.value;
    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
    var nextUpdated = updateInDeepMap(
      nextExisting,
      keyPathIter,
      notSetValue,
      updater
    );
    return nextUpdated === nextExisting ? existing :
      nextUpdated === NOT_SET ? existing.remove(key) :
      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
  }

  function popCount(x) {
    x = x - ((x >> 1) & 0x55555555);
    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
    x = (x + (x >> 4)) & 0x0f0f0f0f;
    x = x + (x >> 8);
    x = x + (x >> 16);
    return x & 0x7f;
  }

  function setIn(array, idx, val, canEdit) {
    var newArray = canEdit ? array : arrCopy(array);
    newArray[idx] = val;
    return newArray;
  }

  function spliceIn(array, idx, val, canEdit) {
    var newLen = array.length + 1;
    if (canEdit && idx + 1 === newLen) {
      array[idx] = val;
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        newArray[ii] = val;
        after = -1;
      } else {
        newArray[ii] = array[ii + after];
      }
    }
    return newArray;
  }

  function spliceOut(array, idx, canEdit) {
    var newLen = array.length - 1;
    if (canEdit && idx === newLen) {
      array.pop();
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        after = 1;
      }
      newArray[ii] = array[ii + after];
    }
    return newArray;
  }

  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

  createClass(List, IndexedCollection);

    // @pragma Construction

    function List(value) {
      var empty = emptyList();
      if (value === null || value === undefined) {
        return empty;
      }
      if (isList(value)) {
        return value;
      }
      var iter = IndexedIterable(value);
      var size = iter.size;
      if (size === 0) {
        return empty;
      }
      assertNotInfinite(size);
      if (size > 0 && size < SIZE) {
        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
      }
      return empty.withMutations(function(list ) {
        list.setSize(size);
        iter.forEach(function(v, i)  {return list.set(i, v)});
      });
    }

    List.of = function(/*...values*/) {
      return this(arguments);
    };

    List.prototype.toString = function() {
      return this.__toString('List [', ']');
    };

    // @pragma Access

    List.prototype.get = function(index, notSetValue) {
      index = wrapIndex(this, index);
      if (index >= 0 && index < this.size) {
        index += this._origin;
        var node = listNodeFor(this, index);
        return node && node.array[index & MASK];
      }
      return notSetValue;
    };

    // @pragma Modification

    List.prototype.set = function(index, value) {
      return updateList(this, index, value);
    };

    List.prototype.remove = function(index) {
      return !this.has(index) ? this :
        index === 0 ? this.shift() :
        index === this.size - 1 ? this.pop() :
        this.splice(index, 1);
    };

    List.prototype.insert = function(index, value) {
      return this.splice(index, 0, value);
    };

    List.prototype.clear = function() {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = this._origin = this._capacity = 0;
        this._level = SHIFT;
        this._root = this._tail = null;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyList();
    };

    List.prototype.push = function(/*...values*/) {
      var values = arguments;
      var oldSize = this.size;
      return this.withMutations(function(list ) {
        setListBounds(list, 0, oldSize + values.length);
        for (var ii = 0; ii < values.length; ii++) {
          list.set(oldSize + ii, values[ii]);
        }
      });
    };

    List.prototype.pop = function() {
      return setListBounds(this, 0, -1);
    };

    List.prototype.unshift = function(/*...values*/) {
      var values = arguments;
      return this.withMutations(function(list ) {
        setListBounds(list, -values.length);
        for (var ii = 0; ii < values.length; ii++) {
          list.set(ii, values[ii]);
        }
      });
    };

    List.prototype.shift = function() {
      return setListBounds(this, 1);
    };

    // @pragma Composition

    List.prototype.merge = function(/*...iters*/) {
      return mergeIntoListWith(this, undefined, arguments);
    };

    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return mergeIntoListWith(this, merger, iters);
    };

    List.prototype.mergeDeep = function(/*...iters*/) {
      return mergeIntoListWith(this, deepMerger, arguments);
    };

    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return mergeIntoListWith(this, deepMergerWith(merger), iters);
    };

    List.prototype.setSize = function(size) {
      return setListBounds(this, 0, size);
    };

    // @pragma Iteration

    List.prototype.slice = function(begin, end) {
      var size = this.size;
      if (wholeSlice(begin, end, size)) {
        return this;
      }
      return setListBounds(
        this,
        resolveBegin(begin, size),
        resolveEnd(end, size)
      );
    };

    List.prototype.__iterator = function(type, reverse) {
      var index = 0;
      var values = iterateList(this, reverse);
      return new Iterator(function()  {
        var value = values();
        return value === DONE ?
          iteratorDone() :
          iteratorValue(type, index++, value);
      });
    };

    List.prototype.__iterate = function(fn, reverse) {
      var index = 0;
      var values = iterateList(this, reverse);
      var value;
      while ((value = values()) !== DONE) {
        if (fn(value, index++, this) === false) {
          break;
        }
      }
      return index;
    };

    List.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        this.__ownerID = ownerID;
        return this;
      }
      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
    };


  function isList(maybeList) {
    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
  }

  List.isList = isList;

  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

  var ListPrototype = List.prototype;
  ListPrototype[IS_LIST_SENTINEL] = true;
  ListPrototype[DELETE] = ListPrototype.remove;
  ListPrototype.setIn = MapPrototype.setIn;
  ListPrototype.deleteIn =
  ListPrototype.removeIn = MapPrototype.removeIn;
  ListPrototype.update = MapPrototype.update;
  ListPrototype.updateIn = MapPrototype.updateIn;
  ListPrototype.mergeIn = MapPrototype.mergeIn;
  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  ListPrototype.withMutations = MapPrototype.withMutations;
  ListPrototype.asMutable = MapPrototype.asMutable;
  ListPrototype.asImmutable = MapPrototype.asImmutable;
  ListPrototype.wasAltered = MapPrototype.wasAltered;



    function VNode(array, ownerID) {
      this.array = array;
      this.ownerID = ownerID;
    }

    // TODO: seems like these methods are very similar

    VNode.prototype.removeBefore = function(ownerID, level, index) {
      if (index === level ? 1 << level :  false || this.array.length === 0) {
        return this;
      }
      var originIndex = (index >>> level) & MASK;
      if (originIndex >= this.array.length) {
        return new VNode([], ownerID);
      }
      var removingFirst = originIndex === 0;
      var newChild;
      if (level > 0) {
        var oldChild = this.array[originIndex];
        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
        if (newChild === oldChild && removingFirst) {
          return this;
        }
      }
      if (removingFirst && !newChild) {
        return this;
      }
      var editable = editableVNode(this, ownerID);
      if (!removingFirst) {
        for (var ii = 0; ii < originIndex; ii++) {
          editable.array[ii] = undefined;
        }
      }
      if (newChild) {
        editable.array[originIndex] = newChild;
      }
      return editable;
    };

    VNode.prototype.removeAfter = function(ownerID, level, index) {
      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
        return this;
      }
      var sizeIndex = ((index - 1) >>> level) & MASK;
      if (sizeIndex >= this.array.length) {
        return this;
      }

      var newChild;
      if (level > 0) {
        var oldChild = this.array[sizeIndex];
        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
          return this;
        }
      }

      var editable = editableVNode(this, ownerID);
      editable.array.splice(sizeIndex + 1);
      if (newChild) {
        editable.array[sizeIndex] = newChild;
      }
      return editable;
    };



  var DONE = {};

  function iterateList(list, reverse) {
    var left = list._origin;
    var right = list._capacity;
    var tailPos = getTailOffset(right);
    var tail = list._tail;

    return iterateNodeOrLeaf(list._root, list._level, 0);

    function iterateNodeOrLeaf(node, level, offset) {
      return level === 0 ?
        iterateLeaf(node, offset) :
        iterateNode(node, level, offset);
    }

    function iterateLeaf(node, offset) {
      var array = offset === tailPos ? tail && tail.array : node && node.array;
      var from = offset > left ? 0 : left - offset;
      var to = right - offset;
      if (to > SIZE) {
        to = SIZE;
      }
      return function()  {
        if (from === to) {
          return DONE;
        }
        var idx = reverse ? --to : from++;
        return array && array[idx];
      };
    }

    function iterateNode(node, level, offset) {
      var values;
      var array = node && node.array;
      var from = offset > left ? 0 : (left - offset) >> level;
      var to = ((right - offset) >> level) + 1;
      if (to > SIZE) {
        to = SIZE;
      }
      return function()  {
        do {
          if (values) {
            var value = values();
            if (value !== DONE) {
              return value;
            }
            values = null;
          }
          if (from === to) {
            return DONE;
          }
          var idx = reverse ? --to : from++;
          values = iterateNodeOrLeaf(
            array && array[idx], level - SHIFT, offset + (idx << level)
          );
        } while (true);
      };
    }
  }

  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
    var list = Object.create(ListPrototype);
    list.size = capacity - origin;
    list._origin = origin;
    list._capacity = capacity;
    list._level = level;
    list._root = root;
    list._tail = tail;
    list.__ownerID = ownerID;
    list.__hash = hash;
    list.__altered = false;
    return list;
  }

  var EMPTY_LIST;
  function emptyList() {
    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
  }

  function updateList(list, index, value) {
    index = wrapIndex(list, index);

    if (index !== index) {
      return list;
    }

    if (index >= list.size || index < 0) {
      return list.withMutations(function(list ) {
        index < 0 ?
          setListBounds(list, index).set(0, value) :
          setListBounds(list, 0, index + 1).set(index, value)
      });
    }

    index += list._origin;

    var newTail = list._tail;
    var newRoot = list._root;
    var didAlter = MakeRef(DID_ALTER);
    if (index >= getTailOffset(list._capacity)) {
      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
    } else {
      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
    }

    if (!didAlter.value) {
      return list;
    }

    if (list.__ownerID) {
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
  }

  function updateVNode(node, ownerID, level, index, value, didAlter) {
    var idx = (index >>> level) & MASK;
    var nodeHas = node && idx < node.array.length;
    if (!nodeHas && value === undefined) {
      return node;
    }

    var newNode;

    if (level > 0) {
      var lowerNode = node && node.array[idx];
      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
      if (newLowerNode === lowerNode) {
        return node;
      }
      newNode = editableVNode(node, ownerID);
      newNode.array[idx] = newLowerNode;
      return newNode;
    }

    if (nodeHas && node.array[idx] === value) {
      return node;
    }

    SetRef(didAlter);

    newNode = editableVNode(node, ownerID);
    if (value === undefined && idx === newNode.array.length - 1) {
      newNode.array.pop();
    } else {
      newNode.array[idx] = value;
    }
    return newNode;
  }

  function editableVNode(node, ownerID) {
    if (ownerID && node && ownerID === node.ownerID) {
      return node;
    }
    return new VNode(node ? node.array.slice() : [], ownerID);
  }

  function listNodeFor(list, rawIndex) {
    if (rawIndex >= getTailOffset(list._capacity)) {
      return list._tail;
    }
    if (rawIndex < 1 << (list._level + SHIFT)) {
      var node = list._root;
      var level = list._level;
      while (node && level > 0) {
        node = node.array[(rawIndex >>> level) & MASK];
        level -= SHIFT;
      }
      return node;
    }
  }

  function setListBounds(list, begin, end) {
    // Sanitize begin & end using this shorthand for ToInt32(argument)
    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      end = end | 0;
    }
    var owner = list.__ownerID || new OwnerID();
    var oldOrigin = list._origin;
    var oldCapacity = list._capacity;
    var newOrigin = oldOrigin + begin;
    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
      return list;
    }

    // If it's going to end after it starts, it's empty.
    if (newOrigin >= newCapacity) {
      return list.clear();
    }

    var newLevel = list._level;
    var newRoot = list._root;

    // New origin might need creating a higher root.
    var offsetShift = 0;
    while (newOrigin + offsetShift < 0) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
      newLevel += SHIFT;
      offsetShift += 1 << newLevel;
    }
    if (offsetShift) {
      newOrigin += offsetShift;
      oldOrigin += offsetShift;
      newCapacity += offsetShift;
      oldCapacity += offsetShift;
    }

    var oldTailOffset = getTailOffset(oldCapacity);
    var newTailOffset = getTailOffset(newCapacity);

    // New size might need creating a higher root.
    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
      newLevel += SHIFT;
    }

    // Locate or create the new tail.
    var oldTail = list._tail;
    var newTail = newTailOffset < oldTailOffset ?
      listNodeFor(list, newCapacity - 1) :
      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

    // Merge Tail into tree.
    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
      newRoot = editableVNode(newRoot, owner);
      var node = newRoot;
      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
        var idx = (oldTailOffset >>> level) & MASK;
        node = node.array[idx] = editableVNode(node.array[idx], owner);
      }
      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
    }

    // If the size has been reduced, there's a chance the tail needs to be trimmed.
    if (newCapacity < oldCapacity) {
      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
    }

    // If the new origin is within the tail, then we do not need a root.
    if (newOrigin >= newTailOffset) {
      newOrigin -= newTailOffset;
      newCapacity -= newTailOffset;
      newLevel = SHIFT;
      newRoot = null;
      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

    // Otherwise, if the root has been trimmed, garbage collect.
    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
      offsetShift = 0;

      // Identify the new top root node of the subtree of the old root.
      while (newRoot) {
        var beginIndex = (newOrigin >>> newLevel) & MASK;
        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
          break;
        }
        if (beginIndex) {
          offsetShift += (1 << newLevel) * beginIndex;
        }
        newLevel -= SHIFT;
        newRoot = newRoot.array[beginIndex];
      }

      // Trim the new sides of the new root.
      if (newRoot && newOrigin > oldOrigin) {
        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
      }
      if (newRoot && newTailOffset < oldTailOffset) {
        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
      }
      if (offsetShift) {
        newOrigin -= offsetShift;
        newCapacity -= offsetShift;
      }
    }

    if (list.__ownerID) {
      list.size = newCapacity - newOrigin;
      list._origin = newOrigin;
      list._capacity = newCapacity;
      list._level = newLevel;
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
  }

  function mergeIntoListWith(list, merger, iterables) {
    var iters = [];
    var maxSize = 0;
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = IndexedIterable(value);
      if (iter.size > maxSize) {
        maxSize = iter.size;
      }
      if (!isIterable(value)) {
        iter = iter.map(function(v ) {return fromJS(v)});
      }
      iters.push(iter);
    }
    if (maxSize > list.size) {
      list = list.setSize(maxSize);
    }
    return mergeIntoCollectionWith(list, merger, iters);
  }

  function getTailOffset(size) {
    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
  }

  createClass(OrderedMap, Map);

    // @pragma Construction

    function OrderedMap(value) {
      return value === null || value === undefined ? emptyOrderedMap() :
        isOrderedMap(value) ? value :
        emptyOrderedMap().withMutations(function(map ) {
          var iter = KeyedIterable(value);
          assertNotInfinite(iter.size);
          iter.forEach(function(v, k)  {return map.set(k, v)});
        });
    }

    OrderedMap.of = function(/*...values*/) {
      return this(arguments);
    };

    OrderedMap.prototype.toString = function() {
      return this.__toString('OrderedMap {', '}');
    };

    // @pragma Access

    OrderedMap.prototype.get = function(k, notSetValue) {
      var index = this._map.get(k);
      return index !== undefined ? this._list.get(index)[1] : notSetValue;
    };

    // @pragma Modification

    OrderedMap.prototype.clear = function() {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._map.clear();
        this._list.clear();
        return this;
      }
      return emptyOrderedMap();
    };

    OrderedMap.prototype.set = function(k, v) {
      return updateOrderedMap(this, k, v);
    };

    OrderedMap.prototype.remove = function(k) {
      return updateOrderedMap(this, k, NOT_SET);
    };

    OrderedMap.prototype.wasAltered = function() {
      return this._map.wasAltered() || this._list.wasAltered();
    };

    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return this._list.__iterate(
        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
        reverse
      );
    };

    OrderedMap.prototype.__iterator = function(type, reverse) {
      return this._list.fromEntrySeq().__iterator(type, reverse);
    };

    OrderedMap.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map.__ensureOwner(ownerID);
      var newList = this._list.__ensureOwner(ownerID);
      if (!ownerID) {
        this.__ownerID = ownerID;
        this._map = newMap;
        this._list = newList;
        return this;
      }
      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
    };


  function isOrderedMap(maybeOrderedMap) {
    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
  }

  OrderedMap.isOrderedMap = isOrderedMap;

  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



  function makeOrderedMap(map, list, ownerID, hash) {
    var omap = Object.create(OrderedMap.prototype);
    omap.size = map ? map.size : 0;
    omap._map = map;
    omap._list = list;
    omap.__ownerID = ownerID;
    omap.__hash = hash;
    return omap;
  }

  var EMPTY_ORDERED_MAP;
  function emptyOrderedMap() {
    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
  }

  function updateOrderedMap(omap, k, v) {
    var map = omap._map;
    var list = omap._list;
    var i = map.get(k);
    var has = i !== undefined;
    var newMap;
    var newList;
    if (v === NOT_SET) { // removed
      if (!has) {
        return omap;
      }
      if (list.size >= SIZE && list.size >= map.size * 2) {
        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
        if (omap.__ownerID) {
          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
        }
      } else {
        newMap = map.remove(k);
        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
      }
    } else {
      if (has) {
        if (v === list.get(i)[1]) {
          return omap;
        }
        newMap = map;
        newList = list.set(i, [k, v]);
      } else {
        newMap = map.set(k, list.size);
        newList = list.set(list.size, [k, v]);
      }
    }
    if (omap.__ownerID) {
      omap.size = newMap.size;
      omap._map = newMap;
      omap._list = newList;
      omap.__hash = undefined;
      return omap;
    }
    return makeOrderedMap(newMap, newList);
  }

  createClass(ToKeyedSequence, KeyedSeq);
    function ToKeyedSequence(indexed, useKeys) {
      this._iter = indexed;
      this._useKeys = useKeys;
      this.size = indexed.size;
    }

    ToKeyedSequence.prototype.get = function(key, notSetValue) {
      return this._iter.get(key, notSetValue);
    };

    ToKeyedSequence.prototype.has = function(key) {
      return this._iter.has(key);
    };

    ToKeyedSequence.prototype.valueSeq = function() {
      return this._iter.valueSeq();
    };

    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
      var reversedSequence = reverseFactory(this, true);
      if (!this._useKeys) {
        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
      }
      return reversedSequence;
    };

    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
      var mappedSequence = mapFactory(this, mapper, context);
      if (!this._useKeys) {
        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
      }
      return mappedSequence;
    };

    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      var ii;
      return this._iter.__iterate(
        this._useKeys ?
          function(v, k)  {return fn(v, k, this$0)} :
          ((ii = reverse ? resolveSize(this) : 0),
            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
        reverse
      );
    };

    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
      if (this._useKeys) {
        return this._iter.__iterator(type, reverse);
      }
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      var ii = reverse ? resolveSize(this) : 0;
      return new Iterator(function()  {
        var step = iterator.next();
        return step.done ? step :
          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
      });
    };

  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


  createClass(ToIndexedSequence, IndexedSeq);
    function ToIndexedSequence(iter) {
      this._iter = iter;
      this.size = iter.size;
    }

    ToIndexedSequence.prototype.includes = function(value) {
      return this._iter.includes(value);
    };

    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      var iterations = 0;
      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
    };

    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      return new Iterator(function()  {
        var step = iterator.next();
        return step.done ? step :
          iteratorValue(type, iterations++, step.value, step)
      });
    };



  createClass(ToSetSequence, SetSeq);
    function ToSetSequence(iter) {
      this._iter = iter;
      this.size = iter.size;
    }

    ToSetSequence.prototype.has = function(key) {
      return this._iter.includes(key);
    };

    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
    };

    ToSetSequence.prototype.__iterator = function(type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      return new Iterator(function()  {
        var step = iterator.next();
        return step.done ? step :
          iteratorValue(type, step.value, step.value, step);
      });
    };



  createClass(FromEntriesSequence, KeyedSeq);
    function FromEntriesSequence(entries) {
      this._iter = entries;
      this.size = entries.size;
    }

    FromEntriesSequence.prototype.entrySeq = function() {
      return this._iter.toSeq();
    };

    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return this._iter.__iterate(function(entry ) {
        // Check if entry exists first so array access doesn't throw for holes
        // in the parent iteration.
        if (entry) {
          validateEntry(entry);
          var indexedIterable = isIterable(entry);
          return fn(
            indexedIterable ? entry.get(1) : entry[1],
            indexedIterable ? entry.get(0) : entry[0],
            this$0
          );
        }
      }, reverse);
    };

    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      return new Iterator(function()  {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          // Check if entry exists first so array access doesn't throw for holes
          // in the parent iteration.
          if (entry) {
            validateEntry(entry);
            var indexedIterable = isIterable(entry);
            return iteratorValue(
              type,
              indexedIterable ? entry.get(0) : entry[0],
              indexedIterable ? entry.get(1) : entry[1],
              step
            );
          }
        }
      });
    };


  ToIndexedSequence.prototype.cacheResult =
  ToKeyedSequence.prototype.cacheResult =
  ToSetSequence.prototype.cacheResult =
  FromEntriesSequence.prototype.cacheResult =
    cacheResultThrough;


  function flipFactory(iterable) {
    var flipSequence = makeSequence(iterable);
    flipSequence._iter = iterable;
    flipSequence.size = iterable.size;
    flipSequence.flip = function()  {return iterable};
    flipSequence.reverse = function () {
      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
      reversedSequence.flip = function()  {return iterable.reverse()};
      return reversedSequence;
    };
    flipSequence.has = function(key ) {return iterable.includes(key)};
    flipSequence.includes = function(key ) {return iterable.has(key)};
    flipSequence.cacheResult = cacheResultThrough;
    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
    }
    flipSequence.__iteratorUncached = function(type, reverse) {
      if (type === ITERATE_ENTRIES) {
        var iterator = iterable.__iterator(type, reverse);
        return new Iterator(function()  {
          var step = iterator.next();
          if (!step.done) {
            var k = step.value[0];
            step.value[0] = step.value[1];
            step.value[1] = k;
          }
          return step;
        });
      }
      return iterable.__iterator(
        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
        reverse
      );
    }
    return flipSequence;
  }


  function mapFactory(iterable, mapper, context) {
    var mappedSequence = makeSequence(iterable);
    mappedSequence.size = iterable.size;
    mappedSequence.has = function(key ) {return iterable.has(key)};
    mappedSequence.get = function(key, notSetValue)  {
      var v = iterable.get(key, NOT_SET);
      return v === NOT_SET ?
        notSetValue :
        mapper.call(context, v, key, iterable);
    };
    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
      return iterable.__iterate(
        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
        reverse
      );
    }
    mappedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      return new Iterator(function()  {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var key = entry[0];
        return iteratorValue(
          type,
          key,
          mapper.call(context, entry[1], key, iterable),
          step
        );
      });
    }
    return mappedSequence;
  }


  function reverseFactory(iterable, useKeys) {
    var reversedSequence = makeSequence(iterable);
    reversedSequence._iter = iterable;
    reversedSequence.size = iterable.size;
    reversedSequence.reverse = function()  {return iterable};
    if (iterable.flip) {
      reversedSequence.flip = function () {
        var flipSequence = flipFactory(iterable);
        flipSequence.reverse = function()  {return iterable.flip()};
        return flipSequence;
      };
    }
    reversedSequence.get = function(key, notSetValue) 
      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
    reversedSequence.has = function(key )
      {return iterable.has(useKeys ? key : -1 - key)};
    reversedSequence.includes = function(value ) {return iterable.includes(value)};
    reversedSequence.cacheResult = cacheResultThrough;
    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
    };
    reversedSequence.__iterator =
      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
    return reversedSequence;
  }


  function filterFactory(iterable, predicate, context, useKeys) {
    var filterSequence = makeSequence(iterable);
    if (useKeys) {
      filterSequence.has = function(key ) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
      };
      filterSequence.get = function(key, notSetValue)  {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
          v : notSetValue;
      };
    }
    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function(v, k, c)  {
        if (predicate.call(context, v, k, c)) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      }, reverse);
      return iterations;
    };
    filterSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterations = 0;
      return new Iterator(function()  {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          var key = entry[0];
          var value = entry[1];
          if (predicate.call(context, value, key, iterable)) {
            return iteratorValue(type, useKeys ? key : iterations++, value, step);
          }
        }
      });
    }
    return filterSequence;
  }


  function countByFactory(iterable, grouper, context) {
    var groups = Map().asMutable();
    iterable.__iterate(function(v, k)  {
      groups.update(
        grouper.call(context, v, k, iterable),
        0,
        function(a ) {return a + 1}
      );
    });
    return groups.asImmutable();
  }


  function groupByFactory(iterable, grouper, context) {
    var isKeyedIter = isKeyed(iterable);
    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
    iterable.__iterate(function(v, k)  {
      groups.update(
        grouper.call(context, v, k, iterable),
        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
      );
    });
    var coerce = iterableClass(iterable);
    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
  }


  function sliceFactory(iterable, begin, end, useKeys) {
    var originalSize = iterable.size;

    // Sanitize begin & end using this shorthand for ToInt32(argument)
    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      if (end === Infinity) {
        end = originalSize;
      } else {
        end = end | 0;
      }
    }

    if (wholeSlice(begin, end, originalSize)) {
      return iterable;
    }

    var resolvedBegin = resolveBegin(begin, originalSize);
    var resolvedEnd = resolveEnd(end, originalSize);

    // begin or end will be NaN if they were provided as negative numbers and
    // this iterable's size is unknown. In that case, cache first so there is
    // a known size and these do not resolve to NaN.
    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
    }

    // Note: resolvedEnd is undefined when the original sequence's length is
    // unknown and this slice did not supply an end and should contain all
    // elements after resolvedBegin.
    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
    var resolvedSize = resolvedEnd - resolvedBegin;
    var sliceSize;
    if (resolvedSize === resolvedSize) {
      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
    }

    var sliceSeq = makeSequence(iterable);

    // If iterable.size is undefined, the size of the realized sliceSeq is
    // unknown at this point unless the number of items to slice is 0
    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
      sliceSeq.get = function (index, notSetValue) {
        index = wrapIndex(this, index);
        return index >= 0 && index < sliceSize ?
          iterable.get(index + resolvedBegin, notSetValue) :
          notSetValue;
      }
    }

    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
      if (sliceSize === 0) {
        return 0;
      }
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var skipped = 0;
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function(v, k)  {
        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
                 iterations !== sliceSize;
        }
      });
      return iterations;
    };

    sliceSeq.__iteratorUncached = function(type, reverse) {
      if (sliceSize !== 0 && reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      // Don't bother instantiating parent iterator if taking 0.
      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
      var skipped = 0;
      var iterations = 0;
      return new Iterator(function()  {
        while (skipped++ < resolvedBegin) {
          iterator.next();
        }
        if (++iterations > sliceSize) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (useKeys || type === ITERATE_VALUES) {
          return step;
        } else if (type === ITERATE_KEYS) {
          return iteratorValue(type, iterations - 1, undefined, step);
        } else {
          return iteratorValue(type, iterations - 1, step.value[1], step);
        }
      });
    }

    return sliceSeq;
  }


  function takeWhileFactory(iterable, predicate, context) {
    var takeSequence = makeSequence(iterable);
    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterations = 0;
      iterable.__iterate(function(v, k, c) 
        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
      );
      return iterations;
    };
    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterating = true;
      return new Iterator(function()  {
        if (!iterating) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var k = entry[0];
        var v = entry[1];
        if (!predicate.call(context, v, k, this$0)) {
          iterating = false;
          return iteratorDone();
        }
        return type === ITERATE_ENTRIES ? step :
          iteratorValue(type, k, v, step);
      });
    };
    return takeSequence;
  }


  function skipWhileFactory(iterable, predicate, context, useKeys) {
    var skipSequence = makeSequence(iterable);
    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function(v, k, c)  {
        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      });
      return iterations;
    };
    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var skipping = true;
      var iterations = 0;
      return new Iterator(function()  {
        var step, k, v;
        do {
          step = iterator.next();
          if (step.done) {
            if (useKeys || type === ITERATE_VALUES) {
              return step;
            } else if (type === ITERATE_KEYS) {
              return iteratorValue(type, iterations++, undefined, step);
            } else {
              return iteratorValue(type, iterations++, step.value[1], step);
            }
          }
          var entry = step.value;
          k = entry[0];
          v = entry[1];
          skipping && (skipping = predicate.call(context, v, k, this$0));
        } while (skipping);
        return type === ITERATE_ENTRIES ? step :
          iteratorValue(type, k, v, step);
      });
    };
    return skipSequence;
  }


  function concatFactory(iterable, values) {
    var isKeyedIterable = isKeyed(iterable);
    var iters = [iterable].concat(values).map(function(v ) {
      if (!isIterable(v)) {
        v = isKeyedIterable ?
          keyedSeqFromValue(v) :
          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
      } else if (isKeyedIterable) {
        v = KeyedIterable(v);
      }
      return v;
    }).filter(function(v ) {return v.size !== 0});

    if (iters.length === 0) {
      return iterable;
    }

    if (iters.length === 1) {
      var singleton = iters[0];
      if (singleton === iterable ||
          isKeyedIterable && isKeyed(singleton) ||
          isIndexed(iterable) && isIndexed(singleton)) {
        return singleton;
      }
    }

    var concatSeq = new ArraySeq(iters);
    if (isKeyedIterable) {
      concatSeq = concatSeq.toKeyedSeq();
    } else if (!isIndexed(iterable)) {
      concatSeq = concatSeq.toSetSeq();
    }
    concatSeq = concatSeq.flatten(true);
    concatSeq.size = iters.reduce(
      function(sum, seq)  {
        if (sum !== undefined) {
          var size = seq.size;
          if (size !== undefined) {
            return sum + size;
          }
        }
      },
      0
    );
    return concatSeq;
  }


  function flattenFactory(iterable, depth, useKeys) {
    var flatSequence = makeSequence(iterable);
    flatSequence.__iterateUncached = function(fn, reverse) {
      var iterations = 0;
      var stopped = false;
      function flatDeep(iter, currentDepth) {var this$0 = this;
        iter.__iterate(function(v, k)  {
          if ((!depth || currentDepth < depth) && isIterable(v)) {
            flatDeep(v, currentDepth + 1);
          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
            stopped = true;
          }
          return !stopped;
        }, reverse);
      }
      flatDeep(iterable, 0);
      return iterations;
    }
    flatSequence.__iteratorUncached = function(type, reverse) {
      var iterator = iterable.__iterator(type, reverse);
      var stack = [];
      var iterations = 0;
      return new Iterator(function()  {
        while (iterator) {
          var step = iterator.next();
          if (step.done !== false) {
            iterator = stack.pop();
            continue;
          }
          var v = step.value;
          if (type === ITERATE_ENTRIES) {
            v = v[1];
          }
          if ((!depth || stack.length < depth) && isIterable(v)) {
            stack.push(iterator);
            iterator = v.__iterator(type, reverse);
          } else {
            return useKeys ? step : iteratorValue(type, iterations++, v, step);
          }
        }
        return iteratorDone();
      });
    }
    return flatSequence;
  }


  function flatMapFactory(iterable, mapper, context) {
    var coerce = iterableClass(iterable);
    return iterable.toSeq().map(
      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
    ).flatten(true);
  }


  function interposeFactory(iterable, separator) {
    var interposedSequence = makeSequence(iterable);
    interposedSequence.size = iterable.size && iterable.size * 2 -1;
    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function(v, k) 
        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
        fn(v, iterations++, this$0) !== false},
        reverse
      );
      return iterations;
    };
    interposedSequence.__iteratorUncached = function(type, reverse) {
      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      var step;
      return new Iterator(function()  {
        if (!step || iterations % 2) {
          step = iterator.next();
          if (step.done) {
            return step;
          }
        }
        return iterations % 2 ?
          iteratorValue(type, iterations++, separator) :
          iteratorValue(type, iterations++, step.value, step);
      });
    };
    return interposedSequence;
  }


  function sortFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    var isKeyedIterable = isKeyed(iterable);
    var index = 0;
    var entries = iterable.toSeq().map(
      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
    ).toArray();
    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
      isKeyedIterable ?
      function(v, i)  { entries[i].length = 2; } :
      function(v, i)  { entries[i] = v[1]; }
    );
    return isKeyedIterable ? KeyedSeq(entries) :
      isIndexed(iterable) ? IndexedSeq(entries) :
      SetSeq(entries);
  }


  function maxFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    if (mapper) {
      var entry = iterable.toSeq()
        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
      return entry && entry[0];
    } else {
      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
    }
  }

  function maxCompare(comparator, a, b) {
    var comp = comparator(b, a);
    // b is considered the new max if the comparator declares them equal, but
    // they are not equal and b is in fact a nullish value.
    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
  }


  function zipWithFactory(keyIter, zipper, iters) {
    var zipSequence = makeSequence(keyIter);
    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
    // Note: this a generic base implementation of __iterate in terms of
    // __iterator which may be more generically useful in the future.
    zipSequence.__iterate = function(fn, reverse) {
      /* generic:
      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        iterations++;
        if (fn(step.value[1], step.value[0], this) === false) {
          break;
        }
      }
      return iterations;
      */
      // indexed:
      var iterator = this.__iterator(ITERATE_VALUES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };
    zipSequence.__iteratorUncached = function(type, reverse) {
      var iterators = iters.map(function(i )
        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
      );
      var iterations = 0;
      var isDone = false;
      return new Iterator(function()  {
        var steps;
        if (!isDone) {
          steps = iterators.map(function(i ) {return i.next()});
          isDone = steps.some(function(s ) {return s.done});
        }
        if (isDone) {
          return iteratorDone();
        }
        return iteratorValue(
          type,
          iterations++,
          zipper.apply(null, steps.map(function(s ) {return s.value}))
        );
      });
    };
    return zipSequence
  }


  // #pragma Helper Functions

  function reify(iter, seq) {
    return isSeq(iter) ? seq : iter.constructor(seq);
  }

  function validateEntry(entry) {
    if (entry !== Object(entry)) {
      throw new TypeError('Expected [K, V] tuple: ' + entry);
    }
  }

  function resolveSize(iter) {
    assertNotInfinite(iter.size);
    return ensureSize(iter);
  }

  function iterableClass(iterable) {
    return isKeyed(iterable) ? KeyedIterable :
      isIndexed(iterable) ? IndexedIterable :
      SetIterable;
  }

  function makeSequence(iterable) {
    return Object.create(
      (
        isKeyed(iterable) ? KeyedSeq :
        isIndexed(iterable) ? IndexedSeq :
        SetSeq
      ).prototype
    );
  }

  function cacheResultThrough() {
    if (this._iter.cacheResult) {
      this._iter.cacheResult();
      this.size = this._iter.size;
      return this;
    } else {
      return Seq.prototype.cacheResult.call(this);
    }
  }

  function defaultComparator(a, b) {
    return a > b ? 1 : a < b ? -1 : 0;
  }

  function forceIterator(keyPath) {
    var iter = getIterator(keyPath);
    if (!iter) {
      // Array might not be iterable in this environment, so we need a fallback
      // to our wrapped type.
      if (!isArrayLike(keyPath)) {
        throw new TypeError('Expected iterable or array-like: ' + keyPath);
      }
      iter = getIterator(Iterable(keyPath));
    }
    return iter;
  }

  createClass(Record, KeyedCollection);

    function Record(defaultValues, name) {
      var hasInitialized;

      var RecordType = function Record(values) {
        if (values instanceof RecordType) {
          return values;
        }
        if (!(this instanceof RecordType)) {
          return new RecordType(values);
        }
        if (!hasInitialized) {
          hasInitialized = true;
          var keys = Object.keys(defaultValues);
          setProps(RecordTypePrototype, keys);
          RecordTypePrototype.size = keys.length;
          RecordTypePrototype._name = name;
          RecordTypePrototype._keys = keys;
          RecordTypePrototype._defaultValues = defaultValues;
        }
        this._map = Map(values);
      };

      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
      RecordTypePrototype.constructor = RecordType;

      return RecordType;
    }

    Record.prototype.toString = function() {
      return this.__toString(recordName(this) + ' {', '}');
    };

    // @pragma Access

    Record.prototype.has = function(k) {
      return this._defaultValues.hasOwnProperty(k);
    };

    Record.prototype.get = function(k, notSetValue) {
      if (!this.has(k)) {
        return notSetValue;
      }
      var defaultVal = this._defaultValues[k];
      return this._map ? this._map.get(k, defaultVal) : defaultVal;
    };

    // @pragma Modification

    Record.prototype.clear = function() {
      if (this.__ownerID) {
        this._map && this._map.clear();
        return this;
      }
      var RecordType = this.constructor;
      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
    };

    Record.prototype.set = function(k, v) {
      if (!this.has(k)) {
        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
      }
      if (this._map && !this._map.has(k)) {
        var defaultVal = this._defaultValues[k];
        if (v === defaultVal) {
          return this;
        }
      }
      var newMap = this._map && this._map.set(k, v);
      if (this.__ownerID || newMap === this._map) {
        return this;
      }
      return makeRecord(this, newMap);
    };

    Record.prototype.remove = function(k) {
      if (!this.has(k)) {
        return this;
      }
      var newMap = this._map && this._map.remove(k);
      if (this.__ownerID || newMap === this._map) {
        return this;
      }
      return makeRecord(this, newMap);
    };

    Record.prototype.wasAltered = function() {
      return this._map.wasAltered();
    };

    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
    };

    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
    };

    Record.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map && this._map.__ensureOwner(ownerID);
      if (!ownerID) {
        this.__ownerID = ownerID;
        this._map = newMap;
        return this;
      }
      return makeRecord(this, newMap, ownerID);
    };


  var RecordPrototype = Record.prototype;
  RecordPrototype[DELETE] = RecordPrototype.remove;
  RecordPrototype.deleteIn =
  RecordPrototype.removeIn = MapPrototype.removeIn;
  RecordPrototype.merge = MapPrototype.merge;
  RecordPrototype.mergeWith = MapPrototype.mergeWith;
  RecordPrototype.mergeIn = MapPrototype.mergeIn;
  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  RecordPrototype.setIn = MapPrototype.setIn;
  RecordPrototype.update = MapPrototype.update;
  RecordPrototype.updateIn = MapPrototype.updateIn;
  RecordPrototype.withMutations = MapPrototype.withMutations;
  RecordPrototype.asMutable = MapPrototype.asMutable;
  RecordPrototype.asImmutable = MapPrototype.asImmutable;


  function makeRecord(likeRecord, map, ownerID) {
    var record = Object.create(Object.getPrototypeOf(likeRecord));
    record._map = map;
    record.__ownerID = ownerID;
    return record;
  }

  function recordName(record) {
    return record._name || record.constructor.name || 'Record';
  }

  function setProps(prototype, names) {
    try {
      names.forEach(setProp.bind(undefined, prototype));
    } catch (error) {
      // Object.defineProperty failed. Probably IE8.
    }
  }

  function setProp(prototype, name) {
    Object.defineProperty(prototype, name, {
      get: function() {
        return this.get(name);
      },
      set: function(value) {
        invariant(this.__ownerID, 'Cannot set on an immutable record.');
        this.set(name, value);
      }
    });
  }

  createClass(Set, SetCollection);

    // @pragma Construction

    function Set(value) {
      return value === null || value === undefined ? emptySet() :
        isSet(value) && !isOrdered(value) ? value :
        emptySet().withMutations(function(set ) {
          var iter = SetIterable(value);
          assertNotInfinite(iter.size);
          iter.forEach(function(v ) {return set.add(v)});
        });
    }

    Set.of = function(/*...values*/) {
      return this(arguments);
    };

    Set.fromKeys = function(value) {
      return this(KeyedIterable(value).keySeq());
    };

    Set.prototype.toString = function() {
      return this.__toString('Set {', '}');
    };

    // @pragma Access

    Set.prototype.has = function(value) {
      return this._map.has(value);
    };

    // @pragma Modification

    Set.prototype.add = function(value) {
      return updateSet(this, this._map.set(value, true));
    };

    Set.prototype.remove = function(value) {
      return updateSet(this, this._map.remove(value));
    };

    Set.prototype.clear = function() {
      return updateSet(this, this._map.clear());
    };

    // @pragma Composition

    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
      iters = iters.filter(function(x ) {return x.size !== 0});
      if (iters.length === 0) {
        return this;
      }
      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
        return this.constructor(iters[0]);
      }
      return this.withMutations(function(set ) {
        for (var ii = 0; ii < iters.length; ii++) {
          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
        }
      });
    };

    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
      if (iters.length === 0) {
        return this;
      }
      iters = iters.map(function(iter ) {return SetIterable(iter)});
      var originalSet = this;
      return this.withMutations(function(set ) {
        originalSet.forEach(function(value ) {
          if (!iters.every(function(iter ) {return iter.includes(value)})) {
            set.remove(value);
          }
        });
      });
    };

    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
      if (iters.length === 0) {
        return this;
      }
      iters = iters.map(function(iter ) {return SetIterable(iter)});
      var originalSet = this;
      return this.withMutations(function(set ) {
        originalSet.forEach(function(value ) {
          if (iters.some(function(iter ) {return iter.includes(value)})) {
            set.remove(value);
          }
        });
      });
    };

    Set.prototype.merge = function() {
      return this.union.apply(this, arguments);
    };

    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return this.union.apply(this, iters);
    };

    Set.prototype.sort = function(comparator) {
      // Late binding
      return OrderedSet(sortFactory(this, comparator));
    };

    Set.prototype.sortBy = function(mapper, comparator) {
      // Late binding
      return OrderedSet(sortFactory(this, comparator, mapper));
    };

    Set.prototype.wasAltered = function() {
      return this._map.wasAltered();
    };

    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
    };

    Set.prototype.__iterator = function(type, reverse) {
      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
    };

    Set.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map.__ensureOwner(ownerID);
      if (!ownerID) {
        this.__ownerID = ownerID;
        this._map = newMap;
        return this;
      }
      return this.__make(newMap, ownerID);
    };


  function isSet(maybeSet) {
    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
  }

  Set.isSet = isSet;

  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

  var SetPrototype = Set.prototype;
  SetPrototype[IS_SET_SENTINEL] = true;
  SetPrototype[DELETE] = SetPrototype.remove;
  SetPrototype.mergeDeep = SetPrototype.merge;
  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
  SetPrototype.withMutations = MapPrototype.withMutations;
  SetPrototype.asMutable = MapPrototype.asMutable;
  SetPrototype.asImmutable = MapPrototype.asImmutable;

  SetPrototype.__empty = emptySet;
  SetPrototype.__make = makeSet;

  function updateSet(set, newMap) {
    if (set.__ownerID) {
      set.size = newMap.size;
      set._map = newMap;
      return set;
    }
    return newMap === set._map ? set :
      newMap.size === 0 ? set.__empty() :
      set.__make(newMap);
  }

  function makeSet(map, ownerID) {
    var set = Object.create(SetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_SET;
  function emptySet() {
    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
  }

  createClass(OrderedSet, Set);

    // @pragma Construction

    function OrderedSet(value) {
      return value === null || value === undefined ? emptyOrderedSet() :
        isOrderedSet(value) ? value :
        emptyOrderedSet().withMutations(function(set ) {
          var iter = SetIterable(value);
          assertNotInfinite(iter.size);
          iter.forEach(function(v ) {return set.add(v)});
        });
    }

    OrderedSet.of = function(/*...values*/) {
      return this(arguments);
    };

    OrderedSet.fromKeys = function(value) {
      return this(KeyedIterable(value).keySeq());
    };

    OrderedSet.prototype.toString = function() {
      return this.__toString('OrderedSet {', '}');
    };


  function isOrderedSet(maybeOrderedSet) {
    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
  }

  OrderedSet.isOrderedSet = isOrderedSet;

  var OrderedSetPrototype = OrderedSet.prototype;
  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

  OrderedSetPrototype.__empty = emptyOrderedSet;
  OrderedSetPrototype.__make = makeOrderedSet;

  function makeOrderedSet(map, ownerID) {
    var set = Object.create(OrderedSetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_ORDERED_SET;
  function emptyOrderedSet() {
    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
  }

  createClass(Stack, IndexedCollection);

    // @pragma Construction

    function Stack(value) {
      return value === null || value === undefined ? emptyStack() :
        isStack(value) ? value :
        emptyStack().unshiftAll(value);
    }

    Stack.of = function(/*...values*/) {
      return this(arguments);
    };

    Stack.prototype.toString = function() {
      return this.__toString('Stack [', ']');
    };

    // @pragma Access

    Stack.prototype.get = function(index, notSetValue) {
      var head = this._head;
      index = wrapIndex(this, index);
      while (head && index--) {
        head = head.next;
      }
      return head ? head.value : notSetValue;
    };

    Stack.prototype.peek = function() {
      return this._head && this._head.value;
    };

    // @pragma Modification

    Stack.prototype.push = function(/*...values*/) {
      if (arguments.length === 0) {
        return this;
      }
      var newSize = this.size + arguments.length;
      var head = this._head;
      for (var ii = arguments.length - 1; ii >= 0; ii--) {
        head = {
          value: arguments[ii],
          next: head
        };
      }
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    Stack.prototype.pushAll = function(iter) {
      iter = IndexedIterable(iter);
      if (iter.size === 0) {
        return this;
      }
      assertNotInfinite(iter.size);
      var newSize = this.size;
      var head = this._head;
      iter.reverse().forEach(function(value ) {
        newSize++;
        head = {
          value: value,
          next: head
        };
      });
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    Stack.prototype.pop = function() {
      return this.slice(1);
    };

    Stack.prototype.unshift = function(/*...values*/) {
      return this.push.apply(this, arguments);
    };

    Stack.prototype.unshiftAll = function(iter) {
      return this.pushAll(iter);
    };

    Stack.prototype.shift = function() {
      return this.pop.apply(this, arguments);
    };

    Stack.prototype.clear = function() {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._head = undefined;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyStack();
    };

    Stack.prototype.slice = function(begin, end) {
      if (wholeSlice(begin, end, this.size)) {
        return this;
      }
      var resolvedBegin = resolveBegin(begin, this.size);
      var resolvedEnd = resolveEnd(end, this.size);
      if (resolvedEnd !== this.size) {
        // super.slice(begin, end);
        return IndexedCollection.prototype.slice.call(this, begin, end);
      }
      var newSize = this.size - resolvedBegin;
      var head = this._head;
      while (resolvedBegin--) {
        head = head.next;
      }
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    // @pragma Mutability

    Stack.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        this.__ownerID = ownerID;
        this.__altered = false;
        return this;
      }
      return makeStack(this.size, this._head, ownerID, this.__hash);
    };

    // @pragma Iteration

    Stack.prototype.__iterate = function(fn, reverse) {
      if (reverse) {
        return this.reverse().__iterate(fn);
      }
      var iterations = 0;
      var node = this._head;
      while (node) {
        if (fn(node.value, iterations++, this) === false) {
          break;
        }
        node = node.next;
      }
      return iterations;
    };

    Stack.prototype.__iterator = function(type, reverse) {
      if (reverse) {
        return this.reverse().__iterator(type);
      }
      var iterations = 0;
      var node = this._head;
      return new Iterator(function()  {
        if (node) {
          var value = node.value;
          node = node.next;
          return iteratorValue(type, iterations++, value);
        }
        return iteratorDone();
      });
    };


  function isStack(maybeStack) {
    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
  }

  Stack.isStack = isStack;

  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

  var StackPrototype = Stack.prototype;
  StackPrototype[IS_STACK_SENTINEL] = true;
  StackPrototype.withMutations = MapPrototype.withMutations;
  StackPrototype.asMutable = MapPrototype.asMutable;
  StackPrototype.asImmutable = MapPrototype.asImmutable;
  StackPrototype.wasAltered = MapPrototype.wasAltered;


  function makeStack(size, head, ownerID, hash) {
    var map = Object.create(StackPrototype);
    map.size = size;
    map._head = head;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_STACK;
  function emptyStack() {
    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
  }

  /**
   * Contributes additional methods to a constructor
   */
  function mixin(ctor, methods) {
    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
    Object.keys(methods).forEach(keyCopier);
    Object.getOwnPropertySymbols &&
      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
    return ctor;
  }

  Iterable.Iterator = Iterator;

  mixin(Iterable, {

    // ### Conversion to other types

    toArray: function() {
      assertNotInfinite(this.size);
      var array = new Array(this.size || 0);
      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
      return array;
    },

    toIndexedSeq: function() {
      return new ToIndexedSequence(this);
    },

    toJS: function() {
      return this.toSeq().map(
        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
      ).__toJS();
    },

    toJSON: function() {
      return this.toSeq().map(
        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
      ).__toJS();
    },

    toKeyedSeq: function() {
      return new ToKeyedSequence(this, true);
    },

    toMap: function() {
      // Use Late Binding here to solve the circular dependency.
      return Map(this.toKeyedSeq());
    },

    toObject: function() {
      assertNotInfinite(this.size);
      var object = {};
      this.__iterate(function(v, k)  { object[k] = v; });
      return object;
    },

    toOrderedMap: function() {
      // Use Late Binding here to solve the circular dependency.
      return OrderedMap(this.toKeyedSeq());
    },

    toOrderedSet: function() {
      // Use Late Binding here to solve the circular dependency.
      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
    },

    toSet: function() {
      // Use Late Binding here to solve the circular dependency.
      return Set(isKeyed(this) ? this.valueSeq() : this);
    },

    toSetSeq: function() {
      return new ToSetSequence(this);
    },

    toSeq: function() {
      return isIndexed(this) ? this.toIndexedSeq() :
        isKeyed(this) ? this.toKeyedSeq() :
        this.toSetSeq();
    },

    toStack: function() {
      // Use Late Binding here to solve the circular dependency.
      return Stack(isKeyed(this) ? this.valueSeq() : this);
    },

    toList: function() {
      // Use Late Binding here to solve the circular dependency.
      return List(isKeyed(this) ? this.valueSeq() : this);
    },


    // ### Common JavaScript methods and properties

    toString: function() {
      return '[Iterable]';
    },

    __toString: function(head, tail) {
      if (this.size === 0) {
        return head + tail;
      }
      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
    },


    // ### ES6 Collection methods (ES6 Array and Map)

    concat: function() {var values = SLICE$0.call(arguments, 0);
      return reify(this, concatFactory(this, values));
    },

    includes: function(searchValue) {
      return this.some(function(value ) {return is(value, searchValue)});
    },

    entries: function() {
      return this.__iterator(ITERATE_ENTRIES);
    },

    every: function(predicate, context) {
      assertNotInfinite(this.size);
      var returnValue = true;
      this.__iterate(function(v, k, c)  {
        if (!predicate.call(context, v, k, c)) {
          returnValue = false;
          return false;
        }
      });
      return returnValue;
    },

    filter: function(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, true));
    },

    find: function(predicate, context, notSetValue) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[1] : notSetValue;
    },

    forEach: function(sideEffect, context) {
      assertNotInfinite(this.size);
      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
    },

    join: function(separator) {
      assertNotInfinite(this.size);
      separator = separator !== undefined ? '' + separator : ',';
      var joined = '';
      var isFirst = true;
      this.__iterate(function(v ) {
        isFirst ? (isFirst = false) : (joined += separator);
        joined += v !== null && v !== undefined ? v.toString() : '';
      });
      return joined;
    },

    keys: function() {
      return this.__iterator(ITERATE_KEYS);
    },

    map: function(mapper, context) {
      return reify(this, mapFactory(this, mapper, context));
    },

    reduce: function(reducer, initialReduction, context) {
      assertNotInfinite(this.size);
      var reduction;
      var useFirst;
      if (arguments.length < 2) {
        useFirst = true;
      } else {
        reduction = initialReduction;
      }
      this.__iterate(function(v, k, c)  {
        if (useFirst) {
          useFirst = false;
          reduction = v;
        } else {
          reduction = reducer.call(context, reduction, v, k, c);
        }
      });
      return reduction;
    },

    reduceRight: function(reducer, initialReduction, context) {
      var reversed = this.toKeyedSeq().reverse();
      return reversed.reduce.apply(reversed, arguments);
    },

    reverse: function() {
      return reify(this, reverseFactory(this, true));
    },

    slice: function(begin, end) {
      return reify(this, sliceFactory(this, begin, end, true));
    },

    some: function(predicate, context) {
      return !this.every(not(predicate), context);
    },

    sort: function(comparator) {
      return reify(this, sortFactory(this, comparator));
    },

    values: function() {
      return this.__iterator(ITERATE_VALUES);
    },


    // ### More sequential methods

    butLast: function() {
      return this.slice(0, -1);
    },

    isEmpty: function() {
      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
    },

    count: function(predicate, context) {
      return ensureSize(
        predicate ? this.toSeq().filter(predicate, context) : this
      );
    },

    countBy: function(grouper, context) {
      return countByFactory(this, grouper, context);
    },

    equals: function(other) {
      return deepEqual(this, other);
    },

    entrySeq: function() {
      var iterable = this;
      if (iterable._cache) {
        // We cache as an entries array, so we can just return the cache!
        return new ArraySeq(iterable._cache);
      }
      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
      return entriesSequence;
    },

    filterNot: function(predicate, context) {
      return this.filter(not(predicate), context);
    },

    findEntry: function(predicate, context, notSetValue) {
      var found = notSetValue;
      this.__iterate(function(v, k, c)  {
        if (predicate.call(context, v, k, c)) {
          found = [k, v];
          return false;
        }
      });
      return found;
    },

    findKey: function(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry && entry[0];
    },

    findLast: function(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
    },

    findLastEntry: function(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
    },

    findLastKey: function(predicate, context) {
      return this.toKeyedSeq().reverse().findKey(predicate, context);
    },

    first: function() {
      return this.find(returnTrue);
    },

    flatMap: function(mapper, context) {
      return reify(this, flatMapFactory(this, mapper, context));
    },

    flatten: function(depth) {
      return reify(this, flattenFactory(this, depth, true));
    },

    fromEntrySeq: function() {
      return new FromEntriesSequence(this);
    },

    get: function(searchKey, notSetValue) {
      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
    },

    getIn: function(searchKeyPath, notSetValue) {
      var nested = this;
      // Note: in an ES6 environment, we would prefer:
      // for (var key of searchKeyPath) {
      var iter = forceIterator(searchKeyPath);
      var step;
      while (!(step = iter.next()).done) {
        var key = step.value;
        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
        if (nested === NOT_SET) {
          return notSetValue;
        }
      }
      return nested;
    },

    groupBy: function(grouper, context) {
      return groupByFactory(this, grouper, context);
    },

    has: function(searchKey) {
      return this.get(searchKey, NOT_SET) !== NOT_SET;
    },

    hasIn: function(searchKeyPath) {
      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
    },

    isSubset: function(iter) {
      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
      return this.every(function(value ) {return iter.includes(value)});
    },

    isSuperset: function(iter) {
      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
      return iter.isSubset(this);
    },

    keyOf: function(searchValue) {
      return this.findKey(function(value ) {return is(value, searchValue)});
    },

    keySeq: function() {
      return this.toSeq().map(keyMapper).toIndexedSeq();
    },

    last: function() {
      return this.toSeq().reverse().first();
    },

    lastKeyOf: function(searchValue) {
      return this.toKeyedSeq().reverse().keyOf(searchValue);
    },

    max: function(comparator) {
      return maxFactory(this, comparator);
    },

    maxBy: function(mapper, comparator) {
      return maxFactory(this, comparator, mapper);
    },

    min: function(comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
    },

    minBy: function(mapper, comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
    },

    rest: function() {
      return this.slice(1);
    },

    skip: function(amount) {
      return this.slice(Math.max(0, amount));
    },

    skipLast: function(amount) {
      return reify(this, this.toSeq().reverse().skip(amount).reverse());
    },

    skipWhile: function(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, true));
    },

    skipUntil: function(predicate, context) {
      return this.skipWhile(not(predicate), context);
    },

    sortBy: function(mapper, comparator) {
      return reify(this, sortFactory(this, comparator, mapper));
    },

    take: function(amount) {
      return this.slice(0, Math.max(0, amount));
    },

    takeLast: function(amount) {
      return reify(this, this.toSeq().reverse().take(amount).reverse());
    },

    takeWhile: function(predicate, context) {
      return reify(this, takeWhileFactory(this, predicate, context));
    },

    takeUntil: function(predicate, context) {
      return this.takeWhile(not(predicate), context);
    },

    valueSeq: function() {
      return this.toIndexedSeq();
    },


    // ### Hashable Object

    hashCode: function() {
      return this.__hash || (this.__hash = hashIterable(this));
    }


    // ### Internal

    // abstract __iterate(fn, reverse)

    // abstract __iterator(type, reverse)
  });

  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

  var IterablePrototype = Iterable.prototype;
  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
  IterablePrototype.__toJS = IterablePrototype.toArray;
  IterablePrototype.__toStringMapper = quoteString;
  IterablePrototype.inspect =
  IterablePrototype.toSource = function() { return this.toString(); };
  IterablePrototype.chain = IterablePrototype.flatMap;
  IterablePrototype.contains = IterablePrototype.includes;

  mixin(KeyedIterable, {

    // ### More sequential methods

    flip: function() {
      return reify(this, flipFactory(this));
    },

    mapEntries: function(mapper, context) {var this$0 = this;
      var iterations = 0;
      return reify(this,
        this.toSeq().map(
          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
        ).fromEntrySeq()
      );
    },

    mapKeys: function(mapper, context) {var this$0 = this;
      return reify(this,
        this.toSeq().flip().map(
          function(k, v)  {return mapper.call(context, k, v, this$0)}
        ).flip()
      );
    }

  });

  var KeyedIterablePrototype = KeyedIterable.prototype;
  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};



  mixin(IndexedIterable, {

    // ### Conversion to other types

    toKeyedSeq: function() {
      return new ToKeyedSequence(this, false);
    },


    // ### ES6 Collection methods (ES6 Array and Map)

    filter: function(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, false));
    },

    findIndex: function(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    indexOf: function(searchValue) {
      var key = this.keyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    lastIndexOf: function(searchValue) {
      var key = this.lastKeyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    reverse: function() {
      return reify(this, reverseFactory(this, false));
    },

    slice: function(begin, end) {
      return reify(this, sliceFactory(this, begin, end, false));
    },

    splice: function(index, removeNum /*, ...values*/) {
      var numArgs = arguments.length;
      removeNum = Math.max(removeNum | 0, 0);
      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
        return this;
      }
      // If index is negative, it should resolve relative to the size of the
      // collection. However size may be expensive to compute if not cached, so
      // only call count() if the number is in fact negative.
      index = resolveBegin(index, index < 0 ? this.count() : this.size);
      var spliced = this.slice(0, index);
      return reify(
        this,
        numArgs === 1 ?
          spliced :
          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
      );
    },


    // ### More collection methods

    findLastIndex: function(predicate, context) {
      var entry = this.findLastEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    first: function() {
      return this.get(0);
    },

    flatten: function(depth) {
      return reify(this, flattenFactory(this, depth, false));
    },

    get: function(index, notSetValue) {
      index = wrapIndex(this, index);
      return (index < 0 || (this.size === Infinity ||
          (this.size !== undefined && index > this.size))) ?
        notSetValue :
        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
    },

    has: function(index) {
      index = wrapIndex(this, index);
      return index >= 0 && (this.size !== undefined ?
        this.size === Infinity || index < this.size :
        this.indexOf(index) !== -1
      );
    },

    interpose: function(separator) {
      return reify(this, interposeFactory(this, separator));
    },

    interleave: function(/*...iterables*/) {
      var iterables = [this].concat(arrCopy(arguments));
      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
      var interleaved = zipped.flatten(true);
      if (zipped.size) {
        interleaved.size = zipped.size * iterables.length;
      }
      return reify(this, interleaved);
    },

    keySeq: function() {
      return Range(0, this.size);
    },

    last: function() {
      return this.get(-1);
    },

    skipWhile: function(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, false));
    },

    zip: function(/*, ...iterables */) {
      var iterables = [this].concat(arrCopy(arguments));
      return reify(this, zipWithFactory(this, defaultZipper, iterables));
    },

    zipWith: function(zipper/*, ...iterables */) {
      var iterables = arrCopy(arguments);
      iterables[0] = this;
      return reify(this, zipWithFactory(this, zipper, iterables));
    }

  });

  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



  mixin(SetIterable, {

    // ### ES6 Collection methods (ES6 Array and Map)

    get: function(value, notSetValue) {
      return this.has(value) ? value : notSetValue;
    },

    includes: function(value) {
      return this.has(value);
    },


    // ### More sequential methods

    keySeq: function() {
      return this.valueSeq();
    }

  });

  SetIterable.prototype.has = IterablePrototype.includes;
  SetIterable.prototype.contains = SetIterable.prototype.includes;


  // Mixin subclasses

  mixin(KeyedSeq, KeyedIterable.prototype);
  mixin(IndexedSeq, IndexedIterable.prototype);
  mixin(SetSeq, SetIterable.prototype);

  mixin(KeyedCollection, KeyedIterable.prototype);
  mixin(IndexedCollection, IndexedIterable.prototype);
  mixin(SetCollection, SetIterable.prototype);


  // #pragma Helper functions

  function keyMapper(v, k) {
    return k;
  }

  function entryMapper(v, k) {
    return [k, v];
  }

  function not(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    }
  }

  function neg(predicate) {
    return function() {
      return -predicate.apply(this, arguments);
    }
  }

  function quoteString(value) {
    return typeof value === 'string' ? JSON.stringify(value) : String(value);
  }

  function defaultZipper() {
    return arrCopy(arguments);
  }

  function defaultNegComparator(a, b) {
    return a < b ? 1 : a > b ? -1 : 0;
  }

  function hashIterable(iterable) {
    if (iterable.size === Infinity) {
      return 0;
    }
    var ordered = isOrdered(iterable);
    var keyed = isKeyed(iterable);
    var h = ordered ? 1 : 0;
    var size = iterable.__iterate(
      keyed ?
        ordered ?
          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
        ordered ?
          function(v ) { h = 31 * h + hash(v) | 0; } :
          function(v ) { h = h + hash(v) | 0; }
    );
    return murmurHashOfSize(size, h);
  }

  function murmurHashOfSize(size, h) {
    h = imul(h, 0xCC9E2D51);
    h = imul(h << 15 | h >>> -15, 0x1B873593);
    h = imul(h << 13 | h >>> -13, 5);
    h = (h + 0xE6546B64 | 0) ^ size;
    h = imul(h ^ h >>> 16, 0x85EBCA6B);
    h = imul(h ^ h >>> 13, 0xC2B2AE35);
    h = smi(h ^ h >>> 16);
    return h;
  }

  function hashMerge(a, b) {
    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
  }

  var Immutable = {

    Iterable: Iterable,

    Seq: Seq,
    Collection: Collection,
    Map: Map,
    OrderedMap: OrderedMap,
    List: List,
    Stack: Stack,
    Set: Set,
    OrderedSet: OrderedSet,

    Record: Record,
    Range: Range,
    Repeat: Repeat,

    is: is,
    fromJS: fromJS

  };

  return Immutable;

}));

/***/ }),

/***/ "../../node_modules/popmotion/dist/es/animations/generators/decay.js":
/*!***************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/animations/generators/decay.js ***!
  \***************************************************************************************************************/
/*! exports provided: decay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decay", function() { return decay; });
function decay(_a) {
    var _b = _a.velocity, velocity = _b === void 0 ? 0 : _b, _c = _a.from, from = _c === void 0 ? 0 : _c, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 350 : _e, _f = _a.restDelta, restDelta = _f === void 0 ? 0.5 : _f, modifyTarget = _a.modifyTarget;
    var state = { done: false, value: from };
    var amplitude = power * velocity;
    var ideal = from + amplitude;
    var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);
    if (target !== ideal)
        amplitude = target - from;
    return {
        next: function (t) {
            var delta = -amplitude * Math.exp(-t / timeConstant);
            state.done = !(delta > restDelta || delta < -restDelta);
            state.value = state.done ? target : target + delta;
            return state;
        },
        flipTarget: function () { },
    };
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/animations/generators/keyframes.js":
/*!*******************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/animations/generators/keyframes.js ***!
  \*******************************************************************************************************************/
/*! exports provided: convertOffsetToTimes, defaultEasing, defaultOffset, keyframes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "convertOffsetToTimes", function() { return convertOffsetToTimes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultEasing", function() { return defaultEasing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultOffset", function() { return defaultOffset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "keyframes", function() { return keyframes; });
/* harmony import */ var _utils_interpolate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/interpolate.js */ "../../node_modules/popmotion/dist/es/utils/interpolate.js");
/* harmony import */ var _easing_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../easing/index.js */ "../../node_modules/popmotion/dist/es/easing/index.js");



function defaultEasing(values, easing) {
    return values.map(function () { return easing || _easing_index_js__WEBPACK_IMPORTED_MODULE_1__["easeInOut"]; }).splice(0, values.length - 1);
}
function defaultOffset(values) {
    var numValues = values.length;
    return values.map(function (_value, i) {
        return i !== 0 ? i / (numValues - 1) : 0;
    });
}
function convertOffsetToTimes(offset, duration) {
    return offset.map(function (o) { return o * duration; });
}
function keyframes(_a) {
    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c, ease = _a.ease, offset = _a.offset, _d = _a.duration, duration = _d === void 0 ? 300 : _d;
    var state = { done: false, value: from };
    var values = Array.isArray(to) ? to : [from, to];
    var times = convertOffsetToTimes(offset && offset.length === values.length
        ? offset
        : defaultOffset(values), duration);
    function createInterpolator() {
        return Object(_utils_interpolate_js__WEBPACK_IMPORTED_MODULE_0__["interpolate"])(times, values, {
            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),
        });
    }
    var interpolator = createInterpolator();
    return {
        next: function (t) {
            state.value = interpolator(t);
            state.done = t >= duration;
            return state;
        },
        flipTarget: function () {
            values.reverse();
            interpolator = createInterpolator();
        },
    };
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/animations/generators/spring.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/animations/generators/spring.js ***!
  \****************************************************************************************************************/
/*! exports provided: spring */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spring", function() { return spring; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_find_spring_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/find-spring.js */ "../../node_modules/popmotion/dist/es/animations/utils/find-spring.js");



var durationKeys = ["duration", "bounce"];
var physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys) {
    return keys.some(function (key) { return options[key] !== undefined; });
}
function getSpringOptions(options) {
    var springOptions = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);
    if (!isSpringType(options, physicsKeys) &&
        isSpringType(options, durationKeys)) {
        var derived = Object(_utils_find_spring_js__WEBPACK_IMPORTED_MODULE_1__["findSpring"])(options);
        springOptions = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });
        springOptions.isResolvedFromDuration = true;
    }
    return springOptions;
}
function spring(_a) {
    var _b = _a.from, from = _b === void 0 ? 0.0 : _b, _c = _a.to, to = _c === void 0 ? 1.0 : _c, _d = _a.restSpeed, restSpeed = _d === void 0 ? 2 : _d, restDelta = _a.restDelta, options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["from", "to", "restSpeed", "restDelta"]);
    var state = { done: false, value: from };
    var _e = getSpringOptions(options), stiffness = _e.stiffness, damping = _e.damping, mass = _e.mass, velocity = _e.velocity, isResolvedFromDuration = _e.isResolvedFromDuration;
    var resolveSpring = zero;
    var resolveVelocity = zero;
    function createSpring() {
        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;
        var initialDelta = to - from;
        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
        var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;
        restDelta !== null && restDelta !== void 0 ? restDelta : (restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4);
        if (dampingRatio < 1) {
            var angularFreq_1 = Object(_utils_find_spring_js__WEBPACK_IMPORTED_MODULE_1__["calcAngularFreq"])(undampedAngularFreq, dampingRatio);
            resolveSpring = function (t) {
                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);
                return (to -
                    envelope *
                        (((initialVelocity +
                            dampingRatio * undampedAngularFreq * initialDelta) /
                            angularFreq_1) *
                            Math.sin(angularFreq_1 * t) +
                            initialDelta * Math.cos(angularFreq_1 * t)));
            };
            resolveVelocity = function (t) {
                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);
                return (dampingRatio *
                    undampedAngularFreq *
                    envelope *
                    ((Math.sin(angularFreq_1 * t) *
                        (initialVelocity +
                            dampingRatio *
                                undampedAngularFreq *
                                initialDelta)) /
                        angularFreq_1 +
                        initialDelta * Math.cos(angularFreq_1 * t)) -
                    envelope *
                        (Math.cos(angularFreq_1 * t) *
                            (initialVelocity +
                                dampingRatio *
                                    undampedAngularFreq *
                                    initialDelta) -
                            angularFreq_1 *
                                initialDelta *
                                Math.sin(angularFreq_1 * t)));
            };
        }
        else if (dampingRatio === 1) {
            resolveSpring = function (t) {
                return to -
                    Math.exp(-undampedAngularFreq * t) *
                        (initialDelta +
                            (initialVelocity + undampedAngularFreq * initialDelta) *
                                t);
            };
        }
        else {
            var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
            resolveSpring = function (t) {
                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);
                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);
                return (to -
                    (envelope *
                        ((initialVelocity +
                            dampingRatio * undampedAngularFreq * initialDelta) *
                            Math.sinh(freqForT) +
                            dampedAngularFreq_1 *
                                initialDelta *
                                Math.cosh(freqForT))) /
                        dampedAngularFreq_1);
            };
        }
    }
    createSpring();
    return {
        next: function (t) {
            var current = resolveSpring(t);
            if (!isResolvedFromDuration) {
                var currentVelocity = resolveVelocity(t) * 1000;
                var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
                var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;
                state.done =
                    isBelowVelocityThreshold && isBelowDisplacementThreshold;
            }
            else {
                state.done = t >= options.duration;
            }
            state.value = state.done ? to : current;
            return state;
        },
        flipTarget: function () {
            var _a;
            velocity = -velocity;
            _a = [to, from], from = _a[0], to = _a[1];
            createSpring();
        },
    };
}
spring.needsInterpolation = function (a, b) {
    return typeof a === "string" || typeof b === "string";
};
var zero = function (_t) { return 0; };




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/animations/index.js":
/*!****************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/animations/index.js ***!
  \****************************************************************************************************/
/*! exports provided: animate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animate", function() { return animate; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_detect_animation_from_options_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/detect-animation-from-options.js */ "../../node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.js");
/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! framesync */ "../../node_modules/framesync/dist/es/index.js");
/* harmony import */ var _utils_interpolate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/interpolate.js */ "../../node_modules/popmotion/dist/es/utils/interpolate.js");
/* harmony import */ var _utils_elapsed_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/elapsed.js */ "../../node_modules/popmotion/dist/es/animations/utils/elapsed.js");






var framesync = function (update) {
    var passTimestamp = function (_a) {
        var delta = _a.delta;
        return update(delta);
    };
    return {
        start: function () { return framesync__WEBPACK_IMPORTED_MODULE_2__["default"].update(passTimestamp, true); },
        stop: function () { return framesync__WEBPACK_IMPORTED_MODULE_2__["cancelSync"].update(passTimestamp); },
    };
};
function animate(_a) {
    var _b, _c;
    var from = _a.from, _d = _a.autoplay, autoplay = _d === void 0 ? true : _d, _e = _a.driver, driver = _e === void 0 ? framesync : _e, _f = _a.elapsed, elapsed = _f === void 0 ? 0 : _f, _g = _a.repeat, repeatMax = _g === void 0 ? 0 : _g, _h = _a.repeatType, repeatType = _h === void 0 ? "loop" : _h, _j = _a.repeatDelay, repeatDelay = _j === void 0 ? 0 : _j, onPlay = _a.onPlay, onStop = _a.onStop, onComplete = _a.onComplete, onRepeat = _a.onRepeat, onUpdate = _a.onUpdate, options = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(_a, ["from", "autoplay", "driver", "elapsed", "repeat", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate"]);
    var to = options.to;
    var driverControls;
    var repeatCount = 0;
    var computedDuration = options.duration;
    var latest;
    var isComplete = false;
    var isForwardPlayback = true;
    var interpolateFromNumber;
    var animator = Object(_utils_detect_animation_from_options_js__WEBPACK_IMPORTED_MODULE_1__["detectAnimationFromOptions"])(options);
    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {
        interpolateFromNumber = Object(_utils_interpolate_js__WEBPACK_IMPORTED_MODULE_3__["interpolate"])([0, 100], [from, to], {
            clamp: false,
        });
        from = 0;
        to = 100;
    }
    var animation = animator(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), { from: from, to: to }));
    function repeat() {
        repeatCount++;
        if (repeatType === "reverse") {
            isForwardPlayback = repeatCount % 2 === 0;
            elapsed = Object(_utils_elapsed_js__WEBPACK_IMPORTED_MODULE_4__["reverseElapsed"])(elapsed, computedDuration, repeatDelay, isForwardPlayback);
        }
        else {
            elapsed = Object(_utils_elapsed_js__WEBPACK_IMPORTED_MODULE_4__["loopElapsed"])(elapsed, computedDuration, repeatDelay);
            if (repeatType === "mirror")
                animation.flipTarget();
        }
        isComplete = false;
        onRepeat && onRepeat();
    }
    function complete() {
        driverControls.stop();
        onComplete && onComplete();
    }
    function update(delta) {
        if (!isForwardPlayback)
            delta = -delta;
        elapsed += delta;
        if (!isComplete) {
            var state = animation.next(Math.max(0, elapsed));
            latest = state.value;
            if (interpolateFromNumber)
                latest = interpolateFromNumber(latest);
            isComplete = isForwardPlayback ? state.done : elapsed <= 0;
        }
        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);
        if (isComplete) {
            if (repeatCount === 0)
                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);
            if (repeatCount < repeatMax) {
                Object(_utils_elapsed_js__WEBPACK_IMPORTED_MODULE_4__["hasRepeatDelayElapsed"])(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();
            }
            else {
                complete();
            }
        }
    }
    function play() {
        onPlay === null || onPlay === void 0 ? void 0 : onPlay();
        driverControls = driver(update);
        driverControls.start();
    }
    autoplay && play();
    return {
        stop: function () {
            onStop === null || onStop === void 0 ? void 0 : onStop();
            driverControls.stop();
        },
    };
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/animations/inertia.js":
/*!******************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/animations/inertia.js ***!
  \******************************************************************************************************/
/*! exports provided: inertia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inertia", function() { return inertia; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "../../node_modules/popmotion/dist/es/animations/index.js");
/* harmony import */ var _utils_velocity_per_second_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/velocity-per-second.js */ "../../node_modules/popmotion/dist/es/utils/velocity-per-second.js");
/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! framesync */ "../../node_modules/framesync/dist/es/index.js");





function inertia(_a) {
    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.velocity, velocity = _c === void 0 ? 0 : _c, min = _a.min, max = _a.max, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 750 : _e, _f = _a.bounceStiffness, bounceStiffness = _f === void 0 ? 500 : _f, _g = _a.bounceDamping, bounceDamping = _g === void 0 ? 10 : _g, _h = _a.restDelta, restDelta = _h === void 0 ? 1 : _h, modifyTarget = _a.modifyTarget, driver = _a.driver, onUpdate = _a.onUpdate, onComplete = _a.onComplete;
    var currentAnimation;
    function isOutOfBounds(v) {
        return (min !== undefined && v < min) || (max !== undefined && v > max);
    }
    function boundaryNearest(v) {
        if (min === undefined)
            return max;
        if (max === undefined)
            return min;
        return Math.abs(min - v) < Math.abs(max - v) ? min : max;
    }
    function startAnimation(options) {
        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();
        currentAnimation = Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["animate"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, options), { driver: driver, onUpdate: function (v) {
                var _a;
                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);
                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);
            }, onComplete: onComplete }));
    }
    function startSpring(options) {
        startAnimation(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({ type: "spring", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));
    }
    if (isOutOfBounds(from)) {
        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });
    }
    else {
        var target = power * velocity + from;
        if (typeof modifyTarget !== "undefined")
            target = modifyTarget(target);
        var boundary_1 = boundaryNearest(target);
        var heading_1 = boundary_1 === min ? -1 : 1;
        var prev_1;
        var current_1;
        var checkBoundary = function (v) {
            prev_1 = current_1;
            current_1 = v;
            velocity = Object(_utils_velocity_per_second_js__WEBPACK_IMPORTED_MODULE_2__["velocityPerSecond"])(v - prev_1, Object(framesync__WEBPACK_IMPORTED_MODULE_3__["getFrameData"])().delta);
            if ((heading_1 === 1 && v > boundary_1) ||
                (heading_1 === -1 && v < boundary_1)) {
                startSpring({ from: v, to: boundary_1, velocity: velocity });
            }
        };
        startAnimation({
            type: "decay",
            from: from,
            velocity: velocity,
            timeConstant: timeConstant,
            power: power,
            restDelta: restDelta,
            modifyTarget: modifyTarget,
            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,
        });
    }
    return {
        stop: function () { return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(); },
    };
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.js ***!
  \**********************************************************************************************************************************/
/*! exports provided: detectAnimationFromOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detectAnimationFromOptions", function() { return detectAnimationFromOptions; });
/* harmony import */ var _generators_spring_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../generators/spring.js */ "../../node_modules/popmotion/dist/es/animations/generators/spring.js");
/* harmony import */ var _generators_keyframes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../generators/keyframes.js */ "../../node_modules/popmotion/dist/es/animations/generators/keyframes.js");
/* harmony import */ var _generators_decay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../generators/decay.js */ "../../node_modules/popmotion/dist/es/animations/generators/decay.js");




var types = { keyframes: _generators_keyframes_js__WEBPACK_IMPORTED_MODULE_1__["keyframes"], spring: _generators_spring_js__WEBPACK_IMPORTED_MODULE_0__["spring"], decay: _generators_decay_js__WEBPACK_IMPORTED_MODULE_2__["decay"] };
function detectAnimationFromOptions(config) {
    if (Array.isArray(config.to)) {
        return _generators_keyframes_js__WEBPACK_IMPORTED_MODULE_1__["keyframes"];
    }
    else if (types[config.type]) {
        return types[config.type];
    }
    var keys = new Set(Object.keys(config));
    if (keys.has("ease") ||
        (keys.has("duration") && !keys.has("dampingRatio"))) {
        return _generators_keyframes_js__WEBPACK_IMPORTED_MODULE_1__["keyframes"];
    }
    else if (keys.has("dampingRatio") ||
        keys.has("stiffness") ||
        keys.has("mass") ||
        keys.has("damping") ||
        keys.has("restSpeed") ||
        keys.has("restDelta")) {
        return _generators_spring_js__WEBPACK_IMPORTED_MODULE_0__["spring"];
    }
    return _generators_keyframes_js__WEBPACK_IMPORTED_MODULE_1__["keyframes"];
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/animations/utils/elapsed.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/animations/utils/elapsed.js ***!
  \************************************************************************************************************/
/*! exports provided: hasRepeatDelayElapsed, loopElapsed, reverseElapsed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasRepeatDelayElapsed", function() { return hasRepeatDelayElapsed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loopElapsed", function() { return loopElapsed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reverseElapsed", function() { return reverseElapsed; });
function loopElapsed(elapsed, duration, delay) {
    if (delay === void 0) { delay = 0; }
    return elapsed - duration - delay;
}
function reverseElapsed(elapsed, duration, delay, isForwardPlayback) {
    if (delay === void 0) { delay = 0; }
    if (isForwardPlayback === void 0) { isForwardPlayback = true; }
    return isForwardPlayback
        ? loopElapsed(duration + -elapsed, duration, delay)
        : duration - (elapsed - duration) + delay;
}
function hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {
    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/animations/utils/find-spring.js":
/*!****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/animations/utils/find-spring.js ***!
  \****************************************************************************************************************/
/*! exports provided: calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calcAngularFreq", function() { return calcAngularFreq; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findSpring", function() { return findSpring; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "maxDamping", function() { return maxDamping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "maxDuration", function() { return maxDuration; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minDamping", function() { return minDamping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "minDuration", function() { return minDuration; });
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
/* harmony import */ var _utils_clamp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/clamp.js */ "../../node_modules/popmotion/dist/es/utils/clamp.js");



var safeMin = 0.001;
var minDuration = 0.01;
var maxDuration = 10.0;
var minDamping = 0.05;
var maxDamping = 1;
function findSpring(_a) {
    var _b = _a.duration, duration = _b === void 0 ? 800 : _b, _c = _a.bounce, bounce = _c === void 0 ? 0.25 : _c, _d = _a.velocity, velocity = _d === void 0 ? 0 : _d, _e = _a.mass, mass = _e === void 0 ? 1 : _e;
    var envelope;
    var derivative;
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_0__["warning"])(duration <= maxDuration * 1000, "Spring duration must be 10 seconds or less");
    var dampingRatio = 1 - bounce;
    dampingRatio = Object(_utils_clamp_js__WEBPACK_IMPORTED_MODULE_1__["clamp"])(minDamping, maxDamping, dampingRatio);
    duration = Object(_utils_clamp_js__WEBPACK_IMPORTED_MODULE_1__["clamp"])(minDuration, maxDuration, duration / 1000);
    if (dampingRatio < 1) {
        envelope = function (undampedFreq) {
            var exponentialDecay = undampedFreq * dampingRatio;
            var delta = exponentialDecay * duration;
            var a = exponentialDecay - velocity;
            var b = calcAngularFreq(undampedFreq, dampingRatio);
            var c = Math.exp(-delta);
            return safeMin - (a / b) * c;
        };
        derivative = function (undampedFreq) {
            var exponentialDecay = undampedFreq * dampingRatio;
            var delta = exponentialDecay * duration;
            var d = delta * velocity + velocity;
            var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;
            var f = Math.exp(-delta);
            var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);
            var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;
            return (factor * ((d - e) * f)) / g;
        };
    }
    else {
        envelope = function (undampedFreq) {
            var a = Math.exp(-undampedFreq * duration);
            var b = (undampedFreq - velocity) * duration + 1;
            return -safeMin + a * b;
        };
        derivative = function (undampedFreq) {
            var a = Math.exp(-undampedFreq * duration);
            var b = (velocity - undampedFreq) * (duration * duration);
            return a * b;
        };
    }
    var initialGuess = 5 / duration;
    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);
    if (isNaN(undampedFreq)) {
        return {
            stiffness: 100,
            damping: 10,
        };
    }
    else {
        var stiffness = Math.pow(undampedFreq, 2) * mass;
        return {
            stiffness: stiffness,
            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
        };
    }
}
var rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
    var result = initialGuess;
    for (var i = 1; i < rootIterations; i++) {
        result = result - envelope(result) / derivative(result);
    }
    return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/easing/cubic-bezier.js":
/*!*******************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/easing/cubic-bezier.js ***!
  \*******************************************************************************************************/
/*! exports provided: cubicBezier */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicBezier", function() { return cubicBezier; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "../../node_modules/popmotion/dist/es/easing/index.js");


var a = function (a1, a2) { return 1.0 - 3.0 * a2 + 3.0 * a1; };
var b = function (a1, a2) { return 3.0 * a2 - 6.0 * a1; };
var c = function (a1) { return 3.0 * a1; };
var calcBezier = function (t, a1, a2) {
    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;
};
var getSlope = function (t, a1, a2) {
    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);
};
var subdivisionPrecision = 0.0000001;
var subdivisionMaxIterations = 10;
function binarySubdivide(aX, aA, aB, mX1, mX2) {
    var currentX;
    var currentT;
    var i = 0;
    do {
        currentT = aA + (aB - aA) / 2.0;
        currentX = calcBezier(currentT, mX1, mX2) - aX;
        if (currentX > 0.0) {
            aB = currentT;
        }
        else {
            aA = currentT;
        }
    } while (Math.abs(currentX) > subdivisionPrecision &&
        ++i < subdivisionMaxIterations);
    return currentT;
}
var newtonIterations = 8;
var newtonMinSlope = 0.001;
function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
    for (var i = 0; i < newtonIterations; ++i) {
        var currentSlope = getSlope(aGuessT, mX1, mX2);
        if (currentSlope === 0.0) {
            return aGuessT;
        }
        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
        aGuessT -= currentX / currentSlope;
    }
    return aGuessT;
}
var kSplineTableSize = 11;
var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);
function cubicBezier(mX1, mY1, mX2, mY2) {
    if (mX1 === mY1 && mX2 === mY2)
        return _index_js__WEBPACK_IMPORTED_MODULE_0__["linear"];
    var sampleValues = new Float32Array(kSplineTableSize);
    for (var i = 0; i < kSplineTableSize; ++i) {
        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
    }
    function getTForX(aX) {
        var intervalStart = 0.0;
        var currentSample = 1;
        var lastSample = kSplineTableSize - 1;
        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
            intervalStart += kSampleStepSize;
        }
        --currentSample;
        var dist = (aX - sampleValues[currentSample]) /
            (sampleValues[currentSample + 1] - sampleValues[currentSample]);
        var guessForT = intervalStart + dist * kSampleStepSize;
        var initialSlope = getSlope(guessForT, mX1, mX2);
        if (initialSlope >= newtonMinSlope) {
            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
        }
        else if (initialSlope === 0.0) {
            return guessForT;
        }
        else {
            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
        }
    }
    return function (t) {
        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);
    };
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/easing/index.js":
/*!************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/easing/index.js ***!
  \************************************************************************************************/
/*! exports provided: anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "anticipate", function() { return anticipate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backIn", function() { return backIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backInOut", function() { return backInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backOut", function() { return backOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceIn", function() { return bounceIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceInOut", function() { return bounceInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceOut", function() { return bounceOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circIn", function() { return circIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circInOut", function() { return circInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circOut", function() { return circOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeIn", function() { return easeIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeInOut", function() { return easeInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeOut", function() { return easeOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return linear; });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "../../node_modules/popmotion/dist/es/easing/utils.js");


var DEFAULT_OVERSHOOT_STRENGTH = 1.525;
var BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;
var BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;
var BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;
var linear = function (p) { return p; };
var easeIn = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["createExpoIn"])(2);
var easeOut = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["reverseEasing"])(easeIn);
var easeInOut = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["mirrorEasing"])(easeIn);
var circIn = function (p) { return 1 - Math.sin(Math.acos(p)); };
var circOut = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["reverseEasing"])(circIn);
var circInOut = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["mirrorEasing"])(circOut);
var backIn = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["createBackIn"])(DEFAULT_OVERSHOOT_STRENGTH);
var backOut = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["reverseEasing"])(backIn);
var backInOut = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["mirrorEasing"])(backIn);
var anticipate = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["createAnticipate"])(DEFAULT_OVERSHOOT_STRENGTH);
var ca = 4356.0 / 361.0;
var cb = 35442.0 / 1805.0;
var cc = 16061.0 / 1805.0;
var bounceOut = function (p) {
    if (p === 1 || p === 0)
        return p;
    var p2 = p * p;
    return p < BOUNCE_FIRST_THRESHOLD
        ? 7.5625 * p2
        : p < BOUNCE_SECOND_THRESHOLD
            ? 9.075 * p2 - 9.9 * p + 3.4
            : p < BOUNCE_THIRD_THRESHOLD
                ? ca * p2 - cb * p + cc
                : 10.8 * p * p - 20.52 * p + 10.72;
};
var bounceIn = Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["reverseEasing"])(bounceOut);
var bounceInOut = function (p) {
    return p < 0.5
        ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))
        : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/easing/steps.js":
/*!************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/easing/steps.js ***!
  \************************************************************************************************/
/*! exports provided: steps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "steps", function() { return steps; });
/* harmony import */ var _utils_clamp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/clamp.js */ "../../node_modules/popmotion/dist/es/utils/clamp.js");


var steps = function (steps, direction) {
    if (direction === void 0) { direction = 'end'; }
    return function (progress) {
        progress =
            direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);
        var expanded = progress * steps;
        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);
        return Object(_utils_clamp_js__WEBPACK_IMPORTED_MODULE_0__["clamp"])(0, 1, rounded / steps);
    };
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/easing/utils.js":
/*!************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/easing/utils.js ***!
  \************************************************************************************************/
/*! exports provided: createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAnticipate", function() { return createAnticipate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBackIn", function() { return createBackIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createExpoIn", function() { return createExpoIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mirrorEasing", function() { return mirrorEasing; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reverseEasing", function() { return reverseEasing; });
var reverseEasing = function (easing) { return function (p) { return 1 - easing(1 - p); }; };
var mirrorEasing = function (easing) { return function (p) {
    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;
}; };
var createExpoIn = function (power) { return function (p) { return Math.pow(p, power); }; };
var createBackIn = function (power) { return function (p) {
    return p * p * ((power + 1) * p - power);
}; };
var createAnticipate = function (power) {
    var backEasing = createBackIn(power);
    return function (p) {
        return (p *= 2) < 1
            ? 0.5 * backEasing(p)
            : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));
    };
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/index.js":
/*!*****************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/index.js ***!
  \*****************************************************************************************/
/*! exports provided: animate, inertia, decay, spring, keyframes, angle, applyOffset, attract, attractExpo, createAttractor, clamp, degreesToRadians, distance, interpolate, isPoint3D, isPoint, mixColor, mixComplex, mix, pipe, pointFromVector, progress, radiansToDegrees, smoothFrame, smooth, snap, toDecimal, velocityPerFrame, velocityPerSecond, wrap, anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear, cubicBezier, steps, createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _animations_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./animations/index.js */ "../../node_modules/popmotion/dist/es/animations/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "animate", function() { return _animations_index_js__WEBPACK_IMPORTED_MODULE_0__["animate"]; });

/* harmony import */ var _animations_inertia_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animations/inertia.js */ "../../node_modules/popmotion/dist/es/animations/inertia.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "inertia", function() { return _animations_inertia_js__WEBPACK_IMPORTED_MODULE_1__["inertia"]; });

/* harmony import */ var _animations_generators_decay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./animations/generators/decay.js */ "../../node_modules/popmotion/dist/es/animations/generators/decay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "decay", function() { return _animations_generators_decay_js__WEBPACK_IMPORTED_MODULE_2__["decay"]; });

/* harmony import */ var _animations_generators_spring_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./animations/generators/spring.js */ "../../node_modules/popmotion/dist/es/animations/generators/spring.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "spring", function() { return _animations_generators_spring_js__WEBPACK_IMPORTED_MODULE_3__["spring"]; });

/* harmony import */ var _animations_generators_keyframes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./animations/generators/keyframes.js */ "../../node_modules/popmotion/dist/es/animations/generators/keyframes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "keyframes", function() { return _animations_generators_keyframes_js__WEBPACK_IMPORTED_MODULE_4__["keyframes"]; });

/* harmony import */ var _utils_angle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/angle.js */ "../../node_modules/popmotion/dist/es/utils/angle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return _utils_angle_js__WEBPACK_IMPORTED_MODULE_5__["angle"]; });

/* harmony import */ var _utils_apply_offset_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/apply-offset.js */ "../../node_modules/popmotion/dist/es/utils/apply-offset.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applyOffset", function() { return _utils_apply_offset_js__WEBPACK_IMPORTED_MODULE_6__["applyOffset"]; });

/* harmony import */ var _utils_attract_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/attract.js */ "../../node_modules/popmotion/dist/es/utils/attract.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "attract", function() { return _utils_attract_js__WEBPACK_IMPORTED_MODULE_7__["attract"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "attractExpo", function() { return _utils_attract_js__WEBPACK_IMPORTED_MODULE_7__["attractExpo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAttractor", function() { return _utils_attract_js__WEBPACK_IMPORTED_MODULE_7__["createAttractor"]; });

/* harmony import */ var _utils_clamp_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/clamp.js */ "../../node_modules/popmotion/dist/es/utils/clamp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clamp", function() { return _utils_clamp_js__WEBPACK_IMPORTED_MODULE_8__["clamp"]; });

/* harmony import */ var _utils_degrees_to_radians_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/degrees-to-radians.js */ "../../node_modules/popmotion/dist/es/utils/degrees-to-radians.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "degreesToRadians", function() { return _utils_degrees_to_radians_js__WEBPACK_IMPORTED_MODULE_9__["degreesToRadians"]; });

/* harmony import */ var _utils_distance_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/distance.js */ "../../node_modules/popmotion/dist/es/utils/distance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return _utils_distance_js__WEBPACK_IMPORTED_MODULE_10__["distance"]; });

/* harmony import */ var _utils_interpolate_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/interpolate.js */ "../../node_modules/popmotion/dist/es/utils/interpolate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return _utils_interpolate_js__WEBPACK_IMPORTED_MODULE_11__["interpolate"]; });

/* harmony import */ var _utils_is_point_3d_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/is-point-3d.js */ "../../node_modules/popmotion/dist/es/utils/is-point-3d.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPoint3D", function() { return _utils_is_point_3d_js__WEBPACK_IMPORTED_MODULE_12__["isPoint3D"]; });

/* harmony import */ var _utils_is_point_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/is-point.js */ "../../node_modules/popmotion/dist/es/utils/is-point.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isPoint", function() { return _utils_is_point_js__WEBPACK_IMPORTED_MODULE_13__["isPoint"]; });

/* harmony import */ var _utils_mix_color_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/mix-color.js */ "../../node_modules/popmotion/dist/es/utils/mix-color.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mixColor", function() { return _utils_mix_color_js__WEBPACK_IMPORTED_MODULE_14__["mixColor"]; });

/* harmony import */ var _utils_mix_complex_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/mix-complex.js */ "../../node_modules/popmotion/dist/es/utils/mix-complex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mixComplex", function() { return _utils_mix_complex_js__WEBPACK_IMPORTED_MODULE_15__["mixComplex"]; });

/* harmony import */ var _utils_mix_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/mix.js */ "../../node_modules/popmotion/dist/es/utils/mix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mix", function() { return _utils_mix_js__WEBPACK_IMPORTED_MODULE_16__["mix"]; });

/* harmony import */ var _utils_pipe_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./utils/pipe.js */ "../../node_modules/popmotion/dist/es/utils/pipe.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return _utils_pipe_js__WEBPACK_IMPORTED_MODULE_17__["pipe"]; });

/* harmony import */ var _utils_point_from_vector_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./utils/point-from-vector.js */ "../../node_modules/popmotion/dist/es/utils/point-from-vector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pointFromVector", function() { return _utils_point_from_vector_js__WEBPACK_IMPORTED_MODULE_18__["pointFromVector"]; });

/* harmony import */ var _utils_progress_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./utils/progress.js */ "../../node_modules/popmotion/dist/es/utils/progress.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "progress", function() { return _utils_progress_js__WEBPACK_IMPORTED_MODULE_19__["progress"]; });

/* harmony import */ var _utils_radians_to_degrees_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./utils/radians-to-degrees.js */ "../../node_modules/popmotion/dist/es/utils/radians-to-degrees.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "radiansToDegrees", function() { return _utils_radians_to_degrees_js__WEBPACK_IMPORTED_MODULE_20__["radiansToDegrees"]; });

/* harmony import */ var _utils_smooth_frame_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./utils/smooth-frame.js */ "../../node_modules/popmotion/dist/es/utils/smooth-frame.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smoothFrame", function() { return _utils_smooth_frame_js__WEBPACK_IMPORTED_MODULE_21__["smoothFrame"]; });

/* harmony import */ var _utils_smooth_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./utils/smooth.js */ "../../node_modules/popmotion/dist/es/utils/smooth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "smooth", function() { return _utils_smooth_js__WEBPACK_IMPORTED_MODULE_22__["smooth"]; });

/* harmony import */ var _utils_snap_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./utils/snap.js */ "../../node_modules/popmotion/dist/es/utils/snap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "snap", function() { return _utils_snap_js__WEBPACK_IMPORTED_MODULE_23__["snap"]; });

/* harmony import */ var _utils_to_decimal_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./utils/to-decimal.js */ "../../node_modules/popmotion/dist/es/utils/to-decimal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toDecimal", function() { return _utils_to_decimal_js__WEBPACK_IMPORTED_MODULE_24__["toDecimal"]; });

/* harmony import */ var _utils_velocity_per_frame_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./utils/velocity-per-frame.js */ "../../node_modules/popmotion/dist/es/utils/velocity-per-frame.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "velocityPerFrame", function() { return _utils_velocity_per_frame_js__WEBPACK_IMPORTED_MODULE_25__["velocityPerFrame"]; });

/* harmony import */ var _utils_velocity_per_second_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./utils/velocity-per-second.js */ "../../node_modules/popmotion/dist/es/utils/velocity-per-second.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "velocityPerSecond", function() { return _utils_velocity_per_second_js__WEBPACK_IMPORTED_MODULE_26__["velocityPerSecond"]; });

/* harmony import */ var _utils_wrap_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./utils/wrap.js */ "../../node_modules/popmotion/dist/es/utils/wrap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return _utils_wrap_js__WEBPACK_IMPORTED_MODULE_27__["wrap"]; });

/* harmony import */ var _easing_index_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./easing/index.js */ "../../node_modules/popmotion/dist/es/easing/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "anticipate", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["anticipate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "backIn", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["backIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "backInOut", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["backInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "backOut", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["backOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bounceIn", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["bounceIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bounceInOut", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["bounceInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bounceOut", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["bounceOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "circIn", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["circIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "circInOut", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["circInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "circOut", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["circOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeIn", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["easeIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeInOut", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["easeInOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "easeOut", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["easeOut"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return _easing_index_js__WEBPACK_IMPORTED_MODULE_28__["linear"]; });

/* harmony import */ var _easing_cubic_bezier_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./easing/cubic-bezier.js */ "../../node_modules/popmotion/dist/es/easing/cubic-bezier.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubicBezier", function() { return _easing_cubic_bezier_js__WEBPACK_IMPORTED_MODULE_29__["cubicBezier"]; });

/* harmony import */ var _easing_steps_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./easing/steps.js */ "../../node_modules/popmotion/dist/es/easing/steps.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "steps", function() { return _easing_steps_js__WEBPACK_IMPORTED_MODULE_30__["steps"]; });

/* harmony import */ var _easing_utils_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./easing/utils.js */ "../../node_modules/popmotion/dist/es/easing/utils.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAnticipate", function() { return _easing_utils_js__WEBPACK_IMPORTED_MODULE_31__["createAnticipate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createBackIn", function() { return _easing_utils_js__WEBPACK_IMPORTED_MODULE_31__["createBackIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createExpoIn", function() { return _easing_utils_js__WEBPACK_IMPORTED_MODULE_31__["createExpoIn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mirrorEasing", function() { return _easing_utils_js__WEBPACK_IMPORTED_MODULE_31__["mirrorEasing"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reverseEasing", function() { return _easing_utils_js__WEBPACK_IMPORTED_MODULE_31__["reverseEasing"]; });



































/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/angle.js":
/*!***********************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/angle.js ***!
  \***********************************************************************************************/
/*! exports provided: angle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return angle; });
/* harmony import */ var _radians_to_degrees_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./radians-to-degrees.js */ "../../node_modules/popmotion/dist/es/utils/radians-to-degrees.js");
/* harmony import */ var _inc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inc.js */ "../../node_modules/popmotion/dist/es/utils/inc.js");



var angle = function (a, b) {
    if (b === void 0) { b = _inc_js__WEBPACK_IMPORTED_MODULE_1__["zeroPoint"]; }
    return Object(_radians_to_degrees_js__WEBPACK_IMPORTED_MODULE_0__["radiansToDegrees"])(Math.atan2(b.y - a.y, b.x - a.x));
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/apply-offset.js":
/*!******************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/apply-offset.js ***!
  \******************************************************************************************************/
/*! exports provided: applyOffset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyOffset", function() { return applyOffset; });
var applyOffset = function (from, to) {
    var hasReceivedFrom = true;
    if (to === undefined) {
        to = from;
        hasReceivedFrom = false;
    }
    return function (v) {
        if (hasReceivedFrom) {
            return v - from + to;
        }
        else {
            from = v;
            hasReceivedFrom = true;
            return to;
        }
    };
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/attract.js":
/*!*************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/attract.js ***!
  \*************************************************************************************************/
/*! exports provided: attract, attractExpo, createAttractor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attract", function() { return attract; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attractExpo", function() { return attractExpo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAttractor", function() { return createAttractor; });
var identity = function (v) { return v; };
var createAttractor = function (alterDisplacement) {
    if (alterDisplacement === void 0) { alterDisplacement = identity; }
    return function (constant, origin, v) {
        var displacement = origin - v;
        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));
        return displacement <= 0
            ? origin + springModifiedDisplacement
            : origin - springModifiedDisplacement;
    };
};
var attract = createAttractor();
var attractExpo = createAttractor(Math.sqrt);




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/clamp.js":
/*!***********************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/clamp.js ***!
  \***********************************************************************************************/
/*! exports provided: clamp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clamp", function() { return clamp; });
var clamp = function (min, max, v) {
    return Math.min(Math.max(v, min), max);
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/degrees-to-radians.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/degrees-to-radians.js ***!
  \************************************************************************************************************/
/*! exports provided: degreesToRadians */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degreesToRadians", function() { return degreesToRadians; });
var degreesToRadians = function (degrees) { return (degrees * Math.PI) / 180; };




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/distance.js":
/*!**************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/distance.js ***!
  \**************************************************************************************************/
/*! exports provided: distance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "distance", function() { return distance; });
/* harmony import */ var _is_point_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-point.js */ "../../node_modules/popmotion/dist/es/utils/is-point.js");
/* harmony import */ var _is_point_3d_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is-point-3d.js */ "../../node_modules/popmotion/dist/es/utils/is-point-3d.js");
/* harmony import */ var _inc_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./inc.js */ "../../node_modules/popmotion/dist/es/utils/inc.js");




var distance1D = function (a, b) { return Math.abs(a - b); };
function distance(a, b) {
    if (Object(_inc_js__WEBPACK_IMPORTED_MODULE_2__["isNum"])(a) && Object(_inc_js__WEBPACK_IMPORTED_MODULE_2__["isNum"])(b)) {
        return distance1D(a, b);
    }
    else if (Object(_is_point_js__WEBPACK_IMPORTED_MODULE_0__["isPoint"])(a) && Object(_is_point_js__WEBPACK_IMPORTED_MODULE_0__["isPoint"])(b)) {
        var xDelta = distance1D(a.x, b.x);
        var yDelta = distance1D(a.y, b.y);
        var zDelta = Object(_is_point_3d_js__WEBPACK_IMPORTED_MODULE_1__["isPoint3D"])(a) && Object(_is_point_3d_js__WEBPACK_IMPORTED_MODULE_1__["isPoint3D"])(b) ? distance1D(a.z, b.z) : 0;
        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));
    }
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/inc.js":
/*!*********************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/inc.js ***!
  \*********************************************************************************************/
/*! exports provided: isNum, zeroPoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNum", function() { return isNum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "zeroPoint", function() { return zeroPoint; });
var zeroPoint = {
    x: 0,
    y: 0,
    z: 0
};
var isNum = function (v) { return typeof v === 'number'; };




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/interpolate.js":
/*!*****************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/interpolate.js ***!
  \*****************************************************************************************************/
/*! exports provided: interpolate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return interpolate; });
/* harmony import */ var _progress_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./progress.js */ "../../node_modules/popmotion/dist/es/utils/progress.js");
/* harmony import */ var _mix_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mix.js */ "../../node_modules/popmotion/dist/es/utils/mix.js");
/* harmony import */ var _mix_color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mix-color.js */ "../../node_modules/popmotion/dist/es/utils/mix-color.js");
/* harmony import */ var _mix_complex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mix-complex.js */ "../../node_modules/popmotion/dist/es/utils/mix-complex.js");
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");
/* harmony import */ var _clamp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clamp.js */ "../../node_modules/popmotion/dist/es/utils/clamp.js");
/* harmony import */ var _pipe_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pipe.js */ "../../node_modules/popmotion/dist/es/utils/pipe.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");









var mixNumber = function (from, to) { return function (p) { return Object(_mix_js__WEBPACK_IMPORTED_MODULE_1__["mix"])(from, to, p); }; };
function detectMixerFactory(v) {
    if (typeof v === 'number') {
        return mixNumber;
    }
    else if (typeof v === 'string') {
        if (style_value_types__WEBPACK_IMPORTED_MODULE_4__["color"].test(v)) {
            return _mix_color_js__WEBPACK_IMPORTED_MODULE_2__["mixColor"];
        }
        else {
            return _mix_complex_js__WEBPACK_IMPORTED_MODULE_3__["mixComplex"];
        }
    }
    else if (Array.isArray(v)) {
        return _mix_complex_js__WEBPACK_IMPORTED_MODULE_3__["mixArray"];
    }
    else if (typeof v === 'object') {
        return _mix_complex_js__WEBPACK_IMPORTED_MODULE_3__["mixObject"];
    }
}
function createMixers(output, ease, customMixer) {
    var mixers = [];
    var mixerFactory = customMixer || detectMixerFactory(output[0]);
    var numMixers = output.length - 1;
    for (var i = 0; i < numMixers; i++) {
        var mixer = mixerFactory(output[i], output[i + 1]);
        if (ease) {
            var easingFunction = Array.isArray(ease) ? ease[i] : ease;
            mixer = Object(_pipe_js__WEBPACK_IMPORTED_MODULE_6__["pipe"])(easingFunction, mixer);
        }
        mixers.push(mixer);
    }
    return mixers;
}
function fastInterpolate(_a, _b) {
    var from = _a[0], to = _a[1];
    var mixer = _b[0];
    return function (v) { return mixer(Object(_progress_js__WEBPACK_IMPORTED_MODULE_0__["progress"])(from, to, v)); };
}
function slowInterpolate(input, mixers) {
    var inputLength = input.length;
    var lastInputIndex = inputLength - 1;
    return function (v) {
        var mixerIndex = 0;
        var foundMixerIndex = false;
        if (v <= input[0]) {
            foundMixerIndex = true;
        }
        else if (v >= input[lastInputIndex]) {
            mixerIndex = lastInputIndex - 1;
            foundMixerIndex = true;
        }
        if (!foundMixerIndex) {
            var i = 1;
            for (; i < inputLength; i++) {
                if (input[i] > v || i === lastInputIndex) {
                    break;
                }
            }
            mixerIndex = i - 1;
        }
        var progressInRange = Object(_progress_js__WEBPACK_IMPORTED_MODULE_0__["progress"])(input[mixerIndex], input[mixerIndex + 1], v);
        return mixers[mixerIndex](progressInRange);
    };
}
function interpolate(input, output, _a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, isClamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;
    var inputLength = input.length;
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_7__["invariant"])(inputLength === output.length, 'Both input and output ranges must be the same length');
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_7__["invariant"])(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');
    if (input[0] > input[inputLength - 1]) {
        input = [].concat(input);
        output = [].concat(output);
        input.reverse();
        output.reverse();
    }
    var mixers = createMixers(output, ease, mixer);
    var interpolator = inputLength === 2
        ? fastInterpolate(input, mixers)
        : slowInterpolate(input, mixers);
    return isClamp
        ? function (v) { return interpolator(Object(_clamp_js__WEBPACK_IMPORTED_MODULE_5__["clamp"])(input[0], input[inputLength - 1], v)); }
        : interpolator;
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/is-point-3d.js":
/*!*****************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/is-point-3d.js ***!
  \*****************************************************************************************************/
/*! exports provided: isPoint3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPoint3D", function() { return isPoint3D; });
/* harmony import */ var _is_point_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-point.js */ "../../node_modules/popmotion/dist/es/utils/is-point.js");


var isPoint3D = function (point) {
    return Object(_is_point_js__WEBPACK_IMPORTED_MODULE_0__["isPoint"])(point) && point.hasOwnProperty('z');
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/is-point.js":
/*!**************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/is-point.js ***!
  \**************************************************************************************************/
/*! exports provided: isPoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPoint", function() { return isPoint; });
var isPoint = function (point) {
    return point.hasOwnProperty('x') && point.hasOwnProperty('y');
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/mix-color.js":
/*!***************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/mix-color.js ***!
  \***************************************************************************************************/
/*! exports provided: mixColor, mixLinearColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixColor", function() { return mixColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixLinearColor", function() { return mixLinearColor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var _mix_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mix.js */ "../../node_modules/popmotion/dist/es/utils/mix.js");
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");





var mixLinearColor = function (from, to, v) {
    var fromExpo = from * from;
    var toExpo = to * to;
    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));
};
var colorTypes = [style_value_types__WEBPACK_IMPORTED_MODULE_2__["hex"], style_value_types__WEBPACK_IMPORTED_MODULE_2__["rgba"], style_value_types__WEBPACK_IMPORTED_MODULE_2__["hsla"]];
var getColorType = function (v) {
    return colorTypes.find(function (type) { return type.test(v); });
};
var notAnimatable = function (color) {
    return "'" + color + "' is not an animatable color. Use the equivalent color code instead.";
};
var mixColor = function (from, to) {
    var fromColorType = getColorType(from);
    var toColorType = getColorType(to);
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_3__["invariant"])(!!fromColorType, notAnimatable(from));
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_3__["invariant"])(!!toColorType, notAnimatable(to));
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_3__["invariant"])(fromColorType.transform === toColorType.transform, "Both colors must be hex/RGBA, OR both must be HSLA.");
    var fromColor = fromColorType.parse(from);
    var toColor = toColorType.parse(to);
    var blended = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, fromColor);
    var mixFunc = fromColorType === style_value_types__WEBPACK_IMPORTED_MODULE_2__["hsla"] ? _mix_js__WEBPACK_IMPORTED_MODULE_1__["mix"] : mixLinearColor;
    return function (v) {
        for (var key in blended) {
            if (key !== "alpha") {
                blended[key] = mixFunc(fromColor[key], toColor[key], v);
            }
        }
        blended.alpha = Object(_mix_js__WEBPACK_IMPORTED_MODULE_1__["mix"])(fromColor.alpha, toColor.alpha, v);
        return fromColorType.transform(blended);
    };
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/mix-complex.js":
/*!*****************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/mix-complex.js ***!
  \*****************************************************************************************************/
/*! exports provided: mixArray, mixComplex, mixObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixArray", function() { return mixArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixComplex", function() { return mixComplex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixObject", function() { return mixObject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");
/* harmony import */ var style_value_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");
/* harmony import */ var _mix_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mix.js */ "../../node_modules/popmotion/dist/es/utils/mix.js");
/* harmony import */ var _mix_color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mix-color.js */ "../../node_modules/popmotion/dist/es/utils/mix-color.js");
/* harmony import */ var _inc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./inc.js */ "../../node_modules/popmotion/dist/es/utils/inc.js");
/* harmony import */ var _pipe_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pipe.js */ "../../node_modules/popmotion/dist/es/utils/pipe.js");
/* harmony import */ var hey_listen__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");








function getMixer(origin, target) {
    if (Object(_inc_js__WEBPACK_IMPORTED_MODULE_4__["isNum"])(origin)) {
        return function (v) { return Object(_mix_js__WEBPACK_IMPORTED_MODULE_2__["mix"])(origin, target, v); };
    }
    else if (style_value_types__WEBPACK_IMPORTED_MODULE_1__["color"].test(origin)) {
        return Object(_mix_color_js__WEBPACK_IMPORTED_MODULE_3__["mixColor"])(origin, target);
    }
    else {
        return mixComplex(origin, target);
    }
}
var mixArray = function (from, to) {
    var output = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(from);
    var numValues = output.length;
    var blendValue = from.map(function (fromThis, i) { return getMixer(fromThis, to[i]); });
    return function (v) {
        for (var i = 0; i < numValues; i++) {
            output[i] = blendValue[i](v);
        }
        return output;
    };
};
var mixObject = function (origin, target) {
    var output = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, origin), target);
    var blendValue = {};
    for (var key in output) {
        if (origin[key] !== undefined && target[key] !== undefined) {
            blendValue[key] = getMixer(origin[key], target[key]);
        }
    }
    return function (v) {
        for (var key in blendValue) {
            output[key] = blendValue[key](v);
        }
        return output;
    };
};
function analyse(value) {
    var parsed = style_value_types__WEBPACK_IMPORTED_MODULE_1__["complex"].parse(value);
    var numValues = parsed.length;
    var numNumbers = 0;
    var numRGB = 0;
    var numHSL = 0;
    for (var i = 0; i < numValues; i++) {
        if (numNumbers || typeof parsed[i] === "number") {
            numNumbers++;
        }
        else {
            if (parsed[i].hue !== undefined) {
                numHSL++;
            }
            else {
                numRGB++;
            }
        }
    }
    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };
}
var mixComplex = function (origin, target) {
    var template = style_value_types__WEBPACK_IMPORTED_MODULE_1__["complex"].createTransformer(target);
    var originStats = analyse(origin);
    var targetStats = analyse(target);
    Object(hey_listen__WEBPACK_IMPORTED_MODULE_6__["invariant"])(originStats.numHSL === targetStats.numHSL &&
        originStats.numRGB === targetStats.numRGB &&
        originStats.numNumbers >= targetStats.numNumbers, "Complex values '" + origin + "' and '" + target + "' too different to mix. Ensure all colors are of the same type.");
    return Object(_pipe_js__WEBPACK_IMPORTED_MODULE_5__["pipe"])(mixArray(originStats.parsed, targetStats.parsed), template);
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/mix.js":
/*!*********************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/mix.js ***!
  \*********************************************************************************************/
/*! exports provided: mix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mix", function() { return mix; });
var mix = function (from, to, progress) {
    return -progress * from + progress * to + from;
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/pipe.js":
/*!**********************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/pipe.js ***!
  \**********************************************************************************************/
/*! exports provided: pipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pipe", function() { return pipe; });
var combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };
var pipe = function () {
    var transformers = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        transformers[_i] = arguments[_i];
    }
    return transformers.reduce(combineFunctions);
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/point-from-vector.js":
/*!***********************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/point-from-vector.js ***!
  \***********************************************************************************************************/
/*! exports provided: pointFromVector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointFromVector", function() { return pointFromVector; });
/* harmony import */ var _degrees_to_radians_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./degrees-to-radians.js */ "../../node_modules/popmotion/dist/es/utils/degrees-to-radians.js");


var pointFromVector = function (origin, angle, distance) {
    angle = Object(_degrees_to_radians_js__WEBPACK_IMPORTED_MODULE_0__["degreesToRadians"])(angle);
    return {
        x: distance * Math.cos(angle) + origin.x,
        y: distance * Math.sin(angle) + origin.y
    };
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/progress.js":
/*!**************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/progress.js ***!
  \**************************************************************************************************/
/*! exports provided: progress */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "progress", function() { return progress; });
var progress = function (from, to, value) {
    var toFromDifference = to - from;
    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/radians-to-degrees.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/radians-to-degrees.js ***!
  \************************************************************************************************************/
/*! exports provided: radiansToDegrees */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radiansToDegrees", function() { return radiansToDegrees; });
var radiansToDegrees = function (radians) { return (radians * 180) / Math.PI; };




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/smooth-frame.js":
/*!******************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/smooth-frame.js ***!
  \******************************************************************************************************/
/*! exports provided: smoothFrame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "smoothFrame", function() { return smoothFrame; });
/* harmony import */ var _to_decimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./to-decimal.js */ "../../node_modules/popmotion/dist/es/utils/to-decimal.js");


var smoothFrame = function (prevValue, nextValue, duration, smoothing) {
    if (smoothing === void 0) { smoothing = 0; }
    return Object(_to_decimal_js__WEBPACK_IMPORTED_MODULE_0__["toDecimal"])(prevValue +
        (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/smooth.js":
/*!************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/smooth.js ***!
  \************************************************************************************************/
/*! exports provided: smooth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "smooth", function() { return smooth; });
/* harmony import */ var _smooth_frame_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./smooth-frame.js */ "../../node_modules/popmotion/dist/es/utils/smooth-frame.js");
/* harmony import */ var framesync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! framesync */ "../../node_modules/framesync/dist/es/index.js");



var smooth = function (strength) {
    if (strength === void 0) { strength = 50; }
    var previousValue = 0;
    var lastUpdated = 0;
    return function (v) {
        var currentFramestamp = Object(framesync__WEBPACK_IMPORTED_MODULE_1__["getFrameData"])().timestamp;
        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;
        var newValue = timeDelta
            ? Object(_smooth_frame_js__WEBPACK_IMPORTED_MODULE_0__["smoothFrame"])(previousValue, v, timeDelta, strength)
            : previousValue;
        lastUpdated = currentFramestamp;
        previousValue = newValue;
        return newValue;
    };
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/snap.js":
/*!**********************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/snap.js ***!
  \**********************************************************************************************/
/*! exports provided: snap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "snap", function() { return snap; });
var snap = function (points) {
    if (typeof points === 'number') {
        return function (v) { return Math.round(v / points) * points; };
    }
    else {
        var i_1 = 0;
        var numPoints_1 = points.length;
        return function (v) {
            var lastDistance = Math.abs(points[0] - v);
            for (i_1 = 1; i_1 < numPoints_1; i_1++) {
                var point = points[i_1];
                var distance = Math.abs(point - v);
                if (distance === 0)
                    return point;
                if (distance > lastDistance)
                    return points[i_1 - 1];
                if (i_1 === numPoints_1 - 1)
                    return point;
                lastDistance = distance;
            }
        };
    }
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/to-decimal.js":
/*!****************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/to-decimal.js ***!
  \****************************************************************************************************/
/*! exports provided: toDecimal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toDecimal", function() { return toDecimal; });
var toDecimal = function (num, precision) {
    if (precision === void 0) { precision = 2; }
    precision = Math.pow(10, precision);
    return Math.round(num * precision) / precision;
};




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/velocity-per-frame.js":
/*!************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/velocity-per-frame.js ***!
  \************************************************************************************************************/
/*! exports provided: velocityPerFrame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "velocityPerFrame", function() { return velocityPerFrame; });
function velocityPerFrame(xps, frameDuration) {
    return xps / (1000 / frameDuration);
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/velocity-per-second.js":
/*!*************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/velocity-per-second.js ***!
  \*************************************************************************************************************/
/*! exports provided: velocityPerSecond */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "velocityPerSecond", function() { return velocityPerSecond; });
function velocityPerSecond(velocity, frameDuration) {
    return frameDuration ? velocity * (1000 / frameDuration) : 0;
}




/***/ }),

/***/ "../../node_modules/popmotion/dist/es/utils/wrap.js":
/*!**********************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/popmotion/dist/es/utils/wrap.js ***!
  \**********************************************************************************************/
/*! exports provided: wrap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrap", function() { return wrap; });
var wrap = function (min, max, v) {
    var rangeSize = max - min;
    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;
};




/***/ }),

/***/ "../../node_modules/process/browser.js":
/*!*********************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/process/browser.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "../../node_modules/react-is/cjs/react-is.development.js":
/*!***************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/react-is/cjs/react-is.development.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),

/***/ "../../node_modules/react-is/index.js":
/*!********************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/react-is/index.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "../../node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js":
/*!*****************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js ***!
  \*****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }
    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ (function () {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function () {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {*} key
         * @returns {*}
         */
        class_1.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];
            return entry && entry[1];
        };
        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        class_1.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);
            if (~index) {
                this.__entries__[index][1] = value;
            }
            else {
                this.__entries__.push([key, value]);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);
            if (~index) {
                entries.splice(index, 1);
            }
        };
        /**
         * @param {*} key
         * @returns {void}
         */
        class_1.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };
        /**
         * @returns {void}
         */
        class_1.prototype.clear = function () {
            this.__entries__.splice(0);
        };
        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        class_1.prototype.forEach = function (callback, ctx) {
            if (ctx === void 0) { ctx = null; }
            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof global !== 'undefined' && global.Math === Math) {
        return global;
    }
    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }
    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }
    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }
    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;
/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
function throttle (callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        }
        else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;
// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];
// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';
/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserverController.
     *
     * @private
     */
    function ResizeObserverController() {
        /**
         * Indicates whether DOM listeners have been added.
         *
         * @private {boolean}
         */
        this.connected_ = false;
        /**
         * Tells that controller has subscribed for Mutation Events.
         *
         * @private {boolean}
         */
        this.mutationEventsAdded_ = false;
        /**
         * Keeps reference to the instance of MutationObserver.
         *
         * @private {MutationObserver}
         */
        this.mutationsObserver_ = null;
        /**
         * A list of connected observers.
         *
         * @private {Array<ResizeObserverSPI>}
         */
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
    }
    /**
     * Adds observer to observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be added.
     * @returns {void}
     */
    ResizeObserverController.prototype.addObserver = function (observer) {
        if (!~this.observers_.indexOf(observer)) {
            this.observers_.push(observer);
        }
        // Add listeners if they haven't been added yet.
        if (!this.connected_) {
            this.connect_();
        }
    };
    /**
     * Removes observer from observers list.
     *
     * @param {ResizeObserverSPI} observer - Observer to be removed.
     * @returns {void}
     */
    ResizeObserverController.prototype.removeObserver = function (observer) {
        var observers = this.observers_;
        var index = observers.indexOf(observer);
        // Remove observer if it's present in registry.
        if (~index) {
            observers.splice(index, 1);
        }
        // Remove listeners if controller has no connected observers.
        if (!observers.length && this.connected_) {
            this.disconnect_();
        }
    };
    /**
     * Invokes the update of observers. It will continue running updates insofar
     * it detects changes.
     *
     * @returns {void}
     */
    ResizeObserverController.prototype.refresh = function () {
        var changesDetected = this.updateObservers_();
        // Continue running updates if changes have been detected as there might
        // be future ones caused by CSS transitions.
        if (changesDetected) {
            this.refresh();
        }
    };
    /**
     * Updates every observer from observers list and notifies them of queued
     * entries.
     *
     * @private
     * @returns {boolean} Returns "true" if any observer has detected changes in
     *      dimensions of it's elements.
     */
    ResizeObserverController.prototype.updateObservers_ = function () {
        // Collect observers that have active observations.
        var activeObservers = this.observers_.filter(function (observer) {
            return observer.gatherActive(), observer.hasActive();
        });
        // Deliver notifications in a separate cycle in order to avoid any
        // collisions between observers, e.g. when multiple instances of
        // ResizeObserver are tracking the same element and the callback of one
        // of them changes content dimensions of the observed target. Sometimes
        // this may result in notifications being blocked for the rest of observers.
        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });
        return activeObservers.length > 0;
    };
    /**
     * Initializes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.connect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already added.
        if (!isBrowser || this.connected_) {
            return;
        }
        // Subscription to the "Transitionend" event is used as a workaround for
        // delayed transitions. This way it's possible to capture at least the
        // final state of an element.
        document.addEventListener('transitionend', this.onTransitionEnd_);
        window.addEventListener('resize', this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        }
        else {
            document.addEventListener('DOMSubtreeModified', this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    /**
     * Removes DOM listeners.
     *
     * @private
     * @returns {void}
     */
    ResizeObserverController.prototype.disconnect_ = function () {
        // Do nothing if running in a non-browser environment or if listeners
        // have been already removed.
        if (!isBrowser || !this.connected_) {
            return;
        }
        document.removeEventListener('transitionend', this.onTransitionEnd_);
        window.removeEventListener('resize', this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener('DOMSubtreeModified', this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    /**
     * "Transitionend" event handler.
     *
     * @private
     * @param {TransitionEvent} event
     * @returns {void}
     */
    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;
        // Detect whether transition may affect dimensions of an element.
        var isReflowProperty = transitionKeys.some(function (key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    /**
     * Returns instance of the ResizeObserverController.
     *
     * @returns {ResizeObserverController}
     */
    ResizeObserverController.getInstance = function () {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController();
        }
        return this.instance_;
    };
    /**
     * Holds reference to the controller's instance.
     *
     * @private {ResizeObserverController}
     */
    ResizeObserverController.instance_ = null;
    return ResizeObserverController;
}());

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);
/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}
/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];
        return size + toFloat(value);
    }, 0);
}
/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};
    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
        var position = positions_1[_i];
        var value = styles['padding-' + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width), height = toFloat(styles.height);
    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }
    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }
    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&
        typeof target.getBBox === 'function'); };
})();
/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObservation.
     *
     * @param {Element} target - Element to be observed.
     */
    function ResizeObservation(target) {
        /**
         * Broadcasted width of content rectangle.
         *
         * @type {number}
         */
        this.broadcastWidth = 0;
        /**
         * Broadcasted height of content rectangle.
         *
         * @type {number}
         */
        this.broadcastHeight = 0;
        /**
         * Reference to the last observed content rectangle.
         *
         * @private {DOMRectInit}
         */
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    /**
     * Updates content rectangle and tells whether it's width or height properties
     * have changed since the last broadcast.
     *
     * @returns {boolean}
     */
    ResizeObservation.prototype.isActive = function () {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return (rect.width !== this.broadcastWidth ||
            rect.height !== this.broadcastHeight);
    };
    /**
     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
     * from the corresponding properties of the last observed content rectangle.
     *
     * @returns {DOMRectInit} Last observed content rectangle.
     */
    ResizeObservation.prototype.broadcastRect = function () {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation;
}());

var ResizeObserverEntry = /** @class */ (function () {
    /**
     * Creates an instance of ResizeObserverEntry.
     *
     * @param {Element} target - Element that is being observed.
     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
     */
    function ResizeObserverEntry(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        // According to the specification following properties are not writable
        // and are also not enumerable in the native implementation.
        //
        // Property accessors are not being used as they'd require to define a
        // private WeakMap storage which may cause memory leaks in browsers that
        // don't support this type of collections.
        defineConfigurable(this, { target: target, contentRect: contentRect });
    }
    return ResizeObserverEntry;
}());

var ResizeObserverSPI = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback function that is invoked
     *      when one of the observed elements changes it's content dimensions.
     * @param {ResizeObserverController} controller - Controller instance which
     *      is responsible for the updates of observer.
     * @param {ResizeObserver} callbackCtx - Reference to the public
     *      ResizeObserver instance which will be passed to callback function.
     */
    function ResizeObserverSPI(callback, controller, callbackCtx) {
        /**
         * Collection of resize observations that have detected changes in dimensions
         * of elements.
         *
         * @private {Array<ResizeObservation>}
         */
        this.activeObservations_ = [];
        /**
         * Registry of the ResizeObservation instances.
         *
         * @private {Map<Element, ResizeObservation>}
         */
        this.observations_ = new MapShim();
        if (typeof callback !== 'function') {
            throw new TypeError('The callback provided as parameter 1 is not a function.');
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    /**
     * Starts observing provided element.
     *
     * @param {Element} target - Element to be observed.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.observe = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is already being observed.
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        // Force the update of observations.
        this.controller_.refresh();
    };
    /**
     * Stops observing provided element.
     *
     * @param {Element} target - Element to stop observing.
     * @returns {void}
     */
    ResizeObserverSPI.prototype.unobserve = function (target) {
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        // Do nothing if current environment doesn't have the Element interface.
        if (typeof Element === 'undefined' || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        // Do nothing if element is not being observed.
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    /**
     * Stops observing all elements.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.disconnect = function () {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    /**
     * Collects observation instances the associated element of which has changed
     * it's content rectangle.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.gatherActive = function () {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function (observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    /**
     * Invokes initial callback function with a list of ResizeObserverEntry
     * instances collected from active resize observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.broadcastActive = function () {
        // Do nothing if observer doesn't have active observations.
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        // Create ResizeObserverEntry instance for every active observation.
        var entries = this.activeObservations_.map(function (observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    /**
     * Clears the collection of active observations.
     *
     * @returns {void}
     */
    ResizeObserverSPI.prototype.clearActive = function () {
        this.activeObservations_.splice(0);
    };
    /**
     * Tells whether observer has active observations.
     *
     * @returns {boolean}
     */
    ResizeObserverSPI.prototype.hasActive = function () {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI;
}());

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();
/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = /** @class */ (function () {
    /**
     * Creates a new instance of ResizeObserver.
     *
     * @param {ResizeObserverCallback} callback - Callback that is invoked when
     *      dimensions of the observed elements change.
     */
    function ResizeObserver(callback) {
        if (!(this instanceof ResizeObserver)) {
            throw new TypeError('Cannot call a class as a function.');
        }
        if (!arguments.length) {
            throw new TypeError('1 argument required, but only 0 present.');
        }
        var controller = ResizeObserverController.getInstance();
        var observer = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer);
    }
    return ResizeObserver;
}());
// Expose public methods of ResizeObserver.
[
    'observe',
    'unobserve',
    'disconnect'
].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
})();

/* harmony default export */ __webpack_exports__["default"] = (index);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../src/library/node_modules/webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../node_modules/style-value-types/dist/style-value-types.es.js":
/*!*************************************************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/style-value-types/dist/style-value-types.es.js ***!
  \*************************************************************************************************************/
/*! exports provided: alpha, color, complex, degrees, filter, hex, hsla, number, percent, progressPercentage, px, rgbUnit, rgba, scale, vh, vw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "alpha", function() { return alpha; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "color", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "complex", function() { return complex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degrees", function() { return degrees; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return filter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hex", function() { return hex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hsla", function() { return hsla; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "number", function() { return number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "percent", function() { return percent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "progressPercentage", function() { return progressPercentage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "px", function() { return px; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbUnit", function() { return rgbUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgba", function() { return rgba; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vh", function() { return vh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vw", function() { return vw; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "../../node_modules/tslib/tslib.es6.js");


var clamp = function (min, max) { return function (v) {
    return Math.max(Math.min(v, max), min);
}; };
var sanitize = function (v) { return (v % 1 ? Number(v.toFixed(5)) : v); };
var floatRegex = /(-)?([\d]*\.?[\d])+/g;
var colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi;
var singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;
function isString(v) {
    return typeof v === 'string';
}

var number = {
    test: function (v) { return typeof v === 'number'; },
    parse: parseFloat,
    transform: function (v) { return v; },
};
var alpha = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, number), { transform: clamp(0, 1) });
var scale = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, number), { default: 1 });

var createUnitType = function (unit) { return ({
    test: function (v) {
        return isString(v) && v.endsWith(unit) && v.split(' ').length === 1;
    },
    parse: parseFloat,
    transform: function (v) { return "" + v + unit; },
}); };
var degrees = createUnitType('deg');
var percent = createUnitType('%');
var px = createUnitType('px');
var vh = createUnitType('vh');
var vw = createUnitType('vw');
var progressPercentage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, percent), { parse: function (v) { return percent.parse(v) / 100; }, transform: function (v) { return percent.transform(v * 100); } });

var isColorString = function (type, testProp) { return function (v) {
    return ((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||
        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));
}; };
var splitColor = function (aName, bName, cName) { return function (v) {
    var _a;
    if (!isString(v))
        return v;
    var _b = v.match(floatRegex), a = _b[0], b = _b[1], c = _b[2], alpha = _b[3];
    return _a = {},
        _a[aName] = parseFloat(a),
        _a[bName] = parseFloat(b),
        _a[cName] = parseFloat(c),
        _a.alpha = alpha !== undefined ? parseFloat(alpha) : 1,
        _a;
}; };

var hsla = {
    test: isColorString('hsl', 'hue'),
    parse: splitColor('hue', 'saturation', 'lightness'),
    transform: function (_a) {
        var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;
        return ('hsla(' +
            Math.round(hue) +
            ', ' +
            percent.transform(sanitize(saturation)) +
            ', ' +
            percent.transform(sanitize(lightness)) +
            ', ' +
            sanitize(alpha.transform(alpha$1)) +
            ')');
    },
};

var clampRgbUnit = clamp(0, 255);
var rgbUnit = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, number), { transform: function (v) { return Math.round(clampRgbUnit(v)); } });
var rgba = {
    test: isColorString('rgb', 'red'),
    parse: splitColor('red', 'green', 'blue'),
    transform: function (_a) {
        var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$1 = _b === void 0 ? 1 : _b;
        return 'rgba(' +
            rgbUnit.transform(red) +
            ', ' +
            rgbUnit.transform(green) +
            ', ' +
            rgbUnit.transform(blue) +
            ', ' +
            sanitize(alpha.transform(alpha$1)) +
            ')';
    },
};

function parseHex(v) {
    var r = '';
    var g = '';
    var b = '';
    var a = '';
    if (v.length > 5) {
        r = v.substr(1, 2);
        g = v.substr(3, 2);
        b = v.substr(5, 2);
        a = v.substr(7, 2);
    }
    else {
        r = v.substr(1, 1);
        g = v.substr(2, 1);
        b = v.substr(3, 1);
        a = v.substr(4, 1);
        r += r;
        g += g;
        b += b;
        a += a;
    }
    return {
        red: parseInt(r, 16),
        green: parseInt(g, 16),
        blue: parseInt(b, 16),
        alpha: a ? parseInt(a, 16) / 255 : 1,
    };
}
var hex = {
    test: isColorString('#'),
    parse: parseHex,
    transform: rgba.transform,
};

var color = {
    test: function (v) { return rgba.test(v) || hex.test(v) || hsla.test(v); },
    parse: function (v) {
        if (rgba.test(v)) {
            return rgba.parse(v);
        }
        else if (hsla.test(v)) {
            return hsla.parse(v);
        }
        else {
            return hex.parse(v);
        }
    },
    transform: function (v) {
        return isString(v)
            ? v
            : v.hasOwnProperty('red')
                ? rgba.transform(v)
                : hsla.transform(v);
    },
};

var colorToken = '${c}';
var numberToken = '${n}';
function test(v) {
    var _a, _b, _c, _d;
    return (isNaN(v) &&
        isString(v) &&
        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);
}
function analyse(v) {
    var values = [];
    var numColors = 0;
    var colors = v.match(colorRegex);
    if (colors) {
        numColors = colors.length;
        v = v.replace(colorRegex, colorToken);
        values.push.apply(values, colors.map(color.parse));
    }
    var numbers = v.match(floatRegex);
    if (numbers) {
        v = v.replace(floatRegex, numberToken);
        values.push.apply(values, numbers.map(number.parse));
    }
    return { values: values, numColors: numColors, tokenised: v };
}
function parse(v) {
    return analyse(v).values;
}
function createTransformer(v) {
    var _a = analyse(v), values = _a.values, numColors = _a.numColors, tokenised = _a.tokenised;
    var numValues = values.length;
    return function (v) {
        var output = tokenised;
        for (var i = 0; i < numValues; i++) {
            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));
        }
        return output;
    };
}
var convertNumbersToZero = function (v) {
    return typeof v === 'number' ? 0 : v;
};
function getAnimatableNone(v) {
    var parsed = parse(v);
    var transformer = createTransformer(v);
    return transformer(parsed.map(convertNumbersToZero));
}
var complex = { test: test, parse: parse, createTransformer: createTransformer, getAnimatableNone: getAnimatableNone };

var maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);
function applyDefaultFilter(v) {
    var _a = v.slice(0, -1).split('('), name = _a[0], value = _a[1];
    if (name === 'drop-shadow')
        return v;
    var number = (value.match(floatRegex) || [])[0];
    if (!number)
        return v;
    var unit = value.replace(number, '');
    var defaultValue = maxDefaults.has(name) ? 1 : 0;
    if (number !== value)
        defaultValue *= 100;
    return name + '(' + defaultValue + unit + ')';
}
var functionRegex = /([a-z-]*)\(.*?\)/g;
var filter = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, complex), { getAnimatableNone: function (v) {
        var functions = v.match(functionRegex);
        return functions ? functions.map(applyDefaultFilter).join(' ') : v;
    } });




/***/ }),

/***/ "../../node_modules/tslib/tslib.es6.js":
/*!*********************************************************************************!*\
  !*** /home/adam/github.com/framer/FramerStudio/node_modules/tslib/tslib.es6.js ***!
  \*********************************************************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "../app/assets/src/assetReference.ts":
/*!*******************************************!*\
  !*** ../app/assets/src/assetReference.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAssetReference = exports.createAssetReference = exports.isAssetReference = void 0;
const isAssetSize_1 = __webpack_require__(/*! ./isAssetSize */ "../app/assets/src/isAssetSize.ts");
const mediatype = "framer/asset-reference,";
function isAssetReference(value) {
    return value.startsWith(`data:${mediatype}`);
}
exports.isAssetReference = isAssetReference;
const originalFilenameKey = "originalFilename";
const packageIdentifierKey = "packageIdentifier";
const preferredSizeKey = "preferredSize";
function createAssetReference(identifier, packageIdentifier = null, originalFilename = null, preferredSize = null) {
    if (identifier === "") {
        return "";
    }
    const reference = new URL(`data:${mediatype}${identifier}`);
    if (originalFilename) {
        reference.searchParams.set(originalFilenameKey, originalFilename);
    }
    if (packageIdentifier) {
        reference.searchParams.set(packageIdentifierKey, packageIdentifier);
    }
    if (preferredSize) {
        reference.searchParams.set(preferredSizeKey, preferredSize);
    }
    return reference.href;
}
exports.createAssetReference = createAssetReference;
function parseAssetReference(reference) {
    if (!isAssetReference(reference)) {
        return;
    }
    try {
        const url = new URL(reference);
        const identifier = url.pathname.substring(mediatype.length);
        const originalFilename = url.searchParams.get(originalFilenameKey);
        const packageIdentifier = url.searchParams.get(packageIdentifierKey);
        const preferredSize = url.searchParams.get(preferredSizeKey);
        return {
            identifier,
            originalFilename,
            packageIdentifier,
            preferredSize: isAssetSize_1.isAssetSize(preferredSize) ? preferredSize : null,
        };
    }
    catch (_a) {
        return;
    }
}
exports.parseAssetReference = parseAssetReference;


/***/ }),

/***/ "../app/assets/src/isAssetSize.ts":
/*!****************************************!*\
  !*** ../app/assets/src/isAssetSize.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isAssetSize = void 0;
const utils_1 = __webpack_require__(/*! ./utils */ "../app/assets/src/utils.ts");
const assetSizes = {
    auto: true,
    small: true,
    medium: true,
    large: true,
    full: true,
};
function isAssetSize(value) {
    return utils_1.isString(value) && assetSizes[value] === true;
}
exports.isAssetSize = isAssetSize;


/***/ }),

/***/ "../app/assets/src/utils.ts":
/*!**********************************!*\
  !*** ../app/assets/src/utils.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isNumber = exports.isString = void 0;
function isString(value) {
    return typeof value === "string";
}
exports.isString = isString;
function isNumber(value) {
    return typeof value === "number" && Number.isFinite(value);
}
exports.isNumber = isNumber;


/***/ }),

/***/ "../shared/src/ResolvablePromise.ts":
/*!******************************************!*\
  !*** ../shared/src/ResolvablePromise.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.newResolvablePromise = void 0;
function newResolvablePromise() {
    let resolvePromise, rejectPromise;
    const promise = new Promise((resolve, reject) => {
        resolvePromise = resolve;
        rejectPromise = reject;
    });
    promise.resolve = resolvePromise;
    promise.reject = rejectPromise;
    return promise;
}
exports.newResolvablePromise = newResolvablePromise;


/***/ }),

/***/ "../shared/src/ServiceMap.ts":
/*!***********************************!*\
  !*** ../shared/src/ServiceMap.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getServiceMap = void 0;
let cachedServiceMap;
function getServiceMap() {
    if (cachedServiceMap)
        return cachedServiceMap;
    cachedServiceMap = extractServiceMap();
    return cachedServiceMap;
}
exports.getServiceMap = getServiceMap;
function extractServiceMap() {
    var _a, _b, _c, _d;
    const location = window.location;
    let services = (_b = (_a = window) === null || _a === void 0 ? void 0 : _a.bootstrap) === null || _b === void 0 ? void 0 : _b.services;
    if (services) {
        return services;
    }
    let topOrigin;
    try {
        const topWindow = window.top;
        topOrigin = topWindow.location.origin;
        services = (_d = (_c = window.top) === null || _c === void 0 ? void 0 : _c.bootstrap) === null || _d === void 0 ? void 0 : _d.services;
        if (services) {
            return services;
        }
    }
    catch (e) {
    }
    if (topOrigin && topOrigin !== location.origin) {
        throw Error(`Unexpectedly embedded by ${topOrigin} (expected ${location.origin})`);
    }
    if (location.origin.endsWith("framer.com") || location.origin.endsWith("framer.dev")) {
        throw Error("ServiceMap data was not provided in document");
    }
    try {
        const servicesJSON = new URLSearchParams(location.search).get("services") ||
            new URLSearchParams(location.hash.substring(1)).get("services");
        if (servicesJSON) {
            services = JSON.parse(servicesJSON);
        }
    }
    catch (e) {
    }
    if (services && typeof services === "object" && services.api) {
        return services;
    }
    throw Error("ServiceMap requested but not available");
}


/***/ }),

/***/ "../shared/src/assert.ts":
/*!*******************************!*\
  !*** ../shared/src/assert.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.assertNever = exports.assert = void 0;
function assert(condition, ...msg) {
    if (condition)
        return;
    const e = Error("Assertion Error" + (msg.length > 0 ? ": " + msg.join(" ") : ""));
    if (e.stack) {
        try {
            const lines = e.stack.split("\n");
            if (lines[1].includes("assert")) {
                lines.splice(1, 1);
                e.stack = lines.join("\n");
            }
            else if (lines[0].includes("assert")) {
                lines.splice(0, 1);
                e.stack = lines.join("\n");
            }
        }
        catch (_a) {
        }
    }
    throw e;
}
exports.assert = assert;
function assertNever(x, error) {
    throw error || new Error(x ? `Unexpected value: ${x}` : "Application entered invalid state");
}
exports.assertNever = assertNever;


/***/ }),

/***/ "../shared/src/clampNumber.ts":
/*!************************************!*\
  !*** ../shared/src/clampNumber.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.clampNumber = void 0;
function clampNumber(value, min, max) {
    if (value < min)
        return min;
    if (value > max)
        return max;
    return value;
}
exports.clampNumber = clampNumber;


/***/ }),

/***/ "../shared/src/deprecation.ts":
/*!************************************!*\
  !*** ../shared/src/deprecation.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.deprecationWarning = void 0;
const warnOnce_1 = __webpack_require__(/*! ./warnOnce */ "../shared/src/warnOnce.ts");
function deprecationWarning(removedItem, removalVersion, replacement) {
    const replacementText = replacement ? `, use ${replacement} instead` : "";
    const warningText = `Deprecation warning: ${removedItem} will be removed in version ${removalVersion}${replacementText}.`;
    warnOnce_1.warnOnce(warningText);
}
exports.deprecationWarning = deprecationWarning;


/***/ }),

/***/ "../shared/src/errors.ts":
/*!*******************************!*\
  !*** ../shared/src/errors.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.unhandledError = exports.reportError = exports.setErrorReporter = void 0;
const assert_1 = __webpack_require__(/*! ./assert */ "../shared/src/assert.ts");
let errorReporter;
function setErrorReporter(reporter) {
    errorReporter = reporter;
}
exports.setErrorReporter = setErrorReporter;
function reportError({ error: maybeError, tags, extras, caller, }) {
    assert_1.assert(errorReporter, "Set up an error callback with setErrorReporter, or configure Sentry with initializeEnvironment");
    const error = reportableError(maybeError, caller);
    errorReporter({ error, tags: Object.assign(Object.assign({}, error.tags), tags), extras: Object.assign(Object.assign({}, error.extras), extras) });
    return error;
}
exports.reportError = reportError;
function unhandledError(error) {
    error = reportableError(error, unhandledError);
    setTimeout(() => {
        throw error;
    }, 0);
}
exports.unhandledError = unhandledError;
function reportableError(error, caller) {
    if (error instanceof Error) {
        return error;
    }
    return new UnhandledError(error, caller);
}
class UnhandledError extends Error {
    constructor(error, caller) {
        const message = error ? JSON.stringify(error) : "No error message provided";
        super(message);
        this.message = message;
        if (caller && Error.captureStackTrace) {
            Error.captureStackTrace(this, caller);
        }
        else {
            try {
                throw new Error();
            }
            catch (e) {
                this.stack = e.stack;
            }
        }
    }
}


/***/ }),

/***/ "../shared/src/index.ts":
/*!******************************!*\
  !*** ../shared/src/index.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.warnOnce = exports.getServiceMap = exports.newResolvablePromise = exports.withExportSpecifier = exports.parseModuleIdentifier = exports.localModuleIdForStableName = exports.localModuleIdentifierForStableName = exports.localModuleIdentifier = exports.isModuleIdentifier = exports.isModuleExportIdentifier = exports.isLocalModuleIdentifier = exports.isExternalModuleIdentifier = exports.externalModuleIdentifier = exports.errorIdentifierFromModuleIdentifier = exports.asLocalId = exports.asGlobalId = exports.setLogLevel = exports.LogLevel = exports.Logger = exports.getLogReplayBuffer = exports.getLogger = exports.Lazy = exports.unhandledError = exports.setErrorReporter = exports.deprecationWarning = exports.clampNumber = exports.assertNever = exports.assert = void 0;
var assert_1 = __webpack_require__(/*! ./assert */ "../shared/src/assert.ts");
Object.defineProperty(exports, "assert", { enumerable: true, get: function () { return assert_1.assert; } });
Object.defineProperty(exports, "assertNever", { enumerable: true, get: function () { return assert_1.assertNever; } });
var clampNumber_1 = __webpack_require__(/*! ./clampNumber */ "../shared/src/clampNumber.ts");
Object.defineProperty(exports, "clampNumber", { enumerable: true, get: function () { return clampNumber_1.clampNumber; } });
var deprecation_1 = __webpack_require__(/*! ./deprecation */ "../shared/src/deprecation.ts");
Object.defineProperty(exports, "deprecationWarning", { enumerable: true, get: function () { return deprecation_1.deprecationWarning; } });
var errors_1 = __webpack_require__(/*! ./errors */ "../shared/src/errors.ts");
Object.defineProperty(exports, "setErrorReporter", { enumerable: true, get: function () { return errors_1.setErrorReporter; } });
Object.defineProperty(exports, "unhandledError", { enumerable: true, get: function () { return errors_1.unhandledError; } });
var lazy_1 = __webpack_require__(/*! ./lazy */ "../shared/src/lazy.ts");
Object.defineProperty(exports, "Lazy", { enumerable: true, get: function () { return lazy_1.Lazy; } });
var logger_1 = __webpack_require__(/*! ./logger */ "../shared/src/logger.ts");
Object.defineProperty(exports, "getLogger", { enumerable: true, get: function () { return logger_1.getLogger; } });
Object.defineProperty(exports, "getLogReplayBuffer", { enumerable: true, get: function () { return logger_1.getLogReplayBuffer; } });
Object.defineProperty(exports, "Logger", { enumerable: true, get: function () { return logger_1.Logger; } });
Object.defineProperty(exports, "LogLevel", { enumerable: true, get: function () { return logger_1.LogLevel; } });
Object.defineProperty(exports, "setLogLevel", { enumerable: true, get: function () { return logger_1.setLogLevel; } });
var moduleIdentifiers_1 = __webpack_require__(/*! ./moduleIdentifiers */ "../shared/src/moduleIdentifiers.ts");
Object.defineProperty(exports, "asGlobalId", { enumerable: true, get: function () { return moduleIdentifiers_1.asGlobalId; } });
Object.defineProperty(exports, "asLocalId", { enumerable: true, get: function () { return moduleIdentifiers_1.asLocalId; } });
Object.defineProperty(exports, "errorIdentifierFromModuleIdentifier", { enumerable: true, get: function () { return moduleIdentifiers_1.errorIdentifierFromModuleIdentifier; } });
Object.defineProperty(exports, "externalModuleIdentifier", { enumerable: true, get: function () { return moduleIdentifiers_1.externalModuleIdentifier; } });
Object.defineProperty(exports, "isExternalModuleIdentifier", { enumerable: true, get: function () { return moduleIdentifiers_1.isExternalModuleIdentifier; } });
Object.defineProperty(exports, "isLocalModuleIdentifier", { enumerable: true, get: function () { return moduleIdentifiers_1.isLocalModuleIdentifier; } });
Object.defineProperty(exports, "isModuleExportIdentifier", { enumerable: true, get: function () { return moduleIdentifiers_1.isModuleExportIdentifier; } });
Object.defineProperty(exports, "isModuleIdentifier", { enumerable: true, get: function () { return moduleIdentifiers_1.isModuleIdentifier; } });
Object.defineProperty(exports, "localModuleIdentifier", { enumerable: true, get: function () { return moduleIdentifiers_1.localModuleIdentifier; } });
Object.defineProperty(exports, "localModuleIdentifierForStableName", { enumerable: true, get: function () { return moduleIdentifiers_1.localModuleIdentifierForStableName; } });
Object.defineProperty(exports, "localModuleIdForStableName", { enumerable: true, get: function () { return moduleIdentifiers_1.localModuleIdForStableName; } });
Object.defineProperty(exports, "parseModuleIdentifier", { enumerable: true, get: function () { return moduleIdentifiers_1.parseModuleIdentifier; } });
Object.defineProperty(exports, "withExportSpecifier", { enumerable: true, get: function () { return moduleIdentifiers_1.withExportSpecifier; } });
var ResolvablePromise_1 = __webpack_require__(/*! ./ResolvablePromise */ "../shared/src/ResolvablePromise.ts");
Object.defineProperty(exports, "newResolvablePromise", { enumerable: true, get: function () { return ResolvablePromise_1.newResolvablePromise; } });
var ServiceMap_1 = __webpack_require__(/*! ./ServiceMap */ "../shared/src/ServiceMap.ts");
Object.defineProperty(exports, "getServiceMap", { enumerable: true, get: function () { return ServiceMap_1.getServiceMap; } });
var warnOnce_1 = __webpack_require__(/*! ./warnOnce */ "../shared/src/warnOnce.ts");
Object.defineProperty(exports, "warnOnce", { enumerable: true, get: function () { return warnOnce_1.warnOnce; } });


/***/ }),

/***/ "../shared/src/lazy.ts":
/*!*****************************!*\
  !*** ../shared/src/lazy.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Lazy = void 0;
function Lazy(factory) {
    const result = {};
    for (const key in factory) {
        let value;
        Object.defineProperty(result, key, {
            get() {
                if (value === undefined) {
                    value = factory[key]();
                }
                return value;
            },
        });
    }
    return result;
}
exports.Lazy = Lazy;


/***/ }),

/***/ "../shared/src/logger.ts":
/*!*******************************!*\
  !*** ../shared/src/logger.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = exports.setLogLevel = exports.getLogger = exports.getLogReplayBuffer = exports.LogLevel = void 0;
const errors_1 = __webpack_require__(/*! ./errors */ "../shared/src/errors.ts");
function jsonSafeCopy(obj, depth = 0, seen = new Set()) {
    var _a;
    if (obj === null || typeof obj !== "object")
        return obj;
    if (seen.has(obj))
        return "[Circular]";
    if (depth > 2)
        return "...";
    seen.add(obj);
    try {
        if (typeof obj.toJSON === "function") {
            return jsonSafeCopy(obj.toJSON(), depth + 1, seen);
        }
        else if (Array.isArray(obj)) {
            return obj.map(v => jsonSafeCopy(v, depth + 1, seen));
        }
        else if (Object.getPrototypeOf(obj) !== Object.prototype) {
            return `[Object: ${obj.__class || ((_a = obj.constructor) === null || _a === void 0 ? void 0 : _a.name)}]`;
        }
        else {
            const result = {};
            for (const [key, v] of Object.entries(obj)) {
                result[key] = jsonSafeCopy(v, depth + 1, seen);
            }
            return result;
        }
    }
    catch (e) {
        return `[Throws: ${e.message}]`;
    }
    finally {
        seen.delete(obj);
    }
}
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["Trace"] = 0] = "Trace";
    LogLevel[LogLevel["Debug"] = 1] = "Debug";
    LogLevel[LogLevel["Info"] = 2] = "Info";
    LogLevel[LogLevel["Warn"] = 3] = "Warn";
    LogLevel[LogLevel["Error"] = 4] = "Error";
    LogLevel[LogLevel["NotLogging"] = 5] = "NotLogging";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
const levelNames = ["trace", "debug", "info", "warn", "error"];
const postfixNames = [":trace", ":debug", ":info", ":warn", ":error"];
function applyLogLevelSpec(spec, all) {
    for (const s of spec.split(/[ ,]/)) {
        let match = s.trim();
        if (match.length === 0)
            continue;
        let level = LogLevel.Debug;
        let inverted = false;
        if (match.startsWith("-")) {
            match = match.slice(1);
            level = LogLevel.Warn;
            inverted = true;
        }
        for (let i = 0; i <= LogLevel.Error; i++) {
            const postfix = postfixNames[i];
            if (match.endsWith(postfix)) {
                level = i;
                if (inverted) {
                    level += 1;
                }
                match = match.slice(0, match.length - postfix.length);
                if (match.length === 0) {
                    match = "*";
                }
                break;
            }
        }
        const regex = new RegExp("^" + match.replace(/[*]/g, ".*") + "$");
        for (const logger of all) {
            if (logger.id.match(regex)) {
                logger.level = level;
            }
        }
    }
}
class LogEntry {
    constructor(logger, level, parts) {
        this.logger = logger;
        this.level = level;
        this.parts = parts;
        this.time = Date.now();
    }
    toMessage() {
        if (this.stringPrefix)
            return this.parts;
        const r = [
            new Date(this.time).toISOString().substr(-14, 14),
            levelNames[this.level] + ": [" + this.logger.id + "]",
        ];
        let i = 0;
        for (; i < this.parts.length; i++) {
            const part = this.parts[i];
            if (typeof part === "string") {
                r.push(part);
                continue;
            }
            break;
        }
        this.stringPrefix = r.join(" ");
        this.parts.splice(0, i, this.stringPrefix);
        return this.parts;
    }
    toString() {
        return this.toMessage()
            .map(part => {
            if (typeof part === "string")
                return part;
            const json = JSON.stringify(jsonSafeCopy(part));
            if ((json === null || json === void 0 ? void 0 : json.length) > 253) {
                return json.slice(0, 250) + "...";
            }
            return json;
        })
            .join(" ");
    }
}
let logLevelSpec = "app:info";
const isNode = typeof process !== "undefined" && !!process.kill;
const isCI = isNode && !!process.env.CI;
if (isCI) {
    logLevelSpec = "-:warn";
}
else if (isNode) {
    logLevelSpec = "";
}
try {
    if (typeof window !== "undefined" && window.localStorage) {
        logLevelSpec = window.localStorage.logLevel || logLevelSpec;
    }
}
catch (_a) {
}
try {
    if (typeof process !== "undefined") {
        logLevelSpec = process.env.DEBUG || logLevelSpec;
    }
}
catch (_b) {
}
try {
    if (typeof window !== "undefined") {
        Object.assign(window, { setLogLevel });
    }
}
catch (_c) {
}
const loggers = {};
const replayBuffer = [];
function createLogEntry(logger, level, parts) {
    var _a;
    const entry = new LogEntry(logger, level, parts);
    replayBuffer.push(entry);
    const oldest = Date.now() - 1000 * 60 * 60;
    while (replayBuffer.length > 1000 || ((_a = replayBuffer[0]) === null || _a === void 0 ? void 0 : _a.time) < oldest) {
        replayBuffer.shift();
    }
    return entry;
}
function getLogReplayBuffer() {
    return replayBuffer;
}
exports.getLogReplayBuffer = getLogReplayBuffer;
function getLogger(id) {
    const existing = loggers[id];
    if (existing)
        return existing;
    const logger = new Logger(id);
    loggers[id] = logger;
    applyLogLevelSpec(logLevelSpec, [logger]);
    return logger;
}
exports.getLogger = getLogger;
function setLogLevel(spec, replay = true) {
    try {
        if (typeof window !== "undefined" && window.localStorage) {
            window.localStorage.logLevel = spec;
        }
    }
    catch (_a) {
    }
    const previousSpec = logLevelSpec;
    logLevelSpec = spec;
    const all = Object.values(loggers);
    for (const logger of all) {
        logger.level = LogLevel.Warn;
    }
    applyLogLevelSpec(spec, all);
    if (replay && replayBuffer.length > 0) {
        console === null || console === void 0 ? void 0 : console.log("--- LOG REPLAY ---");
        for (const entry of replayBuffer) {
            if (entry.logger.level > entry.level)
                continue;
            if (entry.level >= LogLevel.Warn) {
                console === null || console === void 0 ? void 0 : console.warn(...entry.toMessage());
            }
            else {
                console === null || console === void 0 ? void 0 : console.log(...entry.toMessage());
            }
        }
        console === null || console === void 0 ? void 0 : console.log("--- END OF LOG REPLAY ---");
    }
    return previousSpec;
}
exports.setLogLevel = setLogLevel;
class Logger {
    constructor(id) {
        this.id = id;
        this.level = LogLevel.Warn;
        this.didLog = {};
        this.trace = (...parts) => {
            if (this.level > LogLevel.Trace)
                return;
            const entry = new LogEntry(this, LogLevel.Trace, parts);
            console === null || console === void 0 ? void 0 : console.log(...entry.toMessage());
        };
        this.debug = (...parts) => {
            const entry = createLogEntry(this, LogLevel.Debug, parts);
            if (this.level > LogLevel.Debug)
                return;
            console === null || console === void 0 ? void 0 : console.log(...entry.toMessage());
        };
        this.info = (...parts) => {
            const entry = createLogEntry(this, LogLevel.Info, parts);
            if (this.level > LogLevel.Info)
                return;
            console === null || console === void 0 ? void 0 : console.info(...entry.toMessage());
        };
        this.warn = (...parts) => {
            const entry = createLogEntry(this, LogLevel.Warn, parts);
            if (this.level > LogLevel.Warn)
                return;
            console === null || console === void 0 ? void 0 : console.warn(...entry.toMessage());
        };
        this.warnOncePerMinute = (firstPart, ...parts) => {
            if (this.didLog[firstPart] > Date.now())
                return;
            this.didLog[firstPart] = Date.now() + 1000 * 60;
            parts.unshift(firstPart);
            const entry = createLogEntry(this, LogLevel.Warn, parts);
            if (this.level > LogLevel.Warn)
                return;
            console === null || console === void 0 ? void 0 : console.warn(...entry.toMessage());
        };
        this.error = (...parts) => {
            const entry = createLogEntry(this, LogLevel.Error, parts);
            if (this.level > LogLevel.Error)
                return;
            console === null || console === void 0 ? void 0 : console.error(...entry.toMessage());
        };
        this.errorOncePerMinute = (firstPart, ...parts) => {
            if (this.didLog[firstPart] > Date.now())
                return;
            this.didLog[firstPart] = Date.now() + 1000 * 60;
            parts.unshift(firstPart);
            const entry = createLogEntry(this, LogLevel.Error, parts);
            if (this.level > LogLevel.Error)
                return;
            console === null || console === void 0 ? void 0 : console.error(...entry.toMessage());
        };
        this.reportError = (maybeError, extras) => {
            const logs = getLogReplayBuffer()
                .slice(-100)
                .map(entry => entry.toString().slice(0, 1000))
                .join("\n");
            const reportedError = errors_1.reportError({
                caller: this.reportError,
                error: maybeError,
                tags: {
                    handler: "logger",
                    where: this.id,
                },
                extras: Object.assign(Object.assign({}, extras), { logs }),
            });
            extras ? this.error(reportedError, extras) : this.error(reportedError);
        };
    }
    extend(name) {
        const id = this.id + ":" + name;
        return getLogger(id);
    }
    getBufferedMessages() {
        return replayBuffer.filter(entry => entry.logger === this);
    }
    setLevel(level) {
        const previous = this.level;
        this.level = level;
        return previous;
    }
    isLoggingTraceMessages() {
        return this.level >= LogLevel.Trace;
    }
}
exports.Logger = Logger;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/process/browser.js */ "../../node_modules/process/browser.js")))

/***/ }),

/***/ "../shared/src/moduleIdentifiers.ts":
/*!******************************************!*\
  !*** ../shared/src/moduleIdentifiers.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.asLocalId = exports.asGlobalId = exports.withExportSpecifier = exports.parseModuleIdentifier = exports.localModuleIdentifierForStableName = exports.localModuleIdForStableName = exports.localModuleIdentifier = exports.externalModuleIdentifier = exports.isModuleIdentifier = exports.isModuleExportIdentifier = exports.isLocalModuleIdentifier = exports.isExternalModuleIdentifier = exports.errorIdentifierFromModuleIdentifier = void 0;
const assert_1 = __webpack_require__(/*! ./assert */ "../shared/src/assert.ts");
const ServiceMap_1 = __webpack_require__(/*! ./ServiceMap */ "../shared/src/ServiceMap.ts");
const LOCAL_MODULE_ENTITY_IDENTIFIER_REGEX = /^local-module:([a-zA-Z0-9]+\/[^:]+)(?::(.+))?$/;
const EXTERNAL_MODULE_ENTITY_IDENTIFIER_REGEX = /^module:([a-zA-Z0-9]+)\/([a-zA-Z0-9]+)\/([^:]+)(?::(.+))?$/;
function errorIdentifierFromModuleIdentifier(identifier) {
    if (identifier.kind === "externalModuleExport") {
        return `module:${identifier.moduleId}/${identifier.saveId}/${identifier.file}`;
    }
    else if (identifier.kind === "localModuleExport") {
        return `local-module:${identifier.localId}`;
    }
    else {
        return identifier.value;
    }
}
exports.errorIdentifierFromModuleIdentifier = errorIdentifierFromModuleIdentifier;
function isExternalModuleIdentifier(value) {
    if (typeof value === "string")
        value = parseModuleIdentifier(value);
    return (value === null || value === void 0 ? void 0 : value.kind) === "externalModule" || (value === null || value === void 0 ? void 0 : value.kind) === "externalModuleExport";
}
exports.isExternalModuleIdentifier = isExternalModuleIdentifier;
function isLocalModuleIdentifier(value) {
    if (typeof value === "string")
        value = parseModuleIdentifier(value);
    return (value === null || value === void 0 ? void 0 : value.kind) === "localModule" || (value === null || value === void 0 ? void 0 : value.kind) === "localModuleExport";
}
exports.isLocalModuleIdentifier = isLocalModuleIdentifier;
function isModuleExportIdentifier(value) {
    if (typeof value === "string")
        value = parseModuleIdentifier(value);
    return (value === null || value === void 0 ? void 0 : value.kind) === "externalModuleExport" || (value === null || value === void 0 ? void 0 : value.kind) === "localModuleExport";
}
exports.isModuleExportIdentifier = isModuleExportIdentifier;
function isModuleIdentifier(value) {
    if (typeof value === "string")
        value = parseModuleIdentifier(value);
    if (!value)
        return false;
    return (value.kind === "externalModule" ||
        value.kind === "externalModuleExport" ||
        value.kind === "localModule" ||
        value.kind === "localModuleExport");
}
exports.isModuleIdentifier = isModuleIdentifier;
function externalModuleIdentifier(moduleId, saveId, file, exportSpecifier) {
    const path = `${moduleId}/${saveId}/${file}`;
    const importSpecifier = `${ServiceMap_1.getServiceMap().modulesCDN}/${path}`;
    if (exportSpecifier) {
        return {
            kind: "externalModuleExport",
            value: `module:${path}:${exportSpecifier}`,
            moduleId,
            saveId,
            file,
            importSpecifier,
            exportSpecifier,
        };
    }
    else {
        return {
            kind: "externalModule",
            value: `module:${path}`,
            moduleId,
            saveId,
            file,
            importSpecifier,
        };
    }
}
exports.externalModuleIdentifier = externalModuleIdentifier;
function localModuleIdentifier(localId, exportSpecifier) {
    const [type] = localId.split("/");
    if (exportSpecifier) {
        return {
            kind: "localModuleExport",
            value: `local-module:${localId}:${exportSpecifier}`,
            localId,
            type,
            exportSpecifier,
        };
    }
    else {
        return {
            kind: "localModule",
            value: `local-module:${localId}`,
            localId,
            type,
        };
    }
}
exports.localModuleIdentifier = localModuleIdentifier;
function localModuleIdForStableName({ name, type }) {
    return asLocalId(`${type}/${name}`);
}
exports.localModuleIdForStableName = localModuleIdForStableName;
function localModuleIdentifierForStableName({ type, name, exportSpecifier, }) {
    const localId = localModuleIdForStableName({ name, type });
    return localModuleIdentifier(localId, exportSpecifier);
}
exports.localModuleIdentifierForStableName = localModuleIdentifierForStableName;
function parseModuleIdentifier(value) {
    if (!value)
        return undefined;
    const matchLocal = value.match(LOCAL_MODULE_ENTITY_IDENTIFIER_REGEX);
    if (matchLocal) {
        const localId = asLocalId(matchLocal[1]);
        const exportSpecifier = matchLocal[2];
        return localModuleIdentifier(localId, exportSpecifier);
    }
    const externalMatch = value.match(EXTERNAL_MODULE_ENTITY_IDENTIFIER_REGEX);
    if (externalMatch) {
        const [, moduleId, saveId, path, exportSpecifier] = externalMatch;
        return externalModuleIdentifier(moduleId, saveId, path, exportSpecifier);
    }
    return undefined;
}
exports.parseModuleIdentifier = parseModuleIdentifier;
function withExportSpecifier(identifier, exportSpecifier) {
    if (identifier.kind === "externalModule" || identifier.kind === "externalModuleExport") {
        return externalModuleIdentifier(identifier.moduleId, identifier.saveId, identifier.file, exportSpecifier);
    }
    else if (identifier.kind === "localModule" || identifier.kind === "localModuleExport") {
        return localModuleIdentifier(identifier.localId, exportSpecifier);
    }
    else {
        assert_1.assertNever(identifier);
    }
}
exports.withExportSpecifier = withExportSpecifier;
function asGlobalId(id) {
    return id;
}
exports.asGlobalId = asGlobalId;
function asLocalId(id) {
    return id;
}
exports.asLocalId = asLocalId;


/***/ }),

/***/ "../shared/src/warnOnce.ts":
/*!*********************************!*\
  !*** ../shared/src/warnOnce.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.warnOnce = void 0;
const warningMessages = new Set();
function warnOnce(keyMessage, ...rest) {
    if (warningMessages.has(keyMessage))
        return;
    warningMessages.add(keyMessage);
    console.warn(keyMessage, ...rest);
}
exports.warnOnce = warnOnce;


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./src/animation/Animatable/Animatable.ts":
/*!************************************************!*\
  !*** ./src/animation/Animatable/Animatable.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isAnimatable = exports.Animatable = void 0;
const Observers_1 = __webpack_require__(/*! ./Observers */ "./src/animation/Animatable/Observers.ts");
const shared_1 = __webpack_require__(/*! @framerjs/shared */ "../shared/src/index.ts");
function Animatable(value) {
    shared_1.deprecationWarning("Animatable()", "2.0.0", "the new animation API (https://www.framer.com/api/animation/)");
    return isAnimatable(value) ? value : new AnimatableValue(value);
}
exports.Animatable = Animatable;
(function (Animatable) {
    function transaction(update) {
        const transactionId = Math.random();
        const updatedValues = new Set();
        const updater = (animatable, value) => {
            animatable.set(value, transactionId);
            updatedValues.add(animatable);
        };
        update(updater, transactionId);
        const finishObservers = [];
        updatedValues.forEach(value => {
            finishObservers.push(...value.finishTransaction(transactionId));
        });
        finishObservers.forEach(finish => {
            finish(transactionId);
        });
    }
    Animatable.transaction = transaction;
    function getNumber(value, defaultValue = 0) {
        return Animatable.get(value, defaultValue);
    }
    Animatable.getNumber = getNumber;
    function get(value, defaultValue) {
        if (value === undefined || value === null) {
            return defaultValue;
        }
        if (isAnimatable(value)) {
            return value.get();
        }
        return value;
    }
    Animatable.get = get;
    function objectToValues(object) {
        if (!object) {
            return object;
        }
        const result = {};
        for (const key in object) {
            const value = object[key];
            if (isAnimatable(value)) {
                result[key] = value.get();
            }
            else {
                result[key] = value;
            }
        }
        return result;
    }
    Animatable.objectToValues = objectToValues;
})(Animatable = exports.Animatable || (exports.Animatable = {}));
const onUpdateKey = "onUpdate";
const finishTransactionKey = "finishTransaction";
function isAnimatable(value) {
    return (value !== null &&
        typeof value === "object" &&
        onUpdateKey in value &&
        value[onUpdateKey] instanceof Function &&
        finishTransactionKey in value &&
        value[finishTransactionKey] instanceof Function);
}
exports.isAnimatable = isAnimatable;
function animatableInterpolation(value, currentInterpolation) {
    return {
        interpolate(from, to) {
            const fromValue = from.get();
            const toValue = to.get();
            const result = Animatable(fromValue);
            return (progress) => {
                const v = currentInterpolation.interpolate(fromValue, toValue)(progress);
                result.set(v);
                return result;
            };
        },
        difference(from, to) {
            const v = from.get();
            return currentInterpolation.difference(v, to.get());
        },
    };
}
class AnimatableValue {
    constructor(value) {
        this.value = value;
        this.observers = new Observers_1.Observers();
    }
    static interpolationFor(value, currentInterpolation) {
        if (isAnimatable(value)) {
            return animatableInterpolation(value, currentInterpolation);
        }
    }
    get() {
        return this.value;
    }
    set(value, transaction) {
        const oldValue = this.value;
        if (isAnimatable(value)) {
            value = value.get();
        }
        this.value = value;
        const change = {
            value,
            oldValue,
        };
        this.observers.notify(change, transaction);
    }
    finishTransaction(transaction) {
        return this.observers.finishTransaction(transaction);
    }
    onUpdate(handler) {
        return this.observers.add(handler);
    }
}


/***/ }),

/***/ "./src/animation/Animatable/Observers.ts":
/*!***********************************************!*\
  !*** ./src/animation/Animatable/Observers.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Observers = void 0;
class Observers {
    constructor() {
        this.observers = new Set();
        this.transactions = {};
    }
    add(observer) {
        this.observers.add(observer);
        let isCalled = false;
        return () => {
            if (isCalled) {
                return;
            }
            isCalled = true;
            this.remove(observer);
        };
    }
    remove(observer) {
        this.observers.delete(observer);
    }
    notify(change, transaction) {
        if (transaction) {
            const accumulatedChange = this.transactions[transaction] || change;
            accumulatedChange.value = change.value;
            this.transactions[transaction] = accumulatedChange;
        }
        else {
            this.callObservers(change);
        }
    }
    finishTransaction(transaction) {
        const accumulatedChange = this.transactions[transaction];
        delete this.transactions[transaction];
        return this.callObservers(accumulatedChange, transaction);
    }
    callObservers(change, transaction) {
        const finishObservers = [];
        new Set(this.observers).forEach(observer => {
            if (typeof observer === "function") {
                observer(change, transaction);
            }
            else {
                observer.update(change, transaction);
                finishObservers.push(observer.finish);
            }
        });
        return finishObservers;
    }
}
exports.Observers = Observers;


/***/ }),

/***/ "./src/animation/Animatable/index.ts":
/*!*******************************************!*\
  !*** ./src/animation/Animatable/index.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateObserver = exports.isAnimatable = exports.Animatable = void 0;
var Animatable_1 = __webpack_require__(/*! ./Animatable */ "./src/animation/Animatable/Animatable.ts");
Object.defineProperty(exports, "Animatable", { enumerable: true, get: function () { return Animatable_1.Animatable; } });
Object.defineProperty(exports, "isAnimatable", { enumerable: true, get: function () { return Animatable_1.isAnimatable; } });
var Observers_1 = __webpack_require__(/*! ./Observers */ "./src/animation/Animatable/Observers.ts");
Object.defineProperty(exports, "UpdateObserver", { enumerable: true, get: function () { return Observers_1.UpdateObserver; } });


/***/ }),

/***/ "./src/animation/Animators/BezierAnimator.ts":
/*!***************************************************!*\
  !*** ./src/animation/Animators/BezierAnimator.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BezierAnimator = exports.BezierDefaults = exports.Bezier = void 0;
const Point_1 = __webpack_require__(/*! ../../render/types/Point */ "./src/render/types/Point.ts");
var Bezier;
(function (Bezier) {
    Bezier["Linear"] = "linear";
    Bezier["Ease"] = "ease";
    Bezier["EaseIn"] = "ease-in";
    Bezier["EaseOut"] = "ease-out";
    Bezier["EaseInOut"] = "ease-in-out";
})(Bezier = exports.Bezier || (exports.Bezier = {}));
exports.BezierDefaults = {
    curve: Bezier.Ease,
    duration: 1,
};
function controlPointsForCurve(curve) {
    switch (curve) {
        case Bezier.Linear:
            return [0, 0, 1, 1];
        case Bezier.Ease:
            return [0.25, 0.1, 0.25, 1];
        case Bezier.EaseIn:
            return [0.42, 0, 1, 1];
        case Bezier.EaseOut:
            return [0, 0, 0.58, 1];
        case Bezier.EaseInOut:
            return [0.42, 0, 0.58, 1];
    }
}
class BezierAnimator {
    constructor(options, interpolation) {
        this.interpolation = interpolation;
        this.progress = 0;
        this.next = (delta) => {
            const { duration } = this.options;
            this.progress += delta / duration;
            const value = this.unitBezier.solve(this.progress, this.solveEpsilon(duration));
            this.current = this.interpolator(value);
            return this.current;
        };
        this.options = Object.assign(Object.assign({}, exports.BezierDefaults), options);
        let controlPoints;
        if (typeof this.options.curve === "string") {
            controlPoints = controlPointsForCurve(this.options.curve);
        }
        else {
            controlPoints = this.options.curve;
        }
        const [p1x, p1y, p2x, p2y] = controlPoints;
        this.unitBezier = new UnitBezier(Point_1.Point(p1x, p1y), Point_1.Point(p2x, p2y));
    }
    setFrom(value) {
        this.current = value;
        this.updateInterpolator();
    }
    setTo(value) {
        this.destination = value;
        this.updateInterpolator();
    }
    isReady() {
        return this.interpolator !== undefined;
    }
    updateInterpolator() {
        if (this.current === undefined || this.destination === undefined) {
            return;
        }
        this.interpolator = this.interpolation.interpolate(this.current, this.destination);
    }
    isFinished() {
        return this.progress >= 1;
    }
    solveEpsilon(duration) {
        return 1.0 / (200.0 * duration);
    }
}
exports.BezierAnimator = BezierAnimator;
class UnitBezier {
    constructor(point1, point2) {
        this.c = Point_1.Point.multiply(point1, 3);
        this.b = Point_1.Point.subtract(Point_1.Point.multiply(Point_1.Point.subtract(point2, point1), 3), this.c);
        this.a = Point_1.Point.subtract(Point_1.Point.subtract(Point_1.Point(1, 1), this.c), this.b);
    }
    solve(x, epsilon) {
        return this.sampleY(this.solveForT(x, epsilon));
    }
    sampleX(t) {
        return ((this.a.x * t + this.b.x) * t + this.c.x) * t;
    }
    sampleY(t) {
        return ((this.a.y * t + this.b.y) * t + this.c.y) * t;
    }
    sampleDerivativeX(t) {
        return (3 * this.a.x * t + 2 * this.b.x) * t + this.c.x;
    }
    solveForT(x, epsilon) {
        let t0, t1, t2, x2, d2, i;
        t2 = x;
        for (i = 0; i < 8; ++i) {
            x2 = this.sampleX(t2) - x;
            if (Math.abs(x2) < epsilon)
                return t2;
            d2 = this.sampleDerivativeX(t2);
            if (Math.abs(d2) < epsilon)
                break;
            t2 = t2 - x2 / d2;
        }
        t0 = 0;
        t1 = 1;
        t2 = x;
        if (t2 < t0)
            return t0;
        if (t2 > t1)
            return t1;
        while (t0 < t1) {
            x2 = this.sampleX(t2);
            if (Math.abs(x2 - x) < epsilon)
                return t2;
            if (x > x2)
                t0 = t2;
            else
                t1 = t2;
            t2 = (t1 - t0) * 0.5 + t0;
        }
        return t2;
    }
}


/***/ }),

/***/ "./src/animation/Animators/FrictionAnimator.ts":
/*!*****************************************************!*\
  !*** ./src/animation/Animators/FrictionAnimator.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FrictionAnimator = void 0;
const Integrator_1 = __webpack_require__(/*! ./Integrator */ "./src/animation/Animators/Integrator.ts");
class FrictionAnimator {
    constructor(options) {
        this.options = {
            velocity: 0,
            friction: 2,
            tolerance: 1 / 10,
        };
        Object.assign(this.options, options);
        this.state = {
            x: 0,
            v: this.options.velocity,
        };
        this.integrator = new Integrator_1.Integrator(state => -(this.options.friction * state.v));
    }
    setFrom(value) {
        this.state.x = value;
    }
    setTo(value) { }
    setVelocity(velocity) {
        this.state.v = velocity;
    }
    getState() {
        return this.state;
    }
    isReady() {
        return true;
    }
    next(delta) {
        this.state = this.integrator.integrateState(this.state, delta);
        return this.state.x;
    }
    isFinished() {
        return Math.abs(this.state.v) < this.options.tolerance;
    }
}
exports.FrictionAnimator = FrictionAnimator;


/***/ }),

/***/ "./src/animation/Animators/InertialScrollAnimator.ts":
/*!***********************************************************!*\
  !*** ./src/animation/Animators/InertialScrollAnimator.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.InertialScrollAnimator = exports.Defaults = void 0;
const FrictionAnimator_1 = __webpack_require__(/*! ./FrictionAnimator */ "./src/animation/Animators/FrictionAnimator.ts");
const SpringAnimator_1 = __webpack_require__(/*! ./SpringAnimator */ "./src/animation/Animators/SpringAnimator.ts");
const interpolation_1 = __webpack_require__(/*! ../../interpolation */ "./src/interpolation/index.ts");
exports.Defaults = {
    velocity: 0,
    min: 0,
    max: 0,
    momentum: {
        friction: 2,
        tolerance: 10,
    },
    bounce: {
        tension: 500,
        friction: 10,
        tolerance: 1,
    },
};
class InertialScrollAnimator {
    constructor(options) {
        this.options = Object.assign(Object.assign({}, exports.Defaults), options);
        this.frictionAnimator = new FrictionAnimator_1.FrictionAnimator({
            friction: this.options.momentum.friction,
            tolerance: this.options.momentum.tolerance,
            velocity: this.options.velocity,
        });
        this.springAnimator = new SpringAnimator_1.SpringAnimator({
            tension: this.options.bounce.tension,
            friction: this.options.bounce.friction,
            tolerance: this.options.bounce.tolerance,
            velocity: this.options.velocity,
        }, interpolation_1.NumberInterpolation);
        this.useSpring = false;
    }
    isReady() {
        return true;
    }
    next(delta) {
        this.current = this.currentAnimator.next(delta);
        if (!this.useSpring) {
            this.tryTransitionToSpring();
        }
        return this.current;
    }
    get currentAnimator() {
        if (this.useSpring) {
            return this.springAnimator;
        }
        return this.frictionAnimator;
    }
    isFinished() {
        return this.currentAnimator.isFinished();
    }
    get state() {
        return this.currentAnimator.getState();
    }
    setFrom(value) {
        this.setState({ x: value, v: this.state.v });
    }
    setState(state) {
        this.frictionAnimator.setFrom(state.x);
        this.frictionAnimator.setVelocity(state.v);
        if (this.isValidState()) {
            return this.tryTransitionToSpring();
        }
        else {
            let bound = 0;
            if (this.state.x <= this.options.min) {
                bound = this.options.min;
            }
            if (this.state.x >= this.options.max) {
                bound = this.options.max;
            }
            return this.transitionToSpring(bound);
        }
    }
    setTo(destination) {
        this.frictionAnimator.setTo(destination);
        this.springAnimator.setTo(destination);
    }
    setLimits(min, max) {
        this.options.min = min;
        this.options.max = max;
    }
    tryTransitionToSpring() {
        const belowMinWithVelocity = this.state.x < this.options.min && this.state.v <= 0;
        const aboveMaxWithVelocity = this.state.x > this.options.max && this.state.v >= 0;
        if (belowMinWithVelocity || aboveMaxWithVelocity) {
            let bound;
            if (belowMinWithVelocity) {
                bound = this.options.min;
            }
            else {
                bound = this.options.max;
            }
            this.transitionToSpring(bound);
        }
        else {
            this.useSpring = false;
        }
    }
    transitionToSpring(bound) {
        this.springAnimator.setFrom(this.state.x);
        this.springAnimator.setVelocity(this.state.v);
        this.springAnimator.setTo(bound);
        this.useSpring = true;
    }
    isValidState() {
        const belowMinTravelingBack = this.state.x < this.options.min && this.state.v > 0;
        const aboveMaxTravelingBack = this.state.x > this.options.max && this.state.v < 0;
        if (belowMinTravelingBack || aboveMaxTravelingBack) {
            let bound;
            if (belowMinTravelingBack) {
                bound = this.options.min;
            }
            else {
                bound = this.options.max;
            }
            const friction = this.frictionAnimator.options.friction;
            const solution = 1 - (friction * (bound - this.state.x)) / this.state.v;
            return solution > 0;
        }
        return true;
    }
}
exports.InertialScrollAnimator = InertialScrollAnimator;


/***/ }),

/***/ "./src/animation/Animators/Integrator.ts":
/*!***********************************************!*\
  !*** ./src/animation/Animators/Integrator.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Integrator = void 0;
class Integrator {
    constructor(accelerationFunction) {
        this.accelerationForState = accelerationFunction;
    }
    integrateState(state, dt) {
        const a = this.evaluateState(state);
        const b = this.evaluateStateWithDerivative(state, dt * 0.5, a);
        const c = this.evaluateStateWithDerivative(state, dt * 0.5, b);
        const d = this.evaluateStateWithDerivative(state, dt, c);
        const dxdt = (1.0 / 6.0) * (a.dx + 2.0 * (b.dx + c.dx) + d.dx);
        const dvdt = (1.0 / 6.0) * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);
        state.x = state.x + dxdt * dt;
        state.v = state.v + dvdt * dt;
        return state;
    }
    evaluateState(initialState) {
        const dv = this.accelerationForState(initialState);
        return { dx: initialState.v, dv: dv };
    }
    evaluateStateWithDerivative(initialState, dt, derivative) {
        const state = {
            x: initialState.x + derivative.dx * dt,
            v: initialState.v + derivative.dv * dt,
        };
        const output = {
            dx: state.v,
            dv: this.accelerationForState(state),
        };
        return output;
    }
}
exports.Integrator = Integrator;


/***/ }),

/***/ "./src/animation/Animators/PrecalculatedAnimator.ts":
/*!**********************************************************!*\
  !*** ./src/animation/Animators/PrecalculatedAnimator.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PrecalculatedAnimator = exports.Defaults = void 0;
exports.Defaults = {
    delta: 1 / 60,
    maxValues: 10000,
};
class PrecalculatedAnimator {
    constructor(options) {
        this.currentTime = 0;
        this.options = Object.assign(Object.assign({}, exports.Defaults), options);
        this.animator = options.animator;
    }
    preCalculate() {
        if (!this.animator.isReady()) {
            return;
        }
        const { delta } = this.options;
        this.values = [];
        while (!this.animator.isFinished() && this.values.length < this.options.maxValues) {
            let value = this.animator.next(this.options.delta);
            if (typeof value === "object" && value) {
                const object = value;
                const copy = Object.assign({}, object);
                value = copy;
            }
            this.values.push(value);
        }
        this.totalTime = this.values.length * delta;
    }
    indexForTime(time) {
        return Math.max(0, Math.min(this.values.length - 1, Math.round(this.values.length * (time / this.totalTime)) - 1));
    }
    setFrom(value) {
        this.animator.setFrom(value);
        this.preCalculate();
    }
    setTo(end) {
        this.animator.setTo(end);
        this.preCalculate();
    }
    isReady() {
        return this.values !== undefined && this.values.length > 0 && this.totalTime > 0;
    }
    next(delta) {
        this.currentTime += delta;
        const index = this.indexForTime(this.currentTime);
        return this.values[index];
    }
    isFinished() {
        return this.totalTime === 0 || this.currentTime >= this.totalTime;
    }
    get endValue() {
        this.preCalculate();
        const index = this.indexForTime(this.totalTime);
        return this.values.length > 0 ? this.values[index] : this.animator.next(0);
    }
}
exports.PrecalculatedAnimator = PrecalculatedAnimator;


/***/ }),

/***/ "./src/animation/Animators/SpringAnimator.ts":
/*!***************************************************!*\
  !*** ./src/animation/Animators/SpringAnimator.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SpringAnimator = exports.SpringDampingDurationDefaults = exports.SpringTensionFrictionDefaults = void 0;
const Integrator_1 = __webpack_require__(/*! ./Integrator */ "./src/animation/Animators/Integrator.ts");
const SpringCurveValueConverter_1 = __webpack_require__(/*! ./SpringCurveValueConverter */ "./src/animation/Animators/SpringCurveValueConverter.ts");
exports.SpringTensionFrictionDefaults = {
    tension: 500,
    friction: 10,
    tolerance: 1 / 10000,
    velocity: 0,
};
exports.SpringDampingDurationDefaults = {
    dampingRatio: 1,
    duration: 1,
    velocity: 0,
    mass: 1,
};
function isDampingDurationSpringOptions(options) {
    if (!options) {
        return false;
    }
    return (typeof options.dampingRatio === "number" ||
        typeof options.duration === "number" ||
        typeof options.mass === "number");
}
class SpringAnimator {
    constructor(options, interpolation) {
        this.interpolation = interpolation;
        let _opt;
        if (isDampingDurationSpringOptions(options)) {
            const toPass = Object.assign(Object.assign({}, exports.SpringDampingDurationDefaults), options);
            _opt = SpringCurveValueConverter_1.SpringCurveValueConverter.computeDerivedCurveOptions(toPass.dampingRatio, toPass.duration, toPass.velocity, toPass.mass);
        }
        else {
            _opt = options;
        }
        this.options = Object.assign(Object.assign({}, exports.SpringTensionFrictionDefaults), _opt);
        this.state = {
            x: 0,
            v: this.options.velocity,
        };
        this.integrator = new Integrator_1.Integrator(state => -this.options.tension * state.x - this.options.friction * state.v);
    }
    isReady() {
        return this.interpolator !== undefined && this.difference !== undefined;
    }
    next(delta) {
        this.state = this.integrator.integrateState(this.state, delta);
        const value = this.interpolator(this.progress());
        return value;
    }
    isFinished() {
        const positionNearZero = Math.abs(this.state.x) < this.options.tolerance;
        const velocityNearZero = Math.abs(this.state.v) < this.options.tolerance;
        return positionNearZero && velocityNearZero;
    }
    setFrom(value) {
        this.current = value;
        this.updateInterpolator();
    }
    setVelocity(velocity) {
        this.state.v = velocity;
    }
    progress() {
        return 1 - this.state.x / this.difference;
    }
    setTo(value) {
        this.destination = value;
        this.difference = this.interpolation.difference(this.destination, this.current);
        this.state.x = this.difference;
        this.updateInterpolator();
    }
    getState() {
        return this.state;
    }
    updateInterpolator() {
        if (this.current === undefined || this.destination === undefined) {
            return;
        }
        this.interpolator = this.interpolation.interpolate(this.current, this.destination);
    }
}
exports.SpringAnimator = SpringAnimator;


/***/ }),

/***/ "./src/animation/Animators/SpringCurveValueConverter.ts":
/*!**************************************************************!*\
  !*** ./src/animation/Animators/SpringCurveValueConverter.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SpringCurveValueConverter = void 0;
const epsilon = 0.001;
const minDuration = 0.01;
const maxDuration = 10.0;
const minDamping = Number.MIN_VALUE;
const maxDamping = 1;
function approximateRoot(func, derivative, initialGuess, times = 12) {
    let result = initialGuess;
    for (let i = 1, end = times, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {
        result = result - func(result) / derivative(result);
    }
    return result;
}
function angularFrequency(undampedFrequency, dampingRatio) {
    return undampedFrequency * Math.sqrt(1 - Math.pow(dampingRatio, 2));
}
var SpringCurveValueConverter;
(function (SpringCurveValueConverter) {
    function computeDampingRatio(tension, friction, mass = 1) {
        return friction / (2 * Math.sqrt(mass * tension));
    }
    SpringCurveValueConverter.computeDampingRatio = computeDampingRatio;
    function computeDuration(tension, friction, velocity = 0, mass = 1) {
        let duration;
        const dampingRatio = computeDampingRatio(tension, friction);
        const undampedFrequency = Math.sqrt(tension / mass);
        if (dampingRatio < 1) {
            const a = Math.sqrt(1 - Math.pow(dampingRatio, 2));
            const b = velocity / (a * undampedFrequency);
            const c = dampingRatio / a;
            const d = -((b - c) / epsilon);
            if (d <= 0) {
                return null;
            }
            duration = Math.log(d) / (dampingRatio * undampedFrequency);
        }
        else {
            return null;
        }
        return duration;
    }
    SpringCurveValueConverter.computeDuration = computeDuration;
    function computeDerivedCurveOptions(dampingRatio, duration, velocity = 0, mass = 1) {
        let derivative, envelope;
        dampingRatio = Math.max(Math.min(dampingRatio, maxDamping), minDamping);
        duration = Math.max(Math.min(duration, maxDuration), minDuration);
        if (dampingRatio < 1) {
            envelope = function (envelopeUndampedFrequency) {
                const exponentialDecay = envelopeUndampedFrequency * dampingRatio;
                const currentDisplacement = exponentialDecay * duration;
                const a = exponentialDecay - velocity;
                const b = angularFrequency(envelopeUndampedFrequency, dampingRatio);
                const c = Math.exp(-currentDisplacement);
                return epsilon - (a / b) * c;
            };
            derivative = function (derivativeUndampedFrequency) {
                const exponentialDecay = derivativeUndampedFrequency * dampingRatio;
                const currentDisplacement = exponentialDecay * duration;
                const d = currentDisplacement * velocity + velocity;
                const e = Math.pow(dampingRatio, 2) * Math.pow(derivativeUndampedFrequency, 2) * duration;
                const f = Math.exp(-currentDisplacement);
                const g = angularFrequency(Math.pow(derivativeUndampedFrequency, 2), dampingRatio);
                const factor = -envelope(derivativeUndampedFrequency) + epsilon > 0 ? -1 : 1;
                return (factor * ((d - e) * f)) / g;
            };
        }
        else {
            envelope = function (envelopeUndampedFrequency) {
                const a = Math.exp(-envelopeUndampedFrequency * duration);
                const b = (envelopeUndampedFrequency - velocity) * duration + 1;
                return -epsilon + a * b;
            };
            derivative = function (derivativeUndampedFrequency) {
                const a = Math.exp(-derivativeUndampedFrequency * duration);
                const b = (velocity - derivativeUndampedFrequency) * Math.pow(duration, 2);
                return a * b;
            };
        }
        const result = {
            tension: 100,
            friction: 10,
            velocity,
        };
        const initialGuess = 5 / duration;
        const undampedFrequency = approximateRoot(envelope, derivative, initialGuess);
        if (!isNaN(undampedFrequency)) {
            result.tension = Math.pow(undampedFrequency, 2) * mass;
            result.friction = dampingRatio * 2 * Math.sqrt(mass * result.tension);
        }
        return result;
    }
    SpringCurveValueConverter.computeDerivedCurveOptions = computeDerivedCurveOptions;
})(SpringCurveValueConverter = exports.SpringCurveValueConverter || (exports.SpringCurveValueConverter = {}));


/***/ }),

/***/ "./src/animation/Animators/index.ts":
/*!******************************************!*\
  !*** ./src/animation/Animators/index.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.InertialScroll = exports.Bezier = exports.BezierAnimator = exports.SpringAnimator = exports.Friction = void 0;
var FrictionAnimator_1 = __webpack_require__(/*! ./FrictionAnimator */ "./src/animation/Animators/FrictionAnimator.ts");
Object.defineProperty(exports, "Friction", { enumerable: true, get: function () { return FrictionAnimator_1.FrictionAnimator; } });
var SpringAnimator_1 = __webpack_require__(/*! ./SpringAnimator */ "./src/animation/Animators/SpringAnimator.ts");
Object.defineProperty(exports, "SpringAnimator", { enumerable: true, get: function () { return SpringAnimator_1.SpringAnimator; } });
var BezierAnimator_1 = __webpack_require__(/*! ./BezierAnimator */ "./src/animation/Animators/BezierAnimator.ts");
Object.defineProperty(exports, "BezierAnimator", { enumerable: true, get: function () { return BezierAnimator_1.BezierAnimator; } });
Object.defineProperty(exports, "Bezier", { enumerable: true, get: function () { return BezierAnimator_1.Bezier; } });
var InertialScrollAnimator_1 = __webpack_require__(/*! ./InertialScrollAnimator */ "./src/animation/Animators/InertialScrollAnimator.ts");
Object.defineProperty(exports, "InertialScroll", { enumerable: true, get: function () { return InertialScrollAnimator_1.InertialScrollAnimator; } });


/***/ }),

/***/ "./src/animation/Drivers/AnimationDriver.ts":
/*!**************************************************!*\
  !*** ./src/animation/Drivers/AnimationDriver.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AnimationDriver = void 0;
class AnimationDriver {
    constructor(animator, updateCallback, finishedCallback) {
        this.animator = animator;
        this.updateCallback = updateCallback;
        this.finishedCallback = finishedCallback;
        this.update = (frame, elapsed) => {
            if (this.animator.isFinished()) {
                this.finish();
            }
            else {
                const value = this.animator.next(elapsed);
                this.updateCallback(value);
            }
        };
        if (!this.animator.isReady()) {
            console.warn("AnimationDriver initialized with animator that isn't ready");
        }
    }
    finish() {
        if (this.finishedCallback) {
            this.finishedCallback(this.animator.isFinished());
        }
    }
    isFinished() {
        return this.animator.isFinished();
    }
}
exports.AnimationDriver = AnimationDriver;


/***/ }),

/***/ "./src/animation/Drivers/MainLoopDriver.ts":
/*!*************************************************!*\
  !*** ./src/animation/Drivers/MainLoopDriver.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MainLoopAnimationDriver = void 0;
const AnimationDriver_1 = __webpack_require__(/*! ./AnimationDriver */ "./src/animation/Drivers/AnimationDriver.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../../render/types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const Loop_1 = __webpack_require__(/*! ../../core/Loop */ "./src/core/Loop.ts");
class MainLoopAnimationDriver extends AnimationDriver_1.AnimationDriver {
    play() {
        if (RenderEnvironment_1.RenderEnvironment.target !== RenderEnvironment_1.RenderTarget.preview) {
            this.finishedCallback && this.finishedCallback(false);
            return;
        }
        Loop_1.MainLoop.on("update", this.update);
    }
    cancel() {
        Loop_1.MainLoop.off("update", this.update);
    }
    finish() {
        Loop_1.MainLoop.off("update", this.update);
        super.finish();
    }
}
exports.MainLoopAnimationDriver = MainLoopAnimationDriver;


/***/ }),

/***/ "./src/animation/FramerAnimation.ts":
/*!******************************************!*\
  !*** ./src/animation/FramerAnimation.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FramerAnimation = void 0;
const interpolation_1 = __webpack_require__(/*! ../interpolation */ "./src/interpolation/index.ts");
const Animatable_1 = __webpack_require__(/*! ./Animatable */ "./src/animation/Animatable/index.ts");
const MainLoopDriver_1 = __webpack_require__(/*! ./Drivers/MainLoopDriver */ "./src/animation/Drivers/MainLoopDriver.ts");
const PrecalculatedAnimator_1 = __webpack_require__(/*! ./Animators/PrecalculatedAnimator */ "./src/animation/Animators/PrecalculatedAnimator.ts");
const BezierAnimator_1 = __webpack_require__(/*! ./Animators/BezierAnimator */ "./src/animation/Animators/BezierAnimator.ts");
const types_1 = __webpack_require__(/*! ../render/types/Color/types */ "./src/render/types/Color/types.ts");
const isMotionValue_1 = __webpack_require__(/*! ../render/utils/isMotionValue */ "./src/render/utils/isMotionValue.ts");
const DefaultDeprecatedAnimationOptions = {
    precalculate: false,
    colorModel: types_1.ColorMixModelType.HUSL,
};
class FramerAnimation {
    constructor(target, from, to, animatorClass, options, driverClass = MainLoopDriver_1.MainLoopAnimationDriver) {
        this.playStateSource = "idle";
        this.readyPromise = Promise.resolve();
        this.resetFinishedPromise();
        const deprecatedAnimationOptions = Object.assign({}, DefaultDeprecatedAnimationOptions);
        const animatorOptions = {};
        if (options) {
            Object.assign(deprecatedAnimationOptions, options);
            Object.assign(animatorOptions, options);
        }
        let interpolation;
        if (deprecatedAnimationOptions.customInterpolation) {
            interpolation = deprecatedAnimationOptions.customInterpolation;
        }
        else {
            interpolation = new interpolation_1.ValueInterpolation(options);
        }
        let animator;
        if (!animatorClass) {
            animator = new BezierAnimator_1.BezierAnimator({}, interpolation);
        }
        else {
            animator = new animatorClass(animatorOptions, interpolation);
        }
        if (deprecatedAnimationOptions.precalculate) {
            animator = new PrecalculatedAnimator_1.PrecalculatedAnimator({ animator });
        }
        animator.setFrom(from);
        animator.setTo(to);
        const updateCallback = (value) => {
            FramerAnimation.driverCallbackHandler(target, value);
        };
        const finishedCallback = (isFinished) => {
            if (isFinished) {
                FramerAnimation.driverCallbackHandler(target, to);
                if (this.playStateSource === "running") {
                    this.playStateValue = "finished";
                }
            }
        };
        this.driver = new driverClass(animator, updateCallback, finishedCallback);
    }
    static driverCallbackHandler(target, value) {
        if (Animatable_1.isAnimatable(target) || isMotionValue_1.isMotionValue(target)) {
            target.set(value);
        }
        else {
            const targetObject = target;
            Animatable_1.Animatable.transaction(update => {
                for (const key in targetObject) {
                    const targetValue = targetObject[key];
                    if (Animatable_1.isAnimatable(targetValue)) {
                        update(targetValue, value[key]);
                    }
                    else {
                        targetObject[key] = value[key];
                    }
                }
            });
        }
    }
    get playStateValue() {
        return this.playStateSource;
    }
    set playStateValue(value) {
        if (value !== this.playStateSource) {
            const oldValue = value;
            this.playStateSource = value;
            switch (value) {
                case "idle":
                    if (oldValue === "running") {
                        this.oncancel && this.oncancel();
                    }
                    this.readyResolve && this.readyResolve();
                    this.resetReadyPromise();
                    break;
                case "finished":
                    if (oldValue === "idle") {
                        console.warn("Bad state transition");
                        break;
                    }
                    this.onfinish && this.onfinish();
                    this.finishedResolve && this.finishedResolve();
                    break;
                case "running":
                    this.resetReadyPromise();
                    break;
            }
            if (oldValue === "finished") {
                this.resetFinishedPromise();
            }
            if (value === "finished") {
                this.playStateValue = "idle";
            }
        }
    }
    get playState() {
        return this.playStateValue;
    }
    resetReadyPromise() {
        this.readyResolve = null;
        this.readyPromise = new Promise((resolve, reject) => {
            this.readyResolve = resolve;
        });
    }
    get ready() {
        return this.readyPromise;
    }
    resetFinishedPromise() {
        this.finishedResolve = null;
        this.finishedReject = null;
        this.finishedPromise = new Promise((resolve, reject) => {
            this.finishedResolve = resolve;
            this.finishedReject = reject;
        });
        this.finishedPromise.catch(reason => {
        });
    }
    get finished() {
        return this.finishedPromise;
    }
    play() {
        this.playStateValue = "running";
        this.driver.play();
    }
    cancel() {
        if (this.playStateValue !== "running") {
            return;
        }
        this.driver.cancel();
        if (this.playState !== "idle") {
            const reason = "AbortError";
            this.finishedReject && this.finishedReject(reason);
        }
        this.playStateValue = "idle";
    }
    finish() {
        if (this.playStateSource === "running") {
            this.playStateValue = "finished";
            this.driver.finish();
        }
    }
    isFinished() {
        return this.playStateValue === "finished";
    }
}
exports.FramerAnimation = FramerAnimation;


/***/ }),

/***/ "./src/animation/Motion/MotionSetup.tsx":
/*!**********************************************!*\
  !*** ./src/animation/Motion/MotionSetup.tsx ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MotionSetup = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const layoutTransition_1 = __webpack_require__(/*! ./layoutTransition */ "./src/animation/Motion/layoutTransition.tsx");
__webpack_require__(/*! ./autoValueHandlers */ "./src/animation/Motion/autoValueHandlers.ts");
function MotionSetup({ children }) {
    return React.createElement(framer_motion_1.MotionConfig, { features: [layoutTransition_1.layoutTransition] }, children);
}
exports.MotionSetup = MotionSetup;


/***/ }),

/***/ "./src/animation/Motion/addChildHack.ts":
/*!**********************************************!*\
  !*** ./src/animation/Motion/addChildHack.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
;
framer_motion_1.MotionValue.prototype.addChild = function ({ transformer = v => v }) {
    const child = new framer_motion_1.MotionValue(transformer(this.get()));
    this.onChange((v) => child.set(transformer(v)));
    return child;
};


/***/ }),

/***/ "./src/animation/Motion/autoValueHandlers.ts":
/*!***************************************************!*\
  !*** ./src/animation/Motion/autoValueHandlers.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const correctBorderScale = (axis) => ({
    process: (latest, { delta, treeScale }) => {
        if (typeof latest === "string")
            latest = parseFloat(latest);
        if (latest === 0)
            return "0px";
        let corrected = Math.round(latest / delta[axis].scale / treeScale[axis]);
        corrected = Math.max(corrected, 1);
        return corrected + "px";
    },
});
framer_motion_1.addScaleCorrection({
    borderTopWidth: correctBorderScale("y"),
    borderLeftWidth: correctBorderScale("x"),
    borderRightWidth: correctBorderScale("x"),
    borderBottomWidth: correctBorderScale("y"),
});


/***/ }),

/***/ "./src/animation/Motion/layoutTransition.tsx":
/*!***************************************************!*\
  !*** ./src/animation/Motion/layoutTransition.tsx ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.layoutSync = exports.layoutTransition = exports.LayoutAnimation = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const defaultLayoutTransition = {
    duration: 0.8,
    ease: [0.45, 0.05, 0.19, 1.0],
};
const defaultPositionTransition = {
    type: "spring",
    stiffness: 500,
    damping: 25,
    restDelta: 0.5,
    restSpeed: 10,
};
function getDefaultLayoutTransition(isPositionOnly) {
    return isPositionOnly ? defaultPositionTransition : defaultLayoutTransition;
}
function isResolver(transition) {
    return typeof transition === "function";
}
const axisLabels = {
    x: {
        id: "x",
        size: "width",
        min: "left",
        max: "right",
        origin: "originX",
    },
    y: {
        id: "y",
        size: "height",
        min: "top",
        max: "bottom",
        origin: "originY",
    },
};
function centerOf(min, max) {
    return (min + max) / 2;
}
function calcAxisDelta(prev, next, names) {
    const sizeDelta = prev[names.size] - next[names.size];
    let origin = 0.5;
    if (sizeDelta) {
        if (prev[names.min] === next[names.min]) {
            origin = 0;
        }
        else if (prev[names.max] === next[names.max]) {
            origin = 1;
        }
    }
    const delta = {
        [names.size]: sizeDelta,
        [names.origin]: origin,
        [names.id]: origin === 0.5
            ? centerOf(prev[names.min], prev[names.max]) - centerOf(next[names.min], next[names.max])
            : 0,
    };
    return delta;
}
function calcDelta(prev, next) {
    const delta = Object.assign(Object.assign({}, calcAxisDelta(prev, next, axisLabels.x)), calcAxisDelta(prev, next, axisLabels.y));
    return delta;
}
const offset = {
    getLayout: ({ offset }) => offset,
    measure: element => {
        const { offsetLeft, offsetTop, offsetWidth, offsetHeight } = element;
        return {
            left: offsetLeft,
            top: offsetTop,
            right: offsetLeft + offsetWidth,
            bottom: offsetTop + offsetHeight,
            width: offsetWidth,
            height: offsetHeight,
        };
    },
};
const boundingBox = {
    getLayout: ({ boundingBox }) => boundingBox,
    measure: element => {
        const { left, top, width, height, right, bottom } = element.getBoundingClientRect();
        return { left, top, width, height, right, bottom };
    },
};
function readPositionStyle(element) {
    return window.getComputedStyle(element).position;
}
function getLayoutType(prev, next, isPositionOnly) {
    return isPositionOnly && prev === next ? offset : boundingBox;
}
function isSizeKey(key) {
    return key === "width" || key === "height";
}
function getTransition({ layoutTransition, positionTransition }) {
    return layoutTransition || positionTransition;
}
class LayoutAnimation extends React.Component {
    getSnapshotBeforeUpdate() {
        const { visualElement, positionTransition } = this.props;
        const element = visualElement.getInstance();
        if (!isHTMLElement(element))
            return;
        const layoutTransition = getTransition(this.props);
        const isPositionOnly = !!positionTransition;
        const positionStyle = readPositionStyle(element);
        const prev = {
            offset: offset.measure(element),
            boundingBox: boundingBox.measure(element),
        };
        let transform;
        let next;
        let compare;
        exports.layoutSync.prepare(() => {
            transform = element.style.transform;
            element.style.transform = "";
        });
        exports.layoutSync.read(() => {
            next = {
                offset: offset.measure(element),
                boundingBox: boundingBox.measure(element),
            };
            const nextPosition = readPositionStyle(element);
            compare = getLayoutType(positionStyle, nextPosition, isPositionOnly);
        });
        exports.layoutSync.render(() => {
            const prevLayout = compare.getLayout(prev);
            const nextLayout = compare.getLayout(next);
            const delta = calcDelta(prevLayout, nextLayout);
            const hasAnyChanged = delta.x || delta.y || delta.width || delta.height;
            if (!hasAnyChanged) {
                transform && (element.style.transform = transform);
                return;
            }
            const latest = visualElement.getLatestValues();
            latest.originX = delta.originX;
            latest.originY = delta.originY;
            const target = {};
            const transition = {};
            const transitionDefinition = isResolver(layoutTransition) ? layoutTransition({ delta }) : layoutTransition;
            function makeTransition(layoutKey, transformKey, targetValue, visualOrigin) {
                const deltaKey = isSizeKey(layoutKey) ? layoutKey : transformKey;
                if (!delta[deltaKey])
                    return;
                const baseTransition = typeof transitionDefinition === "boolean"
                    ? Object.assign({}, getDefaultLayoutTransition(isPositionOnly)) : transitionDefinition;
                const value = visualElement.getValue(transformKey, targetValue);
                const velocity = value.getVelocity();
                transition[transformKey] = baseTransition[transformKey]
                    ? Object.assign({}, baseTransition[transformKey]) : Object.assign({}, baseTransition);
                if (transition[transformKey].velocity === undefined) {
                    transition[transformKey].velocity = velocity || 0;
                }
                target[transformKey] = targetValue;
                const offsetToApply = !isSizeKey(layoutKey) && compare === offset ? value.get() : 0;
                value.set(visualOrigin + offsetToApply);
            }
            makeTransition("left", "x", 0, delta.x);
            makeTransition("top", "y", 0, delta.y);
            if (!isPositionOnly) {
                makeTransition("width", "scaleX", 1, prev.boundingBox.width / next.boundingBox.width);
                makeTransition("height", "scaleY", 1, prev.boundingBox.height / next.boundingBox.height);
            }
            target.transition = transition;
            transitionDefinition && framer_motion_1.animateVisualElement(visualElement, target);
        });
        return null;
    }
    componentDidUpdate() {
        exports.layoutSync.flush();
    }
    render() {
        return null;
    }
}
exports.LayoutAnimation = LayoutAnimation;
exports.layoutTransition = {
    key: "layout",
    shouldRender: ({ positionTransition, layoutTransition }) => {
        return typeof window !== "undefined" && !!(positionTransition || layoutTransition);
    },
    getComponent: () => LayoutAnimation,
};
function isHTMLElement(element) {
    return element instanceof HTMLElement;
}
var StepName;
(function (StepName) {
    StepName["Prepare"] = "prepare";
    StepName["Read"] = "read";
    StepName["Render"] = "render";
})(StepName || (StepName = {}));
const stepOrder = [StepName.Prepare, StepName.Read, StepName.Render];
const jobs = stepOrder.reduce((acc, key) => {
    acc[key] = [];
    return acc;
}, {});
let jobsNeedProcessing = false;
function flushCallbackList(list) {
    const numJobs = list.length;
    for (let i = 0; i < numJobs; i++) {
        list[i]();
    }
    list.length = 0;
}
function flushAllJobs() {
    if (!jobsNeedProcessing)
        return;
    flushCallbackList(jobs.prepare);
    flushCallbackList(jobs.read);
    flushCallbackList(jobs.render);
    jobsNeedProcessing = false;
}
const createUseSyncEffect = (stepName) => (callback) => {
    if (!callback)
        return;
    jobsNeedProcessing = true;
    jobs[stepName].push(callback);
};
exports.layoutSync = {
    [StepName.Prepare]: createUseSyncEffect(StepName.Prepare),
    [StepName.Read]: createUseSyncEffect(StepName.Read),
    [StepName.Render]: createUseSyncEffect(StepName.Render),
    flush: flushAllJobs,
};


/***/ }),

/***/ "./src/animation/Motion/startAnimation.ts":
/*!************************************************!*\
  !*** ./src/animation/Motion/startAnimation.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.startAnimation = void 0;
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const shared_1 = __webpack_require__(/*! @framerjs/shared */ "../shared/src/index.ts");
function startAnimation(_key, value, target, transition = {}) {
    shared_1.warnOnce(`"startAnimation" is unsupported. Use "animate" instead: https://www.framer.com/api/motion/utilities/#animate`);
    return new Promise(resolve => {
        framer_motion_1.animate(value, target, Object.assign(Object.assign({}, transition), { onComplete: () => resolve() }));
    });
}
exports.startAnimation = startAnimation;


/***/ }),

/***/ "./src/animation/animate.ts":
/*!**********************************!*\
  !*** ./src/animation/animate.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.animate = exports.deprecatedAnimate = void 0;
const FramerAnimation_1 = __webpack_require__(/*! ./FramerAnimation */ "./src/animation/FramerAnimation.ts");
const Animators_1 = __webpack_require__(/*! ./Animators */ "./src/animation/Animators/index.ts");
const Animatable_1 = __webpack_require__(/*! ./Animatable */ "./src/animation/Animatable/index.ts");
const Animatable_2 = __webpack_require__(/*! ./Animatable */ "./src/animation/Animatable/index.ts");
const isMotionValue_1 = __webpack_require__(/*! ../render/utils/isMotionValue */ "./src/render/utils/isMotionValue.ts");
const shared_1 = __webpack_require__(/*! @framerjs/shared */ "../shared/src/index.ts");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
function deprecatedAnimate(from, to, animator, options) {
    shared_1.deprecationWarning("animate()", "2.0.0", "the new animation API (https://www.framer.com/api/animation/)");
    const target = from;
    let fromValue;
    if (Animatable_2.isAnimatable(from) || isMotionValue_1.isMotionValue(from)) {
        fromValue = from.get();
    }
    else {
        fromValue = Animatable_1.Animatable.objectToValues(from);
    }
    const animation = new FramerAnimation_1.FramerAnimation(target, fromValue, to, animator, options);
    animation.play();
    return animation;
}
exports.deprecatedAnimate = deprecatedAnimate;
function animate(from, to, animatorOrTransition, options) {
    return Animatable_2.isAnimatable(from)
        ? deprecatedAnimate(from, to, animatorOrTransition, options)
        : framer_motion_1.animate(from, to, animatorOrTransition);
}
exports.animate = animate;
(function (animate) {
    function spring(from, to, options) {
        return animate(from, to, Animators_1.SpringAnimator, options);
    }
    animate.spring = spring;
    function bezier(from, to, options) {
        return animate(from, to, Animators_1.BezierAnimator, options);
    }
    animate.bezier = bezier;
    function linear(from, to, options) {
        return animate.bezier(from, to, Object.assign(Object.assign({}, options), { curve: Animators_1.Bezier.Linear }));
    }
    animate.linear = linear;
    function ease(from, to, options) {
        return animate.bezier(from, to, Object.assign(Object.assign({}, options), { curve: Animators_1.Bezier.Ease }));
    }
    animate.ease = ease;
    function easeIn(from, to, options) {
        return animate.bezier(from, to, Object.assign(Object.assign({}, options), { curve: Animators_1.Bezier.EaseIn }));
    }
    animate.easeIn = easeIn;
    function easeOut(from, to, options) {
        return animate.bezier(from, to, Object.assign(Object.assign({}, options), { curve: Animators_1.Bezier.EaseOut }));
    }
    animate.easeOut = easeOut;
    function easeInOut(from, to, options) {
        return animate.bezier(from, to, Object.assign(Object.assign({}, options), { curve: Animators_1.Bezier.EaseInOut }));
    }
    animate.easeInOut = easeInOut;
})(animate = exports.animate || (exports.animate = {}));


/***/ }),

/***/ "./src/components/AnimateLayout/AnimateLayoutTrees.tsx":
/*!*************************************************************!*\
  !*** ./src/components/AnimateLayout/AnimateLayoutTrees.tsx ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnimateLayoutTrees = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const animation_1 = __webpack_require__(/*! ./animation */ "./src/components/AnimateLayout/animation.ts");
const TreeContext_1 = __webpack_require__(/*! ./TreeContext */ "./src/components/AnimateLayout/TreeContext.ts");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const syncContextStub = {
    register: () => { },
    remove: () => { },
    add: () => { },
    flush: () => { },
    syncUpdate: () => { },
};
const TREE_ROOT_ID = "____treeroot";
class AnimateLayoutTrees extends React.Component {
    constructor() {
        super(...arguments);
        this.scheduled = false;
        this.resetScheduled = false;
        this.layoutIdConfig = new Map();
        this.treeContext = {
            promoteTree: (...args) => this.promoteTree(...args),
            markTreeAsSafeToRemove: (tree) => this.markTreeAsSafeToRemove(tree),
        };
        this.syncContext = Object.assign(Object.assign({}, syncContextStub), { forceUpdate: () => {
                this.syncContext = Object.assign({}, this.syncContext);
                this.forceUpdate();
            } });
        this.batch = framer_motion_1.createBatcher();
        this.stackCrossfaders = new Map([[TREE_ROOT_ID, framer_motion_1.createCrossfader()]]);
    }
    promoteTree(tree, shouldAnimate, transition, resets) {
        var _a, _b, _c;
        if (tree === this.lead)
            return false;
        const prevFollow = this.follow;
        this.follow = this.lead;
        this.lead = tree;
        if (resets)
            this.resetScheduled = true;
        if (!shouldAnimate) {
            this.startCrossfade(new Map([[TREE_ROOT_ID, {}]]), { type: false });
            return false;
        }
        this.layoutIdConfig.clear();
        const currentStyle = {};
        for (const [layoutId, lead] of this.lead.children) {
            const follow = (_a = this.follow) === null || _a === void 0 ? void 0 : _a.children.get(layoutId);
            snapshotRotate(layoutId, lead, follow, currentStyle);
            follow && resetRotate(follow);
            resetRotate(lead);
        }
        for (const [layoutId, lead] of this.lead.children) {
            const follow = (_b = this.follow) === null || _b === void 0 ? void 0 : _b.children.get(layoutId);
            follow === null || follow === void 0 ? void 0 : follow.snapshotViewportBox();
            lead.snapshotViewportBox();
            const prevViewportBox = (follow === null || follow === void 0 ? void 0 : follow.prevViewportBox) ? copyAxisBox(follow === null || follow === void 0 ? void 0 : follow.prevViewportBox) : undefined;
            const config = {
                lead,
                current: currentStyle[layoutId],
                transition,
                prevViewportBox,
                shouldStackAnimate: follow ? true : false,
            };
            this.layoutIdConfig.set(layoutId, config);
        }
        if (prevFollow !== this.lead && prevFollow !== this.follow) {
            (_c = prevFollow === null || prevFollow === void 0 ? void 0 : prevFollow.rootChild) === null || _c === void 0 ? void 0 : _c.setVisibility(false);
        }
        this.scheduled = true;
        return true;
    }
    markTreeAsSafeToRemove(tree) {
        this.safeToRemoveTree = tree;
    }
    markTreeChildrenAsSafeToRemove(tree) {
        var _a;
        if (!tree)
            return;
        for (const [_, child] of tree.children) {
            (_a = child.layoutSafeToRemove) === null || _a === void 0 ? void 0 : _a.call(child);
        }
    }
    componentDidUpdate() {
        if (this.scheduled)
            this.startLayoutAnimation(this.resetScheduled);
        if (this.safeToRemoveTree)
            this.markTreeChildrenAsSafeToRemove(this.safeToRemoveTree);
        this.safeToRemoveTree = undefined;
        this.scheduled = false;
        this.resetScheduled = false;
    }
    componentWillUnmount() {
        this.stopCrossfadeAnimation();
    }
    startLayoutAnimation(shouldReset) {
        const { lead, follow } = this;
        const leadChildren = lead === null || lead === void 0 ? void 0 : lead.children;
        const followChildren = follow === null || follow === void 0 ? void 0 : follow.children;
        const toCrossfade = new Map();
        const handler = {
            measureLayout: child => child.updateLayoutMeasurement(),
            layoutReady: child => {
                const layoutId = child.getLayoutId();
                if (layoutId === undefined)
                    return;
                const config = this.layoutIdConfig.get(layoutId);
                if (!config)
                    return child.notifyLayoutReady({ shouldStackAnimate: false });
                const followChild = followChildren === null || followChildren === void 0 ? void 0 : followChildren.get(layoutId);
                const leadChild = leadChildren === null || leadChildren === void 0 ? void 0 : leadChildren.get(layoutId);
                child.pointTo(leadChild !== null && leadChild !== void 0 ? leadChild : child);
                const isLead = Boolean(leadChildren && leadChild === child);
                if (isLead) {
                    if (followChild && leadChild)
                        toCrossfade.set(layoutId, config);
                    child.notifyLayoutReady(animation_1.createAnimation(Object.assign(Object.assign({}, config), { onComplete: () => {
                            var _a;
                            (_a = followChild === null || followChild === void 0 ? void 0 : followChild.layoutSafeToRemove) === null || _a === void 0 ? void 0 : _a.call(followChild);
                        } })));
                }
            },
        };
        if (lead && leadChildren) {
            for (const [_, child] of leadChildren)
                this.batch.add(child);
            lead.layoutMayBeMutated = false;
        }
        if (!shouldReset && follow && followChildren) {
            for (const [_, child] of followChildren)
                this.batch.add(child);
            follow.layoutMayBeMutated = true;
        }
        this.batch.flush(handler);
        this.startCrossfade(toCrossfade);
    }
    startCrossfade(toCrossfade, transition) {
        var _a, _b, _c, _d, _e;
        if (!((_a = this.lead) === null || _a === void 0 ? void 0 : _a.rootChild))
            return;
        const isExit = (_b = this.follow) === null || _b === void 0 ? void 0 : _b.isExiting;
        let rootTransition = transition;
        const leadRoot = (_c = this.lead) === null || _c === void 0 ? void 0 : _c.rootChild;
        const followRoot = (_d = this.follow) === null || _d === void 0 ? void 0 : _d.rootChild;
        leadRoot === null || leadRoot === void 0 ? void 0 : leadRoot.setVisibility(true);
        followRoot === null || followRoot === void 0 ? void 0 : followRoot.setVisibility(true);
        const createCrossfadeAnimation = (config, id) => {
            var _a, _b;
            const followChild = (_a = this.follow) === null || _a === void 0 ? void 0 : _a.children.get(id);
            const leadChild = (_b = this.lead) === null || _b === void 0 ? void 0 : _b.children.get(id);
            if (leadChild === leadRoot || followChild === followRoot) {
                if (leadChild === leadRoot)
                    rootTransition = config.transition;
                return;
            }
            if (!this.stackCrossfaders.has(id)) {
                this.stackCrossfaders.set(id, framer_motion_1.createCrossfader());
            }
            const crossfader = this.stackCrossfaders.get(id);
            crossfader.setOptions({
                lead: leadChild,
                follow: followChild,
            });
            leadChild === null || leadChild === void 0 ? void 0 : leadChild.setCrossfader(crossfader);
            followChild === null || followChild === void 0 ? void 0 : followChild.setCrossfader(crossfader);
            crossfader.toLead(config === null || config === void 0 ? void 0 : config.transition);
        };
        toCrossfade.forEach(createCrossfadeAnimation);
        if (!leadRoot || !followRoot)
            return;
        const rootCrossfader = this.stackCrossfaders.get(TREE_ROOT_ID);
        rootCrossfader.setOptions({
            lead: leadRoot,
            follow: followRoot,
            preserveFollowOpacity: !isExit,
            crossfadeOpacity: true,
        });
        leadRoot.setCrossfader(rootCrossfader);
        followRoot.setCrossfader(rootCrossfader);
        const leadRootId = leadRoot.getLayoutId();
        const leadTransition = leadRootId
            ? ((_e = this.layoutIdConfig.get(leadRootId)) === null || _e === void 0 ? void 0 : _e.transition) || rootTransition
            : rootTransition;
        rootCrossfader.toLead(leadTransition);
    }
    stopCrossfadeAnimation() {
        this.stackCrossfaders.forEach(crossfader => crossfader.stop());
    }
    render() {
        return (React.createElement(TreeContext_1.LayoutTreeContext.Provider, { value: this.treeContext },
            React.createElement(framer_motion_1.SharedLayoutContext.Provider, { value: this.syncContext }, this.props.children)));
    }
}
exports.AnimateLayoutTrees = AnimateLayoutTrees;
function copyAxisBox(box) {
    if (!box)
        return undefined;
    return {
        x: Object.assign({}, box.x),
        y: Object.assign({}, box.y),
    };
}
function snapshotRotate(layoutId, lead, follow, styleMap) {
    const followRotate = follow === null || follow === void 0 ? void 0 : follow.getValue("rotate");
    const leadRotate = lead.getValue("rotate");
    styleMap[layoutId] = { rotate: (leadRotate === null || leadRotate === void 0 ? void 0 : leadRotate.isAnimating()) ? leadRotate.get() : (followRotate === null || followRotate === void 0 ? void 0 : followRotate.get()) || 0 };
}
const transformAxes = ["", "X", "Y", "Z"];
function resetRotate(child) {
    let hasRotate = false;
    const resetValues = {};
    transformAxes.forEach(axis => {
        const key = "rotate" + axis;
        if (!child.hasValue(key))
            return;
        hasRotate = true;
        resetValues[key] = child.getStaticValue(key);
        child.setStaticValue(key, 0);
    });
    if (!hasRotate)
        return;
    child.syncRender();
    for (const key in resetValues) {
        child.setStaticValue(key, resetValues[key]);
    }
    child.scheduleRender();
}


/***/ }),

/***/ "./src/components/AnimateLayout/LayoutIdContext.tsx":
/*!**********************************************************!*\
  !*** ./src/components/AnimateLayout/LayoutIdContext.tsx ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutomaticLayoutIds = exports.LayoutIdProvider = exports.LayoutIdContext = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
exports.LayoutIdContext = React.createContext({
    getLayoutId: args => null,
    persistLayoutIdCache: () => { },
    top: false,
    enabled: true,
});
function LayoutIdProvider({ children }) {
    const context = react_1.useContext(exports.LayoutIdContext);
    if (context.top)
        return React.createElement(React.Fragment, null, children);
    const cache = react_1.useRef({
        byId: {},
        byName: {},
        byLastId: {},
        byPossibleId: {},
        byLastName: {},
        byLayoutId: {},
        count: {
            byId: {},
            byName: {},
        },
    });
    const screen = react_1.useRef({
        byId: {},
        byName: {},
        byLastId: {},
        byPossibleId: {},
        byLastName: {},
        byLayoutId: {},
    });
    const usedIds = react_1.useRef(new Set()).current;
    const getLayoutId = react_1.useCallback(({ id, name, duplicatedFrom }) => {
        if (!id)
            return null;
        const cacheKey = name ? "byName" : "byId";
        const previousId = cache.current[cacheKey][id];
        if (previousId)
            return previousId;
        const nodeIdentifier = name || id;
        if (!duplicatedFrom &&
            !usedIds.has(nodeIdentifier) &&
            (!cache.current.byLayoutId[nodeIdentifier] || cache.current.byLayoutId[nodeIdentifier] === nodeIdentifier)) {
            if (cache.current.count[cacheKey][nodeIdentifier] === undefined) {
                cache.current.count[cacheKey][nodeIdentifier] = 0;
                cache.current.byLayoutId[nodeIdentifier] = nodeIdentifier;
                screen.current[cacheKey][id] = nodeIdentifier;
            }
            usedIds.add(nodeIdentifier);
            return nodeIdentifier;
        }
        let possibleMatch = undefined;
        if (duplicatedFrom === null || duplicatedFrom === void 0 ? void 0 : duplicatedFrom.length) {
            for (let index = duplicatedFrom.length - 1; index >= 0; index--) {
                const duplicatedId = duplicatedFrom[index];
                const match = cache.current[cacheKey][duplicatedId];
                const byLastIdMatch = cache.current.byLastId[duplicatedId];
                if (byLastIdMatch && !possibleMatch) {
                    const matchedLayoutId = cache.current.byLayoutId[byLastIdMatch];
                    const shouldUseNamedLastIdMatch = !matchedLayoutId || matchedLayoutId === name;
                    if (byLastIdMatch && !usedIds.has(byLastIdMatch) && (name ? shouldUseNamedLastIdMatch : true)) {
                        possibleMatch = [byLastIdMatch, duplicatedId];
                    }
                }
                const previousLayoutId = cache.current.byLayoutId[match];
                const shouldUseNamedMatch = !previousLayoutId || previousLayoutId === name;
                if (match && !usedIds.has(match) && (name ? shouldUseNamedMatch : true)) {
                    screen.current[cacheKey][id] = match;
                    screen.current.byLastId[duplicatedId] = match;
                    usedIds.add(match);
                    return match;
                }
            }
        }
        const last = cache.current.byLastId[id];
        if (last && !usedIds.has(last)) {
            usedIds.add(last);
            screen.current.byId[id] = last;
            return last;
        }
        if (possibleMatch) {
            const [match, duplicatedId] = possibleMatch;
            screen.current[cacheKey][id] = match;
            screen.current.byLastId[duplicatedId] = match;
            usedIds.add(match);
            return match;
        }
        const possible = cache.current.byPossibleId[id];
        if (possible && !usedIds.has(possible)) {
            usedIds.add(possible);
            screen.current.byId[id] = possible;
            return possible;
        }
        const rootDuplicatedId = duplicatedFrom === null || duplicatedFrom === void 0 ? void 0 : duplicatedFrom[0];
        const identifier = name || rootDuplicatedId || id;
        const value = cache.current.count[cacheKey][identifier] + 1 || 0;
        const layoutId = value ? `${identifier}-${value}` : identifier;
        cache.current.count[cacheKey][identifier] = value;
        screen.current[cacheKey][id] = layoutId;
        if (duplicatedFrom === null || duplicatedFrom === void 0 ? void 0 : duplicatedFrom.length) {
            if (!name) {
                screen.current.byLastId[duplicatedFrom[duplicatedFrom.length - 1]] = layoutId;
                if (duplicatedFrom.length > 1) {
                    for (let index = 0; index < duplicatedFrom.length - 1; index++) {
                        const possibleId = duplicatedFrom[index];
                        if (!screen.current.byPossibleId[possibleId]) {
                            screen.current.byPossibleId[possibleId] = layoutId;
                        }
                    }
                }
            }
        }
        screen.current.byLayoutId[layoutId] = nodeIdentifier;
        usedIds.add(layoutId);
        return layoutId;
    }, []);
    const persistLayoutIdCache = react_1.useCallback(() => {
        cache.current = {
            byId: Object.assign(Object.assign({}, cache.current.byId), screen.current.byId),
            byLastId: Object.assign(Object.assign({}, cache.current.byLastId), screen.current.byLastId),
            byPossibleId: Object.assign(Object.assign({}, cache.current.byPossibleId), screen.current.byPossibleId),
            byName: Object.assign(Object.assign({}, cache.current.byName), screen.current.byName),
            byLastName: Object.assign(Object.assign({}, cache.current.byLastName), screen.current.byLastName),
            byLayoutId: Object.assign(Object.assign({}, cache.current.byLayoutId), screen.current.byLayoutId),
            count: Object.assign(Object.assign({}, cache.current.count), { byName: {} }),
        };
        screen.current = {
            byId: {},
            byName: {},
            byLastId: {},
            byPossibleId: {},
            byLastName: {},
            byLayoutId: {},
        };
        usedIds.clear();
    }, []);
    const contextValue = react_1.useRef({
        getLayoutId,
        persistLayoutIdCache,
        top: true,
        enabled: true,
    }).current;
    return React.createElement(exports.LayoutIdContext.Provider, { value: contextValue }, children);
}
exports.LayoutIdProvider = LayoutIdProvider;
function AutomaticLayoutIds(_a) {
    var { enabled = true } = _a, props = __rest(_a, ["enabled"]);
    const context = react_1.useContext(exports.LayoutIdContext);
    const contextValue = react_1.useMemo(() => {
        return Object.assign(Object.assign({}, context), { enabled });
    }, [enabled]);
    return React.createElement(exports.LayoutIdContext.Provider, Object.assign({}, props, { value: contextValue }));
}
exports.AutomaticLayoutIds = AutomaticLayoutIds;


/***/ }),

/***/ "./src/components/AnimateLayout/SharedLayoutTree.tsx":
/*!***********************************************************!*\
  !*** ./src/components/AnimateLayout/SharedLayoutTree.tsx ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SharedLayoutTree = exports.LayoutTree = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const TreeContext_1 = __webpack_require__(/*! ./TreeContext */ "./src/components/AnimateLayout/TreeContext.ts");
class LayoutTree extends React.Component {
    constructor() {
        super(...arguments);
        this.children = new Map();
        this.layoutMayBeMutated = false;
        this.syncContext = {
            add: () => { },
            flush: () => { },
            syncUpdate: force => { },
            forceUpdate: () => {
                this.syncContext = Object.assign({}, this.syncContext);
                this.forceUpdate();
            },
            register: child => this.addChild(child),
            remove: child => this.removeChild(child),
        };
    }
    addChild(child) {
        const layoutId = child.getLayoutId();
        if (!layoutId)
            return;
        this.children.set(layoutId, child);
        this.setRootChild(child);
    }
    setRootChild(child) {
        if (!this.rootChild)
            return (this.rootChild = child);
        this.rootChild = this.rootChild.depth < child.depth ? this.rootChild : child;
    }
    removeChild(child) {
        const layoutId = child.getLayoutId();
        if (layoutId)
            this.children.delete(layoutId);
    }
    componentDidMount() {
        const { isLead, animatesLayout, transition } = this.props;
        if (isLead !== undefined && isLead)
            this.props.treeContext.promoteTree(this, !!animatesLayout, transition);
    }
    shouldComponentUpdate({ isLead, isExiting, animatesLayout, transition }) {
        this.isExiting = isExiting;
        if (this.props.isLead === undefined)
            return true;
        const hasBecomeLead = !this.props.isLead && isLead;
        const hasExitBeenCancelled = this.props.isExiting && !isExiting;
        const shouldPromote = hasBecomeLead || hasExitBeenCancelled;
        if (this.layoutMayBeMutated && shouldPromote && !animatesLayout) {
            return this.props.treeContext.promoteTree(this, true, { type: false }, true);
        }
        else if (shouldPromote) {
            return this.props.treeContext.promoteTree(this, !!animatesLayout, transition);
        }
        else if (isExiting && !animatesLayout) {
            this.props.treeContext.markTreeAsSafeToRemove(this);
        }
        return false;
    }
    render() {
        return (React.createElement(framer_motion_1.FramerTreeLayoutContext.Provider, { value: this.syncContext }, this.props.children));
    }
}
exports.LayoutTree = LayoutTree;
const SharedLayoutTree = (props) => {
    const treeContext = React.useContext(TreeContext_1.LayoutTreeContext);
    return React.createElement(LayoutTree, Object.assign({}, props, { treeContext: treeContext }));
};
exports.SharedLayoutTree = SharedLayoutTree;


/***/ }),

/***/ "./src/components/AnimateLayout/TreeContext.ts":
/*!*****************************************************!*\
  !*** ./src/components/AnimateLayout/TreeContext.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LayoutTreeContext = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
exports.LayoutTreeContext = React.createContext({
    promoteTree: () => false,
    markTreeAsSafeToRemove: () => { },
});


/***/ }),

/***/ "./src/components/AnimateLayout/animation.ts":
/*!***************************************************!*\
  !*** ./src/components/AnimateLayout/animation.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.createAnimation = void 0;
function createAnimation(animation) {
    const { shouldStackAnimate, transition, current, prevViewportBox, onComplete } = animation;
    const config = {
        shouldStackAnimate,
        transition,
        current,
        onComplete,
    };
    if (!shouldStackAnimate)
        return config;
    config.originBox = prevViewportBox;
    return config;
}
exports.createAnimation = createAnimation;


/***/ }),

/***/ "./src/components/AnimateLayout/index.ts":
/*!***********************************************!*\
  !*** ./src/components/AnimateLayout/index.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.SharedLayoutTree = exports.AnimateLayoutTrees = void 0;
var AnimateLayoutTrees_1 = __webpack_require__(/*! ./AnimateLayoutTrees */ "./src/components/AnimateLayout/AnimateLayoutTrees.tsx");
Object.defineProperty(exports, "AnimateLayoutTrees", { enumerable: true, get: function () { return AnimateLayoutTrees_1.AnimateLayoutTrees; } });
var SharedLayoutTree_1 = __webpack_require__(/*! ./SharedLayoutTree */ "./src/components/AnimateLayout/SharedLayoutTree.tsx");
Object.defineProperty(exports, "SharedLayoutTree", { enumerable: true, get: function () { return SharedLayoutTree_1.SharedLayoutTree; } });


/***/ }),

/***/ "./src/components/Draggable.ts":
/*!*************************************!*\
  !*** ./src/components/Draggable.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Draggable = void 0;
const WithDragging_1 = __webpack_require__(/*! ./hoc/WithDragging */ "./src/components/hoc/WithDragging.tsx");
const Frame_1 = __webpack_require__(/*! ../render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
exports.Draggable = WithDragging_1.WithDragging(Frame_1.DeprecatedFrameWithEvents);


/***/ }),

/***/ "./src/components/EmptyState.tsx":
/*!***************************************!*\
  !*** ./src/components/EmptyState.tsx ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmptyState = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const RenderEnvironment_1 = __webpack_require__(/*! ../render/types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const Frame_1 = __webpack_require__(/*! ../render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
function EmptyState({ title = "", description = "Click and drag the connector to any frame on the canvas →", children, size, hide, insideUserCodeComponent = false, }) {
    const { target } = RenderEnvironment_1.RenderEnvironment;
    const childCount = React.Children.count(children);
    if (insideUserCodeComponent && childCount === 0) {
        return React.createElement(Frame_1.FrameWithMotion, Object.assign({}, size, { "data-name": "placeholder" }));
    }
    if (target !== RenderEnvironment_1.RenderTarget.canvas)
        return null;
    if (hide)
        return null;
    if (childCount !== 0)
        return null;
    return (React.createElement(Frame_1.FrameWithMotion, { key: "empty-state", className: "framerInternalUI-canvasPlaceholder", top: 0, left: 0, bottom: 0, right: 0, style: { position: "absolute" } },
        React.createElement("div", { style: {
                display: "flex",
                alignItems: "center",
                lineHeight: "1.4",
                height: "100%",
                width: "100%",
            } },
            React.createElement("div", { style: {
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    flexDirection: "column",
                    width: "100%",
                    WebkitMaskImage: `linear-gradient(90deg, black, black calc(100% - 12px * ${scaleFactor}), transparent)`,
                } },
                React.createElement(Title, null, title),
                React.createElement(Description, null, description)))));
}
exports.EmptyState = EmptyState;
const scaleFactor = "var(--framerInternalCanvas-canvasPlaceholderContentScaleFactor, 1)";
const Title = ({ children }) => {
    return (React.createElement("span", { style: {
            display: "flex",
            flexDirection: "column",
            textAlign: "center",
            flexGrow: 1,
            flexShrink: 0,
            fontWeight: 600,
            marginBottom: "5px",
        } }, children));
};
const Description = ({ children }) => {
    return (React.createElement("span", { style: {
            display: "flex",
            flexDirection: "column",
            textAlign: "center",
            flexGrow: 1,
            flexShrink: 0,
            fontWeight: 400,
            maxWidth: "200px",
        } }, children));
};


/***/ }),

/***/ "./src/components/Navigation.tsx":
/*!***************************************!*\
  !*** ./src/components/Navigation.tsx ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Navigation = exports.NavigationCallbackProvider = exports.NavigationConsumer = exports.NavigationContext = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const Frame_1 = __webpack_require__(/*! ../render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
const NavigationTransitions_1 = __webpack_require__(/*! ./NavigationTransitions */ "./src/components/NavigationTransitions.ts");
const NavigationContainer_1 = __webpack_require__(/*! ./NavigationContainer */ "./src/components/NavigationContainer.tsx");
const type_guards_1 = __webpack_require__(/*! ../utils/type-guards */ "./src/utils/type-guards.ts");
const injectComponentCSSRules_1 = __webpack_require__(/*! ../render/utils/injectComponentCSSRules */ "./src/render/utils/injectComponentCSSRules.ts");
const NavigatorMock_1 = __webpack_require__(/*! ./NavigatorMock */ "./src/components/NavigatorMock.tsx");
const LayoutIdContext_1 = __webpack_require__(/*! ./AnimateLayout/LayoutIdContext */ "./src/components/AnimateLayout/LayoutIdContext.tsx");
const reduceNavigationStateForAction_1 = __webpack_require__(/*! ./reduceNavigationStateForAction */ "./src/components/reduceNavigationStateForAction.ts");
const AnimateLayout_1 = __webpack_require__(/*! ./AnimateLayout */ "./src/components/AnimateLayout/index.ts");
exports.NavigationContext = React.createContext(NavigatorMock_1.navigatorMock);
exports.NavigationConsumer = exports.NavigationContext.Consumer;
const NavigationCallbackContext = React.createContext(undefined);
exports.NavigationCallbackProvider = NavigationCallbackContext.Provider;
class Navigation extends React.Component {
    constructor() {
        super(...arguments);
        this.lastEventTimeStamp = null;
        this.state = reduceNavigationStateForAction_1.defaultState();
        this.navigationAction = (action) => {
            var _a;
            if (!this.props.enabled && this.state.history.length > 0)
                return;
            const newState = reduceNavigationStateForAction_1.reduceNavigationStateForAction(this.state, action);
            if (newState) {
                this.setState(newState);
                const currentItem = newState.history[newState.current];
                (_a = this.context) === null || _a === void 0 ? void 0 : _a.call(this, currentItem.key);
            }
        };
        this.goBack = () => {
            var _a;
            if (this.isSameEventTransition())
                return;
            this.lastEventTimeStamp = ((_a = window.event) === null || _a === void 0 ? void 0 : _a.timeStamp) || null;
            if (this.state.currentOverlay !== -1)
                return this.navigationAction({ type: "removeOverlay" });
            return this.navigationAction({ type: "remove" });
        };
    }
    componentDidMount() {
        if (this.state.history.length === 0) {
            this.transition(this.props.children, NavigationTransitions_1.TransitionDefaults.Instant);
        }
        injectComponentCSSRules_1.injectComponentCSSRules();
    }
    UNSAFE_componentWillReceiveProps(props) {
        var _a;
        const component = props["children"];
        if (!type_guards_1.isReactChild(component) || !type_guards_1.isReactElement(component))
            return;
        const key = (_a = component.key) === null || _a === void 0 ? void 0 : _a.toString();
        if (!key)
            return;
        if (this.state.history.length === 0) {
            this.transition(component, NavigationTransitions_1.TransitionDefaults.Instant);
        }
        else {
            this.navigationAction({ type: "update", key, component });
        }
    }
    getStackState(options) {
        const { current, previous, currentOverlay, previousOverlay } = this.state;
        if (options.overCurrentContext) {
            return {
                current: currentOverlay,
                previous: previousOverlay,
                history: this.state.overlayStack,
            };
        }
        return {
            current,
            previous,
            history: this.state.history,
        };
    }
    isSameEventTransition() {
        if (!window.event)
            return false;
        return this.lastEventTimeStamp === window.event.timeStamp;
    }
    transition(component, transitionTraits, transitionOptions) {
        var _a, _b;
        if (this.isSameEventTransition())
            return;
        this.lastEventTimeStamp = ((_a = window.event) === null || _a === void 0 ? void 0 : _a.timeStamp) || null;
        if (!component || !type_guards_1.isReactChild(component) || !type_guards_1.isReactElement(component))
            return;
        const transition = Object.assign(Object.assign({}, transitionTraits), transitionOptions);
        const overCurrentContext = !!transition.overCurrentContext;
        if (overCurrentContext)
            return this.navigationAction({ type: "addOverlay", transition, component });
        const key = ((_b = component === null || component === void 0 ? void 0 : component.key) === null || _b === void 0 ? void 0 : _b.toString()) || `stack-${this.state.historyItemId + 1}`;
        this.navigationAction({ type: "add", key, transition, component });
    }
    instant(component) {
        this.transition(component, NavigationTransitions_1.TransitionDefaults.Instant);
    }
    fade(component, options) {
        this.transition(component, NavigationTransitions_1.TransitionDefaults.Fade, options);
    }
    push(component, options) {
        this.transition(component, NavigationTransitions_1.pushTransition(options), options);
    }
    modal(component, options) {
        this.transition(component, NavigationTransitions_1.TransitionDefaults.Modal, options);
    }
    overlay(component, options) {
        this.transition(component, NavigationTransitions_1.overlayTransition(options), options);
    }
    flip(component, options) {
        this.transition(component, NavigationTransitions_1.flipTransition(options), options);
    }
    magicMotion(component, options) {
        this.transition(component, NavigationTransitions_1.TransitionDefaults.MagicMotion, options);
    }
    customTransition(component, transition) {
        this.transition(component, transition);
    }
    render() {
        const stackState = this.getStackState({ overCurrentContext: false });
        const overlayStackState = this.getStackState({ overCurrentContext: true });
        const activeOverlay = activeOverlayItem(overlayStackState);
        const isOverlayVisible = overlayStackState.current > -1;
        return (React.createElement(Frame_1.FrameWithMotion, { top: 0, left: 0, width: "100%", height: "100%", position: "relative", style: Object.assign({ overflow: "hidden", backgroundColor: "unset" }, this.props.style) },
            React.createElement(exports.NavigationContext.Provider, { value: this },
                React.createElement(NavigationContainer_1.NavigationContainer, { isLayeredContainer: true, position: undefined, initialProps: {}, instant: false, transitionProps: transitionPropsForStackWrapper(activeOverlay), animation: animationForStackWrapper(activeOverlay), backfaceVisible: backfaceVisibleForStackWrapper(activeOverlay), visible: true, backdropColor: undefined, onTapBackdrop: undefined, index: 0 },
                    React.createElement(LayoutIdContext_1.LayoutIdProvider, null,
                        React.createElement(AnimateLayout_1.AnimateLayoutTrees, null,
                            React.createElement(framer_motion_1.AnimatePresence, { presenceAffectsLayout: false }, Object.keys(this.state.containers).map(key => {
                                var _a, _b, _c, _d, _e;
                                const component = this.state.containers[key];
                                const index = this.state.containerIndex[key];
                                const visualIndex = this.state.containerVisualIndex[key];
                                const removed = this.state.containerIsRemoved[key];
                                const historyItem = this.state.history[index];
                                const transitionProps = this.state.transitionForContainer[key];
                                const isCurrent = index === this.state.current;
                                const isPrevious = index === this.state.previous;
                                const areMagicMotionLayersPresent = isCurrent ? false : removed;
                                const withMagicMotion = ((_a = historyItem === null || historyItem === void 0 ? void 0 : historyItem.transition) === null || _a === void 0 ? void 0 : _a.withMagicMotion) ||
                                    (isCurrent && !!this.state.previousTransition);
                                return (React.createElement(NavigationContainer_1.NavigationContainer, { key: key, id: key, index: visualIndex, isCurrent: isCurrent, isPrevious: isPrevious, isOverlayed: isOverlayVisible, visible: isCurrent || isPrevious, position: (_b = historyItem === null || historyItem === void 0 ? void 0 : historyItem.transition) === null || _b === void 0 ? void 0 : _b.position, instant: isInstantContainerTransition(index, stackState), transitionProps: transitionProps, animation: animationPropsForContainer(index, stackState), backfaceVisible: getBackfaceVisibleForScreen(index, stackState), exitAnimation: (_c = historyItem === null || historyItem === void 0 ? void 0 : historyItem.transition) === null || _c === void 0 ? void 0 : _c.animation, exitBackfaceVisible: (_d = historyItem === null || historyItem === void 0 ? void 0 : historyItem.transition) === null || _d === void 0 ? void 0 : _d.backfaceVisible, exitProps: (_e = historyItem === null || historyItem === void 0 ? void 0 : historyItem.transition) === null || _e === void 0 ? void 0 : _e.enter, withMagicMotion: withMagicMotion, areMagicMotionLayersPresent: areMagicMotionLayersPresent ? false : undefined }, containerContent({
                                    component,
                                    transition: historyItem === null || historyItem === void 0 ? void 0 : historyItem.transition,
                                })));
                            }))))),
                React.createElement(framer_motion_1.AnimatePresence, null, this.state.overlayStack.map((item, stackIndex) => {
                    return (React.createElement(NavigationContainer_1.NavigationContainer, { isLayeredContainer: true, key: item.key, isCurrent: stackIndex === this.state.currentOverlay, position: item.transition.position, initialProps: initialPropsForOverlay(stackIndex, overlayStackState), transitionProps: transitionPropsForOverlay(stackIndex, overlayStackState), instant: isInstantContainerTransition(stackIndex, overlayStackState, true), animation: animationPropsForContainer(stackIndex, overlayStackState), exitProps: item.transition.enter, visible: containerIsVisible(stackIndex, overlayStackState), backdropColor: backdropColorForTransition(item.transition), backfaceVisible: getBackfaceVisibleForOverlay(stackIndex, overlayStackState), onTapBackdrop: backdropTapAction(item.transition, this.goBack), index: this.state.current + 1 + stackIndex }, containerContent({ component: item.component, transition: item.transition })));
                })))));
    }
}
exports.Navigation = Navigation;
Navigation.defaultProps = {
    enabled: true,
};
Navigation.contextType = NavigationCallbackContext;
const animationDefault = {
    stiffness: 500,
    damping: 50,
    restDelta: 1,
    type: "spring",
};
function activeOverlayItem(overlayStack) {
    let currentOverlayItem;
    let previousOverlayItem;
    if (overlayStack.current !== -1) {
        currentOverlayItem = overlayStack.history[overlayStack.current];
    }
    else {
        previousOverlayItem = overlayStack.history[overlayStack.previous];
    }
    return { currentOverlayItem, previousOverlayItem };
}
function transitionPropsForStackWrapper({ currentOverlayItem }) {
    return currentOverlayItem && currentOverlayItem.transition.exit;
}
function animationForStackWrapper({ currentOverlayItem, previousOverlayItem }) {
    if (currentOverlayItem && currentOverlayItem.transition.animation) {
        return currentOverlayItem.transition.animation;
    }
    if (previousOverlayItem && previousOverlayItem.transition.animation) {
        return previousOverlayItem.transition.animation;
    }
    return animationDefault;
}
function backfaceVisibleForStackWrapper({ currentOverlayItem, previousOverlayItem }) {
    if (currentOverlayItem)
        return currentOverlayItem.transition.backfaceVisible;
    return previousOverlayItem && previousOverlayItem.transition.backfaceVisible;
}
function backdropColorForTransition(transition) {
    if (transition.backdropColor)
        return transition.backdropColor;
    if (transition.overCurrentContext)
        return "rgba(4,4,15,.4)";
    return undefined;
}
function getBackfaceVisibleForOverlay(containerIndex, stackState) {
    const { current, history } = stackState;
    if (containerIndex === current) {
        const navigationItem = history[containerIndex];
        if (navigationItem && navigationItem.transition) {
            return navigationItem.transition.backfaceVisible;
        }
        return true;
    }
    else if (containerIndex < current) {
        const navigationItem = history[containerIndex + 1];
        if (navigationItem && navigationItem.transition) {
            return navigationItem.transition.backfaceVisible;
        }
        return true;
    }
    else {
        const navigationItem = history[containerIndex];
        if (navigationItem && navigationItem.transition) {
            return navigationItem.transition.backfaceVisible;
        }
        return true;
    }
}
function initialPropsForOverlay(containerIndex, stackState) {
    const navigationItem = stackState.history[containerIndex];
    if (navigationItem)
        return navigationItem.transition.enter;
}
function getBackfaceVisibleForScreen(screenIndex, stackState) {
    var _a, _b, _c, _d;
    const { current, previous, history } = stackState;
    if ((screenIndex === previous && current > previous) || (screenIndex === current && current < previous)) {
        return (_b = (_a = history[screenIndex + 1]) === null || _a === void 0 ? void 0 : _a.transition) === null || _b === void 0 ? void 0 : _b.backfaceVisible;
    }
    return (_d = (_c = history[screenIndex]) === null || _c === void 0 ? void 0 : _c.transition) === null || _d === void 0 ? void 0 : _d.backfaceVisible;
}
function transitionPropsForOverlay(overlayIndex, stackState) {
    const { current, history } = stackState;
    if (overlayIndex === current) {
        return;
    }
    else if (overlayIndex < current) {
        const navigationItem = history[overlayIndex + 1];
        if (navigationItem && navigationItem.transition) {
            return navigationItem.transition.exit;
        }
    }
    else {
        const navigationItem = history[overlayIndex];
        if (navigationItem && navigationItem.transition) {
            return navigationItem.transition.enter;
        }
    }
}
function animationPropsForContainer(containerIndex, stackState) {
    const { current, previous, history } = stackState;
    const containerCurrent = previous > current ? previous : current;
    if (containerIndex < containerCurrent) {
        const navigationItem = history[containerIndex + 1];
        if (navigationItem && navigationItem.transition.animation) {
            return navigationItem.transition.animation;
        }
    }
    else if (containerIndex !== containerCurrent) {
        const navigationItem = history[containerIndex];
        if (navigationItem && navigationItem.transition.animation) {
            return navigationItem.transition.animation;
        }
    }
    else {
        const navigationItem = history[containerIndex];
        if (navigationItem.transition.animation) {
            return navigationItem.transition.animation;
        }
    }
    return animationDefault;
}
function isInstantContainerTransition(containerIndex, stackState, overCurrentContext) {
    const { current, previous, history } = stackState;
    if (overCurrentContext && history.length > 1)
        return true;
    if (containerIndex !== previous && containerIndex !== current)
        return true;
    if (current === previous)
        return true;
    return false;
}
function containerIsVisible(containerIndex, stackState) {
    const { current, previous } = stackState;
    if (containerIndex > current && containerIndex > previous)
        return false;
    if (containerIndex === current)
        return true;
    return false;
}
function containerContent(item) {
    return React.Children.map(item.component, (child) => {
        var _a;
        if (!type_guards_1.isReactChild(child) || !type_guards_1.isReactElement(child) || !child.props) {
            return child;
        }
        const props = {};
        const position = (_a = item === null || item === void 0 ? void 0 : item.transition) === null || _a === void 0 ? void 0 : _a.position;
        const shouldStretchWidth = !position || (position.left !== undefined && position.right !== undefined);
        const shouldStretchHeight = !position || (position.top !== undefined && position.bottom !== undefined);
        const canStretchWidth = "width" in child.props;
        const canStretchHeight = "height" in child.props;
        if (shouldStretchWidth && canStretchWidth) {
            props.width = "100%";
        }
        if (shouldStretchHeight && canStretchHeight) {
            props.height = "100%";
        }
        return React.cloneElement(child, props);
    });
}
function backdropTapAction(transition, goBackAction) {
    if (transition.goBackOnTapOutside !== false)
        return goBackAction;
}


/***/ }),

/***/ "./src/components/NavigationContainer.tsx":
/*!************************************************!*\
  !*** ./src/components/NavigationContainer.tsx ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.allAnimatableProperties = exports.NavigationContainer = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
const Frame_1 = __webpack_require__(/*! ../render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
const isFiniteNumber_1 = __webpack_require__(/*! ../render/utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const NavigationContainerContext_1 = __webpack_require__(/*! ./NavigationContainerContext */ "./src/components/NavigationContainerContext.tsx");
const LayoutIdContext_1 = __webpack_require__(/*! ./AnimateLayout/LayoutIdContext */ "./src/components/AnimateLayout/LayoutIdContext.tsx");
const AnimateLayout_1 = __webpack_require__(/*! ./AnimateLayout */ "./src/components/AnimateLayout/index.ts");
const NavigationTargetContext_1 = __webpack_require__(/*! ./NavigationTargetContext */ "./src/components/NavigationTargetContext.tsx");
exports.NavigationContainer = React.memo(function NavigationContainer({ isLayeredContainer, isCurrent, isPrevious, isOverlayed = false, visible, transitionProps, children, backdropColor, onTapBackdrop, backfaceVisible, exitBackfaceVisible, animation, exitAnimation, instant, initialProps, exitProps, position = { top: 0, right: 0, bottom: 0, left: 0 }, withMagicMotion, index, areMagicMotionLayersPresent, id, }) {
    const animate = framer_motion_1.useAnimation();
    const presence = react_1.useContext(framer_motion_1.PresenceContext);
    const { persistLayoutIdCache } = react_1.useContext(LayoutIdContext_1.LayoutIdContext);
    const previousState = react_1.useRef({
        wasCurrent: undefined,
        wasPrevious: false,
        wasBeingRemoved: false,
        wasReset: true,
        origins: getOriginProps({}, initialProps, transitionProps),
    });
    const isBeingRemoved = presence !== null && !presence.isPresent;
    if (isCurrent && previousState.current.wasCurrent === undefined)
        persistLayoutIdCache();
    react_1.useEffect(() => {
        if (isLayeredContainer || !animate)
            return;
        if (isBeingRemoved) {
            previousState.current = Object.assign(Object.assign({}, previousState.current), { wasBeingRemoved: isBeingRemoved });
            return;
        }
        const { wasPrevious, wasCurrent } = previousState.current;
        const shouldAnimateIn = (isCurrent && !wasCurrent) ||
            (!isBeingRemoved && previousState.current.wasBeingRemoved && isCurrent);
        const shouldAnimateOut = isPrevious && !wasPrevious;
        const origins = getOriginProps(previousState.current.origins, initialProps, transitionProps);
        let wasReset = previousState.current.wasReset;
        if (shouldAnimateIn || shouldAnimateOut) {
            animate.stop();
            animate.start(Object.assign(Object.assign({ zIndex: index }, origins), transitionProps));
            wasReset = false;
        }
        else if (wasReset === false) {
            animate.stop();
            animate.set(Object.assign(Object.assign({ zIndex: index }, exports.allAnimatableProperties), { opacity: 0 }));
            wasReset = true;
        }
        previousState.current = {
            wasCurrent: !!isCurrent,
            wasPrevious: !!isPrevious,
            wasBeingRemoved: false,
            wasReset,
            origins,
        };
    }, [isCurrent, isPrevious, isBeingRemoved]);
    const transition = instant ? { type: false } : Object.assign(Object.assign({}, animation), { velocity: 0 });
    const exitTransition = instant ? { type: false } : exitAnimation || animation;
    const layout = Object.assign({}, position);
    if (layout.left === undefined || layout.right === undefined)
        layout.width = "auto";
    if (layout.top === undefined || layout.bottom === undefined)
        layout.height = "auto";
    const needsPerspective = contains3Dprops(transitionProps) || contains3Dprops(initialProps);
    const perspective = needsPerspective && (isLayeredContainer || isCurrent || isPrevious) ? 1200 : undefined;
    const identity = Object.assign(Object.assign({}, exports.allAnimatableProperties), previousState.current.origins);
    const animations = isLayeredContainer
        ? {
            initial: Object.assign(Object.assign({}, identity), initialProps),
            animate: Object.assign(Object.assign(Object.assign({}, identity), transitionProps), { transition }),
            exit: Object.assign(Object.assign(Object.assign({}, identity), exitProps), { transition: animate }),
        }
        : {
            animate,
            exit: Object.assign(Object.assign(Object.assign({}, identity), exitProps), { transition: exitTransition }),
        };
    const isPresent = isBeingRemoved || areMagicMotionLayersPresent === false ? false : true;
    const isCurrentTarget = !!isCurrent && isPresent && !isOverlayed;
    return (React.createElement(Frame_1.FrameWithMotion, { width: "100%", height: "100%", style: {
            position: "absolute",
            transformStyle: "flat",
            backgroundColor: "transparent",
            overflow: "hidden",
            zIndex: isLayeredContainer || isBeingRemoved || (isCurrent && withMagicMotion) ? index : undefined,
            pointerEvents: "none",
            visibility: visible ? "visible" : "hidden",
            perspective,
        } },
        isLayeredContainer && (React.createElement(Frame_1.FrameWithMotion, { width: "100%", height: "100%", transition: animation, initial: { opacity: instant && visible ? 1 : 0 }, animate: { opacity: 1 }, exit: { opacity: 0 }, backgroundColor: backdropColor ? backdropColor : "transparent", onTap: !isBeingRemoved ? onTapBackdrop : undefined })),
        React.createElement(Frame_1.FrameWithMotion, Object.assign({}, layout, animations, { transition: {
                default: transition,
                originX: { type: false },
                originY: { type: false },
                originZ: { type: false },
            }, backgroundColor: "transparent", backfaceVisible: !isBeingRemoved ? backfaceVisible : exitBackfaceVisible, "data-framer-component-type": "NavigationContainer", "data-framer-is-current-navigation-target": !!isCurrent, style: {
                pointerEvents: "initial",
                opacity: isLayeredContainer || (isCurrent && withMagicMotion) ? 1 : 0,
            }, "data-is-present": isPresent ? undefined : false }),
            React.createElement(NavigationContainerContext_1.NavigationContainerContext.Provider, { value: isCurrentTarget },
                React.createElement(NavigationTargetContext_1.NavigationTargetWrapper, { isCurrent: isCurrentTarget },
                    React.createElement(AnimateLayout_1.SharedLayoutTree, { isLead: isCurrent, animatesLayout: !!withMagicMotion, transition: transition, isExiting: !isPresent, id: id }, children))))));
}, shouldUsePreviousValue);
function shouldUsePreviousValue(prevProps, nextProps) {
    if (nextProps.isCurrent === undefined)
        return false;
    if (prevProps.isCurrent !== nextProps.isCurrent)
        return false;
    if (prevProps.isPrevious !== nextProps.isPrevious)
        return false;
    if (nextProps.isCurrent && prevProps.isOverlayed !== nextProps.isOverlayed)
        return false;
    return true;
}
function getOriginProps(currentOriginProps, initialProps, transitionProps) {
    const result = Object.assign({}, currentOriginProps);
    if (initialProps) {
        if (isFiniteNumber_1.isFiniteNumber(initialProps.originX))
            result.originX = initialProps.originX;
        if (isFiniteNumber_1.isFiniteNumber(initialProps.originY))
            result.originY = initialProps.originY;
        if (isFiniteNumber_1.isFiniteNumber(initialProps.originZ))
            result.originZ = initialProps.originZ;
    }
    if (transitionProps) {
        if (isFiniteNumber_1.isFiniteNumber(transitionProps.originX))
            result.originX = transitionProps.originX;
        if (isFiniteNumber_1.isFiniteNumber(transitionProps.originY))
            result.originY = transitionProps.originY;
        if (isFiniteNumber_1.isFiniteNumber(transitionProps.originZ))
            result.originZ = transitionProps.originZ;
    }
    return result;
}
function contains3Dprops(containerProps) {
    var _a, _b, _c;
    if (!containerProps)
        return false;
    const containsProps = "rotateX" in containerProps || "rotateY" in containerProps || "z" in containerProps;
    if (!containsProps)
        return false;
    const toPropsContain3d = containerProps.rotateX !== 0 || containerProps.rotateY !== 0 || containerProps.z !== 0;
    const fromPropsContain3d = ((_a = containerProps === null || containerProps === void 0 ? void 0 : containerProps.transition) === null || _a === void 0 ? void 0 : _a.rotateX.from) !== 0 ||
        ((_b = containerProps === null || containerProps === void 0 ? void 0 : containerProps.transition) === null || _b === void 0 ? void 0 : _b.rotateY.from) !== 0 ||
        ((_c = containerProps === null || containerProps === void 0 ? void 0 : containerProps.transition) === null || _c === void 0 ? void 0 : _c.z.from) !== 0;
    return toPropsContain3d || fromPropsContain3d;
}
exports.allAnimatableProperties = {
    x: 0,
    y: 0,
    z: 0,
    rotate: 0,
    rotateX: 0,
    rotateY: 0,
    rotateZ: 0,
    scale: 1,
    scaleX: 1,
    scaleY: 1,
    scaleZ: 1,
    skew: 0,
    skewX: 0,
    skewY: 0,
    originX: 0.5,
    originY: 0.5,
    originZ: 0,
    opacity: 1,
};


/***/ }),

/***/ "./src/components/NavigationContainerContext.tsx":
/*!*******************************************************!*\
  !*** ./src/components/NavigationContainerContext.tsx ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useIsInCurrentNavigationTarget = exports.NavigationContainerContext = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
exports.NavigationContainerContext = React.createContext(true);
function useIsInCurrentNavigationTarget() {
    const isInCurrentNavigationTarget = react_1.useContext(exports.NavigationContainerContext);
    return isInCurrentNavigationTarget;
}
exports.useIsInCurrentNavigationTarget = useIsInCurrentNavigationTarget;


/***/ }),

/***/ "./src/components/NavigationTargetContext.tsx":
/*!****************************************************!*\
  !*** ./src/components/NavigationTargetContext.tsx ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useOnCurrentTargetChange = exports.NavigationTargetWrapper = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
const utils_1 = __webpack_require__(/*! ../utils/utils */ "./src/utils/utils.ts");
const useMap_1 = __webpack_require__(/*! ./utils/useMap */ "./src/components/utils/useMap.ts");
const NavigationTargetContext = react_1.createContext({ register: () => { }, deregister: () => { } });
const NavigationTargetWrapper = ({ isCurrent, children }) => {
    const callbacks = useMap_1.useMap();
    const register = react_1.useCallback((fn) => {
        if (callbacks.has(fn)) {
            console.warn("NavigationTargetWrapper: already registered");
            return;
        }
        callbacks.set(fn, undefined);
    }, [callbacks]);
    const deregister = react_1.useCallback((fn) => {
        const cleanup = callbacks.get(fn);
        cleanup === null || cleanup === void 0 ? void 0 : cleanup();
        callbacks.delete(fn);
    }, [callbacks]);
    const value = react_1.useRef({ register, deregister }).current;
    react_1.useEffect(() => {
        callbacks.forEach((_, cb) => {
            const newCleanup = cb(isCurrent);
            callbacks.set(cb, utils_1.isFunction(newCleanup) ? newCleanup : undefined);
        });
        return () => {
            callbacks.forEach((cleanup, cb) => {
                if (!cleanup)
                    return;
                cleanup();
                callbacks.set(cb, undefined);
            });
        };
    }, [isCurrent, callbacks]);
    return React.createElement(NavigationTargetContext.Provider, { value: value }, children);
};
exports.NavigationTargetWrapper = NavigationTargetWrapper;
function useOnCurrentTargetChange(callback, deps = []) {
    const { register, deregister } = react_1.useContext(NavigationTargetContext);
    react_1.useEffect(() => {
        if (!callback)
            return;
        register(callback);
        return () => deregister(callback);
    }, [register, deregister, ...deps]);
}
exports.useOnCurrentTargetChange = useOnCurrentTargetChange;


/***/ }),

/***/ "./src/components/NavigationTransitions.ts":
/*!*************************************************!*\
  !*** ./src/components/NavigationTransitions.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.flipTransition = exports.overlayTransition = exports.pushTransition = exports.TransitionDefaults = void 0;
var TransitionDefaults;
(function (TransitionDefaults) {
    TransitionDefaults.Fade = {
        exit: { opacity: 0 },
        enter: { opacity: 0 },
    };
    TransitionDefaults.PushLeft = {
        exit: { x: "-30%" },
        enter: { x: "100%" },
    };
    TransitionDefaults.PushRight = {
        exit: { x: "30%" },
        enter: { x: "-100%" },
    };
    TransitionDefaults.PushUp = {
        exit: { y: "-30%" },
        enter: { y: "100%" },
    };
    TransitionDefaults.PushDown = {
        exit: { y: "30%" },
        enter: { y: "-100%" },
    };
    TransitionDefaults.Instant = {
        animation: { type: false },
        enter: { opacity: 0 },
    };
    TransitionDefaults.Modal = {
        overCurrentContext: true,
        goBackOnTapOutside: true,
        position: { center: true },
        enter: { opacity: 0, scale: 1.2 },
    };
    TransitionDefaults.OverlayLeft = {
        overCurrentContext: true,
        goBackOnTapOutside: true,
        position: { right: 0, top: 0, bottom: 0 },
        enter: { x: "100%" },
    };
    TransitionDefaults.OverlayRight = {
        overCurrentContext: true,
        goBackOnTapOutside: true,
        position: { left: 0, top: 0, bottom: 0 },
        enter: { x: "-100%" },
    };
    TransitionDefaults.OverlayUp = {
        overCurrentContext: true,
        goBackOnTapOutside: true,
        position: { bottom: 0, left: 0, right: 0 },
        enter: { y: "100%" },
    };
    TransitionDefaults.OverlayDown = {
        overCurrentContext: true,
        goBackOnTapOutside: true,
        position: { top: 0, left: 0, right: 0 },
        enter: { y: "-100%" },
    };
    TransitionDefaults.FlipLeft = {
        backfaceVisible: false,
        exit: { rotateY: -180 },
        enter: { rotateY: 180 },
    };
    TransitionDefaults.FlipRight = {
        backfaceVisible: false,
        exit: { rotateY: 180 },
        enter: { rotateY: -180 },
    };
    TransitionDefaults.FlipUp = {
        backfaceVisible: false,
        exit: { rotateX: 180 },
        enter: { rotateX: -180 },
    };
    TransitionDefaults.FlipDown = {
        backfaceVisible: false,
        exit: { rotateX: -180 },
        enter: { rotateX: 180 },
    };
    TransitionDefaults.MagicMotion = {
        withMagicMotion: true,
    };
})(TransitionDefaults = exports.TransitionDefaults || (exports.TransitionDefaults = {}));
function pushTransition(options) {
    const side = options && options.appearsFrom ? options.appearsFrom : "right";
    switch (side) {
        case "right":
            return TransitionDefaults.PushLeft;
        case "left":
            return TransitionDefaults.PushRight;
        case "bottom":
            return TransitionDefaults.PushUp;
        case "top":
            return TransitionDefaults.PushDown;
    }
}
exports.pushTransition = pushTransition;
function overlayTransition(options) {
    const side = options && options.appearsFrom ? options.appearsFrom : "bottom";
    switch (side) {
        case "right":
            return TransitionDefaults.OverlayLeft;
        case "left":
            return TransitionDefaults.OverlayRight;
        case "bottom":
            return TransitionDefaults.OverlayUp;
        case "top":
            return TransitionDefaults.OverlayDown;
    }
}
exports.overlayTransition = overlayTransition;
function flipTransition(options) {
    const side = options && options.appearsFrom ? options.appearsFrom : "bottom";
    switch (side) {
        case "right":
            return TransitionDefaults.FlipLeft;
        case "left":
            return TransitionDefaults.FlipRight;
        case "bottom":
            return TransitionDefaults.FlipUp;
        case "top":
            return TransitionDefaults.FlipDown;
    }
}
exports.flipTransition = flipTransition;


/***/ }),

/***/ "./src/components/NavigatorMock.tsx":
/*!******************************************!*\
  !*** ./src/components/NavigatorMock.tsx ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.navigatorMock = void 0;
const shared_1 = __webpack_require__(/*! @framerjs/shared */ "../shared/src/index.ts");
class NavigatorMock {
    constructor() {
        this.warning = () => {
            shared_1.warnOnce("The Navigator API is only available inside of Framer: https://www.framer.com/");
        };
        this.goBack = () => this.warning();
        this.instant = () => this.warning();
        this.fade = () => this.warning();
        this.push = () => this.warning();
        this.modal = () => this.warning();
        this.overlay = () => this.warning();
        this.flip = () => this.warning();
        this.customTransition = () => this.warning();
        this.magicMotion = () => this.warning();
    }
}
exports.navigatorMock = new NavigatorMock();


/***/ }),

/***/ "./src/components/Page.tsx":
/*!*********************************!*\
  !*** ./src/components/Page.tsx ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Page = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const PageContainer_1 = __webpack_require__(/*! ./PageContainer */ "./src/components/PageContainer.tsx");
const Frame_1 = __webpack_require__(/*! ../render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
const PropertyControls_1 = __webpack_require__(/*! ../render/types/PropertyControls */ "./src/render/types/PropertyControls.ts");
const EmptyState_1 = __webpack_require__(/*! ./EmptyState */ "./src/components/EmptyState.tsx");
const RenderEnvironment_1 = __webpack_require__(/*! ../render/types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const type_guards_1 = __webpack_require__(/*! ../utils/type-guards */ "./src/utils/type-guards.ts");
const isMotionValue_1 = __webpack_require__(/*! ../render/utils/isMotionValue */ "./src/render/utils/isMotionValue.ts");
const popmotion_1 = __webpack_require__(/*! popmotion */ "../../node_modules/popmotion/dist/es/index.js");
const paddingFromProps_1 = __webpack_require__(/*! ./utils/paddingFromProps */ "./src/components/utils/paddingFromProps.ts");
const injectComponentCSSRules_1 = __webpack_require__(/*! ../render/utils/injectComponentCSSRules */ "./src/render/utils/injectComponentCSSRules.ts");
const addPropertyControls_1 = __webpack_require__(/*! ../utils/addPropertyControls */ "./src/utils/addPropertyControls.ts");
const isFiniteNumber_1 = __webpack_require__(/*! ../render/utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const useWheelScroll_1 = __webpack_require__(/*! ./Scroll/useWheelScroll */ "./src/components/Scroll/useWheelScroll.ts");
const shared_1 = __webpack_require__(/*! @framerjs/shared */ "../shared/src/index.ts");
const useLayoutId_1 = __webpack_require__(/*! ../render/utils/useLayoutId */ "./src/render/utils/useLayoutId.ts");
var ContentDimension;
(function (ContentDimension) {
    ContentDimension.Auto = "auto";
    ContentDimension.Stretch = "stretch";
})(ContentDimension || (ContentDimension = {}));
const pageContentDimensionOptions = [ContentDimension.Auto, ContentDimension.Stretch];
const pageContentDimensionTitles = pageContentDimensionOptions.map(option => {
    switch (option) {
        case ContentDimension.Auto:
            return "Auto";
        case ContentDimension.Stretch:
            return "Stretch";
    }
});
const pageAlignmentOptions = ["start", "center", "end"];
const genericAlignmentTitles = pageAlignmentOptions.map(option => {
    switch (option) {
        case "start":
            return "Start";
        case "center":
            return "Center";
        case "end":
            return "End";
    }
});
const pageEffectOptions = ["none", "cube", "coverflow", "wheel", "pile"];
const pageEffectTitles = pageEffectOptions.map(option => {
    switch (option) {
        case "none":
            return "None";
        case "cube":
            return "Cube";
        case "coverflow":
            return "Cover Flow";
        case "wheel":
            return "Wheel";
        case "pile":
            return "Pile";
    }
});
function Page(props) {
    const { direction = "horizontal", contentWidth = ContentDimension.Stretch, contentHeight = ContentDimension.Stretch, alignment = "start", currentPage = 0, animateCurrentPageUpdate = true, gap: gapValue = 10, padding = 0, momentum = false, dragEnabled = true, defaultEffect = "none", background = "transparent", overflow = "hidden", __fromCodeComponentNode, effect, children, contentOffsetX, contentOffsetY, onChangePage, onScrollStart, onScroll, onDragStart, onDrag, onDragEnd, directionLock, onScrollEnd, onDirectionLock, onUpdate, wheelEnabled = false, __layoutId } = props, rest = __rest(props, ["direction", "contentWidth", "contentHeight", "alignment", "currentPage", "animateCurrentPageUpdate", "gap", "padding", "momentum", "dragEnabled", "defaultEffect", "background", "overflow", "__fromCodeComponentNode", "effect", "children", "contentOffsetX", "contentOffsetY", "onChangePage", "onScrollStart", "onScroll", "onDragStart", "onDrag", "onDragEnd", "directionLock", "onScrollEnd", "onDirectionLock", "onUpdate", "wheelEnabled", "__layoutId"]);
    const layoutId = useLayoutId_1.useLayoutId(props, __layoutId, "page");
    const containerProps = Object.assign(Object.assign({}, rest), { background });
    const hasMountedRef = React.useRef(false);
    const hasFixedSize = RenderEnvironment_1.RenderTarget.hasRestrictions() &&
        props.__fromCodeComponentNode &&
        isFiniteNumber_1.isFiniteNumber(containerProps.width) &&
        isFiniteNumber_1.isFiniteNumber(containerProps.height);
    if (!hasFixedSize && __fromCodeComponentNode && !containerProps.__fromCanvasComponent) {
        containerProps.width = "100%";
        containerProps.height = "100%";
        containerProps._constraints = { enabled: true };
    }
    const { initial, prev } = React.useRef({
        initial: { x: 0, y: 0 },
        prev: { x: 0, y: 0 },
    }).current;
    const isHorizontal = direction === "horizontal";
    let gap = gapValue;
    if (gap < 0) {
        shared_1.warnOnce(`The 'gap' property of Page component can not be negative, but is ${gapValue}.`);
        gap = 0;
    }
    injectComponentCSSRules_1.injectComponentCSSRules();
    const pageCount = React.Children.count(children);
    const maxOffsetRef = React.useRef(0);
    const constraints = React.useRef({ top: 0, left: 0, right: 0, bottom: 0 });
    const containerRef = React.useRef(null);
    const scrollableRef = React.useRef(null);
    const pageEffectValuesRef = React.useRef([]);
    const pageRectsRef = React.useRef([]);
    const internalX = framer_motion_1.useMotionValue(isMotionValue_1.isMotionValue(contentOffsetX) ? 0 : contentOffsetX !== null && contentOffsetX !== void 0 ? contentOffsetX : 0);
    const internalY = framer_motion_1.useMotionValue(isMotionValue_1.isMotionValue(contentOffsetY) ? 0 : contentOffsetY !== null && contentOffsetY !== void 0 ? contentOffsetY : 0);
    const contentOffsetRef = React.useRef({
        x: isMotionValue_1.isMotionValue(contentOffsetX) ? contentOffsetX : internalX,
        y: isMotionValue_1.isMotionValue(contentOffsetY) ? contentOffsetY : internalY,
    });
    const currentContentPageRef = React.useRef(0);
    const propsBoundedCurrentPageRef = React.useRef(0);
    const latestPropsRef = React.useRef(props);
    latestPropsRef.current = props;
    const lastDirectionRef = React.useRef(props.direction);
    const snapToPage = useSnapToPage(currentContentPageRef, contentOffsetRef, isHorizontal);
    const [_, setForceUpdateCount] = React.useState(0);
    const containerSizeRef = React.useRef({ width: 200, height: 200 });
    if (hasFixedSize && isFiniteNumber_1.isFiniteNumber(containerProps.width) && isFiniteNumber_1.isFiniteNumber(containerProps.height)) {
        containerSizeRef.current.width = containerProps.width;
        containerSizeRef.current.height = containerProps.height;
    }
    const updateOnResize = React.useCallback(() => {
        if (!hasFixedSize)
            setForceUpdateCount(v => v + 1);
    }, [hasFixedSize]);
    React.useEffect(() => {
        if (RenderEnvironment_1.RenderTarget.current() !== RenderEnvironment_1.RenderTarget.preview)
            return;
        window.addEventListener("resize", updateOnResize);
        return () => {
            window.removeEventListener("resize", updateOnResize);
        };
    }, [updateOnResize]);
    const applyEffects = () => {
        pageEffectValuesRef.current.forEach((effectDictionary, index) => {
            const values = effectValues(index, latestPropsRef, pageRectsRef, contentOffsetRef, maxOffsetRef);
            if (!effectDictionary || !values)
                return;
            for (const key in values) {
                if (isMotionValue_1.isMotionValue(effectDictionary[key])) {
                    effectDictionary[key].set(values[key]);
                }
            }
        });
    };
    const updateMaxOffsetFromPageContents = (containerSize) => {
        const newPageContentRects = getPageContentRects(containerRef, containerSize, direction, gap);
        if (newPageContentRects)
            pageRectsRef.current = newPageContentRects;
        const newMaxOffset = getMaxOffset(containerSizeRef.current, pageRectsRef.current, direction, latestPropsRef.current);
        if (newMaxOffset !== maxOffsetRef.current) {
            maxOffsetRef.current = newMaxOffset;
            constraints.current.top = -newMaxOffset;
            constraints.current.left = -newMaxOffset;
            setForceUpdateCount(v => v + 1);
        }
    };
    const measureContainerSize = () => {
        const element = containerRef.current;
        if (!element)
            return null;
        const { offsetWidth, offsetHeight } = element;
        const currentSize = containerSizeRef.current;
        if (offsetWidth !== currentSize.width || offsetHeight !== currentSize.height) {
            containerSizeRef.current = {
                width: offsetWidth,
                height: offsetHeight,
            };
            return containerSizeRef.current;
        }
        return null;
    };
    const updateAndSnapToPage = (newPage, mount = false) => {
        const newBoundedCurrentPage = getBoundedCurrentPage(newPage, pageCount);
        const boundedCurrentPageDidChange = newBoundedCurrentPage !== propsBoundedCurrentPageRef.current;
        if (boundedCurrentPageDidChange) {
            propsBoundedCurrentPageRef.current = newBoundedCurrentPage;
            updateCurrentPage(newBoundedCurrentPage, currentContentPageRef, onChangePage);
        }
        const offset = offsetForPage(newBoundedCurrentPage, pageCount, pageRectsRef, isHorizontal, maxOffsetRef);
        const animated = animateCurrentPageUpdate && RenderEnvironment_1.RenderTarget.current() !== RenderEnvironment_1.RenderTarget.canvas && !mount;
        snapToPage(newBoundedCurrentPage, offset, { animated });
    };
    React.useLayoutEffect(() => {
        var _a;
        if (hasMountedRef.current)
            return;
        currentContentPageRef.current = currentPage;
        const contentOffset = contentOffsetRef.current;
        contentOffset.x.onChange(applyEffects);
        contentOffset.y.onChange(applyEffects);
        applyEffects();
        hasMountedRef.current = true;
        const containerSize = (_a = measureContainerSize()) !== null && _a !== void 0 ? _a : containerSizeRef.current;
        updateMaxOffsetFromPageContents(containerSize);
        updateAndSnapToPage(currentContentPageRef.current, true);
    }, []);
    React.useEffect(() => {
        if (currentPage !== currentContentPageRef.current)
            updateAndSnapToPage(currentPage);
    }, [currentPage]);
    const handleMeasureLifecycle = () => {
        const newContainerSize = measureContainerSize();
        updateMaxOffsetFromPageContents(newContainerSize !== null && newContainerSize !== void 0 ? newContainerSize : containerSizeRef.current);
        updateAndSnapToPage(currentContentPageRef.current);
        if (newContainerSize || direction !== lastDirectionRef.current) {
            if (direction === "horizontal") {
                contentOffsetRef.current.y.set(0);
            }
            else {
                contentOffsetRef.current.x.set(0);
            }
            lastDirectionRef.current = direction;
        }
    };
    React.useLayoutEffect(() => {
        if (RenderEnvironment_1.RenderTarget.current() !== RenderEnvironment_1.RenderTarget.canvas)
            return;
        handleMeasureLifecycle();
    });
    const onDragStartHandler = (event, info) => {
        if (onScrollStart)
            onScrollStart(info);
        if (onDragStart)
            onDragStart(event, info);
        prev.x = initial.x = info.point.x;
        prev.y = initial.y = info.point.y;
    };
    const onDragHandler = (event, info) => {
        if (onScroll)
            onScroll(info);
        if (onDrag)
            onDrag(event, info);
        prev.x = info.point.x;
        prev.y = info.point.y;
    };
    const onDragTransitionEnd = () => {
        if (props.onDragTransitionEnd)
            props.onDragTransitionEnd();
        if (onScrollEnd) {
            const { x, y } = contentOffsetRef.current;
            const point = { x: x.get(), y: y.get() };
            onScrollEnd({
                point,
                velocity: { x: x.getVelocity(), y: y.getVelocity() },
                offset: { x: point.x - initial.x, y: point.y - initial.y },
                delta: { x: point.x - prev.x, y: point.y - prev.y },
            });
        }
    };
    const onDragEndHandler = (event, info) => __awaiter(this, void 0, void 0, function* () {
        const contentOffset = isHorizontal ? contentOffsetRef.current.x : contentOffsetRef.current.y;
        contentOffset.stop();
        const startPosition = contentOffset.get();
        const axis = isHorizontal ? "x" : "y";
        const velocity = info.velocity[axis];
        let index = nearestPageIndex(pageRectsRef.current, startPosition, startPosition, isHorizontal, momentum);
        if (velocity) {
            popmotion_1.inertia({
                from: startPosition,
                velocity,
                modifyTarget: (endPosition) => {
                    index = nearestPageIndex(pageRectsRef.current, startPosition, endPosition, isHorizontal, momentum);
                    return endPosition;
                },
            }).stop();
        }
        updateCurrentPage(index, currentContentPageRef, onChangePage);
        const offset = offsetForPage(index, pageCount, pageRectsRef, isHorizontal, maxOffsetRef);
        if (onDragEnd)
            onDragEnd(event, info);
        const handler = contentOffsetRef.current[axis];
        framer_motion_1.animate(handler, offset, {
            type: "spring",
            from: startPosition,
            velocity,
            stiffness: 500,
            damping: 50,
            onComplete: onDragTransitionEnd,
        });
    });
    pageEffectValuesRef.current = [];
    const childComponents = React.Children.map(children, (child, index) => {
        var _a;
        if (!type_guards_1.isReactChild(child) || !type_guards_1.isReactElement(child)) {
            return child;
        }
        const update = {
            right: undefined,
            bottom: undefined,
            top: undefined,
            left: undefined,
            _constraints: {
                enabled: false,
            },
        };
        if (containerProps.__fromCanvasComponent) {
            update.style = (_a = child.props.style) !== null && _a !== void 0 ? _a : {};
            if (contentWidth === "stretch")
                update.style.width = "100%";
            if (contentHeight === "stretch")
                update.style.height = "100%";
        }
        else {
            if (contentWidth === "stretch")
                update.width = "100%";
            if (contentHeight === "stretch")
                update.height = "100%";
        }
        let effectDictionary;
        const values = effectValues(index, latestPropsRef, pageRectsRef, contentOffsetRef, maxOffsetRef);
        if (values) {
            effectDictionary = {};
            for (const key in values) {
                effectDictionary[key] = framer_motion_1.motionValue(values[key]);
            }
        }
        pageEffectValuesRef.current.push(effectDictionary);
        return (React.createElement(PageContainer_1.PageContainer, { key: index, effect: effectDictionary, dragEnabled: dragEnabled, direction: direction, contentHeight: contentHeight, contentWidth: contentWidth, alignment: alignment, gap: gap, isLastPage: index === pageCount - 1, contentOffsetRef: contentOffsetRef, constraintsRef: constraints, directionLock: directionLock, onDragStart: onDragStartHandler, onDrag: onDragHandler, onDragEnd: onDragEndHandler, layoutId: layoutId ? `${layoutId}-${index}` : undefined }, React.cloneElement(child, update)));
    });
    useWheelScroll_1.useWheelScroll(scrollableRef, {
        enabled: wheelEnabled,
        initial,
        prev,
        direction,
        constraints,
        offsetX: contentOffsetRef.current.x,
        offsetY: contentOffsetRef.current.y,
        onScrollStart,
        onScroll,
        onScrollEnd,
    });
    return (React.createElement(Frame_1.FrameWithMotion, Object.assign({ preserve3d: false, perspective: hasEffect(props) ? 1200 : undefined, overflow: overflow }, containerProps, { layoutId: layoutId, ref: containerRef, onLayoutMeasure: handleMeasureLifecycle }),
        React.createElement(Frame_1.FrameWithMotion, { "data-framer-component-type": "Page", ref: scrollableRef, background: null, x: contentOffsetRef.current.x, y: contentOffsetRef.current.y, width: "100%", height: "100%", preserve3d: true, style: {
                padding: paddingFromProps_1.makePaddingString(paddingFromProps_1.paddingFromProps(props)),
                display: "flex",
                flexDirection: isHorizontal ? "row" : "column",
            } },
            React.createElement(EmptyState_1.EmptyState, { title: "Page", description: "Click and drag the connector to any frame on the canvas \u2192", children: children, size: containerSizeRef.current, insideUserCodeComponent: !__fromCodeComponentNode }),
            childComponents)));
}
exports.Page = Page;
addPropertyControls_1.addPropertyControls(Page, {
    direction: {
        type: PropertyControls_1.ControlType.Enum,
        options: ["horizontal", "vertical"],
        title: "Direction",
        defaultValue: "horizontal",
        displaySegmentedControl: true,
        optionIcons: ["direction-horizontal", "direction-vertical"],
    },
    directionLock: {
        type: PropertyControls_1.ControlType.Boolean,
        title: "Lock",
        enabledTitle: "1 Axis",
        disabledTitle: "Off",
        defaultValue: true,
    },
    contentWidth: {
        type: PropertyControls_1.ControlType.Enum,
        options: pageContentDimensionOptions,
        optionTitles: pageContentDimensionTitles,
        title: "Width",
        defaultValue: ContentDimension.Stretch,
        displaySegmentedControl: true,
    },
    contentHeight: {
        type: PropertyControls_1.ControlType.Enum,
        options: pageContentDimensionOptions,
        optionTitles: pageContentDimensionTitles,
        title: "Height",
        defaultValue: ContentDimension.Stretch,
        displaySegmentedControl: true,
    },
    alignment: {
        type: PropertyControls_1.ControlType.Enum,
        options: pageAlignmentOptions,
        optionTitles: genericAlignmentTitles,
        title: "Align",
        hidden(props) {
            const { direction, contentWidth, contentHeight } = props;
            const isHorizontalDirection = direction === "horizontal";
            const crossDimension = isHorizontalDirection ? contentHeight : contentWidth;
            return crossDimension === ContentDimension.Stretch;
        },
        defaultValue: "start",
        displaySegmentedControl: true,
        optionIcons: {
            direction: {
                horizontal: ["align-top", "align-middle", "align-bottom"],
                vertical: ["align-left", "align-center", "align-right"],
            },
        },
    },
    gap: {
        type: PropertyControls_1.ControlType.Number,
        min: 0,
        title: "Gap",
        defaultValue: 0,
    },
    padding: {
        type: PropertyControls_1.ControlType.FusedNumber,
        toggleKey: "paddingPerSide",
        toggleTitles: ["Padding", "Padding per side"],
        valueKeys: ["paddingTop", "paddingRight", "paddingBottom", "paddingLeft"],
        valueLabels: ["T", "R", "B", "L"],
        min: 0,
        title: "Padding",
        defaultValue: 0,
    },
    currentPage: {
        type: PropertyControls_1.ControlType.Number,
        min: 0,
        title: "Current",
        displayStepper: true,
        defaultValue: 0,
    },
    momentum: {
        type: PropertyControls_1.ControlType.Boolean,
        enabledTitle: "On",
        disabledTitle: "Off",
        title: "Momentum",
        defaultValue: false,
    },
    dragEnabled: {
        type: PropertyControls_1.ControlType.Boolean,
        title: "Dragging",
        enabledTitle: "On",
        disabledTitle: "Off",
        defaultValue: true,
    },
    wheelEnabled: {
        type: PropertyControls_1.ControlType.Boolean,
        title: "Wheel",
        enabledTitle: "On",
        disabledTitle: "Off",
        defaultValue: false,
    },
    defaultEffect: {
        type: PropertyControls_1.ControlType.Enum,
        options: pageEffectOptions,
        optionTitles: pageEffectTitles,
        title: "Effect",
        defaultValue: "none",
    },
    children: {
        type: PropertyControls_1.ControlType.Array,
        title: "Content",
        control: { type: PropertyControls_1.ControlType.ComponentInstance, title: "Page" },
    },
});
Page.supportsConstraints = true;
function cubeEffect(info) {
    const { normalizedOffset, direction } = info;
    const isHorizontal = direction === "horizontal";
    return {
        originX: normalizedOffset < 0 ? 1 : 0,
        originY: normalizedOffset < 0 ? 1 : 0,
        rotateY: isHorizontal ? Math.min(Math.max(-90, normalizedOffset * 90), 90) : 0,
        rotateX: isHorizontal ? 0 : Math.min(Math.max(-90, normalizedOffset * -90), 90),
        backfaceVisibility: "hidden",
        WebkitBackfaceVisibility: "hidden",
    };
}
function coverflowEffect(info) {
    const { normalizedOffset, direction, size } = info;
    const isHorizontal = direction === "horizontal";
    return {
        rotateY: isHorizontal ? Math.min(45, Math.max(-45, normalizedOffset * -45)) : 0,
        rotateX: isHorizontal ? 0 : Math.min(45, Math.max(-45, normalizedOffset * 45)),
        originX: isHorizontal ? (normalizedOffset < 0 ? 0 : 1) : 0.5,
        originY: isHorizontal ? 0.5 : normalizedOffset < 0 ? 0 : 1,
        x: isHorizontal ? `${normalizedOffset * -25}%` : 0,
        y: isHorizontal ? 0 : `${normalizedOffset * -25}%`,
        z: -Math.abs(normalizedOffset),
        scale: 1 - Math.abs(normalizedOffset / 10),
    };
}
function calcPileAxisOffset(offset, length) {
    return offset * length - offset * 8;
}
function pileEffect(info) {
    const { normalizedOffset, direction, size } = info;
    const isHorizontal = direction === "horizontal";
    const absoluteOffset = Math.abs(normalizedOffset);
    return {
        x: normalizedOffset < 0 && isHorizontal ? calcPileAxisOffset(absoluteOffset, size.width) : 0,
        y: normalizedOffset < 0 && !isHorizontal ? calcPileAxisOffset(absoluteOffset, size.height) : 0,
        scale: normalizedOffset < 0 ? 1 - absoluteOffset / 50 : 1,
    };
}
function wheelEffect(info) {
    const { normalizedOffset, direction, size } = info;
    const isHorizontal = direction === "horizontal";
    const originZ = ((isHorizontal ? size.width : size.height) * 18) / (2 * Math.PI);
    const rotateX = isHorizontal ? 0 : normalizedOffset * -20;
    const rotateY = isHorizontal ? normalizedOffset * 20 : 0;
    const y = isHorizontal ? 0 : normalizedOffset * -size.height;
    const x = isHorizontal ? normalizedOffset * -size.width : 0;
    return {
        opacity: 1 - Math.abs(normalizedOffset) / 4,
        transform: `translate(${x}px, ${y}px) translateZ(-${originZ}px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateZ(${originZ}px)`,
    };
}
function getDefaultEffect(type) {
    switch (type) {
        case "cube":
            return cubeEffect;
        case "coverflow":
            return coverflowEffect;
        case "pile":
            return pileEffect;
        case "wheel":
            return wheelEffect;
        default:
            return null;
    }
}
function nearestPageIndex(pageRects, startPosition, endPosition, isHorizontalDirection, allowSkippingPages) {
    const distanceToStart = function (rect) {
        const rectPosition = isHorizontalDirection ? rect.x : rect.y;
        return Math.abs(rectPosition + startPosition);
    };
    const distanceToEnd = function (rect) {
        const rectPosition = isHorizontalDirection ? rect.x : rect.y;
        return Math.abs(rectPosition + endPosition);
    };
    if (allowSkippingPages) {
        const closestPages = [...pageRects].sort((a, b) => distanceToEnd(a) - distanceToEnd(b));
        return pageRects.indexOf(closestPages[0]);
    }
    else {
        const closestToStart = [...pageRects].sort((a, b) => distanceToStart(a) - distanceToStart(b));
        if (closestToStart.length === 1)
            return pageRects.indexOf(closestToStart[0]);
        const pageA = closestToStart[0];
        const pageB = closestToStart[1];
        const closestPages = [pageA, pageB].sort((a, b) => distanceToEnd(a) - distanceToEnd(b));
        return pageRects.indexOf(closestPages[0]);
    }
}
function getPageContentRects(containerRef, containerSize, direction, gap) {
    var _a;
    const containerElement = containerRef.current;
    if (!containerElement)
        return;
    const contentWrappers = [];
    (_a = containerElement.firstChild) === null || _a === void 0 ? void 0 : _a.childNodes.forEach(node => {
        const childNode = node.firstChild;
        if (!(childNode instanceof HTMLElement))
            return;
        const componentType = childNode.getAttribute("data-framer-component-type");
        if (componentType === PageContainer_1.pageContentWrapperType) {
            contentWrappers.push(childNode);
        }
    });
    const sizes = [];
    contentWrappers.forEach(contentWrapper => {
        if (contentWrapper instanceof HTMLElement && contentWrapper.firstChild instanceof HTMLElement) {
            let width = contentWrapper.firstChild.offsetWidth;
            let height = contentWrapper.firstChild.offsetHeight;
            if (false) {}
            sizes.push({ width, height });
        }
        else {
            sizes.push(null);
        }
    });
    let maxX = 0;
    let maxY = 0;
    const isHorizontal = direction === "horizontal";
    return sizes.map(queriedSize => {
        const size = queriedSize || containerSize;
        const x = maxX;
        const y = maxY;
        if (isHorizontal) {
            maxX += size.width + gap;
        }
        else {
            maxY += size.height + gap;
        }
        return Object.assign(Object.assign({}, size), { x, y });
    });
}
function getMaxOffset(containerSize, pageContentRects, direction, paddingProps) {
    const lastPageRect = pageContentRects[pageContentRects.length - 1];
    if (!lastPageRect)
        return 0;
    const paddingSides = paddingFromProps_1.paddingFromProps(paddingProps);
    const isHorizontal = direction === "horizontal";
    const paddingStart = isHorizontal ? paddingSides.left : paddingSides.top;
    const paddingEnd = isHorizontal ? paddingSides.right : paddingSides.bottom;
    const pageWidth = isHorizontal ? lastPageRect.width : lastPageRect.height;
    const containerWidth = isHorizontal ? containerSize.width : containerSize.height;
    const freeSpace = containerWidth - paddingStart - paddingEnd - pageWidth;
    const target = isHorizontal ? lastPageRect.x : lastPageRect.y;
    if (freeSpace <= 0)
        return Math.max(target, 0);
    return Math.max(target - freeSpace, 0);
}
function offsetForPage(index, pageCount, pageRectsRef, isHorizontal, maxOffsetRef) {
    const pageIndex = Math.max(0, Math.min(pageCount - 1, index));
    const currentPageRect = pageRectsRef.current[pageIndex];
    if (!currentPageRect) {
        return 0;
    }
    if (isHorizontal) {
        return -Math.min(currentPageRect.x, maxOffsetRef.current);
    }
    else {
        return -Math.min(currentPageRect.y, maxOffsetRef.current);
    }
}
function useSnapToPage(currentContentPageRef, contentOffsetRef, isHorizontal) {
    return (pageIndex, offset, options) => {
        currentContentPageRef.current = pageIndex;
        const contentOffset = isHorizontal ? contentOffsetRef.current.x : contentOffsetRef.current.y;
        if (!options || !options.animated) {
            contentOffset.set(offset);
            return;
        }
        const axis = isHorizontal ? "x" : "y";
        framer_motion_1.animate(contentOffsetRef.current[axis], offset, {
            type: "spring",
            from: contentOffset.get(),
            velocity: contentOffset.getVelocity(),
            stiffness: 500,
            damping: 50,
        });
    };
}
function getBoundedCurrentPage(pageIndex, pageCount) {
    return pageIndex >= 0 ? Math.min(pageIndex, pageCount - 1) : ((pageIndex % pageCount) + pageCount) % pageCount;
}
function effectValues(index, latestPropsRef, pageRectsRef, contentOffsetRef, maxOffsetRef) {
    const { direction: latestDirection = "horizontal", defaultEffect: latestDefaultEffect, effect: latestEffect, gap: latestGap = 0, } = latestPropsRef.current;
    const latestIsHorizontal = latestDirection === "horizontal";
    const pageRect = pageRectsRef.current[index] || {
        x: latestIsHorizontal ? index * 200 + latestGap : 0,
        y: latestIsHorizontal ? 0 : index * 200 + latestGap,
        width: 200,
        height: 200,
    };
    const effectFunction = latestEffect || getDefaultEffect(latestDefaultEffect);
    if (!effectFunction)
        return null;
    let offset;
    let normalizedOffset;
    const contentOffset = contentOffsetRef.current;
    const maxScrollOffset = maxOffsetRef.current;
    if (latestIsHorizontal) {
        offset = Math.min(pageRect.x, maxScrollOffset) + (contentOffset ? contentOffset.x.get() : 0);
        normalizedOffset = offset / (pageRect.width + latestGap);
    }
    else {
        offset = Math.min(pageRect.y, maxScrollOffset) + (contentOffset ? contentOffset.y.get() : 0);
        normalizedOffset = offset / (pageRect.height + latestGap);
    }
    const size = { width: pageRect.width, height: pageRect.height };
    return effectFunction({
        offset,
        normalizedOffset,
        size,
        index,
        direction: latestDirection,
        gap: latestGap,
        pageCount: pageRectsRef.current.length,
    });
}
function hasEffect(props) {
    return !!props.effect || !!getDefaultEffect(props.defaultEffect);
}
function updateCurrentPage(newPageIndex, currentContentPageRef, onChangePage) {
    if (currentContentPageRef.current === newPageIndex)
        return;
    if (onChangePage)
        onChangePage(newPageIndex, currentContentPageRef.current);
    currentContentPageRef.current = newPageIndex;
}


/***/ }),

/***/ "./src/components/PageContainer.tsx":
/*!******************************************!*\
  !*** ./src/components/PageContainer.tsx ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageContainer = exports.pageContentWrapperType = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Frame_1 = __webpack_require__(/*! ../render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
const Stack_1 = __webpack_require__(/*! ./Stack */ "./src/components/Stack/index.tsx");
exports.pageContentWrapperType = "PageContentWrapper";
function PageContainer({ children, effect, dragEnabled, direction, contentHeight, contentWidth, alignment, gap, isLastPage, contentOffsetRef, constraintsRef, directionLock, onDragStart, onDrag, onDragEnd, layoutId, }) {
    const isHorizontalDirection = direction === "horizontal";
    const dragAxis = isHorizontalDirection ? "x" : "y";
    const hasHorizontalGap = isHorizontalDirection && !isLastPage && gap;
    const hasVerticalGap = !isHorizontalDirection && !isLastPage && gap;
    const hasAutoWidth = contentWidth !== "stretch" && isHorizontalDirection;
    const hasAutoHeight = contentHeight !== "stretch" && !isHorizontalDirection;
    const wrapperWidth = hasAutoWidth ? "auto" : "100%";
    const wrapperHeight = hasAutoHeight ? "auto" : "100%";
    const containerWidth = hasHorizontalGap && wrapperWidth === "100%" ? `calc(100% + ${gap}px)` : wrapperWidth;
    const containerHeight = hasVerticalGap && wrapperHeight === "100%" ? `calc(100% + ${gap}px)` : wrapperHeight;
    return (React.createElement(Frame_1.FrameWithMotion, { position: "relative", "data-framer-component-type": "PageContainer", width: containerWidth, height: containerHeight, layoutId: layoutId ? `${layoutId}-container` : undefined, backgroundColor: "transparent", drag: dragEnabled ? dragAxis : false, dragDirectionLock: directionLock, _dragX: contentOffsetRef.current.x, _dragY: contentOffsetRef.current.y, dragConstraints: constraintsRef.current, onDrag: onDrag, onDragStart: onDragStart, onDragEnd: onDragEnd, preserve3d: true, style: {
            paddingRight: hasHorizontalGap ? gap : 0,
            paddingBottom: hasVerticalGap ? gap : 0,
        } },
        React.createElement(Frame_1.FrameWithMotion, { position: "relative", "data-framer-component-type": exports.pageContentWrapperType, width: wrapperWidth, height: wrapperHeight, preserve3d: false, key: effect ? Object.keys(effect).join("") : "", backgroundColor: "transparent", layoutId: layoutId ? `${layoutId}-child` : undefined, style: Object.assign(Object.assign({}, effect), { display: "flex", flexDirection: isHorizontalDirection ? "row" : "column", alignItems: alignment && Stack_1.toJustifyOrAlignment(alignment) }) }, children)));
}
exports.PageContainer = PageContainer;


/***/ }),

/***/ "./src/components/Screen.tsx":
/*!***********************************!*\
  !*** ./src/components/Screen.tsx ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Screen = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const FramerEventSession_1 = __webpack_require__(/*! ../events/FramerEventSession */ "./src/events/FramerEventSession.ts");
const Frame_1 = __webpack_require__(/*! ../render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
const events_1 = __webpack_require__(/*! ../events */ "./src/events/index.ts");
class Screen extends React.Component {
    constructor() {
        super(...arguments);
        this.session = new FramerEventSession_1.FramerEventSession(this.dispatcher);
        this.elementRef = React.createRef();
    }
    componentDidMount() {
        if (this.elementRef.current) {
            this.session.originElement = this.elementRef.current;
        }
    }
    render() {
        const { width, height, scale, color = "none", children } = this.props;
        const frame = (React.createElement(Frame_1.FrameWithMotion, { ref: this.elementRef, width: width, height: height, style: { originX: 0, originY: 0, scale, backgroundColor: color } }, children));
        return React.createElement(events_1.FramerEventListener, { session: this.session }, frame);
    }
    dispatcher(type, event, target) {
        target.dispatchEvent(new CustomEvent("FramerEvent", { bubbles: true, detail: { type: type, event: event } }));
    }
}
exports.Screen = Screen;


/***/ }),

/***/ "./src/components/Scroll/DeprecatedScroll.tsx":
/*!****************************************************!*\
  !*** ./src/components/Scroll/DeprecatedScroll.tsx ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeprecatedScroll = void 0;
const Draggable_1 = __webpack_require__(/*! ../Draggable */ "./src/components/Draggable.ts");
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Rect_1 = __webpack_require__(/*! ../../render/types/Rect */ "./src/render/types/Rect.ts");
const PropertyControls_1 = __webpack_require__(/*! ../../render/types/PropertyControls */ "./src/render/types/PropertyControls.ts");
const Frame_1 = __webpack_require__(/*! ../../render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
const RectProvider_1 = __webpack_require__(/*! ../utils/RectProvider */ "./src/components/utils/RectProvider.ts");
const observable_1 = __webpack_require__(/*! ../../utils/observable */ "./src/utils/observable.ts");
const EmptyState_1 = __webpack_require__(/*! ../EmptyState */ "./src/components/EmptyState.tsx");
const NewConstraints_1 = __webpack_require__(/*! ../../render/types/NewConstraints */ "./src/render/types/NewConstraints.tsx");
class DeprecatedScroll extends React.Component {
    wrapHandlers(dragHandler, scrollHandler) {
        if (!scrollHandler) {
            return dragHandler;
        }
        return (event, draggable) => {
            if (dragHandler) {
                dragHandler(event, draggable);
            }
            scrollHandler(event, this);
        };
    }
    render() {
        return (React.createElement(NewConstraints_1.ConsumeParentSize, null, ({ size: newParentSize }) => {
            const parentSize = NewConstraints_1.deprecatedParentSize(newParentSize);
            const frameProps = Object.assign({}, this.props, {
                parentSize,
            });
            Object.keys(DeprecatedScroll.scrollProps).map(key => {
                delete frameProps[key];
            });
            if (!this.props.children) {
                return (React.createElement(Frame_1.DeprecatedFrame, Object.assign({}, frameProps),
                    React.createElement(Draggable_1.Draggable, { width: frameProps.width, height: frameProps.height })));
            }
            const contentSize = { top: 0, left: 0, bottom: 0, right: 0 };
            const { width, height } = Frame_1.DeprecatedFrame.rect(frameProps);
            const children = React.Children.map(this.props.children, (child) => {
                if (child === null || typeof child !== "object" || typeof child.type === "string") {
                    return child;
                }
                const type = child.type;
                if (RectProvider_1.isRectProviding(type)) {
                    const frame = type.rect(child.props, parentSize);
                    if (frame) {
                        contentSize.top = Math.min(Rect_1.Rect.minY(frame), contentSize.top);
                        contentSize.left = Math.min(Rect_1.Rect.minX(frame), contentSize.left);
                        contentSize.bottom = Math.max(Rect_1.Rect.maxY(frame), contentSize.bottom);
                        contentSize.right = Math.max(Rect_1.Rect.maxX(frame), contentSize.right);
                    }
                }
                const update = {};
                if (this.props.direction === "vertical") {
                    update.width = width;
                }
                else if (this.props.direction === "horizontal") {
                    update.height = height;
                }
                return React.cloneElement(child, update);
            });
            const { onScrollStart, onScroll, onScrollEnd, onScrollSessionStart, onScrollSessionEnd, } = this.props;
            const w = observable_1.getObservableNumber(width);
            const h = observable_1.getObservableNumber(height);
            const contentW = Math.max(contentSize.right, w);
            const contentH = Math.max(contentSize.bottom, h);
            const x = Math.min(0, w - contentW);
            const y = Math.min(0, h - contentH);
            const constraints = {
                x: x,
                y: y,
                width: contentW + contentW - w,
                height: contentH + contentH - h,
            };
            const draggableProps = {};
            draggableProps.enabled = this.props.draggingEnabled;
            draggableProps.background = "none";
            draggableProps.width = contentW;
            draggableProps.height = contentH;
            draggableProps.constraints = constraints;
            draggableProps.onMove = this.props.onMove;
            draggableProps.onDragSessionStart = this.wrapHandlers(this.props.onDragSessionStart, onScrollSessionStart);
            draggableProps.onDragSessionMove = this.props.onDragSessionMove;
            draggableProps.onDragSessionEnd = this.wrapHandlers(this.props.onDragSessionEnd, onScrollSessionEnd);
            draggableProps.onDragAnimationStart = this.props.onDragAnimationStart;
            draggableProps.onDragAnimationEnd = this.props.onDragAnimationEnd;
            draggableProps.onDragDidMove = this.wrapHandlers(this.props.onDragDidMove, onScroll);
            draggableProps.onDragDirectionLockStart = this.props.onDragDirectionLockStart;
            draggableProps.onDragStart = this.wrapHandlers(this.props.onDragStart, onScrollStart);
            draggableProps.onDragEnd = this.wrapHandlers(this.props.onDragEnd, onScrollEnd);
            draggableProps.onDragWillMove = this.props.onDragWillMove;
            draggableProps.horizontal = this.props.direction !== "vertical";
            draggableProps.vertical = this.props.direction !== "horizontal";
            draggableProps.directionLock = this.props.directionLock;
            draggableProps.mouseWheel = true;
            draggableProps.left = this.props.contentOffsetX;
            draggableProps.top = this.props.contentOffsetY;
            draggableProps.preserve3d = this.props.preserve3d;
            return (React.createElement(Frame_1.DeprecatedFrame, Object.assign({}, frameProps),
                React.createElement(Draggable_1.Draggable, Object.assign({}, draggableProps), children),
                React.createElement(EmptyState_1.EmptyState, { children: this.props.children, size: { width: w, height: h }, title: "Connect to scrollable area" })));
        }));
    }
}
exports.DeprecatedScroll = DeprecatedScroll;
DeprecatedScroll.supportsConstraints = true;
DeprecatedScroll.scrollProps = {
    draggingEnabled: true,
    direction: "vertical",
    directionLock: true,
    mouseWheel: true,
    contentOffsetX: null,
    contentOffsetY: null,
};
DeprecatedScroll.defaultProps = Object.assign({}, Frame_1.DeprecatedFrame.defaultProps, DeprecatedScroll.scrollProps, {
    overflow: "visible",
    background: "none",
    width: "100%",
    height: "100%",
});
DeprecatedScroll.propertyControls = {
    direction: {
        type: PropertyControls_1.ControlType.SegmentedEnum,
        title: "Direction",
        options: ["vertical", "horizontal", "both"],
    },
    directionLock: {
        type: PropertyControls_1.ControlType.Boolean,
        title: "Lock",
        enabledTitle: "1 Axis",
        disabledTitle: "Off",
        hidden(props) {
            return props.direction !== "both";
        },
    },
};


/***/ }),

/***/ "./src/components/Scroll/index.tsx":
/*!*****************************************!*\
  !*** ./src/components/Scroll/index.tsx ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Scroll = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const framesync_1 = __importDefault(__webpack_require__(/*! framesync */ "../../node_modules/framesync/dist/es/index.js"));
const PropertyControls_1 = __webpack_require__(/*! ../../render/types/PropertyControls */ "./src/render/types/PropertyControls.ts");
const FrameWithMotion_1 = __webpack_require__(/*! ../../render/presentation/Frame/FrameWithMotion */ "./src/render/presentation/Frame/FrameWithMotion.tsx");
const EmptyState_1 = __webpack_require__(/*! ../../components/EmptyState */ "./src/components/EmptyState.tsx");
const addPropertyControls_1 = __webpack_require__(/*! ../../utils/addPropertyControls */ "./src/utils/addPropertyControls.ts");
const isMotionValue_1 = __webpack_require__(/*! ../../render/utils/isMotionValue */ "./src/render/utils/isMotionValue.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../../render/types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const isFiniteNumber_1 = __webpack_require__(/*! ../../render/utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const useWheelScroll_1 = __webpack_require__(/*! ./useWheelScroll */ "./src/components/Scroll/useWheelScroll.ts");
const useLayoutId_1 = __webpack_require__(/*! ../../render/utils/useLayoutId */ "./src/render/utils/useLayoutId.ts");
const index_1 = __webpack_require__(/*! ../../index */ "./src/index.ts");
const directionMap = {
    horizontal: "x",
    vertical: "y",
    both: true,
};
function convertScrollDirectionToDrag(scrollDirection) {
    return scrollDirection ? directionMap[scrollDirection] : scrollDirection;
}
const useUpdateChildSize = (dragDirection, children) => {
    return react_1.useMemo(() => {
        return React.Children.map(children, (child) => {
            if (child === null || typeof child !== "object" || typeof child.type === "string") {
                return child;
            }
            const update = {};
            switch (dragDirection) {
                case "vertical":
                    update.width = "100%";
                    break;
                case "horizontal":
                    update.height = "100%";
                    break;
                default:
                    return child;
            }
            return React.cloneElement(child, update);
        });
    }, [dragDirection, children]);
};
const numberFromOptionalMotionValue = (value) => {
    return typeof value === "number" ? value : value.get();
};
function Scroll(props) {
    const { direction = "vertical", directionLock = false, dragEnabled: dragEnabled = true, dragElastic, dragMomentum, dragTransition, wheelEnabled = true, contentOffsetX = 0, contentOffsetY = 0, contentWidth, contentHeight, onScrollStart, onScroll, onScrollEnd, onDragStart, onDrag, onDragEnd, onUpdate, onDirectionLock, style, children, scrollAnimate, resetOffset, __layoutId } = props, containerProps = __rest(props, ["direction", "directionLock", "dragEnabled", "dragElastic", "dragMomentum", "dragTransition", "wheelEnabled", "contentOffsetX", "contentOffsetY", "contentWidth", "contentHeight", "onScrollStart", "onScroll", "onScrollEnd", "onDragStart", "onDrag", "onDragEnd", "onUpdate", "onDirectionLock", "style", "children", "scrollAnimate", "resetOffset", "__layoutId"]);
    const layoutId = useLayoutId_1.useLayoutId(props, __layoutId, "scroll");
    const defaultX = framer_motion_1.useMotionValue(typeof contentOffsetX === "number" ? contentOffsetX : 0);
    const defaultY = framer_motion_1.useMotionValue(typeof contentOffsetY === "number" ? contentOffsetY : 0);
    const x = isMotionValue_1.isMotionValue(contentOffsetX) ? contentOffsetX : defaultX;
    const y = isMotionValue_1.isMotionValue(contentOffsetY) ? contentOffsetY : defaultY;
    const measuredConstraints = react_1.useRef(null);
    const dragControls = framer_motion_1.useDragControls();
    const isInTarget = index_1.useIsInCurrentNavigationTarget();
    const wasInTargetRef = react_1.useRef(true);
    React.useEffect(() => {
        dragControls.updateConstraints();
    });
    function setMeasureDragConstraints(constraints) {
        constraints = offsetToZero(constraints);
        if (contentWidth !== undefined)
            constraints.left = -contentWidth;
        if (contentHeight !== undefined)
            constraints.top = -contentHeight;
        return (measuredConstraints.current = constraints);
    }
    const { initial, prev } = react_1.useRef({
        initial: { x: 0, y: 0 },
        prev: { x: 0, y: 0 },
    }).current;
    const isPreview = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.preview;
    const containerRef = react_1.useRef(null);
    const contentRef = react_1.useRef(null);
    const lastOffsetRef = react_1.useRef(null);
    function shouldResetScroll(inTarget) {
        const hasEnteredTarget = inTarget && wasInTargetRef.current === false;
        return resetOffset && hasEnteredTarget;
    }
    function measureAndUpdateScrollOffset() {
        if (!contentRef.current || !containerRef.current)
            return;
        const mustReset = shouldResetScroll(isInTarget);
        wasInTargetRef.current = isInTarget;
        const previous = lastOffsetRef.current;
        if (previous === null && contentOffsetX === undefined && contentOffsetY === undefined)
            return;
        const currentOffsetX = direction !== "vertical" ? numberFromOptionalMotionValue(contentOffsetX) : 0;
        const currentOffsetY = direction !== "horizontal" ? numberFromOptionalMotionValue(contentOffsetY) : 0;
        const shouldUpdateOffset = previous === null || currentOffsetX !== previous.offsetX || currentOffsetY !== previous.offsetY;
        const currentMaxXOffset = contentRef.current.offsetWidth - containerRef.current.offsetWidth;
        const currentMaxYOffset = contentRef.current.offsetHeight - containerRef.current.offsetHeight;
        const hasSizeChanged = currentMaxXOffset !== (previous === null || previous === void 0 ? void 0 : previous.maxXOffset) || currentMaxYOffset !== (previous === null || previous === void 0 ? void 0 : previous.maxYOffset);
        const hasScrollOffsetChanged = (previous === null || previous === void 0 ? void 0 : previous.x) !== x.get() || (previous === null || previous === void 0 ? void 0 : previous.y) !== y.get();
        const shouldStayPinned = hasSizeChanged && !hasScrollOffsetChanged;
        if (mustReset || shouldUpdateOffset || shouldStayPinned) {
            const nextXOffset = -Math.min(currentOffsetX, currentMaxXOffset);
            const nextYOffset = -Math.min(currentOffsetY, currentMaxYOffset);
            x.set(nextXOffset);
            y.set(nextYOffset);
            lastOffsetRef.current = {
                maxXOffset: currentMaxXOffset,
                maxYOffset: currentMaxYOffset,
                offsetX: currentOffsetX,
                offsetY: currentOffsetY,
                x: nextXOffset,
                y: nextYOffset,
            };
        }
    }
    React.useLayoutEffect(() => {
        if (RenderEnvironment_1.RenderTarget.current() !== RenderEnvironment_1.RenderTarget.canvas)
            return;
        measureAndUpdateScrollOffset();
    });
    React.useLayoutEffect(() => {
        if (RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas)
            return;
        measureAndUpdateScrollOffset();
    }, []);
    React.useEffect(() => {
        if (shouldResetScroll(isInTarget))
            measureAndUpdateScrollOffset();
        if (isInTarget === false)
            wasInTargetRef.current = false;
    }, [isInTarget]);
    const getLatestPoint = () => ({ x: x.get(), y: y.get() });
    const resetInitialPoint = react_1.useCallback(() => {
        const point = getLatestPoint();
        initial.x = point.x;
        initial.y = point.y;
        prev.x = point.x;
        prev.y = point.y;
    }, []);
    const getPointData = react_1.useCallback(() => {
        const point = getLatestPoint();
        const data = {
            point,
            velocity: { x: x.getVelocity(), y: y.getVelocity() },
            offset: { x: point.x - initial.x, y: point.y - initial.y },
            delta: { x: point.x - prev.x, y: point.y - prev.y },
        };
        prev.x = point.x;
        prev.y = point.y;
        return data;
    }, [x, y]);
    const updateScrollListeners = react_1.useCallback(() => {
        onUpdate && onUpdate({ x: x.get(), y: y.get() });
        onScroll && onScroll(getPointData());
    }, [onScroll, onUpdate, getPointData, x, y]);
    const scheduleUpdateScrollListeners = react_1.useCallback(() => {
        framesync_1.default.update(updateScrollListeners, false, true);
    }, [updateScrollListeners]);
    const onMotionDragStart = (event, info) => {
        resetInitialPoint();
        onDragStart && onDragStart(event, info);
        onScrollStart && onScrollStart(info);
    };
    const onMotionDragTransitionEnd = () => onScrollEnd && onScrollEnd(getPointData());
    useWheelScroll_1.useWheelScroll(containerRef, {
        enabled: wheelEnabled,
        initial,
        prev,
        direction,
        offsetX: x,
        offsetY: y,
        onScrollStart,
        onScroll,
        onScrollEnd,
        constraints: measuredConstraints,
    });
    const overdragX = framer_motion_1.useMotionValue(0);
    const overdragY = framer_motion_1.useMotionValue(0);
    React.useLayoutEffect(() => {
        const setScrollX = (xValue) => {
            const element = containerRef.current;
            if (!(element instanceof HTMLDivElement))
                return;
            element.scrollLeft = -xValue;
            const constraints = measuredConstraints.current;
            if (constraints) {
                let overdragXValue = 0;
                if (xValue > constraints.right)
                    overdragXValue = xValue;
                if (xValue < constraints.left)
                    overdragXValue = xValue - constraints.left;
                overdragX.set(overdragXValue);
            }
            scheduleUpdateScrollListeners();
        };
        const currentX = x.get();
        if (currentX !== 0)
            setScrollX(currentX);
        return x.onChange(setScrollX);
    }, [x, overdragX, scheduleUpdateScrollListeners]);
    React.useLayoutEffect(() => {
        const setScrollY = (yValue) => {
            const element = containerRef.current;
            if (!(element instanceof HTMLDivElement))
                return;
            element.scrollTop = -yValue;
            const constraints = measuredConstraints.current;
            if (constraints) {
                let overdragYValue = 0;
                if (yValue > constraints.bottom)
                    overdragYValue = yValue;
                if (yValue < constraints.top)
                    overdragYValue = yValue - constraints.top;
                overdragY.set(overdragYValue);
            }
            scheduleUpdateScrollListeners();
        };
        const currentY = y.get();
        if (currentY !== 0)
            setScrollY(currentY);
        return y.onChange(setScrollY);
    }, [y, overdragY, scheduleUpdateScrollListeners]);
    const nativeOnScroll = React.useCallback(() => {
        const element = containerRef.current;
        if (!(element instanceof HTMLDivElement))
            return;
        const xDelta = Math.abs(x.get() + element.scrollLeft);
        const yDelta = Math.abs(y.get() + element.scrollTop);
        if (xDelta > 1)
            x.set(-element.scrollLeft);
        if (yDelta > 1)
            y.set(-element.scrollTop);
    }, [x, y]);
    const isEmpty = React.Children.count(children) === 0;
    const width = direction !== "vertical" && !isEmpty ? "auto" : "100%";
    const height = direction !== "horizontal" && !isEmpty ? "auto" : "100%";
    const size = !containerProps.__fromCanvasComponent
        ? {
            width: containerProps.__fromCodeComponentNode ? "100%" : containerProps.width,
            height: containerProps.__fromCodeComponentNode ? "100%" : containerProps.height,
        }
        : {};
    return (React.createElement(FrameWithMotion_1.FrameWithMotion, Object.assign({ "data-framer-component-type": "Scroll", background: "none" }, containerProps, size, { style: Object.assign(Object.assign({}, style), { willChange: isPreview ? "transform" : undefined, overflow: "hidden" }), onScroll: nativeOnScroll, preserve3d: containerProps.preserve3d, ref: containerRef, layoutId: layoutId, onBeforeLayoutMeasure: measureAndUpdateScrollOffset }),
        React.createElement(FrameWithMotion_1.FrameWithMotion, { "data-framer-component-type": "ScrollContentWrapper", animate: scrollAnimate, drag: dragEnabled && convertScrollDirectionToDrag(direction), dragDirectionLock: directionLock, dragElastic: dragElastic, dragMomentum: dragMomentum, dragTransition: dragTransition, dragConstraints: containerRef, dragControls: dragControls, onDragStart: onMotionDragStart, onDrag: onDrag, onDragEnd: onDragEnd, onDragTransitionEnd: onMotionDragTransitionEnd, onDirectionLock: onDirectionLock, onMeasureDragConstraints: setMeasureDragConstraints, width: width, height: height, _dragX: x, _dragY: y, position: "relative", x: overdragX, y: overdragY, ref: contentRef, style: {
                display: isEmpty ? "block" : "inline-block",
                willChange: isPreview ? "transform" : undefined,
                backgroundColor: "transparent",
                overflow: "visible",
                minWidth: "100%",
                minHeight: "100%",
            }, preserve3d: containerProps.preserve3d },
            React.createElement(EmptyState_1.EmptyState, { children: children, size: {
                    width: isFiniteNumber_1.isFiniteNumber(containerProps.width) ? containerProps.width : "100%",
                    height: isFiniteNumber_1.isFiniteNumber(containerProps.height) ? containerProps.height : "100%",
                }, insideUserCodeComponent: !containerProps.__fromCodeComponentNode, title: "Scroll", description: "Click and drag the connector to any frame on the canvas \u2192" }),
            useUpdateChildSize(direction, children))));
}
exports.Scroll = Scroll;
function offsetToZero({ top, left, right, bottom }) {
    const width = right - left;
    const height = bottom - top;
    return {
        top: -height,
        left: -width,
        right: 0,
        bottom: 0,
    };
}
addPropertyControls_1.addPropertyControls(Scroll, {
    direction: {
        type: PropertyControls_1.ControlType.SegmentedEnum,
        title: "Direction",
        options: ["vertical", "horizontal", "both"],
        defaultValue: "vertical",
    },
    contentOffsetX: {
        type: PropertyControls_1.ControlType.Number,
        title: "Offset X",
        defaultValue: 0,
        min: 0,
        step: 10,
        displayStepper: true,
        hidden: ({ direction }) => direction === "vertical",
    },
    contentOffsetY: {
        type: PropertyControls_1.ControlType.Number,
        title: "Offset Y",
        defaultValue: 0,
        min: 0,
        step: 10,
        displayStepper: true,
        hidden: ({ direction }) => direction === "horizontal",
    },
    directionLock: {
        type: PropertyControls_1.ControlType.Boolean,
        title: "Lock",
        enabledTitle: "1 Axis",
        disabledTitle: "Off",
        defaultValue: true,
    },
    dragEnabled: {
        type: PropertyControls_1.ControlType.Boolean,
        title: "Drag",
        enabledTitle: "On",
        disabledTitle: "Off",
        defaultValue: true,
    },
    wheelEnabled: {
        type: PropertyControls_1.ControlType.Boolean,
        title: "Wheel",
        enabledTitle: "On",
        disabledTitle: "Off",
        defaultValue: true,
    },
    resetOffset: {
        type: PropertyControls_1.ControlType.Boolean,
        title: "Reset",
        enabledTitle: "True",
        disabledTitle: "False",
        defaultValue: false,
    },
});
Scroll.supportsConstraints = true;


/***/ }),

/***/ "./src/components/Scroll/useWheelScroll.ts":
/*!*************************************************!*\
  !*** ./src/components/Scroll/useWheelScroll.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.useWheelScroll = void 0;
const react_1 = __webpack_require__(/*! react */ "react");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const debounce_1 = __webpack_require__(/*! ../../render/utils/debounce */ "./src/render/utils/debounce.ts");
const math_1 = __webpack_require__(/*! ../../utils/math */ "./src/utils/math.ts");
function useWheelScroll(ref, { enabled, initial, prev, direction, constraints, offsetX, offsetY, onScrollStart, onScroll, onScrollEnd, }) {
    const isWheelScrollActive = react_1.useRef(false);
    const getPointData = react_1.useCallback(() => {
        const point = getPoint(offsetX, offsetY);
        const data = {
            point,
            velocity: { x: offsetX.getVelocity(), y: offsetY.getVelocity() },
            offset: { x: point.x - initial.x, y: point.y - initial.y },
            delta: { x: point.x - prev.x, y: point.y - prev.y },
        };
        prev.x = point.x;
        prev.y = point.y;
        return data;
    }, []);
    let handler;
    if (enabled) {
        function clampX(v) {
            return constraints.current === null ? v : math_1.clamp(v, constraints.current.left, constraints.current.right);
        }
        function clampY(v) {
            return constraints.current === null ? v : math_1.clamp(v, constraints.current.top, constraints.current.bottom);
        }
        function updateX(delta) {
            offsetX.stop();
            offsetX.set(clampX(offsetX.get() - delta));
        }
        function updateY(delta) {
            offsetY.stop();
            offsetY.set(clampY(offsetY.get() - delta));
        }
        const debouncedOnScrollEnd = debounce_1.debounce(() => {
            onScrollEnd && onScrollEnd(getPointData());
            isWheelScrollActive.current = false;
        }, 200);
        handler = (e) => {
            e.preventDefault();
            if (!isWheelScrollActive.current) {
                const x = offsetX.get();
                const y = offsetY.get();
                initial.x = x;
                initial.y = y;
                prev.x = x;
                prev.y = y;
                onScrollStart && onScrollStart(getPointData());
                isWheelScrollActive.current = true;
            }
            switch (direction) {
                case "horizontal":
                    updateX(e.deltaX);
                    break;
                case "vertical":
                    updateY(e.deltaY);
                    break;
                default:
                    updateX(e.deltaX);
                    updateY(e.deltaY);
            }
            onScroll && onScroll(getPointData());
            debouncedOnScrollEnd();
        };
    }
    framer_motion_1.useDomEvent(ref, "wheel", handler, { passive: false });
}
exports.useWheelScroll = useWheelScroll;
function getPoint(x, y) {
    return { x: x.get(), y: y.get() };
}


/***/ }),

/***/ "./src/components/Stack/index.tsx":
/*!****************************************!*\
  !*** ./src/components/Stack/index.tsx ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.toJustifyOrAlignment = exports.toFlexDirection = exports.isGapEnabled = exports.fraction = exports.isFractionDimension = exports.Stack = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const Frame_1 = __webpack_require__(/*! ../../render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
const isFiniteNumber_1 = __webpack_require__(/*! ../../render/utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const Layer_1 = __webpack_require__(/*! ../../render/presentation/Layer */ "./src/render/presentation/Layer.tsx");
const PropertyControls_1 = __webpack_require__(/*! ../../render/types/PropertyControls */ "./src/render/types/PropertyControls.ts");
const type_guards_1 = __webpack_require__(/*! ../../utils/type-guards */ "./src/utils/type-guards.ts");
const paddingFromProps_1 = __webpack_require__(/*! ../utils/paddingFromProps */ "./src/components/utils/paddingFromProps.ts");
const NewConstraints_1 = __webpack_require__(/*! ../../render/types/NewConstraints */ "./src/render/types/NewConstraints.tsx");
const FrameWithMotion_1 = __webpack_require__(/*! ../../render/presentation/Frame/FrameWithMotion */ "./src/render/presentation/Frame/FrameWithMotion.tsx");
const processOverrideForwarding_1 = __webpack_require__(/*! ../../render/utils/processOverrideForwarding */ "./src/render/utils/processOverrideForwarding.ts");
const injectComponentCSSRules_1 = __webpack_require__(/*! ../../render/utils/injectComponentCSSRules */ "./src/render/utils/injectComponentCSSRules.ts");
const addPropertyControls_1 = __webpack_require__(/*! ../../utils/addPropertyControls */ "./src/utils/addPropertyControls.ts");
const useLayoutId_1 = __webpack_require__(/*! ../../render/utils/useLayoutId */ "./src/render/utils/useLayoutId.ts");
const Constraints_1 = __webpack_require__(/*! ../../render/types/Constraints */ "./src/render/types/Constraints.ts");
exports.Stack = React.memo(React.forwardRef(function Stack(stackProps, ref) {
    const { direction = "vertical", distribution = "start", alignment = "center", gap = 10, children, style: styleProp, className, willChangeTransform, __fromCodeComponentNode, parentSize } = stackProps, containerProps = __rest(stackProps, ["direction", "distribution", "alignment", "gap", "children", "style", "className", "willChangeTransform", "__fromCodeComponentNode", "parentSize"]);
    injectComponentCSSRules_1.injectComponentCSSRules();
    const flexDirection = toFlexDirection(direction);
    const isReverse = isReverseDirection(flexDirection);
    const justifyContent = toJustifyOrAlignment(distribution);
    const padding = paddingFromProps_1.hasPaddingPerSide(containerProps) || containerProps.padding
        ? paddingFromProps_1.makePaddingString(paddingFromProps_1.paddingFromProps(containerProps))
        : undefined;
    const style = Object.assign({}, styleProp);
    Layer_1.Layer.applyWillChange({ willChangeTransform }, style, true);
    if (__fromCodeComponentNode && !NewConstraints_1.constraintsEnabled(FrameWithMotion_1.unwrapFrameProps(containerProps))) {
        containerProps.width = "100%";
        containerProps.height = "100%";
        containerProps._constraints = { enabled: true };
    }
    const layoutId = useLayoutId_1.useLayoutId(stackProps);
    const { children: _children, props } = processOverrideForwarding_1.processOverrideForwarding(containerProps, children);
    const { widthType = Constraints_1.DimensionType.FixedNumber, heightType = Constraints_1.DimensionType.FixedNumber } = containerProps;
    const fractionChildren = handleFraction(_children, direction, widthType, heightType);
    const gapChildren = wrapInGapElement(fractionChildren, gap, flexDirection, justifyContent);
    const content = NewConstraints_1.useProvideParentSize(gapChildren, parentSize !== null && parentSize !== void 0 ? parentSize : NewConstraints_1.ParentSizeState.Disabled);
    const attributes = {
        "data-framer-component-type": "Stack",
    };
    if (containerProps.__fromCanvasComponent)
        attributes["data-framer-generated"] = true;
    let contentWrapperWidth = "100%";
    let contentWrapperHeight = "100%";
    if (widthType === Constraints_1.DimensionType.Auto) {
        props.width = "min-content";
        contentWrapperWidth = "auto";
    }
    if (heightType === Constraints_1.DimensionType.Auto) {
        props.height = "min-content";
        contentWrapperHeight = "auto";
    }
    const contentWrapperStyle = {
        display: "flex",
        flexDirection,
        justifyContent: justifyContent,
        alignItems: toJustifyOrAlignment(alignment),
        padding,
        width: contentWrapperWidth,
        height: contentWrapperHeight,
    };
    return (React.createElement(Frame_1.FrameWithMotion, Object.assign({ background: "none" }, props, { layoutId: layoutId, ref: ref }, attributes, { style: style, className: className }),
        React.createElement(framer_motion_1.motion.div, { "data-framer-stack-content-wrapper": true, "data-framer-stack-direction-reverse": isReverse, style: contentWrapperStyle }, content)));
}));
exports.Stack.displayName = "Stack";
function isFractionDimension(dimension) {
    return typeof dimension === "string" && dimension.endsWith("fr");
}
exports.isFractionDimension = isFractionDimension;
function fraction(dimension) {
    const value = parseFloat(dimension);
    return isFiniteNumber_1.isFiniteNumber(value) ? value : 0;
}
exports.fraction = fraction;
function handleFraction(children, direction, widthType, heightType) {
    return React.Children.map(children, child => {
        if (!type_guards_1.isReactChild(child) || !type_guards_1.isReactElement(child))
            return;
        const isVertical = direction === "vertical";
        const style = {};
        let hasFraction = false;
        const { style: propsStyle, size } = child.props;
        let { width, height } = child.props;
        if (size !== undefined) {
            if (width === undefined)
                width = size;
            if (height === undefined)
                height = size;
        }
        let newWidth = width;
        let newHeight = height;
        if (isFractionDimension(width)) {
            hasFraction = true;
            hasFraction = true;
            if (isVertical) {
                if (widthType === Constraints_1.DimensionType.Auto) {
                    style.alignSelf = "stretch";
                    newWidth = "auto";
                }
                else {
                    newWidth = `${fraction(width) * 100}%`;
                }
            }
            else {
                newWidth = 1;
                style.flexGrow = fraction(width);
                style.flexBasis = 0;
            }
            style.width = newWidth;
        }
        if (isFractionDimension(height)) {
            hasFraction = true;
            if (isVertical) {
                newHeight = 1;
                style.flexGrow = fraction(height);
                style.flexBasis = 0;
            }
            else {
                if (heightType === Constraints_1.DimensionType.Auto) {
                    style.alignSelf = "stretch";
                    newHeight = "auto";
                }
                else {
                    newHeight = `${fraction(height) * 100}%`;
                }
            }
            style.height = newHeight;
        }
        if (!hasFraction)
            return child;
        const nextStyle = Object.assign(Object.assign({}, propsStyle), style);
        return React.cloneElement(child, {
            width: newWidth,
            height: newHeight,
            style: nextStyle,
        });
    });
}
function isGapEnabled(gap, justifyContent) {
    if (!gap) {
        return false;
    }
    if (justifyContent && ["space-between", "space-around", "space-evenly", "stretch"].includes(justifyContent)) {
        return false;
    }
    return true;
}
exports.isGapEnabled = isGapEnabled;
function wrapInGapElement(children, gap, direction, justifyContent) {
    if (!isGapEnabled(gap, justifyContent)) {
        return children;
    }
    const isVertical = isVerticalDirection(direction);
    const gapStyle = {
        display: "contents",
        ["--stack-gap-x"]: `${isVertical ? 0 : gap}px`,
        ["--stack-gap-y"]: `${isVertical ? gap : 0}px`,
    };
    return (React.createElement("div", { "data-framer-stack-gap": true, style: gapStyle }, children));
}
function toFlexDirection(direction) {
    switch (direction) {
        case "vertical":
            return "column";
        case "horizontal":
            return "row";
        default:
            return direction;
    }
}
exports.toFlexDirection = toFlexDirection;
function isVerticalDirection(direction) {
    return direction === "column" || direction === "column-reverse";
}
function isReverseDirection(direction) {
    switch (direction) {
        case "column-reverse":
        case "row-reverse":
            return true;
        default:
            return false;
    }
}
function toJustifyOrAlignment(distribution) {
    switch (distribution) {
        case "start":
            return "flex-start";
        case "end":
            return "flex-end";
        default:
            return distribution;
    }
}
exports.toJustifyOrAlignment = toJustifyOrAlignment;
addPropertyControls_1.addPropertyControls(exports.Stack, {
    direction: {
        type: PropertyControls_1.ControlType.SegmentedEnum,
        options: ["horizontal", "vertical"],
        title: "Direction",
        defaultValue: "vertical",
    },
    distribution: {
        type: PropertyControls_1.ControlType.Enum,
        options: ["start", "center", "end", "space-between", "space-around", "space-evenly"],
        optionTitles: ["Start", "Center", "End", "Space Between", "Space Around", "Space Evenly"],
        title: "Distribute",
        defaultValue: "space-around",
    },
    alignment: {
        type: PropertyControls_1.ControlType.SegmentedEnum,
        options: ["start", "center", "end"],
        title: "Align",
        defaultValue: "center",
    },
    gap: {
        type: PropertyControls_1.ControlType.Number,
        min: 0,
        title: "Gap",
        hidden: props => {
            return (props.distribution !== undefined &&
                ["space-between", "space-around", "space-evenly"].includes(props.distribution));
        },
        defaultValue: 10,
    },
    padding: {
        type: PropertyControls_1.ControlType.FusedNumber,
        toggleKey: "paddingPerSide",
        toggleTitles: ["Padding", "Padding per side"],
        valueKeys: ["paddingTop", "paddingRight", "paddingBottom", "paddingLeft"],
        valueLabels: ["t", "r", "b", "l"],
        min: 0,
        title: "Padding",
        defaultValue: 0,
    },
});


/***/ }),

/***/ "./src/components/Stack/types.ts":
/*!***************************************!*\
  !*** ./src/components/Stack/types.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/components/hoc/WithDragging.tsx":
/*!*********************************************!*\
  !*** ./src/components/hoc/WithDragging.tsx ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WithDragging = exports.DraggingContext = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Rect_1 = __webpack_require__(/*! ../../render/types/Rect */ "./src/render/types/Rect.ts");
const isFiniteNumber_1 = __webpack_require__(/*! ../../render/utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const math_1 = __webpack_require__(/*! ../../utils/math */ "./src/utils/math.ts");
const InertialScrollAnimator_1 = __webpack_require__(/*! ../../animation/Animators/InertialScrollAnimator */ "./src/animation/Animators/InertialScrollAnimator.ts");
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const MainLoopDriver_1 = __webpack_require__(/*! ../../animation/Drivers/MainLoopDriver */ "./src/animation/Drivers/MainLoopDriver.ts");
exports.DraggingContext = React.createContext({ dragging: false });
const hoistNonReactStatic = __webpack_require__(/*! hoist-non-react-statics */ "../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
function WithDragging(Component) {
    class WithDraggingHOC extends React.Component {
        constructor(props, defaultProps) {
            super(props, defaultProps);
            this.state = {
                isDragging: false,
            };
            this.x = Animatable_1.Animatable(0);
            this.y = Animatable_1.Animatable(0);
            this.onChangePosition = (change, transaction) => {
                if (change.value === change.oldValue) {
                    return;
                }
                if (this.props.onMove) {
                    this.props.onMove(this.point, this);
                }
            };
            this.isMoving = false;
            this.isAnimating = false;
            this.directionLockAxis = null;
            this._constraints = null;
            this.panStart = (event) => {
                if (!this.props.enabled) {
                    return;
                }
                this.isMoving = this.isAnimating;
                this.stopAnimation();
                this.resetdirectionLock();
                this.layerStartPoint = this.point;
                this.correctedLayerStartPoint = this.point;
                if (this._constraints && this.props.bounce) {
                    this.correctedLayerStartPoint = this.constrainPosition(this.correctedLayerStartPoint, this._constraints, 1 / this.props.overdragScale);
                }
                this.previousPoint = this.correctedLayerStartPoint;
                if (!this.state.isDragging) {
                    this.setState({ isDragging: true });
                }
                if (this.props.onDragSessionStart) {
                    this.props.onDragSessionStart(event, this);
                }
            };
            this.pan = (event) => {
                const { enabled, speedX, speedY, directionLock, overdragScale, vertical, horizontal, pixelAlign, onDragStart, onDragWillMove, onDragDidMove, onDragSessionMove, } = this.props;
                if (!enabled) {
                    return;
                }
                let point = Object.assign({}, this.previousPoint);
                point.x += event.delta.x * speedX;
                point.y += event.delta.y * speedY;
                this.previousPoint = Object.assign({}, point);
                if (this._constraints) {
                    point = this.constrainPosition(point, this._constraints, overdragScale);
                }
                if (directionLock) {
                    if (this.directionLockAxis === null) {
                        const offset = event.offset;
                        offset.x = offset.x * speedX;
                        offset.y = offset.y * speedY;
                        this.updatedirectionLock(offset);
                        return;
                    }
                    else {
                        if (this.directionLockAxis === "y") {
                            point.x = this.layerStartPoint.x;
                        }
                        if (this.directionLockAxis === "x") {
                            point.y = this.layerStartPoint.y;
                        }
                    }
                }
                if (!this.state.isDragging) {
                    this.setState({ isDragging: true });
                    this.isMoving = true;
                    if (onDragStart) {
                        onDragStart(event, this);
                    }
                }
                if (onDragWillMove) {
                    onDragWillMove(event, this);
                }
                if (pixelAlign) {
                    point.x = Math.round(point.x);
                    point.y = Math.round(point.y);
                }
                if (!horizontal && !vertical) {
                    return;
                }
                let axis = null;
                if (horizontal && !vertical) {
                    axis = "x";
                }
                else if (vertical && !horizontal) {
                    axis = "y";
                }
                this.setPoint(point, axis);
                if (onDragDidMove) {
                    onDragDidMove(event, this);
                }
                if (onDragSessionMove) {
                    onDragSessionMove(event, this);
                }
            };
            this.panEnd = (event) => {
                if (!this.props.enabled) {
                    return;
                }
                this.startAnimation(event);
                const { onDragSessionEnd, onDragEnd } = this.props;
                if (this.state.isDragging) {
                    if (onDragEnd) {
                        onDragEnd(event, this);
                    }
                }
                if (onDragSessionEnd) {
                    onDragSessionEnd(event, this);
                }
                if (this.state.isDragging) {
                    this.setState({ isDragging: false });
                }
                this.isMoving = this.isAnimating;
            };
            this.mouseWheelStart = (event) => {
                this.correctedLayerStartPoint = this.point;
                this.previousPoint = this.correctedLayerStartPoint;
                this.stopAnimation();
            };
            this.mouseWheel = (event) => {
                const { enabled, speedX, speedY, vertical, horizontal, pixelAlign, onDragWillMove, onDragDidMove, mouseWheel, } = this.props;
                if (!mouseWheel || !enabled) {
                    return;
                }
                let point = Object.assign({}, this.point);
                point.x -= event.delta.x * speedX;
                point.y -= event.delta.y * speedY;
                if (this._constraints) {
                    point = this.constrainPosition(point, this._constraints, 0, false);
                }
                if (onDragWillMove) {
                    onDragWillMove(event, this);
                }
                if (pixelAlign) {
                    point.x = Math.round(point.x);
                    point.y = Math.round(point.y);
                }
                if (!horizontal && !vertical) {
                    return;
                }
                let axis = null;
                if (horizontal && !vertical) {
                    axis = "x";
                }
                else if (vertical && !horizontal) {
                    axis = "y";
                }
                this.setPoint(point, axis);
                if (onDragDidMove) {
                    onDragDidMove(event, this);
                }
            };
            this.mouseWheelEnd = (event) => { };
            this.onAnimationStep = (axis, value) => {
                if (axis === "x" && this.props.horizontal === false) {
                    return;
                }
                if (axis === "y" && this.props.vertical === false) {
                    return;
                }
                let delta = 0;
                if (this.constraints) {
                    if (this.props.bounce) {
                        delta = value - this.getValue(axis);
                    }
                    else {
                        const { minX, minY, maxX, maxY } = this.calculateConstraints(this._constraints);
                        if (axis === "x") {
                            delta = math_1.clamp(value, minX, maxX) - this.getValue(axis);
                        }
                        if (axis === "y") {
                            delta = math_1.clamp(value, minY, maxY) - this.getValue(axis);
                        }
                    }
                }
                else {
                    delta = value - this.getValue(axis);
                }
                const updatePoint = this.point;
                if (axis === "x") {
                    updatePoint[axis] = updatePoint[axis] + delta;
                }
                if (axis === "y") {
                    updatePoint[axis] = updatePoint[axis] + delta;
                }
                this.setPoint(updatePoint, axis);
            };
            this.onAnimationStop = (axis) => {
                if (axis === "x" && this.props.horizontal === false) {
                    return;
                }
                if (axis === "y" && this.props.vertical === false) {
                    return;
                }
                if (!this.animation) {
                    return;
                }
                if (this.props.pixelAlign) {
                    const point = this.point;
                    point.x = Math.round(point.x);
                    point.y = Math.round(point.y);
                    this.setPoint(point, axis);
                }
                if (this.animation.x.isFinished() && this.animation.y.isFinished()) {
                    return this.stopAnimation();
                }
            };
            this.stopAnimation = () => {
                this.isAnimating = false;
                this.isMoving = false;
                if (!this.animation) {
                    return;
                }
                this.animation.x.cancel();
                this.animation.y.cancel();
                if (this.props.onDragAnimationEnd) {
                    this.props.onDragAnimationEnd(this.animation, this);
                }
                this.animation = null;
            };
            const x = this.props.left;
            const y = this.props.top;
            if (!x) {
                this.x = Animatable_1.Animatable(0);
            }
            else if (Animatable_1.isAnimatable(x)) {
                this.x = x;
            }
            else {
                this.x = Animatable_1.Animatable(x);
            }
            if (!y) {
                this.y = Animatable_1.Animatable(0);
            }
            else if (Animatable_1.isAnimatable(y)) {
                this.y = y;
            }
            else {
                this.y = Animatable_1.Animatable(y);
            }
            this.x.onUpdate(this.onChangePosition);
            this.y.onUpdate(this.onChangePosition);
            const constraints = this.props.constraints;
            if (constraints) {
                this.constraints = constraints;
            }
        }
        UNSAFE_componentWillReceiveProps(props) {
            if (this.props.left !== props.left && isFiniteNumber_1.isFiniteNumber(props.left)) {
                this.x.set(props.left);
            }
            if (this.props.top !== props.top && isFiniteNumber_1.isFiniteNumber(props.top)) {
                this.y.set(props.top);
            }
            const constraints = props.constraints;
            if (constraints) {
                this.constraints = constraints;
            }
        }
        get point() {
            return { x: this.x.get(), y: this.y.get() };
        }
        setPoint(point, axis = null) {
            switch (axis) {
                case "x":
                    this.x.set(point.x);
                    break;
                case "y":
                    this.y.set(point.y);
                    break;
                case null:
                    this.x.set(point.x);
                    this.y.set(point.y);
                    break;
            }
        }
        getValue(axis) {
            switch (axis) {
                case "x":
                    return this.x.get();
                case "y":
                    return this.y.get();
            }
        }
        get width() {
            const width = this.props.width;
            if (!width) {
                return 100;
            }
            if (Animatable_1.isAnimatable(width)) {
                return width.get();
            }
            if (typeof width === "string") {
                return parseFloat(width);
            }
            return width;
        }
        get height() {
            const height = this.props.height;
            if (!height) {
                return 100;
            }
            if (Animatable_1.isAnimatable(height)) {
                return height.get();
            }
            if (typeof height === "string") {
                return parseFloat(height);
            }
            return height;
        }
        get constraints() {
            return this._constraints;
        }
        set constraints(value) {
            if (value !== null && typeof value === "object") {
                this._constraints = {
                    x: value.x || 0,
                    y: value.y || 0,
                    width: value.width || 0,
                    height: value.height || 0,
                };
            }
            else {
                this._constraints = null;
            }
            if (this._constraints) {
                this.updateAnimationConstraints(this._constraints);
            }
        }
        get constraintsOffset() {
            if (!this.constraints) {
                return { x: 0, y: 0 };
            }
            const { minX, minY, maxX, maxY } = this.calculateConstraints(this._constraints);
            const point = this.point;
            const constrainedPoint = { x: math_1.clamp(point.x, minX, maxX), y: math_1.clamp(point.y, minY, maxY) };
            const offset = { x: point.x - constrainedPoint.x, y: point.y - constrainedPoint.y };
            return offset;
        }
        get isBeyondConstraints() {
            const constraintsOffset = this.constraintsOffset;
            if (constraintsOffset.x !== 0) {
                return true;
            }
            if (constraintsOffset.y !== 0) {
                return true;
            }
            return false;
        }
        clampAndScale(value, min, max, scale, scaleAllowed) {
            if (!scaleAllowed) {
                return math_1.clamp(value, min, max);
            }
            if (value < min) {
                value = min + (value - min) * scale;
            }
            if (value > max) {
                value = max + (value - max) * scale;
            }
            return value;
        }
        calculateConstraints(bounds) {
            if (!bounds) {
                return { minX: Infinity, maxX: Infinity, minY: Infinity, maxY: Infinity };
            }
            if (bounds.width < this.width) {
                bounds.width = this.width;
            }
            if (bounds.height < this.height) {
                bounds.height = this.height;
            }
            const constraints = {
                minX: Rect_1.Rect.minX(bounds),
                maxX: Rect_1.Rect.maxX(bounds),
                minY: Rect_1.Rect.minY(bounds),
                maxY: Rect_1.Rect.maxY(bounds),
            };
            constraints.maxX -= this.width;
            constraints.maxY -= this.height;
            return constraints;
        }
        constrainPosition(proposedPoint, bounds, scale, overdrag = this.props.overdrag) {
            const { maxX, maxY, minX, minY } = this.calculateConstraints(this._constraints);
            const point = {
                x: this.clampAndScale(proposedPoint.x, minX, maxX, scale, overdrag),
                y: this.clampAndScale(proposedPoint.y, minY, maxY, scale, overdrag),
            };
            if (this.props.speedX === 0 || this.props.horizontal === false) {
                point.x = proposedPoint.x;
            }
            if (this.props.speedY === 0 || this.props.vertical === false) {
                point.y = proposedPoint.y;
            }
            return point;
        }
        updatedirectionLock(correctedDelta) {
            if (Math.abs(correctedDelta.y) > this.props.directionLockThreshold.y) {
                this.directionLockAxis = "y";
            }
            else if (Math.abs(correctedDelta.x) > this.props.directionLockThreshold.x) {
                this.directionLockAxis = "x";
            }
            if (this.directionLockAxis !== null) {
                if (this.props.onDragDirectionLockStart) {
                    this.props.onDragDirectionLockStart(this.directionLockAxis, this);
                }
            }
        }
        resetdirectionLock() {
            this.directionLockAxis = null;
        }
        setupAnimation() {
            if (this.animation) {
                return;
            }
            this.animation = { x: this.setupAnimationForAxis("x"), y: this.setupAnimationForAxis("y") };
            this.updateAnimationConstraints(this._constraints);
        }
        setupAnimationForAxis(axis) {
            const properties = {};
            properties[axis] = true;
            const animator = new InertialScrollAnimator_1.InertialScrollAnimator({
                momentum: this.props.momentumOptions,
                bounce: this.props.bounceOptions,
            });
            const updateCallback = (value) => {
                this.onAnimationStep(axis, value);
            };
            const doneCallback = () => {
                this.onAnimationStop(axis);
            };
            return new MainLoopDriver_1.MainLoopAnimationDriver(animator, updateCallback, doneCallback);
        }
        updateAnimationConstraints(constraints) {
            if (!this.animation) {
                return;
            }
            if (constraints) {
                const { minX, minY, maxX, maxY } = this.calculateConstraints(constraints);
                this.animation.x.animator.setLimits(minX, maxX);
                this.animation.y.animator.setLimits(minY, maxY);
            }
            else {
                this.animation.x.animator.setLimits(-Infinity, +Infinity);
                this.animation.y.animator.setLimits(-Infinity, +Infinity);
            }
        }
        startAnimation(event) {
            const { momentum, bounce, momentumVelocityMultiplier, speedX, speedY, overdrag, onDragAnimationStart, } = this.props;
            if (!(momentum || bounce)) {
                return;
            }
            if (this.isBeyondConstraints === false && momentum === false) {
                return;
            }
            if (this.isBeyondConstraints === false && this.state.isDragging === false) {
                return;
            }
            const { minX, minY, maxX, maxY } = this.calculateConstraints(this._constraints);
            const startAnimationX = overdrag === true || (this.point.x > minX && this.point.x < maxX);
            const startAnimationY = overdrag === true || (this.point.y > minY && this.point.y < maxY);
            if (startAnimationX === startAnimationY && startAnimationY === false) {
                return;
            }
            const velocity = event.velocity(0.1);
            let velocityX = velocity.x * momentumVelocityMultiplier * speedX;
            let velocityY = velocity.y * momentumVelocityMultiplier * speedY;
            if (this.directionLockAxis === "x") {
                velocityY = 0;
            }
            if (this.directionLockAxis === "y") {
                velocityX = 0;
            }
            this.setupAnimation();
            this.isAnimating = true;
            this.isMoving = true;
            if (!this.animation) {
                return;
            }
            this.animation.x.animator.setState({ x: this.point.x, v: velocityX });
            if (startAnimationX) {
                this.animation.x.play();
            }
            this.animation.y.animator.setState({ x: this.point.y, v: velocityY });
            if (startAnimationY) {
                this.animation.y.play();
            }
            if (onDragAnimationStart) {
                onDragAnimationStart(this.animation, this);
            }
        }
        wrapHandler(ownHandler, originalHandler) {
            if (!originalHandler) {
                return ownHandler;
            }
            return (event) => {
                ownHandler(event);
                originalHandler(event);
            };
        }
        render() {
            const _a = this.props, { onPanStart, onPan, onPanEnd, onMouseWheelStart, onMouseWheel, onMouseWheelEnd } = _a, attributes = __rest(_a, ["onPanStart", "onPan", "onPanEnd", "onMouseWheelStart", "onMouseWheel", "onMouseWheelEnd"]);
            const originalProps = Object.assign({}, attributes);
            Object.keys(WithDraggingHOC.draggingDefaultProps).forEach(key => {
                delete originalProps[key];
            });
            originalProps.onPanStart = this.wrapHandler(this.panStart, onPanStart);
            originalProps.onPan = this.wrapHandler(this.pan, onPan);
            originalProps.onPanEnd = this.wrapHandler(this.panEnd, onPanEnd);
            originalProps.onMouseWheelStart = this.wrapHandler(this.mouseWheelStart, onMouseWheelStart);
            originalProps.onMouseWheel = this.wrapHandler(this.mouseWheel, onMouseWheel);
            originalProps.onMouseWheelEnd = this.wrapHandler(this.mouseWheelEnd, onMouseWheelEnd);
            originalProps.left = this.x;
            originalProps.top = this.y;
            return (React.createElement(exports.DraggingContext.Provider, { value: { dragging: this.state.isDragging } },
                React.createElement(Component, Object.assign({}, originalProps))));
        }
    }
    WithDraggingHOC.draggingDefaultProps = {
        momentum: true,
        momentumOptions: { friction: 2.1, tolerance: 1 },
        momentumVelocityMultiplier: 800,
        speedX: 1,
        speedY: 1,
        bounce: true,
        bounceOptions: { friction: 40, tension: 200, tolerance: 1 },
        directionLock: false,
        directionLockThreshold: { x: 10, y: 10 },
        overdrag: true,
        overdragScale: 0.5,
        pixelAlign: true,
        velocityTimeout: 100,
        velocityScale: 890,
        horizontal: true,
        vertical: true,
        enabled: true,
        constraints: {},
        mouseWheel: false,
    };
    WithDraggingHOC.defaultProps = Object.assign({}, Component.defaultProps, WithDraggingHOC.draggingDefaultProps);
    const withDragging = WithDraggingHOC;
    hoistNonReactStatic(withDragging, Component);
    return withDragging;
}
exports.WithDragging = WithDragging;


/***/ }),

/***/ "./src/components/hoc/WithEvents.tsx":
/*!*******************************************!*\
  !*** ./src/components/hoc/WithEvents.tsx ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WithEvents = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const FramerEvent_1 = __webpack_require__(/*! ../../events/FramerEvent */ "./src/events/FramerEvent.ts");
const WithDragging_1 = __webpack_require__(/*! ./WithDragging */ "./src/components/hoc/WithDragging.tsx");
const hoistNonReactStatic = __webpack_require__(/*! hoist-non-react-statics */ "../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
const hoverProps = {
    onMouseEnter: "mouseenter",
    onMouseLeave: "mouseleave",
};
const hoverEventKeys = Object.keys(hoverProps);
const eventHandlerMapping = {
    panstart: ["onPanStart"],
    pan: ["onPan"],
    panend: ["onPanEnd"],
    tapstart: ["onTapStart", "onMouseDown"],
    tap: ["onTap", "onClick"],
    tapend: ["onTapEnd", "onMouseUp"],
    mousewheelstart: ["onMouseWheelStart"],
    mousewheel: ["onMouseWheel"],
    mousewheelend: ["onMouseWheelEnd"],
};
const tapEventKeys = new Set(["tapstart", "tap", "tapend"]);
function WithEvents(BaseComponent) {
    var _a;
    const withEvents = (_a = class WithEventsHOC extends React.Component {
            constructor() {
                super(...arguments);
                this.shouldCancelTap = false;
                this.activeEventListeners = new Map();
                this.hasFramerEventListener = false;
                this.component = React.createRef();
            }
            get element() {
                return this.component.current && this.component.current.element;
            }
            componentDidMount() {
                this.addEventListeners();
            }
            componentDidUpdate(prevProps) {
                this.addEventListeners(prevProps);
            }
            componentWillUnmount() {
                this.removeEventListeners();
            }
            addEventListeners(prevProps) {
                if (this.element && !this.hasFramerEventListener) {
                    this.element.addEventListener("FramerEvent", ({ detail }) => {
                        const type = detail.type;
                        const framerEvent = detail.event;
                        this.handleEvent(type, framerEvent);
                    });
                    hoverEventKeys.forEach((eventName) => this.addHoverEvent(eventName));
                    this.hasFramerEventListener = true;
                }
                else if (this.element && prevProps) {
                    hoverEventKeys.forEach((eventName) => this.checkHoverEvent(eventName, prevProps));
                }
                else if (!this.element) {
                    this.hasFramerEventListener = false;
                }
            }
            removeEventListeners() {
                hoverEventKeys.forEach((eventName) => this.removeHoverEvent(eventName));
            }
            addHoverEvent(eventName) {
                const originalEventListener = this.props[eventName];
                if (this.element && originalEventListener) {
                    const eventListener = (e) => {
                        const framerEvent = new FramerEvent_1.FramerEvent(e);
                        originalEventListener(framerEvent);
                    };
                    this.activeEventListeners.set(eventName, eventListener);
                    const domEventName = hoverProps[eventName];
                    this.element.addEventListener(domEventName, eventListener);
                }
            }
            removeHoverEvent(eventName) {
                const eventListener = this.activeEventListeners.get(eventName);
                if (this.element && eventListener) {
                    const domEventName = hoverProps[eventName];
                    this.element.removeEventListener(domEventName, eventListener);
                    this.activeEventListeners.delete(eventName);
                }
            }
            checkHoverEvent(eventName, prevProps) {
                if (prevProps[eventName] !== this.props[eventName]) {
                    this.removeHoverEvent(eventName);
                    this.addHoverEvent(eventName);
                }
            }
            handleEvent(type, framerEvent) {
                const eventListenerKeys = eventHandlerMapping[type];
                if (!eventListenerKeys)
                    return;
                eventListenerKeys.forEach((eventKey) => {
                    const eventListener = this.props[eventKey];
                    const cancelEvent = this.shouldCancelTap && tapEventKeys.has(eventKey);
                    if (eventListener && !cancelEvent) {
                        eventListener(framerEvent);
                    }
                });
            }
            render() {
                return (React.createElement(WithDragging_1.DraggingContext.Consumer, null, (value) => {
                    this.shouldCancelTap = value.dragging;
                    return React.createElement(BaseComponent, Object.assign({}, this.props, { ref: this.component }));
                }));
            }
        },
        _a.defaultProps = Object.assign({}, BaseComponent.defaultProps),
        _a);
    hoistNonReactStatic(withEvents, BaseComponent);
    return withEvents;
}
exports.WithEvents = WithEvents;


/***/ }),

/***/ "./src/components/hoc/WithNavigator.tsx":
/*!**********************************************!*\
  !*** ./src/components/hoc/WithNavigator.tsx ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WithNavigator = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const NavigationLink_1 = __webpack_require__(/*! ../../render/types/NavigationLink */ "./src/render/types/NavigationLink.ts");
const Navigation_1 = __webpack_require__(/*! ../Navigation */ "./src/components/Navigation.tsx");
const hoistNonReactStatic = __webpack_require__(/*! hoist-non-react-statics */ "../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
function WithNavigator(BaseComponent, navigationTransition, navigationTransitionDirection, NavigationTarget, navigationTransitionOptions) {
    const InternalWithNavigator = class extends React.Component {
        render() {
            return (React.createElement(Navigation_1.NavigationContext.Consumer, null, navigation => {
                const navigate = () => {
                    if (navigationTransition === "goBack") {
                        navigation.goBack();
                        return;
                    }
                    if (!NavigationTarget)
                        return;
                    const component = NavigationTarget();
                    const appearsFrom = transitionDirectionToSide(navigationTransitionDirection);
                    switch (navigationTransition) {
                        case NavigationLink_1.NavigationTransitionType.instant:
                            navigation.instant(component);
                            break;
                        case NavigationLink_1.NavigationTransitionType.fade:
                            navigation.fade(component);
                            break;
                        case NavigationLink_1.NavigationTransitionType.modal:
                            navigation.modal(component, navigationTransitionOptions);
                            break;
                        case NavigationLink_1.NavigationTransitionType.push:
                            navigation.push(component, { appearsFrom });
                            break;
                        case NavigationLink_1.NavigationTransitionType.overlay:
                            navigation.overlay(component, Object.assign(Object.assign({}, navigationTransitionOptions), { appearsFrom }));
                            break;
                        case NavigationLink_1.NavigationTransitionType.flip:
                            navigation.flip(component, { appearsFrom });
                            break;
                        case NavigationLink_1.NavigationTransitionType.magicMotion:
                            navigation.magicMotion(component, {});
                            break;
                    }
                };
                const _a = this.props, { onTap } = _a, props = __rest(_a, ["onTap"]);
                if (onTap) {
                    props.onTap = (...args) => {
                        onTap.apply(this, args);
                        navigate.apply(this, args);
                    };
                }
                else {
                    props.onTap = navigate;
                }
                return React.createElement(BaseComponent, Object.assign({}, props));
            }));
        }
    };
    hoistNonReactStatic(InternalWithNavigator, BaseComponent);
    return InternalWithNavigator;
}
exports.WithNavigator = WithNavigator;
function transitionDirectionToSide(direction) {
    switch (direction) {
        case "left":
            return "right";
        case "right":
            return "left";
        case "up":
            return "bottom";
        case "down":
            return "top";
    }
}


/***/ }),

/***/ "./src/components/hoc/withMeasuredSize.tsx":
/*!*************************************************!*\
  !*** ./src/components/hoc/withMeasuredSize.tsx ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _sharedResizeObserver, _callbacks;
Object.defineProperty(exports, "__esModule", { value: true });
exports.withMeasuredSize = exports.SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const useForceUpdate_1 = __webpack_require__(/*! ../../modules/useForceUpdate */ "./src/modules/useForceUpdate.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../../render/types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const resize_observer_polyfill_1 = __importDefault(__webpack_require__(/*! resize-observer-polyfill */ "../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"));
const DEFAULT_SIZE = 200;
class SharedObserver {
    constructor() {
        _sharedResizeObserver.set(this, void 0);
        _callbacks.set(this, new WeakMap());
        __classPrivateFieldSet(this, _sharedResizeObserver, new resize_observer_polyfill_1.default(this.updateResizedElements.bind(this)));
    }
    updateResizedElements(entries) {
        for (const entry of entries) {
            const callbackForElement = __classPrivateFieldGet(this, _callbacks).get(entry.target);
            if (callbackForElement)
                callbackForElement(entry.contentRect);
        }
    }
    observeElementWithCallback(element, callback) {
        __classPrivateFieldGet(this, _sharedResizeObserver).observe(element);
        __classPrivateFieldGet(this, _callbacks).set(element, callback);
    }
    unobserve(element) {
        __classPrivateFieldGet(this, _sharedResizeObserver).unobserve(element);
        __classPrivateFieldGet(this, _callbacks).delete(element);
    }
}
_sharedResizeObserver = new WeakMap(), _callbacks = new WeakMap();
const sharedResizeObserver = new SharedObserver();
function useMeasuredSize(ref) {
    const forceUpdate = useForceUpdate_1.useForceUpdate();
    const size = React.useRef(null);
    function updateSize(newSize) {
        if (!size.current || newSize.height !== size.current.height || newSize.width !== size.current.width) {
            size.current = { width: newSize.width, height: newSize.height };
            forceUpdate();
        }
    }
    React.useLayoutEffect(() => {
        if (!ref.current)
            return;
        const { offsetWidth, offsetHeight } = ref.current;
        updateSize({
            width: offsetWidth,
            height: offsetHeight,
        });
        sharedResizeObserver.observeElementWithCallback(ref.current, updateSize);
        return () => {
            if (!ref.current)
                return;
            sharedResizeObserver.unobserve(ref.current);
        };
    }, []);
    return size.current;
}
exports.SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE = "data-framer-size-compatibility-wrapper";
const withMeasuredSize = (Component) => (props) => {
    var _a, _b, _c, _d;
    const ref = React.useRef(null);
    const size = useMeasuredSize(ref);
    const dataProps = { [exports.SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE]: true };
    const shouldRender = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.export || Boolean(size);
    const fallbackWidth = (_a = props.width) !== null && _a !== void 0 ? _a : DEFAULT_SIZE;
    const fallbackHeight = (_b = props.height) !== null && _b !== void 0 ? _b : DEFAULT_SIZE;
    return (React.createElement("div", Object.assign({ style: { width: "100%", height: "100%", pointerEvents: "none" }, ref: ref }, dataProps), shouldRender && (React.createElement(Component, Object.assign({}, props, { width: (_c = size === null || size === void 0 ? void 0 : size.width) !== null && _c !== void 0 ? _c : fallbackWidth, height: (_d = size === null || size === void 0 ? void 0 : size.height) !== null && _d !== void 0 ? _d : fallbackHeight })))));
};
exports.withMeasuredSize = withMeasuredSize;


/***/ }),

/***/ "./src/components/index.ts":
/*!*********************************!*\
  !*** ./src/components/index.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.useOnCurrentTargetChange = exports.useIsInCurrentNavigationTarget = exports.isFractionDimension = exports.fraction = exports.isGapEnabled = exports.toJustifyOrAlignment = exports.toFlexDirection = exports.Stack = exports.Page = exports.Draggable = exports.Navigation = exports.Screen = exports.DeprecatedScroll = exports.Scroll = void 0;
var Scroll_1 = __webpack_require__(/*! ./Scroll */ "./src/components/Scroll/index.tsx");
Object.defineProperty(exports, "Scroll", { enumerable: true, get: function () { return Scroll_1.Scroll; } });
var DeprecatedScroll_1 = __webpack_require__(/*! ./Scroll/DeprecatedScroll */ "./src/components/Scroll/DeprecatedScroll.tsx");
Object.defineProperty(exports, "DeprecatedScroll", { enumerable: true, get: function () { return DeprecatedScroll_1.DeprecatedScroll; } });
var Screen_1 = __webpack_require__(/*! ./Screen */ "./src/components/Screen.tsx");
Object.defineProperty(exports, "Screen", { enumerable: true, get: function () { return Screen_1.Screen; } });
var Navigation_1 = __webpack_require__(/*! ./Navigation */ "./src/components/Navigation.tsx");
Object.defineProperty(exports, "Navigation", { enumerable: true, get: function () { return Navigation_1.Navigation; } });
var Draggable_1 = __webpack_require__(/*! ./Draggable */ "./src/components/Draggable.ts");
Object.defineProperty(exports, "Draggable", { enumerable: true, get: function () { return Draggable_1.Draggable; } });
var Page_1 = __webpack_require__(/*! ./Page */ "./src/components/Page.tsx");
Object.defineProperty(exports, "Page", { enumerable: true, get: function () { return Page_1.Page; } });
var Stack_1 = __webpack_require__(/*! ./Stack */ "./src/components/Stack/index.tsx");
Object.defineProperty(exports, "Stack", { enumerable: true, get: function () { return Stack_1.Stack; } });
Object.defineProperty(exports, "toFlexDirection", { enumerable: true, get: function () { return Stack_1.toFlexDirection; } });
Object.defineProperty(exports, "toJustifyOrAlignment", { enumerable: true, get: function () { return Stack_1.toJustifyOrAlignment; } });
Object.defineProperty(exports, "isGapEnabled", { enumerable: true, get: function () { return Stack_1.isGapEnabled; } });
Object.defineProperty(exports, "fraction", { enumerable: true, get: function () { return Stack_1.fraction; } });
Object.defineProperty(exports, "isFractionDimension", { enumerable: true, get: function () { return Stack_1.isFractionDimension; } });
var NavigationContainerContext_1 = __webpack_require__(/*! ./NavigationContainerContext */ "./src/components/NavigationContainerContext.tsx");
Object.defineProperty(exports, "useIsInCurrentNavigationTarget", { enumerable: true, get: function () { return NavigationContainerContext_1.useIsInCurrentNavigationTarget; } });
var NavigationTargetContext_1 = __webpack_require__(/*! ./NavigationTargetContext */ "./src/components/NavigationTargetContext.tsx");
Object.defineProperty(exports, "useOnCurrentTargetChange", { enumerable: true, get: function () { return NavigationTargetContext_1.useOnCurrentTargetChange; } });


/***/ }),

/***/ "./src/components/reduceNavigationStateForAction.ts":
/*!**********************************************************!*\
  !*** ./src/components/reduceNavigationStateForAction.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.reduceNavigationStateForAction = exports.defaultState = void 0;
const NavigationContainer_1 = __webpack_require__(/*! ./NavigationContainer */ "./src/components/NavigationContainer.tsx");
const defaultState = () => ({
    current: -1,
    previous: -1,
    currentOverlay: -1,
    previousOverlay: -1,
    visualIndex: 0,
    overlayItemId: 0,
    historyItemId: 0,
    history: [],
    overlayStack: [],
    containers: {},
    containerIndex: {},
    containerVisualIndex: {},
    containerIsRemoved: {},
    transitionForContainer: {},
    previousTransition: null,
});
exports.defaultState = defaultState;
function reduceNavigationStateForAction(state, action) {
    switch (action.type) {
        case "addOverlay":
            return addOverlay(state, action.transition, action.component);
        case "removeOverlay":
            return removeOverlay(state);
        case "add":
            return add(state, action.key, action.transition, action.component);
        case "remove":
            return remove(state);
        case "update":
            return updateComponent(state, action.key, action.component);
        default:
            return;
    }
}
exports.reduceNavigationStateForAction = reduceNavigationStateForAction;
function updateComponent(currentState, key, component) {
    return Object.assign(Object.assign({}, currentState), { containers: Object.assign(Object.assign({}, currentState.containers), { [key]: component }) });
}
function addOverlay(currentState, transition, component) {
    const currentOverlay = currentState.overlayStack[currentState.currentOverlay];
    if (currentOverlay && currentOverlay.component === component)
        return;
    const overlayItemId = currentState.overlayItemId + 1;
    const overlayStack = [
        ...currentState.overlayStack,
        {
            key: `stack-${overlayItemId}`,
            component,
            transition,
        },
    ];
    return Object.assign(Object.assign({}, currentState), { overlayStack,
        overlayItemId, currentOverlay: Math.max(0, Math.min(currentState.currentOverlay + 1, overlayStack.length - 1)), previousOverlay: currentState.currentOverlay });
}
function removeOverlay(currentState) {
    return Object.assign(Object.assign({}, currentState), { overlayStack: [], currentOverlay: -1, previousOverlay: currentState.currentOverlay });
}
function add(currentState, key, transition, component) {
    if (!currentState.containers[key])
        currentState.containers[key] = component;
    currentState.history = currentState.history.slice(0, currentState.current + 1);
    currentState.visualIndex = Math.max(currentState.history.length, 0);
    const currentItem = currentState.history[currentState.history.length - 1];
    const isCurrentScreen = currentItem && currentItem.key === key;
    currentState.overlayStack = [];
    if (isCurrentScreen && currentState.currentOverlay > -1) {
        return Object.assign(Object.assign({}, currentState), { currentOverlay: -1, previousOverlay: currentState.currentOverlay });
    }
    if (isCurrentScreen)
        return;
    const shouldMoveForward = (currentItem === null || currentItem === void 0 ? void 0 : currentItem.key) && transition.withMagicMotion
        ? isNextTargetForward(key, currentState.containerVisualIndex[key], currentState.containerIsRemoved[key], currentState.history)
        : true;
    currentState.history.push({
        key,
        transition,
        visualIndex: shouldMoveForward ? Math.max(currentState.visualIndex, 0) : currentState.containerVisualIndex[key],
    });
    const current = currentState.current + 1;
    const previous = currentState.current;
    for (const containerKey in currentState.containerIndex) {
        if (currentState.containerIndex[containerKey] === current) {
            currentState.containerIndex[containerKey] = findLatestHistoryIndex(containerKey, currentState.history);
        }
    }
    currentState.containerIndex[key] = current;
    const { containerVisualIndex, containerIsRemoved } = magicMotionPropsForAdd(currentState, key, currentItem === null || currentItem === void 0 ? void 0 : currentItem.key, shouldMoveForward);
    const transitionForContainer = updateTransitions(current, previous, currentState.history, currentState.containerIndex, currentState.transitionForContainer);
    return Object.assign(Object.assign({}, currentState), { current,
        previous,
        containerVisualIndex,
        containerIsRemoved,
        transitionForContainer, previousTransition: null, currentOverlay: -1, historyItemId: currentState.historyItemId + 1, previousOverlay: currentState.currentOverlay });
}
function remove(currentState) {
    const history = [...currentState.history.slice(0, currentState.current + 1)];
    if (history.length === 1)
        return;
    const currentItem = history.pop();
    if (!currentItem)
        return;
    const target = history[history.length - 1];
    currentState.containerIndex[target.key] = history.length - 1;
    const shouldRemoveContainer = history.every(item => item.key !== currentItem.key);
    if (shouldRemoveContainer) {
        delete currentState.containers[currentItem.key];
    }
    const current = currentState.current - 1;
    const previous = currentState.current;
    const { containerIsRemoved, containerVisualIndex, previousTransition, visualIndex } = magicMotionPropsForRemove(currentState, target, currentItem);
    const transitionForContainer = updateTransitions(current, previous, currentState.history, currentState.containerIndex, currentState.transitionForContainer);
    return Object.assign(Object.assign({}, currentState), { current,
        previous,
        containerIsRemoved,
        containerVisualIndex,
        previousTransition,
        visualIndex,
        transitionForContainer });
}
function magicMotionPropsForAdd(currentState, nextKey, currentKey, shouldMoveForward) {
    const update = {
        containerVisualIndex: Object.assign({}, currentState.containerVisualIndex),
        containerIsRemoved: Object.assign({}, currentState.containerIsRemoved),
    };
    if (shouldMoveForward) {
        update.containerVisualIndex[nextKey] = currentState.history.length - 1;
        update.containerIsRemoved[nextKey] = false;
    }
    else {
        const nextVisualIndex = currentState.containerVisualIndex[nextKey];
        for (const key in currentState.containerVisualIndex) {
            if (currentState.containerVisualIndex[key] > nextVisualIndex) {
                update.containerIsRemoved[key] = true;
            }
        }
    }
    return update;
}
function magicMotionPropsForRemove(currentState, target, currentItem) {
    const { history } = window;
    const validTargets = [target.key, currentItem.key];
    const nextValidTarget = history[history.length - 2];
    const previousTransition = currentState.previousTransition === null ? null : Object.assign({}, currentState.previousTransition);
    const update = {
        containerIsRemoved: Object.assign({}, currentState.containerIsRemoved),
        containerVisualIndex: Object.assign({}, currentState.containerVisualIndex),
        previousTransition,
        visualIndex: currentState.visualIndex,
    };
    if (nextValidTarget)
        validTargets.push(nextValidTarget.key);
    const shouldRemoveLastKey = currentState.containerVisualIndex[target.key] <= currentState.containerVisualIndex[currentItem.key] ||
        (target.visualIndex !== undefined && target.visualIndex < history.length - 1);
    const nextIndex = target.visualIndex;
    if (shouldRemoveLastKey) {
        update.containerIsRemoved[currentItem.key] = true;
        update.containerVisualIndex[target.key] = nextIndex !== undefined ? nextIndex : history.length - 1;
    }
    else {
        update.visualIndex = currentState.visualIndex + 1;
        update.containerVisualIndex[target.key] = currentState.visualIndex + 1;
    }
    if (currentItem.transition.withMagicMotion)
        update.previousTransition = currentItem.transition || null;
    currentState.containerIsRemoved[target.key] = false;
    return update;
}
function findLatestHistoryIndex(key, history) {
    for (let index = history.length; index > history.length; index--) {
        if (history[index].key === key)
            return index;
    }
    return -1;
}
function updateTransitions(current, previous, history, containerIndex, transitionForContainer) {
    const transitions = Object.assign({}, transitionForContainer);
    Object.keys(containerIndex).forEach(key => {
        const transition = transitionForScreen(containerIndex[key], { current, previous, history });
        if (transition) {
            transitions[key] = transition;
        }
    });
    return transitions;
}
function isNextTargetForward(key, index, removed, history) {
    if (removed)
        return true;
    if (index === 0)
        return false;
    const forwardHistory = history.slice(index, history.length);
    if (forwardHistory.findIndex(item => item.key === key) > -1)
        return true;
    const backwardsHistory = history.slice(0, index - 1);
    if (backwardsHistory.findIndex(item => item.key === key) > -1)
        return false;
    return true;
}
function transitionForScreen(screenIndex, stackState) {
    const { current, previous, history } = stackState;
    if (screenIndex !== current && screenIndex !== previous)
        return undefined;
    if (screenIndex === current && current > previous) {
        const item = history[screenIndex];
        return sequence("enter", item.transition.enter, item.transition.animation);
    }
    if (screenIndex === previous && current > previous) {
        const item = history[screenIndex + 1];
        return sequence("exit", item.transition.exit, item.transition.animation);
    }
    if (screenIndex === current && current < previous) {
        const item = history[screenIndex + 1];
        return sequence("enter", item.transition.exit, item.transition.animation);
    }
    if (screenIndex === previous && current < previous) {
        const item = history[screenIndex];
        return sequence("exit", item.transition.enter, item.transition.animation);
    }
}
const allAnimatableKeys = Object.keys(NavigationContainer_1.allAnimatableProperties);
function sequence(direction, transition, animation) {
    const value = {};
    const from = {};
    allAnimatableKeys.forEach(property => {
        value[property] = NavigationContainer_1.allAnimatableProperties[property];
        from[property] = Object.assign(Object.assign({}, animation), { from: NavigationContainer_1.allAnimatableProperties[property] });
    });
    if (transition) {
        Object.keys(transition).forEach(property => {
            if (transition[property] === undefined)
                return;
            const transitionTo = transition[property];
            const transitionFrom = typeof transition[property] === "string"
                ? `${NavigationContainer_1.allAnimatableProperties[property]}%`
                : NavigationContainer_1.allAnimatableProperties[property];
            value[property] = direction === "enter" ? transitionFrom : transitionTo;
            from[property] = Object.assign(Object.assign({}, animation), { from: direction === "enter" ? transitionTo : transitionFrom, velocity: 0 });
        });
    }
    return Object.assign(Object.assign({}, value), { transition: Object.assign({}, from) });
}


/***/ }),

/***/ "./src/components/useNavigation.ts":
/*!*****************************************!*\
  !*** ./src/components/useNavigation.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.useNavigation = void 0;
const react_1 = __webpack_require__(/*! react */ "react");
const Navigation_1 = __webpack_require__(/*! ./Navigation */ "./src/components/Navigation.tsx");
function useNavigation() {
    return react_1.useContext(Navigation_1.NavigationContext);
}
exports.useNavigation = useNavigation;


/***/ }),

/***/ "./src/components/utils/RectProvider.ts":
/*!**********************************************!*\
  !*** ./src/components/utils/RectProvider.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.rectFromReactNode = exports.isRectProviding = void 0;
function isRectProviding(c) {
    return "rect" in c && c.rect instanceof Function;
}
exports.isRectProviding = isRectProviding;
function rectFromReactNode(node) {
    if (!node ||
        node === true ||
        typeof node === "number" ||
        typeof node === "string" ||
        typeof node["type"] === "string") {
        return null;
    }
    const type = node["type"];
    const props = node["props"];
    if (type && props && isRectProviding(type)) {
        return type.rect(props);
    }
    else {
        return null;
    }
}
exports.rectFromReactNode = rectFromReactNode;


/***/ }),

/***/ "./src/components/utils/paddingFromProps.ts":
/*!**************************************************!*\
  !*** ./src/components/utils/paddingFromProps.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.makePaddingString = exports.paddingFromProps = exports.hasPaddingPerSide = void 0;
function hasPaddingPerSide(props) {
    const { paddingPerSide, paddingTop, paddingBottom, paddingLeft, paddingRight } = props;
    return (paddingPerSide !== false &&
        (paddingTop !== undefined ||
            paddingBottom !== undefined ||
            paddingLeft !== undefined ||
            paddingRight !== undefined));
}
exports.hasPaddingPerSide = hasPaddingPerSide;
function paddingFromProps(props) {
    const { padding = 0, paddingTop, paddingBottom, paddingLeft, paddingRight } = props;
    if (hasPaddingPerSide(props)) {
        return {
            top: paddingTop !== undefined ? paddingTop : padding,
            bottom: paddingBottom !== undefined ? paddingBottom : padding,
            left: paddingLeft !== undefined ? paddingLeft : padding,
            right: paddingRight !== undefined ? paddingRight : padding,
        };
    }
    return {
        top: padding,
        bottom: padding,
        left: padding,
        right: padding,
    };
}
exports.paddingFromProps = paddingFromProps;
function makePaddingString({ top, left, bottom, right, }) {
    return `${top}px ${right}px ${bottom}px ${left}px`;
}
exports.makePaddingString = makePaddingString;


/***/ }),

/***/ "./src/components/utils/useConstant.ts":
/*!*********************************************!*\
  !*** ./src/components/utils/useConstant.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.useConstant = void 0;
const react_1 = __webpack_require__(/*! react */ "react");
function useConstant(init) {
    const ref = react_1.useRef(null);
    if (ref.current === null) {
        ref.current = init();
    }
    return ref.current;
}
exports.useConstant = useConstant;


/***/ }),

/***/ "./src/components/utils/useMap.ts":
/*!****************************************!*\
  !*** ./src/components/utils/useMap.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.useMap = void 0;
const useConstant_1 = __webpack_require__(/*! ./useConstant */ "./src/components/utils/useConstant.ts");
function newMap() {
    return new Map();
}
function useMap() {
    return useConstant_1.useConstant(newMap);
}
exports.useMap = useMap;


/***/ }),

/***/ "./src/core/EventEmitter.ts":
/*!**********************************!*\
  !*** ./src/core/EventEmitter.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.EventEmitter = void 0;
const eventemitter3_1 = __webpack_require__(/*! eventemitter3 */ "../../node_modules/eventemitter3/index.js");
class EventEmitter {
    constructor() {
        this._emitter = new eventemitter3_1.EventEmitter();
    }
    eventNames() {
        return this._emitter.eventNames();
    }
    eventListeners() {
        const listeners = {};
        for (const eventName of this._emitter.eventNames()) {
            listeners[eventName] = this._emitter.listeners(eventName);
        }
        return listeners;
    }
    on(eventName, fn) {
        this.addEventListener(eventName, fn, false, false, this);
    }
    off(eventName, fn) {
        this.removeEventListeners(eventName, fn);
    }
    once(eventName, fn) {
        this.addEventListener(eventName, fn, true, false, this);
    }
    unique(eventName, fn) {
        this.addEventListener(eventName, fn, false, true, this);
    }
    addEventListener(eventName, fn, once, unique, context) {
        if (unique) {
            for (const name of this._emitter.eventNames()) {
                if (fn === this._emitter.listeners(name)) {
                    return;
                }
            }
        }
        if (once === true) {
            this._emitter.once(eventName, fn, context);
        }
        else {
            this._emitter.addListener(eventName, fn, context);
        }
    }
    removeEventListeners(eventName, fn) {
        if (eventName) {
            this._emitter.removeListener(eventName, fn);
        }
        else {
            this.removeAllEventListeners();
        }
    }
    removeAllEventListeners() {
        this._emitter.removeAllListeners();
    }
    countEventListeners(eventName, handler) {
        if (eventName) {
            return this._emitter.listeners(eventName).length;
        }
        else {
            let count = 0;
            for (const name of this._emitter.eventNames()) {
                count += this._emitter.listeners(name).length;
            }
            return count;
        }
    }
    emit(eventName, ...args) {
        this._emitter.emit(eventName, ...args);
    }
}
exports.EventEmitter = EventEmitter;


/***/ }),

/***/ "./src/core/Loop.ts":
/*!**************************!*\
  !*** ./src/core/Loop.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainLoop = exports.Loop = void 0;
const time = __importStar(__webpack_require__(/*! ./Time */ "./src/core/Time.ts"));
const EventEmitter_1 = __webpack_require__(/*! ./EventEmitter */ "./src/core/EventEmitter.ts");
let LoopTimeStep = 1 / 60;
class Loop extends EventEmitter_1.EventEmitter {
    constructor(start = false) {
        super();
        this._started = false;
        this._frame = 0;
        this._frameTasks = [];
        this.tick = () => {
            if (!this._started)
                return;
            time.raf(this.tick);
            this.emit("update", this._frame, LoopTimeStep);
            this.emit("render", this._frame, LoopTimeStep);
            this._processFrameTasks();
            this._frame++;
        };
        if (start) {
            this.start();
        }
    }
    addFrameTask(task) {
        this._frameTasks.push(task);
    }
    _processFrameTasks() {
        const postEventTasks = this._frameTasks;
        const length = postEventTasks.length;
        if (length === 0)
            return;
        for (let i = 0; i < length; i++) {
            postEventTasks[i]();
        }
        postEventTasks.length = 0;
    }
    static set TimeStep(value) {
        LoopTimeStep = value;
    }
    static get TimeStep() {
        return LoopTimeStep;
    }
    start() {
        if (this._started)
            return this;
        this._frame = 0;
        this._started = true;
        time.raf(this.tick);
        return this;
    }
    stop() {
        this._started = false;
        return this;
    }
    get frame() {
        return this._frame;
    }
    get time() {
        return this._frame * LoopTimeStep;
    }
}
exports.Loop = Loop;
exports.MainLoop = new Loop();


/***/ }),

/***/ "./src/core/Time.ts":
/*!**************************!*\
  !*** ./src/core/Time.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.raf = void 0;
const safeWindow_1 = __webpack_require__(/*! ../utils/safeWindow */ "./src/utils/safeWindow.ts");
const _raf = (f) => {
    setTimeout(f, 1 / 60);
};
const __raf = safeWindow_1.safeWindow["requestAnimationFrame"] || _raf;
const raf = (f) => __raf(f);
exports.raf = raf;


/***/ }),

/***/ "./src/data/Data.ts":
/*!**************************!*\
  !*** ./src/data/Data.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Data = void 0;
const ObservableObject_1 = __webpack_require__(/*! ./ObservableObject */ "./src/data/ObservableObject.ts");
function Data(initial = {}) {
    const data = ObservableObject_1.ObservableObject(initial, false, false);
    Data.addData(data);
    return data;
}
exports.Data = Data;
(function (Data) {
    Data._stores = [];
    function addData(data) {
        Data._stores.push(data);
    }
    Data.addData = addData;
    function reset() {
        Data._stores.forEach(target => ObservableObject_1.ObservableObject.resetObject(target));
    }
    Data.reset = reset;
    function addObserver(target, observer) {
        return ObservableObject_1.ObservableObject.addObserver(target, observer);
    }
    Data.addObserver = addObserver;
})(Data = exports.Data || (exports.Data = {}));


/***/ }),

/***/ "./src/data/ObservableObject.ts":
/*!**************************************!*\
  !*** ./src/data/ObservableObject.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ObservableObject = void 0;
const Observers_1 = __webpack_require__(/*! ../animation/Animatable/Observers */ "./src/animation/Animatable/Observers.ts");
const Animatable_1 = __webpack_require__(/*! ../animation/Animatable */ "./src/animation/Animatable/index.ts");
const hasOwnProperty = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
function ObservableObject(initial = {}, makeAnimatables = false, observeAnimatables = true) {
    const unproxiedState = {};
    unproxiedState[$private] = {
        makeAnimatables,
        observeAnimatables,
        observers: new Observers_1.Observers(),
        reset() {
            for (const key in state) {
                if (hasOwnProperty(state, key)) {
                    state[key] = hasOwnProperty(initial, key) ? initial[key] : undefined;
                }
            }
        },
        transactions: new Set(),
    };
    const state = new Proxy(unproxiedState, sharedProxyHandler);
    Object.assign(state, initial);
    return state;
}
exports.ObservableObject = ObservableObject;
(function (ObservableObject) {
    function resetObject(target) {
        return target[$private].reset();
    }
    ObservableObject.resetObject = resetObject;
    function addObserver(target, observer) {
        return target[$private].observers.add(observer);
    }
    ObservableObject.addObserver = addObserver;
})(ObservableObject || (ObservableObject = {}));
exports.ObservableObject = ObservableObject;
class ObservableObjectProxyHandler {
    constructor() {
        this.set = (target, key, value, receiver) => {
            if (key === $private) {
                return false;
            }
            const privateObject = target[$private];
            let animatable;
            let rawValue;
            if (Animatable_1.isAnimatable(value)) {
                animatable = value;
                rawValue = animatable.get();
            }
            else {
                rawValue = value;
            }
            if (privateObject.makeAnimatables && typeof value !== "function" && typeof value !== "object" && !animatable) {
                animatable = Animatable_1.Animatable(value);
            }
            if (privateObject.observeAnimatables && animatable) {
                const transactions = privateObject.transactions;
                animatable.onUpdate({
                    update: (change, transaction) => {
                        if (transaction) {
                            transactions.add(transaction);
                        }
                        privateObject.observers.notify({ value: receiver }, transaction);
                    },
                    finish: (transaction) => {
                        if (transactions.delete(transaction)) {
                            privateObject.observers.finishTransaction(transaction);
                        }
                    },
                });
            }
            let result = false;
            let changed = true;
            if (target[key] !== undefined) {
                if (Animatable_1.isAnimatable(target[key])) {
                    changed = target[key].get() !== rawValue;
                    target[key].set(rawValue);
                }
                else {
                    changed = target[key] !== rawValue;
                    target[key] = rawValue;
                }
                const rawValueIsObject = rawValue !== null && typeof rawValue === "object";
                if (Array.isArray(rawValue) || rawValueIsObject)
                    changed = true;
                result = true;
            }
            else {
                if (animatable) {
                    value = animatable;
                }
                result = Reflect.set(target, key, value);
            }
            if (changed) {
                privateObject.observers.notify({ value: receiver });
            }
            return result;
        };
        this.get = (target, key, receiver) => {
            if (key === $private) {
                return target[key];
            }
            const value = Reflect.get(target, key, receiver);
            return typeof value === "function" ? value.bind(receiver) : value;
        };
    }
    deleteProperty(target, key) {
        const result = Reflect.deleteProperty(target, key);
        target[$private].observers.notify({ value: target });
        return result;
    }
    ownKeys(target) {
        const keys = Reflect.ownKeys(target);
        const privateIndex = keys.indexOf($private);
        if (privateIndex !== -1) {
            keys.splice(privateIndex, 1);
        }
        return keys;
    }
    getOwnPropertyDescriptor(target, key) {
        if (key === $private) {
            return undefined;
        }
        return Reflect.getOwnPropertyDescriptor(target, key);
    }
}
const sharedProxyHandler = new ObservableObjectProxyHandler();
const $private = Symbol("private");


/***/ }),

/***/ "./src/data/PropertyStore.ts":
/*!***********************************!*\
  !*** ./src/data/PropertyStore.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PropertyStore = void 0;
const ObservableObject_1 = __webpack_require__(/*! ./ObservableObject */ "./src/data/ObservableObject.ts");
const shared_1 = __webpack_require__(/*! @framerjs/shared */ "../shared/src/index.ts");
function PropertyStore(initial = {}, makeAnimatables = false) {
    shared_1.deprecationWarning("PropertyStore", "1.0.0", "Data() or ObservableObject()");
    return ObservableObject_1.ObservableObject(initial, makeAnimatables);
}
exports.PropertyStore = PropertyStore;
(function (PropertyStore) {
    function addObserver(target, observer) {
        return ObservableObject_1.ObservableObject.addObserver(target, observer);
    }
    PropertyStore.addObserver = addObserver;
})(PropertyStore = exports.PropertyStore || (exports.PropertyStore = {}));


/***/ }),

/***/ "./src/data/useData/index.ts":
/*!***********************************!*\
  !*** ./src/data/useData/index.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.createData = exports.DataContext = void 0;
const react_1 = __webpack_require__(/*! react */ "react");
const store_1 = __webpack_require__(/*! ./store */ "./src/data/useData/store.ts");
const defaultId = Symbol("default");
exports.DataContext = react_1.createContext(defaultId);
function createData(defaultState, actions) {
    const stores = new Map();
    const useData = (id, initialState) => {
        const contextId = react_1.useContext(exports.DataContext);
        id = id || contextId;
        const store = react_1.useMemo(() => {
            if (!stores.has(id)) {
                stores.set(id, store_1.createStore(initialState || defaultState, actions));
            }
            return stores.get(id);
        }, [id]);
        const [, notifyUpdates] = react_1.useState(store.getVersion());
        const storeValueAtHookCallTime = react_1.useMemo(() => store.get(), [store]);
        react_1.useEffect(() => {
            const unsubscribe = store.subscribe(notifyUpdates);
            if (storeValueAtHookCallTime !== store.get())
                notifyUpdates(store.getVersion());
            return unsubscribe;
        }, [store, storeValueAtHookCallTime]);
        return [store.get(), store.getActions()];
    };
    return useData;
}
exports.createData = createData;


/***/ }),

/***/ "./src/data/useData/store.ts":
/*!***********************************!*\
  !*** ./src/data/useData/store.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.createStore = void 0;
function bindActionsToStore(get, set, actions) {
    const boundActions = {};
    for (const key in actions) {
        boundActions[key] = (data) => set(actions[key](get(), data));
    }
    return boundActions;
}
function createStore(initialState, unboundActions) {
    let state = initialState;
    let version = 0;
    const subscribers = new Set();
    const notifySubscriber = (sub) => sub(version);
    const get = () => state;
    const set = (latestState) => {
        version++;
        state = latestState;
        subscribers.forEach(notifySubscriber);
    };
    const actions = unboundActions ? bindActionsToStore(get, set, unboundActions) : set;
    return {
        get,
        set,
        getVersion: () => version,
        getActions: () => actions,
        subscribe: sub => {
            subscribers.add(sub);
            return () => subscribers.delete(sub);
        },
    };
}
exports.createStore = createStore;


/***/ }),

/***/ "./src/deprecated/DataObserver.tsx":
/*!*****************************************!*\
  !*** ./src/deprecated/DataObserver.tsx ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataObserver = exports.DataObserverContext = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Data_1 = __webpack_require__(/*! ../data/Data */ "./src/data/Data.ts");
const Loop_1 = __webpack_require__(/*! ../core/Loop */ "./src/core/Loop.ts");
const initialState = { update: 0 };
exports.DataObserverContext = React.createContext(initialState);
class DataObserver extends React.Component {
    constructor() {
        super(...arguments);
        this.observers = [];
        this.state = initialState;
        this.taskAdded = false;
        this.frameTask = () => {
            this.setState({ update: this.state.update + 1 });
            this.taskAdded = false;
        };
        this.observer = () => {
            if (this.taskAdded)
                return;
            this.taskAdded = true;
            Loop_1.MainLoop.addFrameTask(this.frameTask);
        };
    }
    componentWillUnmount() {
        this.observers.map(cancel => cancel());
        Data_1.Data.reset();
    }
    render() {
        const { children } = this.props;
        this.observers.map(cancel => cancel());
        this.observers = [];
        Data_1.Data._stores.forEach((d) => {
            const observer = Data_1.Data.addObserver(d, this.observer);
            this.observers.push(observer);
        });
        return React.createElement(exports.DataObserverContext.Provider, { value: Object.assign({}, this.state) }, children);
    }
}
exports.DataObserver = DataObserver;


/***/ }),

/***/ "./src/deprecated/WithOverride.tsx":
/*!*****************************************!*\
  !*** ./src/deprecated/WithOverride.tsx ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WithOverride = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
const DataObserver_1 = __webpack_require__(/*! ./DataObserver */ "./src/deprecated/DataObserver.tsx");
const convertColorProps_1 = __webpack_require__(/*! ./convertColorProps */ "./src/deprecated/convertColorProps.ts");
const hoistNonReactStatic = __webpack_require__(/*! hoist-non-react-statics */ "../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");
function WithOverride(Component, override) {
    const useOverride = typeof override === "function"
        ? (props) => override(convertColorProps_1.convertColorProps(props))
        : () => convertColorProps_1.convertColorProps(override);
    const ComponentWithOverride = function (props) {
        react_1.useContext(DataObserver_1.DataObserverContext);
        const overrideProps = useOverride(props);
        const _a = props, { style } = _a, rest = __rest(_a, ["style"]);
        return React.createElement(Component, Object.assign({}, rest, overrideProps, { _initialStyle: style }));
    };
    hoistNonReactStatic(ComponentWithOverride, Component);
    ComponentWithOverride["displayName"] = `WithOverride(${Component.displayName || Component.name})`;
    return ComponentWithOverride;
}
exports.WithOverride = WithOverride;


/***/ }),

/***/ "./src/deprecated/convertColorProps.ts":
/*!*********************************************!*\
  !*** ./src/deprecated/convertColorProps.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.convertColorProps = void 0;
const Gradient_1 = __webpack_require__(/*! ../render/types/Gradient */ "./src/render/types/Gradient.ts");
const Color_1 = __webpack_require__(/*! ../render/types/Color */ "./src/render/types/Color/index.ts");
const isMotionValue_1 = __webpack_require__(/*! ../render/utils/isMotionValue */ "./src/render/utils/isMotionValue.ts");
function convertColorObject(prop) {
    if (typeof prop === "string" || isMotionValue_1.isMotionValue(prop)) {
        return prop;
    }
    else if (Gradient_1.LinearGradient.isLinearGradient(prop)) {
        return Gradient_1.LinearGradient.toCSS(prop);
    }
    else if (Gradient_1.RadialGradient.isRadialGradient(prop)) {
        return Gradient_1.RadialGradient.toCSS(prop);
    }
    else if (Color_1.Color.isColorObject(prop)) {
        return Color_1.Color.toRgbString(prop);
    }
    return prop;
}
function convertColorProps(props) {
    if (props.background || props.color) {
        const converted = Object.assign({}, props);
        if (props.background) {
            converted.background = convertColorObject(props.background);
        }
        if (props.color) {
            converted.color = convertColorObject(props.color);
        }
        return converted;
    }
    return props;
}
exports.convertColorProps = convertColorProps;


/***/ }),

/***/ "./src/events/FramerEvent.ts":
/*!***********************************!*\
  !*** ./src/events/FramerEvent.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FramerEvent = void 0;
const events_1 = __webpack_require__(/*! ../utils/events */ "./src/utils/events.ts");
const Loop_1 = __webpack_require__(/*! ../core/Loop */ "./src/core/Loop.ts");
const Point_1 = __webpack_require__(/*! ../render/types/Point */ "./src/render/types/Point.ts");
const utils_1 = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
class FramerEvent {
    constructor(originalEvent, session) {
        this.originalEvent = originalEvent;
        this.session = session;
        this.time = Date.now();
        this.loopTime = Loop_1.MainLoop.time;
        const customTarget = (session && session.startEvent && session.startEvent.target) || originalEvent.target;
        const eventLike = FramerEvent.eventLikeFromOriginalEvent(originalEvent);
        this.point = events_1.pointForEvent(eventLike, customTarget);
        const deviceTarget = session && session.originElement ? session.originElement : document.body;
        this.devicePoint = events_1.pointForEvent(eventLike, deviceTarget);
        this.target = originalEvent.target || null;
        const lastEvent = session && session.lastEvent;
        if (originalEvent instanceof WheelEvent) {
            this.delta = { x: originalEvent.deltaX, y: originalEvent.deltaY };
        }
        else if (lastEvent && this.devicePoint && lastEvent.devicePoint) {
            this.delta = Point_1.Point.subtract(this.devicePoint, lastEvent.devicePoint);
        }
        else {
            this.delta = { x: 0, y: 0 };
        }
    }
    static eventLikeFromOriginalEvent(originalEvent) {
        if ("touches" in originalEvent) {
            let touches = originalEvent.touches;
            if (!touches || !touches.length) {
                if (originalEvent.changedTouches && originalEvent.changedTouches.length) {
                    touches = originalEvent.changedTouches;
                }
            }
            if (!touches || !touches.length) {
                return { pageX: 0, pageY: 0, target: null };
            }
            const firstTouch = touches[0];
            const pageX = firstTouch.clientX || firstTouch.screenX || firstTouch.pageX;
            const pageY = firstTouch.clientY || firstTouch.screenY || firstTouch.pageY;
            return {
                pageX,
                pageY,
                target: originalEvent.target,
            };
        }
        return originalEvent;
    }
    velocity(t) {
        return this.session ? this.session.velocity(t) : { x: 0, y: 0 };
    }
    get offset() {
        return this.session ? this.session.offset(this) : { x: 0, y: 0 };
    }
    get isLeftMouseClick() {
        if (utils_1.environment.isTouch()) {
            return undefined;
        }
        if ("button" in this.originalEvent && "buttons" in this.originalEvent && "ctrlKey" in this.originalEvent) {
            return (this.originalEvent.button === 0 || this.originalEvent.buttons === 1) && !this.originalEvent.ctrlKey;
        }
        return false;
    }
}
exports.FramerEvent = FramerEvent;


/***/ }),

/***/ "./src/events/FramerEventListener.ts":
/*!*******************************************!*\
  !*** ./src/events/FramerEventListener.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FramerEventListener = void 0;
const utils_1 = __webpack_require__(/*! ../utils */ "./src/utils/index.ts");
const TouchEventListener_1 = __webpack_require__(/*! ./recognizer/TouchEventListener */ "./src/events/recognizer/TouchEventListener.ts");
const MouseEventListener_1 = __webpack_require__(/*! ./recognizer/MouseEventListener */ "./src/events/recognizer/MouseEventListener.ts");
exports.FramerEventListener = utils_1.environment.isTouch()
    ? TouchEventListener_1.TouchEventListener
    : MouseEventListener_1.MouseEventListener;


/***/ }),

/***/ "./src/events/FramerEventSession.ts":
/*!******************************************!*\
  !*** ./src/events/FramerEventSession.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FramerEventSession = void 0;
const Loop_1 = __webpack_require__(/*! ../core/Loop */ "./src/core/Loop.ts");
const PanGestureRecognizer_1 = __webpack_require__(/*! ./recognizer/PanGestureRecognizer */ "./src/events/recognizer/PanGestureRecognizer.ts");
const TapGestureRecognizer_1 = __webpack_require__(/*! ./recognizer/TapGestureRecognizer */ "./src/events/recognizer/TapGestureRecognizer.ts");
const MouseWheelGestureRecognizer_1 = __webpack_require__(/*! ./recognizer/MouseWheelGestureRecognizer */ "./src/events/recognizer/MouseWheelGestureRecognizer.ts");
class FramerEventSession {
    constructor(dispatcher, customOrigin) {
        this.events = [];
        this.recognizers = [];
        this.mouseWheelRecognizer = new MouseWheelGestureRecognizer_1.MouseWheelGestureRecognizer();
        this.dispatcher = dispatcher;
        if (customOrigin) {
            this.originElement = customOrigin;
        }
        else {
            this.originElement = document.body;
        }
        const pan = new PanGestureRecognizer_1.PanGestureRecognizer();
        const tap = new TapGestureRecognizer_1.TapGestureRecognizer();
        pan.handler = this;
        tap.handler = this;
        this.mouseWheelRecognizer.handler = this;
        this.recognizers = [tap, pan];
    }
    get isStarted() {
        return this.events.length !== 0;
    }
    get startEvent() {
        if (this.isStarted) {
            return this.events[0];
        }
        else {
            return null;
        }
    }
    get lastEvent() {
        if (this.events.length > 0) {
            return this.events[this.events.length - 1];
        }
        else {
            return null;
        }
    }
    processEvent(event) {
        this.events.push(event);
        return event;
    }
    pointerDown(event) {
        if (this.isStarted) {
            return;
        }
        this.processEvent(event);
        this.recognizers.map(r => {
            r.cancel();
            r.pointerSessionBegan(this, event);
        });
    }
    pointerMove(event) {
        if (!this.isStarted) {
            return;
        }
        this.processEvent(event);
        this.recognizers.map(r => {
            r.pointerSessionMoved(this, event);
        });
    }
    pointerUp(event) {
        if (!this.isStarted) {
            return;
        }
        this.processEvent(event);
        this.recognizers.map(r => {
            r.pointerSessionEnded(this, event);
        });
        this.clearEvents();
        this.recognizers.map(r => {
            r.reset();
        });
    }
    mouseWheel(event) {
        this.processEvent(event);
        this.mouseWheelRecognizer.mouseWheel(this, event);
        this.clearEvents();
    }
    clearEvents() {
        this.events = [];
    }
    dispatch(type, event, target = null) {
        const dispatchTarget = target || (this.startEvent && this.startEvent.target) || event.target;
        if (dispatchTarget) {
            this.dispatcher(type, event, dispatchTarget);
        }
    }
    gestureBegan(type, event, target) {
        this.dispatch(`${type}start`, event, target);
    }
    gestureChanged(type, event, target) {
        this.dispatch(type, event, target);
    }
    gestureEnded(type, event, target) {
        this.dispatch(`${type}end`, event, target);
    }
    velocity(t = Loop_1.Loop.TimeStep * 2) {
        if (!this.isStarted || this.events.length < 2) {
            return { x: 0, y: 0 };
        }
        const events = this.events;
        let i = events.length - 1;
        let event = null;
        while (i >= 0) {
            event = events[i];
            if (Loop_1.MainLoop.time - event.loopTime > t) {
                break;
            }
            i--;
        }
        if (!event) {
            return { x: 0, y: 0 };
        }
        const current = events[events.length - 1];
        const time = (Loop_1.MainLoop.time - event.loopTime) * 1000;
        if (time === 0) {
            return { x: 0, y: 0 };
        }
        const velocity = {
            x: (current.devicePoint.x - event.devicePoint.x) / time,
            y: (current.devicePoint.y - event.devicePoint.y) / time,
        };
        if (velocity.x === Infinity) {
            velocity.x = 0;
        }
        if (velocity.y === Infinity) {
            velocity.y = 0;
        }
        return velocity;
    }
    offset(event) {
        if (!this.startEvent) {
            return { x: 0, y: 0 };
        }
        const subtract = (pointA, pointB) => {
            return {
                x: pointA.x - pointB.x,
                y: pointA.y - pointB.y,
            };
        };
        return subtract(event.devicePoint, this.startEvent.devicePoint);
    }
}
exports.FramerEventSession = FramerEventSession;


/***/ }),

/***/ "./src/events/index.ts":
/*!*****************************!*\
  !*** ./src/events/index.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.FramerEventSession = exports.FramerEvent = exports.FramerEventListener = void 0;
var FramerEventListener_1 = __webpack_require__(/*! ./FramerEventListener */ "./src/events/FramerEventListener.ts");
Object.defineProperty(exports, "FramerEventListener", { enumerable: true, get: function () { return FramerEventListener_1.FramerEventListener; } });
var FramerEvent_1 = __webpack_require__(/*! ./FramerEvent */ "./src/events/FramerEvent.ts");
Object.defineProperty(exports, "FramerEvent", { enumerable: true, get: function () { return FramerEvent_1.FramerEvent; } });
var FramerEventSession_1 = __webpack_require__(/*! ./FramerEventSession */ "./src/events/FramerEventSession.ts");
Object.defineProperty(exports, "FramerEventSession", { enumerable: true, get: function () { return FramerEventSession_1.FramerEventSession; } });


/***/ }),

/***/ "./src/events/recognizer/GestureRecognizer.ts":
/*!****************************************************!*\
  !*** ./src/events/recognizer/GestureRecognizer.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GestureRecognizer = exports.State = void 0;
var State;
(function (State) {
    State[State["Possible"] = 2] = "Possible";
    State[State["Began"] = 4] = "Began";
    State[State["Changed"] = 8] = "Changed";
    State[State["Ended"] = 16] = "Ended";
    State[State["Failed"] = 32] = "Failed";
    State[State["Cancelled"] = 64] = "Cancelled";
    State[State["Recognized"] = 128] = "Recognized";
})(State = exports.State || (exports.State = {}));
function stateName(state) {
    switch (state) {
        case State.Possible:
            return "Possible";
        case State.Began:
            return "Began";
        case State.Changed:
            return "Changed";
        case State.Ended:
            return "Ended";
        case State.Failed:
            return "Failed";
        case State.Cancelled:
            return "Cancelled";
        case State.Recognized:
            return "Recognized";
        default:
            return "Unknown";
    }
}
function containsBitmask(value, bitmask) {
    return (value & bitmask) !== 0;
}
class GestureRecognizer {
    constructor() {
        this._state = State.Possible;
        this.preventers = [];
    }
    get state() {
        return this._state;
    }
    setState(state) {
        this._state = state;
    }
    get isPrevented() {
        let prevented = false;
        for (const recognizer of this.preventers) {
            if (recognizer.state & (State.Began | State.Changed | State.Ended)) {
                prevented = true;
                break;
            }
        }
        return prevented;
    }
    canBePreventedBy(recognizer) {
        this.preventers.push(recognizer);
    }
    hasState(bitmask) {
        return containsBitmask(this.state, bitmask);
    }
    stateSwitch(newState) {
        let allowedStates;
        switch (this.state) {
            case State.Possible:
                allowedStates = State.Began | State.Recognized | State.Failed;
                break;
            case State.Began:
                allowedStates = State.Changed | State.Cancelled | State.Ended;
                break;
            case State.Changed:
                allowedStates = State.Changed | State.Cancelled | State.Ended;
                break;
            case State.Recognized:
            case State.Ended:
            case State.Cancelled:
            case State.Failed:
                allowedStates = State.Possible;
                break;
            default:
                allowedStates = 0;
        }
        if (!containsBitmask(newState, allowedStates)) {
            console.warn(`Unallowed state change from ${stateName(this.state)} to ${stateName(newState)}`);
            return;
        }
        this.setState(newState);
    }
    cancel() {
        if (this.hasState(State.Began | State.Changed)) {
            this.setState(State.Cancelled);
        }
        this.reset();
    }
    reset() {
        if (!this.hasState(State.Possible)) {
            this.stateSwitch(State.Possible);
        }
    }
}
exports.GestureRecognizer = GestureRecognizer;


/***/ }),

/***/ "./src/events/recognizer/MouseEventListener.ts":
/*!*****************************************************!*\
  !*** ./src/events/recognizer/MouseEventListener.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MouseEventListener = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const FramerEvent_1 = __webpack_require__(/*! ../FramerEvent */ "./src/events/FramerEvent.ts");
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
class MouseEventListener extends React.Component {
    constructor() {
        super(...arguments);
        this.domMouseDown = (originalEvent) => {
            safeWindow_1.safeWindow.addEventListener("mousemove", this.domMouseMove);
            safeWindow_1.safeWindow.addEventListener("mouseup", this.domMouseUp);
            const event = new FramerEvent_1.FramerEvent(originalEvent, this.props.session);
            this.props.session.pointerDown(event);
        };
        this.domMouseMove = (originalEvent) => {
            const leftMouseButtonOnlyDown = originalEvent.buttons === undefined ? originalEvent.which === 1 : originalEvent.buttons === 1;
            if (!leftMouseButtonOnlyDown) {
                this.domMouseUp(originalEvent);
                return;
            }
            const event = new FramerEvent_1.FramerEvent(originalEvent, this.props.session);
            this.props.session.pointerMove(event);
        };
        this.domMouseUp = (originalEvent) => {
            safeWindow_1.safeWindow.removeEventListener("mousemove", this.domMouseMove);
            safeWindow_1.safeWindow.removeEventListener("mouseup", this.domMouseUp);
            const event = new FramerEvent_1.FramerEvent(originalEvent, this.props.session);
            this.props.session.pointerUp(event);
        };
        this.domMouseWheel = (originalEvent) => {
            const event = new FramerEvent_1.FramerEvent(originalEvent, this.props.session);
            this.props.session.mouseWheel(event);
        };
    }
    render() {
        return this.props.children;
    }
    componentDidMount() {
        safeWindow_1.safeWindow.addEventListener("mousedown", this.domMouseDown);
        safeWindow_1.safeWindow.addEventListener("wheel", this.domMouseWheel);
    }
    componentWillUnmount() {
        safeWindow_1.safeWindow.removeEventListener("mousemove", this.domMouseMove);
        safeWindow_1.safeWindow.removeEventListener("mousedown", this.domMouseDown);
        safeWindow_1.safeWindow.removeEventListener("mouseup", this.domMouseUp);
        safeWindow_1.safeWindow.removeEventListener("wheel", this.domMouseWheel);
    }
}
exports.MouseEventListener = MouseEventListener;


/***/ }),

/***/ "./src/events/recognizer/MouseWheelGestureRecognizer.ts":
/*!**************************************************************!*\
  !*** ./src/events/recognizer/MouseWheelGestureRecognizer.ts ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.MouseWheelGestureRecognizer = void 0;
const GestureRecognizer_1 = __webpack_require__(/*! ./GestureRecognizer */ "./src/events/recognizer/GestureRecognizer.ts");
const debounce_1 = __webpack_require__(/*! ../../render/utils/debounce */ "./src/render/utils/debounce.ts");
class MouseWheelGestureRecognizer extends GestureRecognizer_1.GestureRecognizer {
    constructor() {
        super(...arguments);
        this.eventType = "mousewheel";
        this.onMouseWheelEnd = debounce_1.debounce((event) => {
            if (this.handler && this.startEvent) {
                this.stateSwitch(GestureRecognizer_1.State.Ended);
                this.handler.gestureEnded(this.eventType, event, this.startEvent.target);
                this.startEvent = null;
                this.reset();
            }
        }, 300);
    }
    pointerSessionBegan(session, event) { }
    pointerSessionMoved(session, event) { }
    pointerSessionEnded(session, event) { }
    mouseWheel(session, event) {
        if (!this.handler)
            return;
        if (this.hasState(GestureRecognizer_1.State.Possible)) {
            this.startEvent = event;
            this.stateSwitch(GestureRecognizer_1.State.Began);
            this.handler.gestureBegan(this.eventType, event, this.startEvent.target);
            return;
        }
        if (this.hasState(GestureRecognizer_1.State.Began | GestureRecognizer_1.State.Changed) && this.startEvent) {
            this.stateSwitch(GestureRecognizer_1.State.Changed);
            this.handler.gestureChanged(this.eventType, event, this.startEvent.target);
        }
        this.onMouseWheelEnd(event);
    }
}
exports.MouseWheelGestureRecognizer = MouseWheelGestureRecognizer;


/***/ }),

/***/ "./src/events/recognizer/PanGestureRecognizer.ts":
/*!*******************************************************!*\
  !*** ./src/events/recognizer/PanGestureRecognizer.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PanGestureRecognizer = void 0;
const GestureRecognizer_1 = __webpack_require__(/*! ./GestureRecognizer */ "./src/events/recognizer/GestureRecognizer.ts");
class PanGestureRecognizer extends GestureRecognizer_1.GestureRecognizer {
    constructor() {
        super(...arguments);
        this.eventType = "pan";
    }
    pointerSessionBegan(session, event) {
        this.recognize(session, event);
    }
    pointerSessionMoved(session, event) {
        this.recognize(session, event);
    }
    pointerSessionEnded(session, event) {
        this.panend(event);
    }
    recognize(session, event) {
        if (Math.abs(event.delta.x) > 0 || Math.abs(event.delta.y) > 0) {
            if (this.startEvent) {
                this.pan(event);
            }
            else {
                this.panstart(event);
            }
        }
    }
    reset() {
        this.startEvent = null;
        super.reset();
    }
    panstart(event) {
        if (!this.hasState(GestureRecognizer_1.State.Possible) || (event.isLeftMouseClick !== undefined && !event.isLeftMouseClick)) {
            return;
        }
        this.stateSwitch(GestureRecognizer_1.State.Began);
        this.startEvent = event;
        if (this.handler && this.startEvent.target) {
            this.handler.gestureBegan(this.eventType, event, this.startEvent.target);
        }
    }
    pan(event) {
        if (!this.hasState(GestureRecognizer_1.State.Began | GestureRecognizer_1.State.Changed)) {
            return;
        }
        if (!this.startEvent) {
            return;
        }
        this.stateSwitch(GestureRecognizer_1.State.Changed);
        if (this.handler && this.startEvent.target) {
            this.handler.gestureChanged(this.eventType, event, this.startEvent.target);
        }
    }
    panend(event) {
        if (!this.hasState(GestureRecognizer_1.State.Began | GestureRecognizer_1.State.Changed)) {
            return;
        }
        if (!this.startEvent) {
            return;
        }
        this.stateSwitch(GestureRecognizer_1.State.Ended);
        if (this.handler && this.startEvent.target) {
            this.handler.gestureEnded(this.eventType, event, this.startEvent.target);
        }
    }
}
exports.PanGestureRecognizer = PanGestureRecognizer;


/***/ }),

/***/ "./src/events/recognizer/TapGestureRecognizer.ts":
/*!*******************************************************!*\
  !*** ./src/events/recognizer/TapGestureRecognizer.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TapGestureRecognizer = void 0;
const GestureRecognizer_1 = __webpack_require__(/*! ./GestureRecognizer */ "./src/events/recognizer/GestureRecognizer.ts");
class TapGestureRecognizer extends GestureRecognizer_1.GestureRecognizer {
    constructor() {
        super(...arguments);
        this.eventType = "tap";
    }
    pointerSessionBegan(session, event) {
        if (this.handler && (event.isLeftMouseClick === undefined || event.isLeftMouseClick)) {
            this.handler.gestureBegan(this.eventType, event, null);
        }
    }
    pointerSessionMoved(session, event) { }
    pointerSessionEnded(session, event) {
        if (this.isPrevented) {
            this.stateSwitch(GestureRecognizer_1.State.Failed);
        }
        else if (!session.startEvent || session.startEvent.target === event.target) {
            this.stateSwitch(GestureRecognizer_1.State.Recognized);
            if (this.handler) {
                this.handler.gestureChanged(this.eventType, event, null);
            }
        }
        else {
            this.stateSwitch(GestureRecognizer_1.State.Failed);
        }
        if (this.handler) {
            this.handler.gestureEnded(this.eventType, event, null);
        }
    }
}
exports.TapGestureRecognizer = TapGestureRecognizer;


/***/ }),

/***/ "./src/events/recognizer/TouchEventListener.ts":
/*!*****************************************************!*\
  !*** ./src/events/recognizer/TouchEventListener.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TouchEventListener = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const __1 = __webpack_require__(/*! ../ */ "./src/events/index.ts");
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
class TouchEventListener extends React.Component {
    constructor() {
        super(...arguments);
        this.domTouchStart = (originalEvent) => {
            safeWindow_1.safeWindow.addEventListener("touchmove", this.domTouchMove);
            safeWindow_1.safeWindow.addEventListener("touchend", this.domTouchEnd);
            const event = new __1.FramerEvent(originalEvent, this.props.session);
            this.props.session.pointerDown(event);
        };
        this.domTouchMove = (originalEvent) => {
            const event = new __1.FramerEvent(originalEvent, this.props.session);
            this.props.session.pointerMove(event);
        };
        this.domTouchEnd = (originalEvent) => {
            safeWindow_1.safeWindow.removeEventListener("touchmove", this.domTouchMove);
            safeWindow_1.safeWindow.removeEventListener("touchend", this.domTouchEnd);
            const event = new __1.FramerEvent(originalEvent, this.props.session);
            this.props.session.pointerUp(event);
        };
    }
    render() {
        return this.props.children;
    }
    componentDidMount() {
        safeWindow_1.safeWindow.addEventListener("touchstart", this.domTouchStart);
    }
    componentWillUnmount() {
        safeWindow_1.safeWindow.removeEventListener("touchstart", this.domTouchStart);
        safeWindow_1.safeWindow.removeEventListener("touchmove", this.domTouchMove);
        safeWindow_1.safeWindow.removeEventListener("touchend", this.domTouchEnd);
    }
}
exports.TouchEventListener = TouchEventListener;


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConfigFromVekterURL = exports.getConfigFromPreviewURL = exports.getConfigFromURL = exports.LineCap = exports.LineJoin = exports.FramerEventSession = exports.FramerEventListener = exports.FramerEvent = exports.SpringAnimator = exports.BezierAnimator = exports.FramerAnimation = exports.animate = exports.isAnimatable = exports.DeprecatedAnimationTarget = exports.Cancel = exports.AnimatableObject = exports.Animatable = exports.ValueInterpolation = exports.AnyInterpolation = exports.isFractionDimension = exports.fraction = exports.isGapEnabled = exports.toJustifyOrAlignment = exports.toFlexDirection = exports.paddingFromProps = exports.makePaddingString = exports.AutomaticLayoutIds = exports.LayoutIdContext = exports.withMeasuredSize = exports.WithNavigator = exports.useOnCurrentTargetChange = exports.useIsInCurrentNavigationTarget = exports.Navigation = exports.StackSpecificProps = exports.StackProperties = exports.Stack = exports.Draggable = exports.PageAlignment = exports.PageEffectInfo = exports.PageEffect = exports.PageProperties = exports.PageProps = exports.PageEvents = exports.Page = exports.ScrollConfig = exports.ScrollEvents = exports.ScrollProps = exports.Scroll = exports.useInvertedScale = exports.useAnimatedState = void 0;
exports.Line = exports.Size = exports.Rect = exports.StrokeAlignment = exports.Shadow = exports.BoxShadow = exports.toSVGPath = exports.pathDefaults = exports.isStraightCurve = exports.WithPaths = exports.withPath = exports.WithPath = exports.PathSegments = exports.PathSegment = exports.annotateTypeOnStringify = exports.isOfAnnotatedType = exports.WithFractionOfFreeSpace = exports.Keyable = exports.ControlIcon = exports.ControlType = exports.localPackageFallbackIdentifier = exports.isReactDefinition = exports.isOverride = exports.isDesignDefinition = exports.imagePatternPropsForFill = exports.imageUrlForAsset = exports.throttle = exports.debounce = exports.gradientForShape = exports.BoxShadowProperties = exports.withShape = exports.WithShape = exports.DeprecatedVisualProperties = exports.withOpacity = exports.WithOpacity = exports.BackgroundImage = exports.ImageFit = exports.RadiusProperties = exports.BackgroundFilterProperties = exports.FilterNumberProperties = exports.FilterProperties = exports.FillProperties = exports.DOM = exports.dispatchKeyDownEvent = exports.frameFromElements = exports.frameFromElement = exports.LinearGradientElementProperties = exports.InternalID = exports.memoize = exports.serverURL = void 0;
exports.finiteNumber = exports.isFiniteNumber = exports.environment = exports.isEqual = exports.ColorMixModelType = exports.ColorFormat = exports.ColorMixOptions = exports.ConvertColor = exports.Color = exports.PositionStickyProperties = exports.constraintsEnabled = exports.ParentSizeState = exports.calculateRect = exports.NewConstraintProperties = exports.ProvideParentSize = exports.getMergedConstraintsProps = exports.valueToDimensionType = exports.DimensionType = exports.ConstraintMask = exports.ConstraintValues = exports.TransformValues = exports.getMeasurableCodeComponentChildren = exports.ComponentContainer = exports.ComponentContainerContext = exports.VectorGroupProperties = exports.VectorGroup = exports.VectorProperties = exports.Vector = exports.TextColorProperties = exports.TextVerticalAlignment = exports.TextAlignment = exports.TextProperties = exports.Text = exports.SVGProperties = exports.SVG = exports.DOMLayoutProps = exports.IdentityProps = exports.LayerProps = exports.Layer = exports.cssBackgroundSize = exports.Image = exports.DeprecatedFrameWithEvents = exports.FrameWithMotion = exports.Frame = exports.RadialGradientBase = exports.RadialGradient = exports.LinearGradientBase = exports.LinearGradient = exports.Gradient = exports.Point = void 0;
exports.WebFontLocator = exports.parseVariant = exports.loadFont = exports.fontStore = exports.CustomPropertiesContext = exports.CustomProperties = exports.RenderNodeProvider = exports.PropertyTree = exports.CanvasStore = exports.createDesignComponent = exports._getCSSTextColorFromStyle = exports.collectVisualStyleFromProps = exports.backgroundImageFromProps = exports.StackAlignment = exports.StackDistribution = exports.StackDirection = exports.useNavigation = exports.NavigationTransitionDirection = exports.NavigationTransitionType = exports.NavigationTarget = exports.NavigationLink = exports.NavigateTo = exports.FlipTransitionOptions = exports.OverlayTransitionOptions = exports.ModalTransitionOptions = exports.PushTransitionOptions = exports.FadeTransitionOptions = exports.NavigationTransitionBackdropColor = exports.NavigationTransitionAppearsFrom = exports.NavigationTransitionAnimation = exports.NavigationTransitionSide = exports.NavigationTransitionPosition = exports.NavigationTransition = exports.NavigationCallbackProvider = exports.NavigationConsumer = exports.NavigationProps = exports.NavigationInterface = exports.setGlobalRenderEnvironment = exports.executeInRenderEnvironment = exports.useRenderEnvironment = exports.RenderTarget = exports.convertPresentationTree = exports.PresentationTree = exports.localShadowFrame = exports.isMotionValue = exports.transformString = exports.roundWithOffset = exports.roundedNumberString = exports.roundedNumber = exports.isShallowEqualArray = void 0;
exports.MainLoop = exports.LayoutGroup = exports.cx = exports.useIsOnFramerCanvas = exports.useActiveVariantCallback = exports.useOnVariantChange = exports.callEach = exports.withCSS = exports.VariantSelector = exports.CycleVariantState = exports.useVariantState = exports.useAddVariantProps = exports.startAnimation = exports.MotionSetup = exports.version = exports.getPropertyControls = exports.addPropertyControls = exports.Runtime = exports._injectRuntime = exports.print = exports.loadJSON = exports.PropertyStore = exports.DataObserverContext = exports.DataObserver = exports.addActionControls = exports.ActionControls = exports.ActionControlDescription = exports.ActionHandler = exports.Action = exports.WithOverride = exports.OverrideObject = exports.OverrideFunction = exports.Override = exports.DataContext = exports.createData = exports.Data = exports.ObservableObject = exports.useMeasureLayout = exports.EmptyState = exports.systemTypefaceName = exports.forceLayerBackingWithCSSProperties = exports.ReadonlyTypeface = exports.ReadonlyFont = exports.TypefaceLocator = exports.TypefaceSourceNames = exports.TypefaceSourceName = exports.Font = exports.TypefaceSelector = exports.Typeface = void 0;
__exportStar(__webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js"), exports);
var framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
Object.defineProperty(exports, "useAnimatedState", { enumerable: true, get: function () { return framer_motion_1.useDeprecatedAnimatedState; } });
Object.defineProperty(exports, "useInvertedScale", { enumerable: true, get: function () { return framer_motion_1.useDeprecatedInvertedScale; } });
__webpack_require__(/*! ./animation/Motion/addChildHack */ "./src/animation/Motion/addChildHack.ts");
var components_1 = __webpack_require__(/*! ./components */ "./src/components/index.ts");
Object.defineProperty(exports, "Scroll", { enumerable: true, get: function () { return components_1.Scroll; } });
Object.defineProperty(exports, "ScrollProps", { enumerable: true, get: function () { return components_1.ScrollProps; } });
Object.defineProperty(exports, "ScrollEvents", { enumerable: true, get: function () { return components_1.ScrollEvents; } });
Object.defineProperty(exports, "ScrollConfig", { enumerable: true, get: function () { return components_1.ScrollConfig; } });
Object.defineProperty(exports, "Page", { enumerable: true, get: function () { return components_1.Page; } });
Object.defineProperty(exports, "PageEvents", { enumerable: true, get: function () { return components_1.PageEvents; } });
Object.defineProperty(exports, "PageProps", { enumerable: true, get: function () { return components_1.PageProps; } });
Object.defineProperty(exports, "PageProperties", { enumerable: true, get: function () { return components_1.PageProperties; } });
Object.defineProperty(exports, "PageEffect", { enumerable: true, get: function () { return components_1.PageEffect; } });
Object.defineProperty(exports, "PageEffectInfo", { enumerable: true, get: function () { return components_1.PageEffectInfo; } });
Object.defineProperty(exports, "PageAlignment", { enumerable: true, get: function () { return components_1.PageAlignment; } });
Object.defineProperty(exports, "Draggable", { enumerable: true, get: function () { return components_1.Draggable; } });
Object.defineProperty(exports, "Stack", { enumerable: true, get: function () { return components_1.Stack; } });
Object.defineProperty(exports, "StackProperties", { enumerable: true, get: function () { return components_1.StackProperties; } });
Object.defineProperty(exports, "StackSpecificProps", { enumerable: true, get: function () { return components_1.StackSpecificProps; } });
Object.defineProperty(exports, "Navigation", { enumerable: true, get: function () { return components_1.Navigation; } });
Object.defineProperty(exports, "useIsInCurrentNavigationTarget", { enumerable: true, get: function () { return components_1.useIsInCurrentNavigationTarget; } });
Object.defineProperty(exports, "useOnCurrentTargetChange", { enumerable: true, get: function () { return components_1.useOnCurrentTargetChange; } });
var WithNavigator_1 = __webpack_require__(/*! ./components/hoc/WithNavigator */ "./src/components/hoc/WithNavigator.tsx");
Object.defineProperty(exports, "WithNavigator", { enumerable: true, get: function () { return WithNavigator_1.WithNavigator; } });
var withMeasuredSize_1 = __webpack_require__(/*! ./components/hoc/withMeasuredSize */ "./src/components/hoc/withMeasuredSize.tsx");
Object.defineProperty(exports, "withMeasuredSize", { enumerable: true, get: function () { return withMeasuredSize_1.withMeasuredSize; } });
var LayoutIdContext_1 = __webpack_require__(/*! ./components/AnimateLayout/LayoutIdContext */ "./src/components/AnimateLayout/LayoutIdContext.tsx");
Object.defineProperty(exports, "LayoutIdContext", { enumerable: true, get: function () { return LayoutIdContext_1.LayoutIdContext; } });
Object.defineProperty(exports, "AutomaticLayoutIds", { enumerable: true, get: function () { return LayoutIdContext_1.AutomaticLayoutIds; } });
var paddingFromProps_1 = __webpack_require__(/*! ./components/utils/paddingFromProps */ "./src/components/utils/paddingFromProps.ts");
Object.defineProperty(exports, "makePaddingString", { enumerable: true, get: function () { return paddingFromProps_1.makePaddingString; } });
Object.defineProperty(exports, "paddingFromProps", { enumerable: true, get: function () { return paddingFromProps_1.paddingFromProps; } });
var components_2 = __webpack_require__(/*! ./components */ "./src/components/index.ts");
Object.defineProperty(exports, "toFlexDirection", { enumerable: true, get: function () { return components_2.toFlexDirection; } });
Object.defineProperty(exports, "toJustifyOrAlignment", { enumerable: true, get: function () { return components_2.toJustifyOrAlignment; } });
Object.defineProperty(exports, "isGapEnabled", { enumerable: true, get: function () { return components_2.isGapEnabled; } });
Object.defineProperty(exports, "fraction", { enumerable: true, get: function () { return components_2.fraction; } });
Object.defineProperty(exports, "isFractionDimension", { enumerable: true, get: function () { return components_2.isFractionDimension; } });
var interpolation_1 = __webpack_require__(/*! ./interpolation */ "./src/interpolation/index.ts");
Object.defineProperty(exports, "AnyInterpolation", { enumerable: true, get: function () { return interpolation_1.AnyInterpolation; } });
Object.defineProperty(exports, "ValueInterpolation", { enumerable: true, get: function () { return interpolation_1.ValueInterpolation; } });
var Animatable_1 = __webpack_require__(/*! ./animation/Animatable */ "./src/animation/Animatable/index.ts");
Object.defineProperty(exports, "Animatable", { enumerable: true, get: function () { return Animatable_1.Animatable; } });
Object.defineProperty(exports, "AnimatableObject", { enumerable: true, get: function () { return Animatable_1.AnimatableObject; } });
Object.defineProperty(exports, "Cancel", { enumerable: true, get: function () { return Animatable_1.Cancel; } });
Object.defineProperty(exports, "DeprecatedAnimationTarget", { enumerable: true, get: function () { return Animatable_1.DeprecatedAnimationTarget; } });
Object.defineProperty(exports, "isAnimatable", { enumerable: true, get: function () { return Animatable_1.isAnimatable; } });
var animate_1 = __webpack_require__(/*! ./animation/animate */ "./src/animation/animate.ts");
Object.defineProperty(exports, "animate", { enumerable: true, get: function () { return animate_1.animate; } });
var FramerAnimation_1 = __webpack_require__(/*! ./animation/FramerAnimation */ "./src/animation/FramerAnimation.ts");
Object.defineProperty(exports, "FramerAnimation", { enumerable: true, get: function () { return FramerAnimation_1.FramerAnimation; } });
var Animators_1 = __webpack_require__(/*! ./animation/Animators */ "./src/animation/Animators/index.ts");
Object.defineProperty(exports, "BezierAnimator", { enumerable: true, get: function () { return Animators_1.BezierAnimator; } });
Object.defineProperty(exports, "SpringAnimator", { enumerable: true, get: function () { return Animators_1.SpringAnimator; } });
var events_1 = __webpack_require__(/*! ./events */ "./src/events/index.ts");
Object.defineProperty(exports, "FramerEvent", { enumerable: true, get: function () { return events_1.FramerEvent; } });
Object.defineProperty(exports, "FramerEventListener", { enumerable: true, get: function () { return events_1.FramerEventListener; } });
Object.defineProperty(exports, "FramerEventSession", { enumerable: true, get: function () { return events_1.FramerEventSession; } });
var Stroke_1 = __webpack_require__(/*! ./render/types/Stroke */ "./src/render/types/Stroke.ts");
Object.defineProperty(exports, "LineJoin", { enumerable: true, get: function () { return Stroke_1.LineJoin; } });
Object.defineProperty(exports, "LineCap", { enumerable: true, get: function () { return Stroke_1.LineCap; } });
var getConfigFromURL_1 = __webpack_require__(/*! ./render/utils/getConfigFromURL */ "./src/render/utils/getConfigFromURL.ts");
Object.defineProperty(exports, "getConfigFromURL", { enumerable: true, get: function () { return getConfigFromURL_1.getConfigFromPreviewURL; } });
Object.defineProperty(exports, "getConfigFromPreviewURL", { enumerable: true, get: function () { return getConfigFromURL_1.getConfigFromPreviewURL; } });
Object.defineProperty(exports, "getConfigFromVekterURL", { enumerable: true, get: function () { return getConfigFromURL_1.getConfigFromVekterURL; } });
var serverURL_1 = __webpack_require__(/*! ./render/assetResolver/serverURL */ "./src/render/assetResolver/serverURL.ts");
Object.defineProperty(exports, "serverURL", { enumerable: true, get: function () { return serverURL_1.serverURL; } });
var memoize_1 = __webpack_require__(/*! ./utils/memoize */ "./src/utils/memoize.ts");
Object.defineProperty(exports, "memoize", { enumerable: true, get: function () { return memoize_1.memoize; } });
var internalId_1 = __webpack_require__(/*! ./utils/internalId */ "./src/utils/internalId.ts");
Object.defineProperty(exports, "InternalID", { enumerable: true, get: function () { return internalId_1.InternalID; } });
var elementPropertiesForGradient_1 = __webpack_require__(/*! ./render/utils/elementPropertiesForGradient */ "./src/render/utils/elementPropertiesForGradient.ts");
Object.defineProperty(exports, "LinearGradientElementProperties", { enumerable: true, get: function () { return elementPropertiesForGradient_1.LinearGradientElementProperties; } });
var dom_1 = __webpack_require__(/*! ./render/utils/dom */ "./src/render/utils/dom.ts");
Object.defineProperty(exports, "frameFromElement", { enumerable: true, get: function () { return dom_1.frameFromElement; } });
Object.defineProperty(exports, "frameFromElements", { enumerable: true, get: function () { return dom_1.frameFromElements; } });
Object.defineProperty(exports, "dispatchKeyDownEvent", { enumerable: true, get: function () { return dom_1.dispatchKeyDownEvent; } });
Object.defineProperty(exports, "DOM", { enumerable: true, get: function () { return dom_1.DOM; } });
var Fill_1 = __webpack_require__(/*! ./render/traits/Fill */ "./src/render/traits/Fill.ts");
Object.defineProperty(exports, "FillProperties", { enumerable: true, get: function () { return Fill_1.FillProperties; } });
var Filters_1 = __webpack_require__(/*! ./render/traits/Filters */ "./src/render/traits/Filters.ts");
Object.defineProperty(exports, "FilterProperties", { enumerable: true, get: function () { return Filters_1.FilterProperties; } });
Object.defineProperty(exports, "FilterNumberProperties", { enumerable: true, get: function () { return Filters_1.FilterNumberProperties; } });
var BackdropFilters_1 = __webpack_require__(/*! ./render/traits/BackdropFilters */ "./src/render/traits/BackdropFilters.ts");
Object.defineProperty(exports, "BackgroundFilterProperties", { enumerable: true, get: function () { return BackdropFilters_1.BackgroundFilterProperties; } });
var Radius_1 = __webpack_require__(/*! ./render/traits/Radius */ "./src/render/traits/Radius.ts");
Object.defineProperty(exports, "RadiusProperties", { enumerable: true, get: function () { return Radius_1.RadiusProperties; } });
var BackgroundImage_1 = __webpack_require__(/*! ./render/types/BackgroundImage */ "./src/render/types/BackgroundImage.ts");
Object.defineProperty(exports, "ImageFit", { enumerable: true, get: function () { return BackgroundImage_1.ImageFit; } });
Object.defineProperty(exports, "BackgroundImage", { enumerable: true, get: function () { return BackgroundImage_1.BackgroundImage; } });
var Opacity_1 = __webpack_require__(/*! ./render/traits/Opacity */ "./src/render/traits/Opacity.ts");
Object.defineProperty(exports, "WithOpacity", { enumerable: true, get: function () { return Opacity_1.WithOpacity; } });
Object.defineProperty(exports, "withOpacity", { enumerable: true, get: function () { return Opacity_1.withOpacity; } });
var collectVisualStyleFromProps_1 = __webpack_require__(/*! ./render/style/collectVisualStyleFromProps */ "./src/render/style/collectVisualStyleFromProps.ts");
Object.defineProperty(exports, "DeprecatedVisualProperties", { enumerable: true, get: function () { return collectVisualStyleFromProps_1.DeprecatedVisualProperties; } });
var Shape_1 = __webpack_require__(/*! ./render/traits/Shape */ "./src/render/traits/Shape.ts");
Object.defineProperty(exports, "WithShape", { enumerable: true, get: function () { return Shape_1.WithShape; } });
Object.defineProperty(exports, "withShape", { enumerable: true, get: function () { return Shape_1.withShape; } });
var BoxShadow_1 = __webpack_require__(/*! ./render/traits/BoxShadow */ "./src/render/traits/BoxShadow.ts");
Object.defineProperty(exports, "BoxShadowProperties", { enumerable: true, get: function () { return BoxShadow_1.BoxShadowProperties; } });
var gradientForShape_1 = __webpack_require__(/*! ./render/utils/gradientForShape */ "./src/render/utils/gradientForShape.tsx");
Object.defineProperty(exports, "gradientForShape", { enumerable: true, get: function () { return gradientForShape_1.gradientForShape; } });
var debounce_1 = __webpack_require__(/*! ./render/utils/debounce */ "./src/render/utils/debounce.ts");
Object.defineProperty(exports, "debounce", { enumerable: true, get: function () { return debounce_1.debounce; } });
var throttle_1 = __webpack_require__(/*! ./render/utils/throttle */ "./src/render/utils/throttle.ts");
Object.defineProperty(exports, "throttle", { enumerable: true, get: function () { return throttle_1.throttle; } });
var imageUrlForAsset_1 = __webpack_require__(/*! ./render/utils/imageUrlForAsset */ "./src/render/utils/imageUrlForAsset.ts");
Object.defineProperty(exports, "imageUrlForAsset", { enumerable: true, get: function () { return imageUrlForAsset_1.imageUrlForAsset; } });
var imagePatternPropsForFill_1 = __webpack_require__(/*! ./render/utils/imagePatternPropsForFill */ "./src/render/utils/imagePatternPropsForFill.tsx");
Object.defineProperty(exports, "imagePatternPropsForFill", { enumerable: true, get: function () { return imagePatternPropsForFill_1.imagePatternPropsForFill; } });
var componentLoader_1 = __webpack_require__(/*! ./render/componentLoader */ "./src/render/componentLoader/index.ts");
Object.defineProperty(exports, "isDesignDefinition", { enumerable: true, get: function () { return componentLoader_1.isDesignDefinition; } });
Object.defineProperty(exports, "isOverride", { enumerable: true, get: function () { return componentLoader_1.isOverride; } });
Object.defineProperty(exports, "isReactDefinition", { enumerable: true, get: function () { return componentLoader_1.isReactDefinition; } });
var package_1 = __webpack_require__(/*! ./render/componentLoader/package */ "./src/render/componentLoader/package.ts");
Object.defineProperty(exports, "localPackageFallbackIdentifier", { enumerable: true, get: function () { return package_1.localPackageFallbackIdentifier; } });
var PropertyControls_1 = __webpack_require__(/*! ./render/types/PropertyControls */ "./src/render/types/PropertyControls.ts");
Object.defineProperty(exports, "ControlType", { enumerable: true, get: function () { return PropertyControls_1.ControlType; } });
Object.defineProperty(exports, "ControlIcon", { enumerable: true, get: function () { return PropertyControls_1.ControlIcon; } });
Object.defineProperty(exports, "Keyable", { enumerable: true, get: function () { return PropertyControls_1.Keyable; } });
var FreeSpace_1 = __webpack_require__(/*! ./render/traits/FreeSpace */ "./src/render/traits/FreeSpace.ts");
Object.defineProperty(exports, "WithFractionOfFreeSpace", { enumerable: true, get: function () { return FreeSpace_1.WithFractionOfFreeSpace; } });
var annotateTypeOnStringify_1 = __webpack_require__(/*! ./render/utils/annotateTypeOnStringify */ "./src/render/utils/annotateTypeOnStringify.ts");
Object.defineProperty(exports, "isOfAnnotatedType", { enumerable: true, get: function () { return annotateTypeOnStringify_1.isOfAnnotatedType; } });
Object.defineProperty(exports, "annotateTypeOnStringify", { enumerable: true, get: function () { return annotateTypeOnStringify_1.annotateTypeOnStringify; } });
var PathSegment_1 = __webpack_require__(/*! ./render/types/PathSegment */ "./src/render/types/PathSegment.ts");
Object.defineProperty(exports, "PathSegment", { enumerable: true, get: function () { return PathSegment_1.PathSegment; } });
var PathSegments_1 = __webpack_require__(/*! ./render/types/PathSegments */ "./src/render/types/PathSegments.ts");
Object.defineProperty(exports, "PathSegments", { enumerable: true, get: function () { return PathSegments_1.PathSegments; } });
var Path_1 = __webpack_require__(/*! ./render/traits/Path */ "./src/render/traits/Path.ts");
Object.defineProperty(exports, "WithPath", { enumerable: true, get: function () { return Path_1.WithPath; } });
Object.defineProperty(exports, "withPath", { enumerable: true, get: function () { return Path_1.withPath; } });
Object.defineProperty(exports, "WithPaths", { enumerable: true, get: function () { return Path_1.WithPaths; } });
Object.defineProperty(exports, "isStraightCurve", { enumerable: true, get: function () { return Path_1.isStraightCurve; } });
Object.defineProperty(exports, "pathDefaults", { enumerable: true, get: function () { return Path_1.pathDefaults; } });
Object.defineProperty(exports, "toSVGPath", { enumerable: true, get: function () { return Path_1.toSVGPath; } });
var Shadow_1 = __webpack_require__(/*! ./render/types/Shadow */ "./src/render/types/Shadow.ts");
Object.defineProperty(exports, "BoxShadow", { enumerable: true, get: function () { return Shadow_1.BoxShadow; } });
Object.defineProperty(exports, "Shadow", { enumerable: true, get: function () { return Shadow_1.Shadow; } });
var StrokeAlignment_1 = __webpack_require__(/*! ./render/types/StrokeAlignment */ "./src/render/types/StrokeAlignment.ts");
Object.defineProperty(exports, "StrokeAlignment", { enumerable: true, get: function () { return StrokeAlignment_1.StrokeAlignment; } });
var Rect_1 = __webpack_require__(/*! ./render/types/Rect */ "./src/render/types/Rect.ts");
Object.defineProperty(exports, "Rect", { enumerable: true, get: function () { return Rect_1.Rect; } });
var Size_1 = __webpack_require__(/*! ./render/types/Size */ "./src/render/types/Size.ts");
Object.defineProperty(exports, "Size", { enumerable: true, get: function () { return Size_1.Size; } });
var Line_1 = __webpack_require__(/*! ./render/types/Line */ "./src/render/types/Line.ts");
Object.defineProperty(exports, "Line", { enumerable: true, get: function () { return Line_1.Line; } });
var Point_1 = __webpack_require__(/*! ./render/types/Point */ "./src/render/types/Point.ts");
Object.defineProperty(exports, "Point", { enumerable: true, get: function () { return Point_1.Point; } });
var Gradient_1 = __webpack_require__(/*! ./render/types/Gradient */ "./src/render/types/Gradient.ts");
Object.defineProperty(exports, "Gradient", { enumerable: true, get: function () { return Gradient_1.Gradient; } });
Object.defineProperty(exports, "LinearGradient", { enumerable: true, get: function () { return Gradient_1.LinearGradient; } });
Object.defineProperty(exports, "LinearGradientBase", { enumerable: true, get: function () { return Gradient_1.LinearGradientBase; } });
Object.defineProperty(exports, "RadialGradient", { enumerable: true, get: function () { return Gradient_1.RadialGradient; } });
Object.defineProperty(exports, "RadialGradientBase", { enumerable: true, get: function () { return Gradient_1.RadialGradientBase; } });
var Frame_1 = __webpack_require__(/*! ./render/presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
Object.defineProperty(exports, "Frame", { enumerable: true, get: function () { return Frame_1.Frame; } });
Object.defineProperty(exports, "FrameWithMotion", { enumerable: true, get: function () { return Frame_1.FrameWithMotion; } });
Object.defineProperty(exports, "DeprecatedFrameWithEvents", { enumerable: true, get: function () { return Frame_1.DeprecatedFrameWithEvents; } });
var Image_1 = __webpack_require__(/*! ./render/presentation/Image */ "./src/render/presentation/Image.tsx");
Object.defineProperty(exports, "Image", { enumerable: true, get: function () { return Image_1.Image; } });
var DeprecatedFrame_1 = __webpack_require__(/*! ./render/presentation/Frame/DeprecatedFrame */ "./src/render/presentation/Frame/DeprecatedFrame.tsx");
Object.defineProperty(exports, "cssBackgroundSize", { enumerable: true, get: function () { return DeprecatedFrame_1.cssBackgroundSize; } });
var Layer_1 = __webpack_require__(/*! ./render/presentation/Layer */ "./src/render/presentation/Layer.tsx");
Object.defineProperty(exports, "Layer", { enumerable: true, get: function () { return Layer_1.Layer; } });
Object.defineProperty(exports, "LayerProps", { enumerable: true, get: function () { return Layer_1.LayerProps; } });
Object.defineProperty(exports, "IdentityProps", { enumerable: true, get: function () { return Layer_1.IdentityProps; } });
Object.defineProperty(exports, "DOMLayoutProps", { enumerable: true, get: function () { return Layer_1.DOMLayoutProps; } });
var SVG_1 = __webpack_require__(/*! ./render/presentation/SVG */ "./src/render/presentation/SVG.tsx");
Object.defineProperty(exports, "SVG", { enumerable: true, get: function () { return SVG_1.SVG; } });
Object.defineProperty(exports, "SVGProperties", { enumerable: true, get: function () { return SVG_1.SVGProperties; } });
var Text_1 = __webpack_require__(/*! ./render/presentation/Text */ "./src/render/presentation/Text.tsx");
Object.defineProperty(exports, "Text", { enumerable: true, get: function () { return Text_1.Text; } });
Object.defineProperty(exports, "TextProperties", { enumerable: true, get: function () { return Text_1.TextProperties; } });
Object.defineProperty(exports, "TextAlignment", { enumerable: true, get: function () { return Text_1.TextAlignment; } });
Object.defineProperty(exports, "TextVerticalAlignment", { enumerable: true, get: function () { return Text_1.TextVerticalAlignment; } });
var TextColor_1 = __webpack_require__(/*! ./render/traits/TextColor */ "./src/render/traits/TextColor.ts");
Object.defineProperty(exports, "TextColorProperties", { enumerable: true, get: function () { return TextColor_1.TextColorProperties; } });
var Vector_1 = __webpack_require__(/*! ./render/presentation/Vector */ "./src/render/presentation/Vector.tsx");
Object.defineProperty(exports, "Vector", { enumerable: true, get: function () { return Vector_1.Vector; } });
Object.defineProperty(exports, "VectorProperties", { enumerable: true, get: function () { return Vector_1.VectorProperties; } });
var VectorGroup_1 = __webpack_require__(/*! ./render/presentation/VectorGroup */ "./src/render/presentation/VectorGroup.tsx");
Object.defineProperty(exports, "VectorGroup", { enumerable: true, get: function () { return VectorGroup_1.VectorGroup; } });
Object.defineProperty(exports, "VectorGroupProperties", { enumerable: true, get: function () { return VectorGroup_1.VectorGroupProperties; } });
var ComponentContainerContext_1 = __webpack_require__(/*! ./render/presentation/ComponentContainerContext */ "./src/render/presentation/ComponentContainerContext.tsx");
Object.defineProperty(exports, "ComponentContainerContext", { enumerable: true, get: function () { return ComponentContainerContext_1.ComponentContainerContext; } });
var ComponentContainer_1 = __webpack_require__(/*! ./render/presentation/ComponentContainer */ "./src/render/presentation/ComponentContainer.tsx");
Object.defineProperty(exports, "ComponentContainer", { enumerable: true, get: function () { return ComponentContainer_1.ComponentContainer; } });
Object.defineProperty(exports, "getMeasurableCodeComponentChildren", { enumerable: true, get: function () { return ComponentContainer_1.getMeasurableCodeComponentChildren; } });
var TransformValues_1 = __webpack_require__(/*! ./render/types/TransformValues */ "./src/render/types/TransformValues.ts");
Object.defineProperty(exports, "TransformValues", { enumerable: true, get: function () { return TransformValues_1.TransformValues; } });
var Constraints_1 = __webpack_require__(/*! ./render/types/Constraints */ "./src/render/types/Constraints.ts");
Object.defineProperty(exports, "ConstraintValues", { enumerable: true, get: function () { return Constraints_1.ConstraintValues; } });
Object.defineProperty(exports, "ConstraintMask", { enumerable: true, get: function () { return Constraints_1.ConstraintMask; } });
Object.defineProperty(exports, "DimensionType", { enumerable: true, get: function () { return Constraints_1.DimensionType; } });
Object.defineProperty(exports, "valueToDimensionType", { enumerable: true, get: function () { return Constraints_1.valueToDimensionType; } });
Object.defineProperty(exports, "getMergedConstraintsProps", { enumerable: true, get: function () { return Constraints_1.getMergedConstraintsProps; } });
var NewConstraints_1 = __webpack_require__(/*! ./render/types/NewConstraints */ "./src/render/types/NewConstraints.tsx");
Object.defineProperty(exports, "ProvideParentSize", { enumerable: true, get: function () { return NewConstraints_1.ProvideParentSize; } });
Object.defineProperty(exports, "NewConstraintProperties", { enumerable: true, get: function () { return NewConstraints_1.NewConstraintProperties; } });
Object.defineProperty(exports, "calculateRect", { enumerable: true, get: function () { return NewConstraints_1.calculateRect; } });
Object.defineProperty(exports, "ParentSizeState", { enumerable: true, get: function () { return NewConstraints_1.ParentSizeState; } });
Object.defineProperty(exports, "constraintsEnabled", { enumerable: true, get: function () { return NewConstraints_1.constraintsEnabled; } });
Object.defineProperty(exports, "PositionStickyProperties", { enumerable: true, get: function () { return NewConstraints_1.PositionStickyProperties; } });
var Color_1 = __webpack_require__(/*! ./render/types/Color */ "./src/render/types/Color/index.ts");
Object.defineProperty(exports, "Color", { enumerable: true, get: function () { return Color_1.Color; } });
Object.defineProperty(exports, "ConvertColor", { enumerable: true, get: function () { return Color_1.ConvertColor; } });
Object.defineProperty(exports, "ColorMixOptions", { enumerable: true, get: function () { return Color_1.ColorMixOptions; } });
var types_1 = __webpack_require__(/*! ./render/types/Color/types */ "./src/render/types/Color/types.ts");
Object.defineProperty(exports, "ColorFormat", { enumerable: true, get: function () { return types_1.ColorFormat; } });
Object.defineProperty(exports, "ColorMixModelType", { enumerable: true, get: function () { return types_1.ColorMixModelType; } });
var isEqual_1 = __webpack_require__(/*! ./render/utils/isEqual */ "./src/render/utils/isEqual.ts");
Object.defineProperty(exports, "isEqual", { enumerable: true, get: function () { return isEqual_1.isEqual; } });
var environment_1 = __webpack_require__(/*! ./utils/environment */ "./src/utils/environment.ts");
Object.defineProperty(exports, "environment", { enumerable: true, get: function () { return environment_1.environment; } });
var isFiniteNumber_1 = __webpack_require__(/*! ./render/utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
Object.defineProperty(exports, "isFiniteNumber", { enumerable: true, get: function () { return isFiniteNumber_1.isFiniteNumber; } });
Object.defineProperty(exports, "finiteNumber", { enumerable: true, get: function () { return isFiniteNumber_1.finiteNumber; } });
var isShallowEqualArray_1 = __webpack_require__(/*! ./render/utils/isShallowEqualArray */ "./src/render/utils/isShallowEqualArray.ts");
Object.defineProperty(exports, "isShallowEqualArray", { enumerable: true, get: function () { return isShallowEqualArray_1.isShallowEqualArray; } });
var roundedNumber_1 = __webpack_require__(/*! ./render/utils/roundedNumber */ "./src/render/utils/roundedNumber.ts");
Object.defineProperty(exports, "roundedNumber", { enumerable: true, get: function () { return roundedNumber_1.roundedNumber; } });
Object.defineProperty(exports, "roundedNumberString", { enumerable: true, get: function () { return roundedNumber_1.roundedNumberString; } });
Object.defineProperty(exports, "roundWithOffset", { enumerable: true, get: function () { return roundedNumber_1.roundWithOffset; } });
var transformString_1 = __webpack_require__(/*! ./render/utils/transformString */ "./src/render/utils/transformString.ts");
Object.defineProperty(exports, "transformString", { enumerable: true, get: function () { return transformString_1.transformString; } });
var isMotionValue_1 = __webpack_require__(/*! ./render/utils/isMotionValue */ "./src/render/utils/isMotionValue.ts");
Object.defineProperty(exports, "isMotionValue", { enumerable: true, get: function () { return isMotionValue_1.isMotionValue; } });
var shadow_1 = __webpack_require__(/*! ./render/style/shadow */ "./src/render/style/shadow.tsx");
Object.defineProperty(exports, "localShadowFrame", { enumerable: true, get: function () { return shadow_1.localShadowFrame; } });
var PresentationTree_1 = __webpack_require__(/*! ./render/presentation/PresentationTree */ "./src/render/presentation/PresentationTree.ts");
Object.defineProperty(exports, "PresentationTree", { enumerable: true, get: function () { return PresentationTree_1.PresentationTree; } });
Object.defineProperty(exports, "convertPresentationTree", { enumerable: true, get: function () { return PresentationTree_1.convertPresentationTree; } });
var RenderEnvironment_1 = __webpack_require__(/*! ./render/types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
Object.defineProperty(exports, "RenderTarget", { enumerable: true, get: function () { return RenderEnvironment_1.RenderTarget; } });
Object.defineProperty(exports, "useRenderEnvironment", { enumerable: true, get: function () { return RenderEnvironment_1.useRenderEnvironment; } });
Object.defineProperty(exports, "executeInRenderEnvironment", { enumerable: true, get: function () { return RenderEnvironment_1.executeInRenderEnvironment; } });
Object.defineProperty(exports, "setGlobalRenderEnvironment", { enumerable: true, get: function () { return RenderEnvironment_1.setGlobalRenderEnvironment; } });
var Navigation_1 = __webpack_require__(/*! ./components/Navigation */ "./src/components/Navigation.tsx");
Object.defineProperty(exports, "NavigationInterface", { enumerable: true, get: function () { return Navigation_1.NavigationInterface; } });
Object.defineProperty(exports, "NavigationProps", { enumerable: true, get: function () { return Navigation_1.NavigationProps; } });
Object.defineProperty(exports, "NavigationConsumer", { enumerable: true, get: function () { return Navigation_1.NavigationConsumer; } });
Object.defineProperty(exports, "NavigationCallbackProvider", { enumerable: true, get: function () { return Navigation_1.NavigationCallbackProvider; } });
var NavigationTransitions_1 = __webpack_require__(/*! ./components/NavigationTransitions */ "./src/components/NavigationTransitions.ts");
Object.defineProperty(exports, "NavigationTransition", { enumerable: true, get: function () { return NavigationTransitions_1.NavigationTransition; } });
Object.defineProperty(exports, "NavigationTransitionPosition", { enumerable: true, get: function () { return NavigationTransitions_1.NavigationTransitionPosition; } });
Object.defineProperty(exports, "NavigationTransitionSide", { enumerable: true, get: function () { return NavigationTransitions_1.NavigationTransitionSide; } });
Object.defineProperty(exports, "NavigationTransitionAnimation", { enumerable: true, get: function () { return NavigationTransitions_1.NavigationTransitionAnimation; } });
Object.defineProperty(exports, "NavigationTransitionAppearsFrom", { enumerable: true, get: function () { return NavigationTransitions_1.NavigationTransitionAppearsFrom; } });
Object.defineProperty(exports, "NavigationTransitionBackdropColor", { enumerable: true, get: function () { return NavigationTransitions_1.NavigationTransitionBackdropColor; } });
Object.defineProperty(exports, "FadeTransitionOptions", { enumerable: true, get: function () { return NavigationTransitions_1.FadeTransitionOptions; } });
Object.defineProperty(exports, "PushTransitionOptions", { enumerable: true, get: function () { return NavigationTransitions_1.PushTransitionOptions; } });
Object.defineProperty(exports, "ModalTransitionOptions", { enumerable: true, get: function () { return NavigationTransitions_1.ModalTransitionOptions; } });
Object.defineProperty(exports, "OverlayTransitionOptions", { enumerable: true, get: function () { return NavigationTransitions_1.OverlayTransitionOptions; } });
Object.defineProperty(exports, "FlipTransitionOptions", { enumerable: true, get: function () { return NavigationTransitions_1.FlipTransitionOptions; } });
var NavigationLink_1 = __webpack_require__(/*! ./render/types/NavigationLink */ "./src/render/types/NavigationLink.ts");
Object.defineProperty(exports, "NavigateTo", { enumerable: true, get: function () { return NavigationLink_1.NavigateTo; } });
Object.defineProperty(exports, "NavigationLink", { enumerable: true, get: function () { return NavigationLink_1.NavigationLink; } });
Object.defineProperty(exports, "NavigationTarget", { enumerable: true, get: function () { return NavigationLink_1.NavigationTarget; } });
Object.defineProperty(exports, "NavigationTransitionType", { enumerable: true, get: function () { return NavigationLink_1.NavigationTransitionType; } });
Object.defineProperty(exports, "NavigationTransitionDirection", { enumerable: true, get: function () { return NavigationLink_1.NavigationTransitionDirection; } });
var useNavigation_1 = __webpack_require__(/*! ./components/useNavigation */ "./src/components/useNavigation.ts");
Object.defineProperty(exports, "useNavigation", { enumerable: true, get: function () { return useNavigation_1.useNavigation; } });
var types_2 = __webpack_require__(/*! ./components/Stack/types */ "./src/components/Stack/types.ts");
Object.defineProperty(exports, "StackDirection", { enumerable: true, get: function () { return types_2.StackDirection; } });
Object.defineProperty(exports, "StackDistribution", { enumerable: true, get: function () { return types_2.StackDistribution; } });
Object.defineProperty(exports, "StackAlignment", { enumerable: true, get: function () { return types_2.StackAlignment; } });
var backgroundImageFromProps_1 = __webpack_require__(/*! ./render/style/backgroundImageFromProps */ "./src/render/style/backgroundImageFromProps.ts");
Object.defineProperty(exports, "backgroundImageFromProps", { enumerable: true, get: function () { return backgroundImageFromProps_1.backgroundImageFromProps; } });
var collectVisualStyleFromProps_2 = __webpack_require__(/*! ./render/style/collectVisualStyleFromProps */ "./src/render/style/collectVisualStyleFromProps.ts");
Object.defineProperty(exports, "collectVisualStyleFromProps", { enumerable: true, get: function () { return collectVisualStyleFromProps_2.collectVisualStyleFromProps; } });
var getCSSTextColorFromStyle_1 = __webpack_require__(/*! ./render/style/getCSSTextColorFromStyle */ "./src/render/style/getCSSTextColorFromStyle.ts");
Object.defineProperty(exports, "_getCSSTextColorFromStyle", { enumerable: true, get: function () { return getCSSTextColorFromStyle_1._getCSSTextColorFromStyle; } });
var DesignComponentWrapper_1 = __webpack_require__(/*! ./render/DesignComponentWrapper */ "./src/render/DesignComponentWrapper.tsx");
Object.defineProperty(exports, "createDesignComponent", { enumerable: true, get: function () { return DesignComponentWrapper_1.createDesignComponent; } });
Object.defineProperty(exports, "CanvasStore", { enumerable: true, get: function () { return DesignComponentWrapper_1.CanvasStore; } });
Object.defineProperty(exports, "PropertyTree", { enumerable: true, get: function () { return DesignComponentWrapper_1.PropertyTree; } });
Object.defineProperty(exports, "RenderNodeProvider", { enumerable: true, get: function () { return DesignComponentWrapper_1.RenderNodeProvider; } });
var CustomProperties_1 = __webpack_require__(/*! ./render/presentation/CustomProperties */ "./src/render/presentation/CustomProperties.tsx");
Object.defineProperty(exports, "CustomProperties", { enumerable: true, get: function () { return CustomProperties_1.CustomProperties; } });
Object.defineProperty(exports, "CustomPropertiesContext", { enumerable: true, get: function () { return CustomProperties_1.CustomPropertiesContext; } });
var fontStore_1 = __webpack_require__(/*! ./render/fonts/fontStore */ "./src/render/fonts/fontStore.ts");
Object.defineProperty(exports, "fontStore", { enumerable: true, get: function () { return fontStore_1.fontStore; } });
var loadFont_1 = __webpack_require__(/*! ./render/fonts/loadFont */ "./src/render/fonts/loadFont.ts");
Object.defineProperty(exports, "loadFont", { enumerable: true, get: function () { return loadFont_1.loadFont; } });
var utils_1 = __webpack_require__(/*! ./render/fonts/utils */ "./src/render/fonts/utils.ts");
Object.defineProperty(exports, "parseVariant", { enumerable: true, get: function () { return utils_1.parseVariant; } });
var types_3 = __webpack_require__(/*! ./render/fonts/types */ "./src/render/fonts/types.ts");
Object.defineProperty(exports, "WebFontLocator", { enumerable: true, get: function () { return types_3.WebFontLocator; } });
Object.defineProperty(exports, "Typeface", { enumerable: true, get: function () { return types_3.Typeface; } });
Object.defineProperty(exports, "TypefaceSelector", { enumerable: true, get: function () { return types_3.TypefaceSelector; } });
Object.defineProperty(exports, "Font", { enumerable: true, get: function () { return types_3.Font; } });
Object.defineProperty(exports, "TypefaceSourceName", { enumerable: true, get: function () { return types_3.TypefaceSourceName; } });
Object.defineProperty(exports, "TypefaceSourceNames", { enumerable: true, get: function () { return types_3.TypefaceSourceNames; } });
Object.defineProperty(exports, "TypefaceLocator", { enumerable: true, get: function () { return types_3.TypefaceLocator; } });
Object.defineProperty(exports, "ReadonlyFont", { enumerable: true, get: function () { return types_3.ReadonlyFont; } });
Object.defineProperty(exports, "ReadonlyTypeface", { enumerable: true, get: function () { return types_3.ReadonlyTypeface; } });
var setLayerBacked_1 = __webpack_require__(/*! ./render/utils/setLayerBacked */ "./src/render/utils/setLayerBacked.ts");
Object.defineProperty(exports, "forceLayerBackingWithCSSProperties", { enumerable: true, get: function () { return setLayerBacked_1.forceLayerBackingWithCSSProperties; } });
var LocalFontSource_1 = __webpack_require__(/*! ./render/fonts/LocalFontSource */ "./src/render/fonts/LocalFontSource.ts");
Object.defineProperty(exports, "systemTypefaceName", { enumerable: true, get: function () { return LocalFontSource_1.systemTypefaceName; } });
var EmptyState_1 = __webpack_require__(/*! ./components/EmptyState */ "./src/components/EmptyState.tsx");
Object.defineProperty(exports, "EmptyState", { enumerable: true, get: function () { return EmptyState_1.EmptyState; } });
var useMeasureLayout_1 = __webpack_require__(/*! ./render/utils/useMeasureLayout */ "./src/render/utils/useMeasureLayout.ts");
Object.defineProperty(exports, "useMeasureLayout", { enumerable: true, get: function () { return useMeasureLayout_1.useMeasureLayout; } });
var ObservableObject_1 = __webpack_require__(/*! ./data/ObservableObject */ "./src/data/ObservableObject.ts");
Object.defineProperty(exports, "ObservableObject", { enumerable: true, get: function () { return ObservableObject_1.ObservableObject; } });
var Data_1 = __webpack_require__(/*! ./data/Data */ "./src/data/Data.ts");
Object.defineProperty(exports, "Data", { enumerable: true, get: function () { return Data_1.Data; } });
var useData_1 = __webpack_require__(/*! ./data/useData */ "./src/data/useData/index.ts");
Object.defineProperty(exports, "createData", { enumerable: true, get: function () { return useData_1.createData; } });
Object.defineProperty(exports, "DataContext", { enumerable: true, get: function () { return useData_1.DataContext; } });
var WithOverride_1 = __webpack_require__(/*! ./deprecated/WithOverride */ "./src/deprecated/WithOverride.tsx");
Object.defineProperty(exports, "Override", { enumerable: true, get: function () { return WithOverride_1.Override; } });
Object.defineProperty(exports, "OverrideFunction", { enumerable: true, get: function () { return WithOverride_1.OverrideFunction; } });
Object.defineProperty(exports, "OverrideObject", { enumerable: true, get: function () { return WithOverride_1.OverrideObject; } });
Object.defineProperty(exports, "WithOverride", { enumerable: true, get: function () { return WithOverride_1.WithOverride; } });
var Action_1 = __webpack_require__(/*! ./render/types/Action */ "./src/render/types/Action.ts");
Object.defineProperty(exports, "Action", { enumerable: true, get: function () { return Action_1.Action; } });
Object.defineProperty(exports, "ActionHandler", { enumerable: true, get: function () { return Action_1.ActionHandler; } });
Object.defineProperty(exports, "ActionControlDescription", { enumerable: true, get: function () { return Action_1.ActionControlDescription; } });
Object.defineProperty(exports, "ActionControls", { enumerable: true, get: function () { return Action_1.ActionControls; } });
var addActionControls_1 = __webpack_require__(/*! ./utils/addActionControls */ "./src/utils/addActionControls.ts");
Object.defineProperty(exports, "addActionControls", { enumerable: true, get: function () { return addActionControls_1.addActionControls; } });
var DataObserver_1 = __webpack_require__(/*! ./deprecated/DataObserver */ "./src/deprecated/DataObserver.tsx");
Object.defineProperty(exports, "DataObserver", { enumerable: true, get: function () { return DataObserver_1.DataObserver; } });
Object.defineProperty(exports, "DataObserverContext", { enumerable: true, get: function () { return DataObserver_1.DataObserverContext; } });
var PropertyStore_1 = __webpack_require__(/*! ./data/PropertyStore */ "./src/data/PropertyStore.ts");
Object.defineProperty(exports, "PropertyStore", { enumerable: true, get: function () { return PropertyStore_1.PropertyStore; } });
var network_1 = __webpack_require__(/*! ./utils/network */ "./src/utils/network.ts");
Object.defineProperty(exports, "loadJSON", { enumerable: true, get: function () { return network_1.loadJSON; } });
var print_1 = __webpack_require__(/*! ./utils/print */ "./src/utils/print.ts");
Object.defineProperty(exports, "print", { enumerable: true, get: function () { return print_1.print; } });
var runtimeInjection_1 = __webpack_require__(/*! ./utils/runtimeInjection */ "./src/utils/runtimeInjection.ts");
Object.defineProperty(exports, "_injectRuntime", { enumerable: true, get: function () { return runtimeInjection_1._injectRuntime; } });
Object.defineProperty(exports, "Runtime", { enumerable: true, get: function () { return runtimeInjection_1.Runtime; } });
var addPropertyControls_1 = __webpack_require__(/*! ./utils/addPropertyControls */ "./src/utils/addPropertyControls.ts");
Object.defineProperty(exports, "addPropertyControls", { enumerable: true, get: function () { return addPropertyControls_1.addPropertyControls; } });
Object.defineProperty(exports, "getPropertyControls", { enumerable: true, get: function () { return addPropertyControls_1.getPropertyControls; } });
var version_1 = __webpack_require__(/*! ./version */ "./src/version.ts");
Object.defineProperty(exports, "version", { enumerable: true, get: function () { return version_1.version; } });
var MotionSetup_1 = __webpack_require__(/*! ./animation/Motion/MotionSetup */ "./src/animation/Motion/MotionSetup.tsx");
Object.defineProperty(exports, "MotionSetup", { enumerable: true, get: function () { return MotionSetup_1.MotionSetup; } });
var startAnimation_1 = __webpack_require__(/*! ./animation/Motion/startAnimation */ "./src/animation/Motion/startAnimation.ts");
Object.defineProperty(exports, "startAnimation", { enumerable: true, get: function () { return startAnimation_1.startAnimation; } });
var useAddVariantProps_1 = __webpack_require__(/*! ./modules/useAddVariantProps */ "./src/modules/useAddVariantProps.ts");
Object.defineProperty(exports, "useAddVariantProps", { enumerable: true, get: function () { return useAddVariantProps_1.useAddVariantProps; } });
var useVariantState_1 = __webpack_require__(/*! ./modules/useVariantState */ "./src/modules/useVariantState.ts");
Object.defineProperty(exports, "useVariantState", { enumerable: true, get: function () { return useVariantState_1.useVariantState; } });
Object.defineProperty(exports, "CycleVariantState", { enumerable: true, get: function () { return useVariantState_1.CycleVariantState; } });
Object.defineProperty(exports, "VariantSelector", { enumerable: true, get: function () { return useVariantState_1.VariantSelector; } });
var withCSS_1 = __webpack_require__(/*! ./modules/withCSS */ "./src/modules/withCSS.tsx");
Object.defineProperty(exports, "withCSS", { enumerable: true, get: function () { return withCSS_1.withCSS; } });
var callEach_1 = __webpack_require__(/*! ./modules/callEach */ "./src/modules/callEach.ts");
Object.defineProperty(exports, "callEach", { enumerable: true, get: function () { return callEach_1.callEach; } });
var useOnVariantChange_1 = __webpack_require__(/*! ./modules/useOnVariantChange */ "./src/modules/useOnVariantChange.ts");
Object.defineProperty(exports, "useOnVariantChange", { enumerable: true, get: function () { return useOnVariantChange_1.useOnVariantChange; } });
var useActiveVariantCallback_1 = __webpack_require__(/*! ./modules/useActiveVariantCallback */ "./src/modules/useActiveVariantCallback.ts");
Object.defineProperty(exports, "useActiveVariantCallback", { enumerable: true, get: function () { return useActiveVariantCallback_1.useActiveVariantCallback; } });
var useIsOnFramerCanvas_1 = __webpack_require__(/*! ./modules/useIsOnFramerCanvas */ "./src/modules/useIsOnFramerCanvas.ts");
Object.defineProperty(exports, "useIsOnFramerCanvas", { enumerable: true, get: function () { return useIsOnFramerCanvas_1.useIsOnFramerCanvas; } });
var cx_1 = __webpack_require__(/*! ./modules/cx */ "./src/modules/cx.ts");
Object.defineProperty(exports, "cx", { enumerable: true, get: function () { return cx_1.cx; } });
var LayoutGroup_1 = __webpack_require__(/*! ./modules/LayoutGroup */ "./src/modules/LayoutGroup.tsx");
Object.defineProperty(exports, "LayoutGroup", { enumerable: true, get: function () { return LayoutGroup_1.LayoutGroup; } });
const Loop_1 = __webpack_require__(/*! ./core/Loop */ "./src/core/Loop.ts");
Object.defineProperty(exports, "MainLoop", { enumerable: true, get: function () { return Loop_1.MainLoop; } });
if (true) {
    Loop_1.MainLoop.start();
}


/***/ }),

/***/ "./src/interpolation/ColorInterpolation.ts":
/*!*************************************************!*\
  !*** ./src/interpolation/ColorInterpolation.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ColorInterpolation = void 0;
const Interpolation_1 = __webpack_require__(/*! ./Interpolation */ "./src/interpolation/Interpolation.ts");
const Color_1 = __webpack_require__(/*! ../render/types/Color */ "./src/render/types/Color/index.ts");
const types_1 = __webpack_require__(/*! ../render/types/Color/types */ "./src/render/types/Color/types.ts");
const ColorInterpolation = (type = types_1.ColorMixModelType.HUSL) => {
    return {
        interpolate(from, to) {
            ;
            [from, to] = Interpolation_1.Interpolation.handleUndefined(from, to);
            return Color_1.Color.interpolate(Color_1.Color(from), Color_1.Color(to), type);
        },
        difference(from, to) {
            return Color_1.Color.difference(Color_1.Color(from), Color_1.Color(to));
        },
    };
};
exports.ColorInterpolation = ColorInterpolation;


/***/ }),

/***/ "./src/interpolation/Interpolation.ts":
/*!********************************************!*\
  !*** ./src/interpolation/Interpolation.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Interpolation = exports.isInterpolatable = void 0;
function isInterpolatable(value) {
    return typeof value === "function" && value.interpolationFor && typeof value.interpolationFor === "function";
}
exports.isInterpolatable = isInterpolatable;
var Interpolation;
(function (Interpolation) {
    function handleUndefined(from, to) {
        if (from === undefined) {
            from = to;
        }
        if (to === undefined) {
            to = from;
        }
        return [from, to];
    }
    Interpolation.handleUndefined = handleUndefined;
})(Interpolation = exports.Interpolation || (exports.Interpolation = {}));


/***/ }),

/***/ "./src/interpolation/NoInterpolation.ts":
/*!**********************************************!*\
  !*** ./src/interpolation/NoInterpolation.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NoInterpolation = void 0;
const Interpolation_1 = __webpack_require__(/*! ./Interpolation */ "./src/interpolation/Interpolation.ts");
exports.NoInterpolation = {
    interpolate(from, to) {
        ;
        [from, to] = Interpolation_1.Interpolation.handleUndefined(from, to);
        return (progress) => {
            return progress < 0.5 ? from : to;
        };
    },
    difference(from, to) {
        return from === to ? 0 : 1;
    },
};


/***/ }),

/***/ "./src/interpolation/NumberInterpolation.ts":
/*!**************************************************!*\
  !*** ./src/interpolation/NumberInterpolation.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NumberInterpolation = void 0;
const Interpolation_1 = __webpack_require__(/*! ./Interpolation */ "./src/interpolation/Interpolation.ts");
exports.NumberInterpolation = {
    interpolate(from, to) {
        ;
        [from, to] = Interpolation_1.Interpolation.handleUndefined(from, to);
        const a1 = +from;
        const b1 = to - a1;
        return (progress) => {
            const value = a1 + b1 * progress;
            return value;
        };
    },
    difference(from, to) {
        return to - from;
    },
};


/***/ }),

/***/ "./src/interpolation/ObjectInterpolation.ts":
/*!**************************************************!*\
  !*** ./src/interpolation/ObjectInterpolation.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectInterpolation = void 0;
const Interpolation_1 = __webpack_require__(/*! ./Interpolation */ "./src/interpolation/Interpolation.ts");
const ObjectInterpolation = (valueInterpolation) => {
    return {
        interpolate(from, to) {
            ;
            [from, to] = Interpolation_1.Interpolation.handleUndefined(from, to);
            const result = Object.assign({}, from);
            const interpolations = {};
            const keys = new Set();
            for (const key in from) {
                interpolations[key] = valueInterpolation.interpolate(from[key], to[key]);
                keys.add(key);
            }
            for (const key in to) {
                if (!keys.has(key)) {
                    interpolations[key] = valueInterpolation.interpolate(from[key], to[key]);
                    keys.add(key);
                }
            }
            return (progress) => {
                for (const key in interpolations) {
                    result[key] = interpolations[key](progress);
                }
                return result;
            };
        },
        difference(from, to) {
            let sum = 0;
            for (const key in from) {
                const difference = valueInterpolation.difference(from[key], to[key]);
                sum += Math.pow(difference, 2);
            }
            return Math.sqrt(sum);
        },
    };
};
exports.ObjectInterpolation = ObjectInterpolation;


/***/ }),

/***/ "./src/interpolation/ValueInterpolation.ts":
/*!*************************************************!*\
  !*** ./src/interpolation/ValueInterpolation.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.AnyInterpolation = exports.ValueInterpolation = void 0;
const NumberInterpolation_1 = __webpack_require__(/*! ./NumberInterpolation */ "./src/interpolation/NumberInterpolation.ts");
const ObjectInterpolation_1 = __webpack_require__(/*! ./ObjectInterpolation */ "./src/interpolation/ObjectInterpolation.ts");
const NoInterpolation_1 = __webpack_require__(/*! ./NoInterpolation */ "./src/interpolation/NoInterpolation.ts");
const Color_1 = __webpack_require__(/*! ../render/types/Color/Color */ "./src/render/types/Color/Color.ts");
const ColorInterpolation_1 = __webpack_require__(/*! ./ColorInterpolation */ "./src/interpolation/ColorInterpolation.ts");
const types_1 = __webpack_require__(/*! ../render/types/Color/types */ "./src/render/types/Color/types.ts");
const Interpolation_1 = __webpack_require__(/*! ./Interpolation */ "./src/interpolation/Interpolation.ts");
const DefaultInterpolationOptions = {
    colorModel: types_1.ColorMixModelType.HUSL,
};
class ValueInterpolation {
    constructor(options = DefaultInterpolationOptions) {
        this.interpolate = (from, to) => {
            ;
            [from, to] = Interpolation_1.Interpolation.handleUndefined(from, to);
            return this.interPolationForValue(from).interpolate(from, to);
        };
        this.difference = (from, to) => {
            const interpolation = this.interPolationForValue(from);
            return interpolation.difference(from, to);
        };
        this.options = Object.assign(Object.assign({}, DefaultInterpolationOptions), options);
    }
    interPolationForValue(value) {
        const type = typeof value;
        if (type === "number") {
            return NumberInterpolation_1.NumberInterpolation;
        }
        else if (type === "boolean" || type === "function") {
            return NoInterpolation_1.NoInterpolation;
        }
        else if (Color_1.Color.isColor(value)) {
            return ColorInterpolation_1.ColorInterpolation(this.options.colorModel);
        }
        else if (type === "object") {
            if (value === null) {
                return NoInterpolation_1.NoInterpolation;
            }
            const constructor = value.constructor;
            if (constructor && Interpolation_1.isInterpolatable(constructor)) {
                const interpolation = constructor.interpolationFor(value, this);
                if (interpolation && interpolation !== this && interpolation.constructor !== ValueInterpolation) {
                    return interpolation;
                }
            }
            return ObjectInterpolation_1.ObjectInterpolation(this);
        }
        console.warn(`No interpolation defined for ${value}`);
        return NoInterpolation_1.NoInterpolation;
    }
}
exports.ValueInterpolation = ValueInterpolation;
exports.AnyInterpolation = new ValueInterpolation();


/***/ }),

/***/ "./src/interpolation/index.ts":
/*!************************************!*\
  !*** ./src/interpolation/index.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ColorInterpolation = exports.NoInterpolation = exports.ObjectInterpolation = exports.NumberInterpolation = exports.AnyInterpolation = exports.ValueInterpolation = exports.Interpolation = void 0;
var Interpolation_1 = __webpack_require__(/*! ./Interpolation */ "./src/interpolation/Interpolation.ts");
Object.defineProperty(exports, "Interpolation", { enumerable: true, get: function () { return Interpolation_1.Interpolation; } });
var ValueInterpolation_1 = __webpack_require__(/*! ./ValueInterpolation */ "./src/interpolation/ValueInterpolation.ts");
Object.defineProperty(exports, "ValueInterpolation", { enumerable: true, get: function () { return ValueInterpolation_1.ValueInterpolation; } });
Object.defineProperty(exports, "AnyInterpolation", { enumerable: true, get: function () { return ValueInterpolation_1.AnyInterpolation; } });
var NumberInterpolation_1 = __webpack_require__(/*! ./NumberInterpolation */ "./src/interpolation/NumberInterpolation.ts");
Object.defineProperty(exports, "NumberInterpolation", { enumerable: true, get: function () { return NumberInterpolation_1.NumberInterpolation; } });
var ObjectInterpolation_1 = __webpack_require__(/*! ./ObjectInterpolation */ "./src/interpolation/ObjectInterpolation.ts");
Object.defineProperty(exports, "ObjectInterpolation", { enumerable: true, get: function () { return ObjectInterpolation_1.ObjectInterpolation; } });
var NoInterpolation_1 = __webpack_require__(/*! ./NoInterpolation */ "./src/interpolation/NoInterpolation.ts");
Object.defineProperty(exports, "NoInterpolation", { enumerable: true, get: function () { return NoInterpolation_1.NoInterpolation; } });
var ColorInterpolation_1 = __webpack_require__(/*! ./ColorInterpolation */ "./src/interpolation/ColorInterpolation.ts");
Object.defineProperty(exports, "ColorInterpolation", { enumerable: true, get: function () { return ColorInterpolation_1.ColorInterpolation; } });


/***/ }),

/***/ "./src/loader.ts":
/*!***********************!*\
  !*** ./src/loader.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(__webpack_require__(/*! react */ "react"));
if (!React) {
    throw Error("Framer needs React as an external dependency.");
}


/***/ }),

/***/ "./src/modules/LayoutGroup.tsx":
/*!*************************************!*\
  !*** ./src/modules/LayoutGroup.tsx ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LayoutGroup = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const LayoutGroup = ({ id, children, }) => {
    const parentLayoutId = react_1.useContext(framer_motion_1.LayoutGroupContext);
    if (!id)
        return React.createElement(React.Fragment, null, children);
    const combinedLayoutId = parentLayoutId && parentLayoutId !== id ? `${parentLayoutId}-${id}` : id;
    return React.createElement(framer_motion_1.LayoutGroupContext.Provider, { value: combinedLayoutId }, children);
};
exports.LayoutGroup = LayoutGroup;


/***/ }),

/***/ "./src/modules/callEach.ts":
/*!*********************************!*\
  !*** ./src/modules/callEach.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.callEach = void 0;
const callEach = (...fns) => fns.forEach(fn => fn && fn());
exports.callEach = callEach;


/***/ }),

/***/ "./src/modules/cx.ts":
/*!***************************!*\
  !*** ./src/modules/cx.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.cx = void 0;
function cx(...classNames) {
    return classNames.filter(Boolean).join(" ");
}
exports.cx = cx;


/***/ }),

/***/ "./src/modules/useActiveVariantCallback.ts":
/*!*************************************************!*\
  !*** ./src/modules/useActiveVariantCallback.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useActiveVariantCallback = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const useConstant_1 = __webpack_require__(/*! ../components/utils/useConstant */ "./src/components/utils/useConstant.ts");
const NavigationTargetContext_1 = __webpack_require__(/*! ../components/NavigationTargetContext */ "./src/components/NavigationTargetContext.tsx");
function rejectPending(pendingTimers, pendingPromises) {
    pendingTimers.forEach(t => clearTimeout(t));
    pendingTimers.clear();
    pendingPromises.forEach(reject => reject && reject("Callback cancelled by variant change"));
    pendingPromises.clear();
}
function createSet() {
    return new Set();
}
function useActiveVariantCallback(baseVariant) {
    const pendingPromises = useConstant_1.useConstant(createSet);
    const pendingTimers = useConstant_1.useConstant(createSet);
    NavigationTargetContext_1.useOnCurrentTargetChange(() => {
        return () => rejectPending(pendingTimers, pendingPromises);
    });
    React.useEffect(() => {
        return () => rejectPending(pendingTimers, pendingPromises);
    }, []);
    React.useEffect(() => {
        rejectPending(pendingTimers, pendingPromises);
    }, [baseVariant]);
    return React.useRef({
        activeVariantCallback: (callback) => (...args) => {
            return new Promise((resolve, reject) => {
                pendingPromises.add(reject);
                return callback(...args).then(() => resolve(true));
            }).catch(() => {
            });
        },
        delay: (callback, msDelay) => __awaiter(this, void 0, void 0, function* () {
            yield new Promise(resolve => pendingTimers.add(window.setTimeout(() => resolve(true), msDelay)));
            callback();
        }),
    }).current;
}
exports.useActiveVariantCallback = useActiveVariantCallback;


/***/ }),

/***/ "./src/modules/useAddVariantProps.ts":
/*!*******************************************!*\
  !*** ./src/modules/useAddVariantProps.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAddVariantProps = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
function useAddVariantProps(baseVariant, gestureVariant, variantProps) {
    return React.useCallback((id) => {
        var _a, _b, _c;
        if (!variantProps)
            return {};
        if (!baseVariant)
            return {};
        if (gestureVariant) {
            return Object.assign({}, (_a = variantProps[baseVariant]) === null || _a === void 0 ? void 0 : _a[id], (_b = variantProps[gestureVariant]) === null || _b === void 0 ? void 0 : _b[id]);
        }
        return ((_c = variantProps[baseVariant]) === null || _c === void 0 ? void 0 : _c[id]) || {};
    }, [baseVariant, gestureVariant]);
}
exports.useAddVariantProps = useAddVariantProps;


/***/ }),

/***/ "./src/modules/useForceUpdate.ts":
/*!***************************************!*\
  !*** ./src/modules/useForceUpdate.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useForceUpdate = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
function useForceUpdate() {
    const [_, setForcedRenderCount] = React.useState(0);
    return React.useCallback(() => setForcedRenderCount(v => v + 1), []);
}
exports.useForceUpdate = useForceUpdate;


/***/ }),

/***/ "./src/modules/useIsOnFramerCanvas.ts":
/*!********************************************!*\
  !*** ./src/modules/useIsOnFramerCanvas.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.useIsOnFramerCanvas = void 0;
const RenderEnvironment_1 = __webpack_require__(/*! ../render/types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
function useIsOnFramerCanvas() {
    return RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas;
}
exports.useIsOnFramerCanvas = useIsOnFramerCanvas;


/***/ }),

/***/ "./src/modules/useOnVariantChange.ts":
/*!*******************************************!*\
  !*** ./src/modules/useOnVariantChange.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useOnVariantChange = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const useIsOnFramerCanvas_1 = __webpack_require__(/*! ./useIsOnFramerCanvas */ "./src/modules/useIsOnFramerCanvas.ts");
const NavigationTargetContext_1 = __webpack_require__(/*! ../components/NavigationTargetContext */ "./src/components/NavigationTargetContext.tsx");
function callbackForVariant(map, variant) {
    if (map[variant])
        return map[variant];
    if (variant in map)
        return undefined;
    return map.default;
}
function useOnVariantChange(variant, callbackMap) {
    const isOnFramerCanvas = useIsOnFramerCanvas_1.useIsOnFramerCanvas();
    if (isOnFramerCanvas)
        return;
    const isInCurrentTargetRef = React.useRef(true);
    NavigationTargetContext_1.useOnCurrentTargetChange(isInTarget => {
        if (!isInCurrentTargetRef.current && isInTarget) {
            const callback = callbackForVariant(callbackMap, variant);
            if (callback)
                callback();
        }
        isInCurrentTargetRef.current = isInTarget;
    }, [callbackMap]);
    React.useEffect(() => {
        if (isInCurrentTargetRef.current) {
            const callback = callbackForVariant(callbackMap, variant);
            if (callback)
                callback();
        }
    }, [variant, callbackMap]);
}
exports.useOnVariantChange = useOnVariantChange;


/***/ }),

/***/ "./src/modules/useVariantState.ts":
/*!****************************************!*\
  !*** ./src/modules/useVariantState.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useVariantState = exports.CycleVariantState = exports.VariantSelector = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const cx_1 = __webpack_require__(/*! ./cx */ "./src/modules/cx.ts");
const useAddVariantProps_1 = __webpack_require__(/*! ./useAddVariantProps */ "./src/modules/useAddVariantProps.ts");
const useForceUpdate_1 = __webpack_require__(/*! ./useForceUpdate */ "./src/modules/useForceUpdate.ts");
function createGestureVariant(variant, type) {
    return `${variant}-${type}`;
}
function nextVariant(allVariants, currentVariant) {
    const index = allVariants.indexOf(currentVariant);
    let nextIndex = index + 1;
    if (nextIndex >= allVariants.length) {
        nextIndex = 0;
    }
    return allVariants[nextIndex];
}
var VariantSelector;
(function (VariantSelector) {
    VariantSelector["Variant"] = "v";
})(VariantSelector = exports.VariantSelector || (exports.VariantSelector = {}));
function getGesture(enabledGestures, isHovered, isPressed) {
    const { hover, pressed } = enabledGestures || {};
    if (pressed && isPressed)
        return "pressed";
    if (hover && isHovered)
        return "hover";
}
function createVariantClassName(baseVariant, variantClassNames) {
    const mappedClassName = variantClassNames[baseVariant];
    if (mappedClassName)
        return mappedClassName;
    return `framer-${VariantSelector.Variant}-${baseVariant}`;
}
exports.CycleVariantState = Symbol("cycle");
function useVariantState({ variant, defaultVariant: externalDefaultVariant, transitions: externalTransitions, enabledGestures: externalEnabledGestures, cycleOrder: externalCycleOrder = [], variantProps = {}, variantClassNames = {}, }) {
    const forceUpdate = useForceUpdate_1.useForceUpdate();
    const internalState = React.useRef({
        isHovered: false,
        isPressed: false,
        baseVariant: variant !== null && variant !== void 0 ? variant : externalDefaultVariant,
        gestureVariant: undefined,
        defaultVariant: externalDefaultVariant,
        enabledGestures: externalEnabledGestures,
        cycleOrder: externalCycleOrder,
        transitions: externalTransitions,
    });
    const resolveNextVariant = React.useCallback((nextBaseVariant = internalState.current.defaultVariant) => {
        const { baseVariant, gestureVariant, isPressed, isHovered, defaultVariant, enabledGestures, } = internalState.current;
        const gesture = getGesture(enabledGestures === null || enabledGestures === void 0 ? void 0 : enabledGestures[nextBaseVariant], isHovered, isPressed);
        const nextGestureVariant = gesture ? createGestureVariant(nextBaseVariant, gesture) : undefined;
        if (nextBaseVariant !== baseVariant || nextGestureVariant !== gestureVariant) {
            internalState.current.baseVariant = nextBaseVariant || defaultVariant;
            internalState.current.gestureVariant = nextGestureVariant;
            forceUpdate();
        }
    }, [forceUpdate]);
    const setGestureState = React.useCallback(({ isHovered, isPressed }) => {
        if (isHovered !== undefined)
            internalState.current.isHovered = isHovered;
        if (isPressed !== undefined)
            internalState.current.isPressed = isPressed;
        resolveNextVariant(internalState.current.baseVariant);
    }, [resolveNextVariant]);
    const setVariant = React.useCallback((proposedVariant) => {
        const { defaultVariant, cycleOrder, baseVariant } = internalState.current;
        const nextBaseVariant = proposedVariant === exports.CycleVariantState
            ? nextVariant(cycleOrder || [], baseVariant || defaultVariant)
            : proposedVariant;
        resolveNextVariant(nextBaseVariant || defaultVariant);
    }, [resolveNextVariant]);
    React.useEffect(() => {
        if (variant !== internalState.current.baseVariant)
            setVariant(variant);
    }, [variant, setVariant]);
    const { baseVariant } = internalState.current;
    const transition = React.useMemo(() => {
        const { transitions } = internalState.current;
        if (!transitions)
            return undefined;
        if (baseVariant) {
            const variantTransition = transitions[baseVariant];
            if (variantTransition)
                return variantTransition;
        }
        return transitions.default;
    }, [baseVariant]);
    const variants = [];
    const { gestureVariant, defaultVariant, enabledGestures, isHovered, isPressed } = internalState.current;
    if (baseVariant && baseVariant !== defaultVariant)
        variants.push(baseVariant);
    if (gestureVariant)
        variants.push(gestureVariant);
    const addVariantProps = useAddVariantProps_1.useAddVariantProps(baseVariant, gestureVariant, variantProps);
    return {
        variants,
        baseVariant,
        gestureVariant,
        transition,
        setVariant,
        setGestureState,
        addVariantProps,
        classNames: cx_1.cx(createVariantClassName(baseVariant, variantClassNames), getGesture(enabledGestures === null || enabledGestures === void 0 ? void 0 : enabledGestures[baseVariant], isHovered, isPressed)),
    };
}
exports.useVariantState = useVariantState;


/***/ }),

/***/ "./src/modules/withCSS.tsx":
/*!*********************************!*\
  !*** ./src/modules/withCSS.tsx ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withCSS = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const withCSS = (Component, escapedCSS) => React.forwardRef((props, ref) => {
    return (React.createElement(React.Fragment, null,
        React.createElement(Component, Object.assign({}, props, { ref: ref })),
        React.createElement("style", { dangerouslySetInnerHTML: {
                __html: escapedCSS,
            } })));
});
exports.withCSS = withCSS;


/***/ }),

/***/ "./src/render/DesignComponentWrapper.tsx":
/*!***********************************************!*\
  !*** ./src/render/DesignComponentWrapper.tsx ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RenderNodeProvider = exports.createDesignComponent = exports.hasSelfInParentChain = exports.CanvasStore = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Frame_1 = __webpack_require__(/*! ./presentation/Frame */ "./src/render/presentation/Frame/index.tsx");
const Vector_1 = __webpack_require__(/*! ./presentation/Vector */ "./src/render/presentation/Vector.tsx");
const VectorGroup_1 = __webpack_require__(/*! ./presentation/VectorGroup */ "./src/render/presentation/VectorGroup.tsx");
const SVG_1 = __webpack_require__(/*! ./presentation/SVG */ "./src/render/presentation/SVG.tsx");
const Text_1 = __webpack_require__(/*! ./presentation/Text */ "./src/render/presentation/Text.tsx");
const ComponentContainer_1 = __webpack_require__(/*! ./presentation/ComponentContainer */ "./src/render/presentation/ComponentContainer.tsx");
const Constraints_1 = __webpack_require__(/*! ./types/Constraints */ "./src/render/types/Constraints.ts");
const Stack_1 = __webpack_require__(/*! ../components/Stack */ "./src/components/Stack/index.tsx");
const utils_1 = __webpack_require__(/*! ../utils/utils */ "./src/utils/utils.ts");
const safeWindow_1 = __webpack_require__(/*! ../utils/safeWindow */ "./src/utils/safeWindow.ts");
const nodeIdFromString_1 = __webpack_require__(/*! ./utils/nodeIdFromString */ "./src/render/utils/nodeIdFromString.ts");
const WithOverride_1 = __webpack_require__(/*! ../deprecated/WithOverride */ "./src/deprecated/WithOverride.tsx");
const componentLoader_1 = __webpack_require__(/*! ./componentLoader */ "./src/render/componentLoader/index.ts");
const runtimeInjection_1 = __webpack_require__(/*! ../utils/runtimeInjection */ "./src/utils/runtimeInjection.ts");
class CanvasStore {
    constructor() {
        this.canvas = { children: [] };
        this.listeners = [];
        this.ids = [];
    }
    static shared(data) {
        if (data) {
            const store = new CanvasStore();
            store.setCanvas(data);
            return store;
        }
        if (!CanvasStore.__shared) {
            CanvasStore.__shared = new CanvasStore();
        }
        return CanvasStore.__shared;
    }
    updateNode(presentationNode) {
        const id = presentationNode.props.id;
        let children = this.canvas.children;
        if (!children) {
            this.canvas.children = children = [];
        }
        let found = false;
        for (let i = 0; i < children.length; i++) {
            const child = children[i];
            if (child.props.id === id) {
                found = true;
                children[i] = presentationNode;
                break;
            }
        }
        if (!found) {
            children.push(presentationNode);
        }
        this.setCanvas(this.canvas);
    }
    setCanvas(canvas) {
        if (!canvas.children)
            return;
        this.canvas = canvas;
        this.listeners.forEach((l, at) => {
            const id = this.ids[at];
            const data = findNodeFor(canvas, id);
            l.setState({ data });
        });
    }
    registerListener(listener, idOrName) {
        this.listeners.push(listener);
        this.ids.push(idOrName);
        return findNodeFor(this.canvas, idOrName);
    }
    removeListener(listener) {
        const at = this.listeners.indexOf(listener);
        if (at === -1)
            return;
        this.listeners.splice(at, 1);
        this.ids.splice(at, 1);
    }
}
exports.CanvasStore = CanvasStore;
CanvasStore.__shared = null;
const buildInComponents = { Frame: Frame_1.Frame, Vector: Vector_1.Vector, Stack: Stack_1.Stack, VectorGroup: VectorGroup_1.VectorGroup, SVG: SVG_1.SVG, Text: Text_1.Text, ComponentContainer: ComponentContainer_1.ComponentContainer };
function hasSelfInParentChain(self) {
    const constructor = self.constructor;
    let fiber = self._reactInternalFiber;
    if (!fiber) {
        console.warn("_reactInternalFiber not found for:", self);
        return false;
    }
    fiber = fiber.return;
    while (fiber) {
        const stateNode = fiber.stateNode;
        if (stateNode && stateNode.constructor === constructor)
            return true;
        fiber = fiber.return;
    }
    return false;
}
exports.hasSelfInParentChain = hasSelfInParentChain;
class DesignComponent extends React.Component {
    constructor() {
        super(...arguments);
        this.checkedParent = false;
        this.parentError = false;
    }
    hasParentError() {
        if (!this.checkedParent) {
            this.checkedParent = true;
            this.parentError = hasSelfInParentChain(this);
        }
        return this.parentError;
    }
    _typeForName(name) {
        const buildin = buildInComponents[name];
        if (buildin)
            return buildin;
        const codeComponent = runtimeInjection_1.runtime.componentLoader.componentForIdentifier(name);
        if (codeComponent && componentLoader_1.isReactDefinition(codeComponent)) {
            return codeComponent.class;
        }
        return Frame_1.Frame;
    }
    _renderData(presentation, componentProps, topLevelProps) {
        safeWindow_1.safeWindow["__checkBudget__"]();
        const { componentClass, name } = presentation;
        let { props, children } = presentation;
        props = Object.assign(Object.assign({}, props), { _constraints: { enabled: false } });
        const type = this._typeForName(componentClass);
        if (!type)
            return null;
        if (topLevelProps) {
            const { style } = props, rest = __rest(props, ["style"]);
            props = Object.assign(Object.assign(Object.assign({}, rest), topLevelProps), { _initialStyle: style });
        }
        if (!props.size && props._sizeOfMasterOnCanvas) {
            if (!props.width) {
                props.width = props._sizeOfMasterOnCanvas.width;
            }
            if (!props.height) {
                props.height = props._sizeOfMasterOnCanvas.height;
            }
        }
        if (name && componentProps.hasOwnProperty(name)) {
            if (componentClass === "Text") {
                const text = componentProps[name];
                if (text) {
                    props = Object.assign(Object.assign({}, props), { text: componentProps[name] });
                }
            }
            else {
                const orig = props.background;
                const background = { src: componentProps[name], fit: orig.fit };
                props = Object.assign(Object.assign({}, props), { background });
            }
        }
        const c = children && children.map((child) => this._renderData(child, componentProps, undefined));
        children = children ? c : [];
        return React.createElement(type, props, children);
    }
    render() {
        safeWindow_1.safeWindow["__checkBudget__"]();
        if (this.hasParentError()) {
            throw new Error("Design Component cannot be nested in itself.");
        }
        const data = this.state.data;
        if (!data) {
            throw new Error("Unable to connect to canvas data store.");
        }
        return this._renderData(this.state.data, this.props, this.props);
    }
}
function isNode(id, presentation) {
    const { name, props } = presentation;
    return (props && props.id === id) || name === id;
}
function findNodeFor(presentation, id) {
    if (!presentation)
        return null;
    if (isNode(id, presentation)) {
        return presentation;
    }
    const { children } = presentation;
    if (!children || !utils_1.isArray(children))
        return null;
    for (const child of children) {
        if (isNode(id, child)) {
            return child;
        }
    }
    for (const child of children) {
        const result = findNodeFor(child, id);
        if (result)
            return result;
    }
    return null;
}
function createDesignComponent(canvasStore, id, propertyControls, width = 200, height = 200) {
    var _a;
    return _a = class extends DesignComponent {
            constructor(props, context) {
                super(props, context);
                const data = canvasStore.registerListener(this, id);
                this.state = { data };
            }
            static rect(props) {
                const constraintValues = Constraints_1.ConstraintValues.fromProperties(props);
                return Constraints_1.ConstraintValues.toRect(constraintValues, props.parentSize || null, null);
            }
            static minSize(props, parentSize) {
                const constraintValues = Constraints_1.ConstraintValues.fromProperties(props);
                return Constraints_1.ConstraintValues.toMinSize(constraintValues, parentSize || null);
            }
            static size(props, parentSize, freeSpace) {
                const constraintValues = Constraints_1.ConstraintValues.fromProperties(props);
                return Constraints_1.ConstraintValues.toSize(constraintValues, parentSize || null, null, freeSpace);
            }
            render() {
                const maybeRenderWithProvider = (renderNode) => {
                    const nodeId = nodeIdFromString_1.nodeIdFromString(id);
                    if (!this.state.data && renderNode) {
                        safeWindow_1.safeWindow["__checkBudget__"]();
                        const el = renderNode(nodeId);
                        if (el && React.isValidElement(el) && typeof el.type !== "string") {
                            return React.createElement(WithOverride_1.WithOverride(el.type, this.props), el.props);
                        }
                    }
                    return super.render();
                };
                return React.createElement(RenderNodeContext.Consumer, null, maybeRenderWithProvider);
            }
            componentWillUnmount() {
                canvasStore.removeListener(this);
            }
        },
        _a.displayName = `DesignComponent(${id})`,
        _a.propertyControls = propertyControls,
        _a.supportsConstraints = true,
        _a.defaultProps = {
            _sizeOfMasterOnCanvas: {
                width,
                height,
            },
        },
        _a;
}
exports.createDesignComponent = createDesignComponent;
const RenderNodeContext = React.createContext(null);
exports.RenderNodeProvider = RenderNodeContext.Provider;


/***/ }),

/***/ "./src/render/assetResolver/serverURL.ts":
/*!***********************************************!*\
  !*** ./src/render/assetResolver/serverURL.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.serverURL = void 0;
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const runtimeInjection_1 = __webpack_require__(/*! ../../utils/runtimeInjection */ "./src/utils/runtimeInjection.ts");
function parseURL(url, base) {
    try {
        return typeof base === "undefined" ? new URL(url) : new URL(url, base);
    }
    catch (err) {
        return null;
    }
}
const flatten = (arrays) => [].concat.apply([], arrays);
function joinPaths(paths) {
    let res = "";
    for (const path of paths) {
        if (!path)
            continue;
        if (res.length > 0 && !res.endsWith("/")) {
            res += "/";
        }
        if (Array.isArray(path)) {
            res += joinPaths(path);
        }
        else {
            res += encodeURIComponent(path).replace(/%2F/g, "/");
        }
    }
    return res;
}
function serverURL(...paths) {
    const notEmptyPaths = flatten(paths).filter(Boolean);
    if (notEmptyPaths.length === 1 && parseURL(notEmptyPaths[0])) {
        return notEmptyPaths[0];
    }
    const path = joinPaths(paths);
    const resolvedAsset = runtimeInjection_1.runtime.assetResolver(path, {
        isFramerResourceURL: true,
        isExport: RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.export,
    });
    return resolvedAsset || "";
}
exports.serverURL = serverURL;


/***/ }),

/***/ "./src/render/componentLoader/definition.ts":
/*!**************************************************!*\
  !*** ./src/render/componentLoader/definition.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isReactDefinition = exports.isOverride = exports.isDesignDefinition = void 0;
function isDesignDefinition(d) {
    return d.type === "master";
}
exports.isDesignDefinition = isDesignDefinition;
function isOverride(d) {
    return d.type === "override";
}
exports.isOverride = isOverride;
function isReactDefinition(d) {
    return d.type !== "master";
}
exports.isReactDefinition = isReactDefinition;


/***/ }),

/***/ "./src/render/componentLoader/index.ts":
/*!*********************************************!*\
  !*** ./src/render/componentLoader/index.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(__webpack_require__(/*! ./definition */ "./src/render/componentLoader/definition.ts"), exports);


/***/ }),

/***/ "./src/render/componentLoader/package.ts":
/*!***********************************************!*\
  !*** ./src/render/componentLoader/package.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.localPackageFallbackIdentifier = void 0;
exports.localPackageFallbackIdentifier = "|local|";


/***/ }),

/***/ "./src/render/fonts/CustomFontSource.ts":
/*!**********************************************!*\
  !*** ./src/render/fonts/CustomFontSource.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomFontSource = exports.customFontSelectorPrefix = void 0;
const types_1 = __webpack_require__(/*! ./types */ "./src/render/fonts/types.ts");
exports.customFontSelectorPrefix = "CUSTOM;";
function getCustomFontName(fileName, properties) {
    if (!properties)
        return fileName.substring(0, fileName.lastIndexOf("."));
    const fontFamily = properties.font.preferredFamily === "" ? properties.font.fontFamily : properties.font.preferredFamily;
    const variant = properties.font.preferredSubFamily === "" ? properties.font.fontSubFamily : properties.font.preferredSubFamily;
    return `${fontFamily} ${variant}`;
}
class CustomFontSource {
    constructor() {
        this.name = types_1.TypefaceSourceNames.Custom;
        this.typefaces = [];
        this.byFamily = new Map();
        this.byAssetKey = new Map();
    }
    importFonts(assets) {
        this.typefaces.length = 0;
        this.byFamily.clear();
        this.byAssetKey.clear();
        const fonts = [];
        assets.forEach(asset => {
            var _a;
            if (!this.isValidCustomFontAsset(asset)) {
                return;
            }
            const fontName = getCustomFontName(asset.name, asset.properties);
            const typeface = this.createTypeface(fontName);
            const font = {
                typeface,
                selector: `${exports.customFontSelectorPrefix}${fontName}`,
                variant: this.inferVariantName(fontName),
                postscriptName: (_a = asset.properties) === null || _a === void 0 ? void 0 : _a.font.postscriptName,
                file: asset.url,
            };
            typeface.fonts.push(font);
            typeface.owner = asset.ownerType === "team" ? "team" : "project";
            this.byAssetKey.set(fontName, asset.key);
            fonts.push(...typeface.fonts);
        });
        return fonts;
    }
    isValidCustomFontAsset(asset) {
        var _a, _b;
        return (asset.mimeType.startsWith("font/") &&
            asset.properties &&
            "font" in asset.properties &&
            ((_a = asset.properties) === null || _a === void 0 ? void 0 : _a.kind) === "font" &&
            "fontFamily" in ((_b = asset.properties) === null || _b === void 0 ? void 0 : _b.font));
    }
    inferVariantName(family) {
        const possibleValues = [
            "thin",
            "ultra light",
            "extra light",
            "light",
            "normal",
            "medium",
            "semi bold",
            "bold",
            "extra bold",
            "black",
        ];
        const possibleValuesWithItalics = [...possibleValues.map(value => `${value} italic`), ...possibleValues];
        const lowerCaseFamily = family.toLowerCase();
        const tokens = [...lowerCaseFamily.split(" "), ...lowerCaseFamily.split("-"), ...lowerCaseFamily.split("_")];
        const foundToken = possibleValuesWithItalics.find(value => tokens.includes(value) || tokens.includes(value.replace(/\s+/g, "")));
        if (foundToken)
            return foundToken.replace(/(^\w|\s\w)/g, char => char.toUpperCase());
        return "Regular";
    }
    createTypeface(family) {
        const existingTypeface = this.byFamily.get(family);
        if (existingTypeface)
            return existingTypeface;
        const typeface = {
            source: this.name,
            family,
            fonts: [],
        };
        this.addTypeface(typeface);
        return typeface;
    }
    addTypeface(typeface) {
        this.typefaces.push(typeface);
        this.byFamily.set(typeface.family, typeface);
    }
    parseSelector(selector) {
        if (!selector.startsWith(exports.customFontSelectorPrefix))
            return null;
        const tokens = selector.split(exports.customFontSelectorPrefix);
        const locator = { source: "custom", family: tokens[1] };
        return locator;
    }
    getFontBySelector(selector, createFont = true) {
        const locator = this.parseSelector(selector);
        if (!locator)
            return null;
        if (!createFont && !this.byFamily.get(locator.family))
            return null;
        return this.getTypefaceByFamily(locator.family).fonts[0];
    }
    getTypefaceByFamily(family) {
        const foundTypeface = this.byFamily.get(family);
        if (foundTypeface)
            return foundTypeface;
        const typeface = {
            source: "custom",
            family,
            fonts: [],
        };
        typeface.fonts.push({
            selector: `${exports.customFontSelectorPrefix}${family}`,
            variant: this.inferVariantName(family),
            typeface,
        });
        return typeface;
    }
}
exports.CustomFontSource = CustomFontSource;


/***/ }),

/***/ "./src/render/fonts/GoogleFontSource.ts":
/*!**********************************************!*\
  !*** ./src/render/fonts/GoogleFontSource.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleFontSource = exports.googleFontSelectorPrefix = void 0;
const types_1 = __webpack_require__(/*! ./types */ "./src/render/fonts/types.ts");
exports.googleFontSelectorPrefix = "GF;";
class GoogleFontSource {
    constructor() {
        this.name = types_1.TypefaceSourceNames.Google;
        this.typefaces = [];
        this.byFamily = new Map();
    }
    getTypefaceByFamily(family) {
        var _a;
        return (_a = this.byFamily.get(family)) !== null && _a !== void 0 ? _a : null;
    }
    parseSelector(selector) {
        if (!selector.startsWith(exports.googleFontSelectorPrefix))
            return null;
        const tokens = selector.split("-");
        if (tokens.length !== 2)
            return null;
        const family = tokens[0].replace(exports.googleFontSelectorPrefix, "");
        const variant = tokens[1];
        return { family, variant, source: this.name };
    }
    createTypeface(family) {
        const typeface = { family: family, fonts: [], source: this.name };
        this.addTypeface(typeface);
        return typeface;
    }
    addTypeface(typeface) {
        this.typefaces.push(typeface);
        this.byFamily.set(typeface.family, typeface);
    }
    importFonts(webFonts) {
        let fontLocators = [];
        webFonts.forEach(webFont => {
            const locators = webFont.variants.map(variant => ({
                source: this.name,
                variant: variant,
                family: webFont.family,
                file: webFont.files[variant].replace("http://", "https://"),
            }));
            fontLocators = fontLocators.concat(locators);
        });
        return fontLocators;
    }
}
exports.GoogleFontSource = GoogleFontSource;


/***/ }),

/***/ "./src/render/fonts/LocalFontSource.ts":
/*!*********************************************!*\
  !*** ./src/render/fonts/LocalFontSource.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalFontSource = exports.systemTypefaceName = void 0;
const types_1 = __webpack_require__(/*! ./types */ "./src/render/fonts/types.ts");
const fonts_1 = __webpack_require__(/*! ./fonts */ "./src/render/fonts/fonts.ts");
exports.systemTypefaceName = "System Default";
class LocalFontSource {
    constructor() {
        this.name = types_1.TypefaceSourceNames.Local;
        this.typefaces = [];
        this.byFamily = new Map();
        this.typefaceAliasBySelector = new Map();
        this.typefaceAliases = new Map();
        this.interTypefaceSelectors = new Set();
    }
    getTypefaceByFamily(family) {
        var _a;
        return (_a = this.byFamily.get(family)) !== null && _a !== void 0 ? _a : null;
    }
    createTypeface(family) {
        const typeface = { family: family, fonts: [], source: this.name };
        this.addTypeface(typeface);
        return typeface;
    }
    addTypeface(typeface) {
        this.typefaces.push(typeface);
        this.byFamily.set(typeface.family, typeface);
    }
    importFonts() {
        const fonts = [];
        for (const family of fonts_1.typefaces.keys()) {
            const members = fonts_1.typefaces.get(family);
            if (!members)
                continue;
            const typeface = this.createTypeface(family);
            for (const variant of members.keys()) {
                const member = members.get(variant);
                if (!member)
                    continue;
                const { selector, weight } = member;
                const font = {
                    variant,
                    selector,
                    weight,
                    typeface,
                    status: "loaded",
                };
                typeface.fonts.push(font);
            }
            fonts.push(...typeface.fonts);
        }
        for (const [key, value] of Object.entries(fonts_1.typefaceAliases)) {
            this.addTypefaceAlias(key, value);
        }
        const { typeface: systemTypeface, aliases } = this.getSystemTypeface();
        this.addTypeface(systemTypeface);
        for (const [key, value] of aliases) {
            this.addTypefaceAlias(key, value);
        }
        fonts.push(...systemTypeface.fonts);
        const interTypeface = this.importInterTypeface();
        fonts.push(...interTypeface.fonts);
        return fonts;
    }
    importInterTypeface() {
        const inter = [
            ["Regular", "Inter", undefined],
            ["Thin", "Inter-Thin", 100],
            ["Extra Light", "Inter-ExtraLight", 200],
            ["Light", "Inter-Light", 300],
            ["Medium", "Inter-Medium", 500],
            ["Semibold", "Inter-SemiBold", 600],
            ["Bold", "Inter-Bold", 700],
            ["Extra Bold", "Inter-ExtraBold", 800],
            ["Black", "Inter-Black", 900],
            ["Thin Italic", "Inter-ThinItalic", 100],
            ["Extra Light Italic", "Inter-ExtraLightItalic", 300],
            ["Light Italic", "Inter-LightItalic", 300],
            ["Italic", "Inter-Italic", undefined],
            ["Medium Italic", "Inter-MediumItalic", 500],
            ["Semibold Italic", "Inter-SemiBoldItalic", 600],
            ["Bold Italic", "Inter-BoldItalic", 700],
            ["Extra Bold Italic", "Inter-ExtraBoldItalic", 800],
            ["Black Italic", "Inter-BlackItalic", 900],
        ];
        const typeface = this.createTypeface("Inter");
        for (const entry of inter) {
            const [variant, selector, weight] = entry;
            const font = {
                variant,
                selector,
                weight,
                typeface,
                style: /italic/i.test(selector) ? "italic" : undefined,
            };
            typeface.fonts.push(font);
        }
        typeface.fonts.forEach(t => this.interTypefaceSelectors.add(t.selector));
        return typeface;
    }
    addTypefaceAlias(key, value) {
        this.typefaceAliases.set(key, value);
        this.typefaceAliasBySelector.set(value, key);
    }
    getSystemTypeface() {
        const fontFamilies = this.workaroundChrome81and82("system-ui|-apple-system|BlinkMacSystemFont|Segoe UI|Roboto|Oxygen|Ubuntu|Cantarell|Fira Sans|Droid Sans|Helvetica Neue|sans-serif");
        const typeface = { family: exports.systemTypefaceName, fonts: [], source: this.name };
        const aliases = new Map();
        const weights = [400, 100, 200, 300, 500, 600, 700, 800, 900];
        const styles = ["normal", "italic"];
        for (const style of styles) {
            for (const weight of weights) {
                const variant = createVariantName(weight, style);
                const alias = `__SystemDefault-${weight}-${style}__`;
                const font = {
                    variant,
                    selector: alias,
                    style: style === "normal" ? undefined : style,
                    weight: weight === 400 ? undefined : weight,
                    typeface,
                    status: "loaded",
                };
                typeface.fonts.push(font);
                aliases.set(alias, fontFamilies);
            }
        }
        return { typeface, aliases };
    }
    getTypefaceAliasBySelector(selector) {
        return this.typefaceAliasBySelector.get(selector) || null;
    }
    getTypefaceSelectorByAlias(alias) {
        return this.typefaceAliases.get(alias) || null;
    }
    isTypefaceAlias(value) {
        if (value && value.match(/^__.*__$/))
            return true;
        return false;
    }
    workaroundChrome81and82(s) {
        const userAgent = navigator.userAgent;
        if (!userAgent.includes("Mac OS X 10_15"))
            return s;
        if (!userAgent.includes("Chrome/81") && !userAgent.includes("Chrome/82"))
            return s;
        return `Inter|${s}`;
    }
}
exports.LocalFontSource = LocalFontSource;
const fontWeightNames = {
    "100": "Thin",
    "200": "Extra Light",
    "300": "Light",
    "400": "Normal",
    "500": "Medium",
    "600": "Semi Bold",
    "700": "Bold",
    "800": "Extra Bold",
    "900": "Black",
};
function createVariantName(weight, style) {
    const friendlyStyle = style === "normal" ? "Regular" : "Italic";
    if (weight === 400) {
        return friendlyStyle;
    }
    if (style !== "normal") {
        return `${fontWeightNames[weight]} ${friendlyStyle}`;
    }
    return `${fontWeightNames[weight]}`;
}


/***/ }),

/***/ "./src/render/fonts/fontStore.ts":
/*!***************************************!*\
  !*** ./src/render/fonts/fontStore.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fontStore = exports.FontStore = void 0;
const fonts_1 = __webpack_require__(/*! ./fonts */ "./src/render/fonts/fonts.ts");
const GoogleFontSource_1 = __webpack_require__(/*! ./GoogleFontSource */ "./src/render/fonts/GoogleFontSource.ts");
const LocalFontSource_1 = __webpack_require__(/*! ./LocalFontSource */ "./src/render/fonts/LocalFontSource.ts");
const types_1 = __webpack_require__(/*! ./types */ "./src/render/fonts/types.ts");
const utils_1 = __webpack_require__(/*! ./utils */ "./src/render/fonts/utils.ts");
const CustomFontSource_1 = __webpack_require__(/*! ./CustomFontSource */ "./src/render/fonts/CustomFontSource.ts");
const loadFont_1 = __webpack_require__(/*! ./loadFont */ "./src/render/fonts/loadFont.ts");
const runtimeInjection_1 = __webpack_require__(/*! ../../utils/runtimeInjection */ "./src/utils/runtimeInjection.ts");
class FontStore {
    constructor() {
        this.bySelector = new Map();
        this.loadedSelectors = new Set();
        this.createGoogleFont = (locator) => {
            const { source, family, variant, file } = locator;
            let typeface = this.getTypeface(locator);
            if (!typeface) {
                typeface = this[source].createTypeface(family);
            }
            const variantInfo = utils_1.parseVariant(variant) || {};
            const { weight, style } = variantInfo;
            const selector = `GF;${family}-${variant}`;
            const font = {
                typeface,
                variant,
                selector,
                weight,
                style,
                file,
            };
            typeface.fonts.push(font);
            return font;
        };
        this.local = new LocalFontSource_1.LocalFontSource();
        this.google = new GoogleFontSource_1.GoogleFontSource();
        this.custom = new CustomFontSource_1.CustomFontSource();
        this.bySelector = new Map();
        this.importLocalFonts();
        this.defaultFont = this.getFontBySelector(fonts_1.defaultFontSelector);
        if (this.defaultFont) {
            this.loadFont(this.defaultFont);
        }
    }
    addFont(font) {
        this.bySelector.set(font.selector, font);
    }
    getAvailableFonts() {
        return Array.from(this.bySelector.values());
    }
    importLocalFonts() {
        this.local.importFonts().forEach(font => {
            this.addFont(font);
            if (!this.local.interTypefaceSelectors.has(font.selector)) {
                this.loadFont(font);
            }
        });
    }
    importGoogleFonts() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.getGoogleFontsListPromise) {
                this.getGoogleFontsListPromise = runtimeInjection_1.runtime.fetchGoogleFontsList();
                const googleFonts = yield this.getGoogleFontsListPromise;
                this.google.importFonts(googleFonts).forEach(locator => {
                    const font = this.createGoogleFont(locator);
                    this.addFont(font);
                });
            }
            return this.getGoogleFontsListPromise;
        });
    }
    importCustomFonts(assets) {
        this.bySelector.forEach((_, key) => {
            if (key.startsWith(CustomFontSource_1.customFontSelectorPrefix)) {
                this.bySelector.delete(key);
            }
        });
        this.custom.importFonts(assets).forEach(font => this.addFont(font));
    }
    getTypeface(info) {
        const typeface = this[info.source].getTypefaceByFamily(info.family);
        return typeface;
    }
    getFontBySelector(selector, createFont = true) {
        if (selector.startsWith(CustomFontSource_1.customFontSelectorPrefix)) {
            return this.custom.getFontBySelector(selector, createFont);
        }
        return this.bySelector.get(selector) || null;
    }
    getDraftPropertiesBySelector(selector) {
        const font = this.getFontBySelector(selector);
        if (font) {
            return {
                style: font.style,
                weight: font.weight,
                variant: font.variant,
                family: font.typeface.family,
                source: font.typeface.source,
            };
        }
        const locator = this.google.parseSelector(selector);
        if (locator) {
            const fontVariant = utils_1.parseVariant(locator.variant);
            if (fontVariant) {
                return {
                    style: fontVariant.style,
                    weight: fontVariant.weight,
                    variant: locator.variant,
                    family: locator.family,
                    source: types_1.TypefaceSourceNames.Google,
                };
            }
        }
        return null;
    }
    isSelectorLoaded(selector) {
        return this.loadedSelectors.has(selector);
    }
    loadTypeface(typeface) {
        return __awaiter(this, void 0, void 0, function* () {
            yield Promise.all(typeface.fonts.map(f => this.loadFont(f)));
        });
    }
    loadFont(font) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.isSelectorLoaded(font.selector)) {
                return;
            }
            if (font.typeface.source === types_1.TypefaceSourceNames.Local) {
                if (this.local.interTypefaceSelectors.has(font.selector) && "dev" !== "test") {
                    yield loadFont_1.isFontReady(font.typeface.family, font.style, font.weight);
                }
                this.loadedSelectors.add(font.selector);
                return;
            }
            if (!font.file) {
                return Promise.reject(`Unable to load font: ${font.selector}`);
            }
            yield loadFont_1.loadFont({
                family: font.typeface.family,
                url: font.file,
                weight: font.weight,
                style: font.style,
            }, document);
            this.loadedSelectors.add(font.selector);
        });
    }
    loadWebFontsFromSelectors(selectors) {
        return __awaiter(this, void 0, void 0, function* () {
            if (selectors.some(s => s.startsWith(GoogleFontSource_1.googleFontSelectorPrefix))) {
                yield this.importGoogleFonts();
            }
            const fonts = selectors.map(s => this.bySelector.get(s)).filter((f) => !!f);
            return Promise.allSettled(fonts.map(f => this.loadFont(f)));
        });
    }
}
exports.FontStore = FontStore;
exports.fontStore = new FontStore();
Promise.allSettled =
    Promise.allSettled ||
        ((promises) => Promise.all(promises.map(p => p.then(v => ({ status: "fulfilled", value: v })).catch(e => ({ status: "rejected", reason: e })))));


/***/ }),

/***/ "./src/render/fonts/fonts.ts":
/*!***********************************!*\
  !*** ./src/render/fonts/fonts.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.fontSelectors = exports.defaultFontSelector = exports.typefaces = exports.typefaceAliases = void 0;
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
const immutable_1 = __webpack_require__(/*! immutable */ "../../node_modules/immutable/dist/immutable.js");
function convertToOrderedMap(descriptors) {
    return immutable_1.OrderedMap(descriptors.map(descriptor => [
        descriptor[0],
        immutable_1.OrderedMap(descriptor[1].map(member => [
            member[0],
            {
                selector: member[1],
                weight: member[2],
            },
        ])),
    ]));
}
const safeFonts = [
    [
        "Arial",
        [
            ["Regular", "Arial", undefined],
            ["Black", "Arial-Black", undefined],
            ["Narrow", "Arial Narrow", undefined],
            ["Rounded Bold", "Arial Rounded MT Bold", undefined],
        ],
    ],
    [
        "Avenir",
        [
            ["Book", "Avenir", undefined],
            ["Light", "Avenir-Light", undefined],
            ["Medium", "Avenir-Medium", undefined],
            ["Heavy", "Avenir-Heavy", undefined],
            ["Black", "Avenir-Black", undefined],
        ],
    ],
    [
        "Avenir Next",
        [
            ["Regular", "Avenir Next", undefined],
            ["Ultra Light", "AvenirNext-UltraLight", undefined],
            ["Medium", "AvenirNext-Medium", undefined],
            ["Demi Bold", "AvenirNext-DemiBold", undefined],
            ["Heavy", "AvenirNext-Heavy", undefined],
        ],
    ],
    [
        "Avenir Next Condensed",
        [
            ["Regular", "Avenir Next Condensed", undefined],
            ["Ultra Light", "AvenirNextCondensed-UltraLight", undefined],
            ["Medium", "AvenirNextCondensed-Medium", undefined],
            ["Demi Bold", "AvenirNextCondensed-DemiBold", undefined],
            ["Heavy", "AvenirNextCondensed-Heavy", undefined],
        ],
    ],
    [
        "Baskerville",
        [
            ["Regular", "Baskerville", undefined],
            ["Semi Bold", "Baskerville-SemiBold", undefined],
        ],
    ],
    [
        "Bodoni 72",
        [
            ["Book", "Bodoni 72", undefined],
            ["Oldstyle", "Bodoni 72 Oldstyle", undefined],
            ["Smallcaps", "Bodoni 72 Smallcaps", undefined],
        ],
    ],
    ["Courier", [["Regular", "Courier", undefined]]],
    ["Courier New", [["Regular", "Courier New", undefined]]],
    [
        "Futura",
        [
            ["Medium", "Futura", undefined],
            ["Condensed", "Futura-CondensedMedium", undefined],
            ["Condensed ExtraBold", "Futura-CondensedExtraBold", undefined],
        ],
    ],
    ["Georgia", [["Regular", "Georgia", undefined]]],
    [
        "Gill Sans",
        [
            ["Regular", "Gill Sans", undefined],
            ["Light", "GillSans-Light", undefined],
            ["SemiBold", "GillSans-SemiBold", undefined],
            ["UltraBold", "GillSans-UltraBold", undefined],
        ],
    ],
    [
        "Helvetica",
        [
            ["Regular", "Helvetica", undefined],
            ["Light", "Helvetica-Light", undefined],
            ["Bold", "Helvetica-Bold", undefined],
            ["Oblique", "Helvetica-Oblique", undefined],
            ["Light Oblique", "Helvetica-LightOblique", undefined],
            ["Bold Oblique", "Helvetica-BoldOblique", undefined],
        ],
    ],
    [
        "Helvetica Neue",
        [
            ["Regular", "Helvetica Neue", undefined],
            ["UltraLight", "HelveticaNeue-UltraLight", undefined],
            ["Thin", "HelveticaNeue-Thin", undefined],
            ["Light", "HelveticaNeue-Light", undefined],
            ["Medium", "HelveticaNeue-Medium", undefined],
            ["Bold", "HelveticaNeue-Bold", undefined],
            ["Italic", "HelveticaNeue-Italic", undefined],
            ["UltraLight Italic", "HelveticaNeue-UltraLightItalic", undefined],
            ["Thin Italic", "HelveticaNeue-ThinItalic", undefined],
            ["Light Italic", "HelveticaNeue-LightItalic", undefined],
            ["Medium Italic", "HelveticaNeue-MediumItalic", undefined],
            ["Bold Italic", "HelveticaNeue-BoldItalic", undefined],
            ["Condensed Bold", "HelveticaNeue-CondensedBold", undefined],
            ["Condensed Black", "HelveticaNeue-CondensedBlack", undefined],
        ],
    ],
    ["Hoefler Text", [["Regular", "Hoefler Text", undefined]]],
    ["Impact", [["Regular", "Impact", undefined]]],
    ["Lucida Grande", [["Regular", "Lucida Grande", undefined]]],
    ["Menlo", [["Regular", "Menlo", undefined]]],
    ["Monaco", [["Regular", "Monaco", undefined]]],
    [
        "Optima",
        [
            ["Regular", "Optima", undefined],
            ["ExtraBlack", "Optima-ExtraBlack", undefined],
        ],
    ],
    ["Palatino", [["Regular", "Palatino", undefined]]],
    [
        "SF Pro Display",
        [
            ["Regular", "__SF-UI-Display-Regular__", 400],
            ["Ultralight", "__SF-UI-Display-Ultralight__", 100],
            ["Thin", "__SF-UI-Display-Thin__", 200],
            ["Light", "__SF-UI-Display-Light__", 300],
            ["Medium", "__SF-UI-Display-Medium__", 500],
            ["Semibold", "__SF-UI-Display-Semibold__", 600],
            ["Bold", "__SF-UI-Display-Bold__", 700],
            ["Heavy", "__SF-UI-Display-Heavy__", 800],
            ["Black", "__SF-UI-Display-Black__", 900],
            ["Italic", "__SF-UI-Display-Italic__", 400],
            ["Ultralight Italic", "__SF-UI-Display-Ultralight-Italic__", 100],
            ["Thin Italic", "__SF-UI-Display-Thin-Italic__", 200],
            ["Light Italic", "__SF-UI-Display-Light-Italic__", 300],
            ["Medium Italic", "__SF-UI-Display-Medium-Italic__", 500],
            ["Semibold Italic", "__SF-UI-Display-Semibold-Italic__", 600],
            ["Bold Italic", "__SF-UI-Display-Bold-Italic__", 700],
            ["Heavy Italic", "__SF-UI-Display-Heavy-Italic__", 800],
            ["Black Italic", "__SF-UI-Display-Black-Italic__", 900],
        ],
    ],
    [
        "SF Pro Display Condensed",
        [
            ["Regular", "__SF-UI-Display-Condensed-Regular__", 400],
            ["Ultralight", "__SF-UI-Display-Condensed-Ultralight__", 100],
            ["Thin", "__SF-UI-Display-Condensed-Thin__", 200],
            ["Light", "__SF-UI-Display-Condensed-Light__", 300],
            ["Medium", "__SF-UI-Display-Condensed-Medium__", 500],
            ["Semibold", "__SF-UI-Display-Condensed-Semibold__", 600],
            ["Bold", "__SF-UI-Display-Condensed-Bold__", 700],
            ["Heavy", "__SF-UI-Display-Condensed-Heavy__", 800],
            ["Black", "__SF-UI-Display-Condensed-Black__", 900],
        ],
    ],
    [
        "SF Pro Text",
        [
            ["Regular", "__SF-UI-Text-Regular__", 400],
            ["Light", "__SF-UI-Text-Light__", 200],
            ["Medium", "__SF-UI-Text-Medium__", 500],
            ["Semibold", "__SF-UI-Text-Semibold__", 600],
            ["Bold", "__SF-UI-Text-Bold__", 700],
            ["Heavy", "__SF-UI-Text-Heavy__", 800],
            ["Italic", "__SF-UI-Text-Italic__", 400],
            ["Light Italic", "__SF-UI-Text-Light-Italic__", 200],
            ["Medium Italic", "__SF-UI-Text-Medium-Italic__", 500],
            ["Semibold Italic", "__SF-UI-Text-Semibold-Italic__", 600],
            ["Bold Italic", "__SF-UI-Text-Bold-Italic__", 700],
            ["Heavy Italic", "__SF-UI-Text-Heavy-Italic__", 800],
        ],
    ],
    [
        "SF Pro Text Condensed",
        [
            ["Regular", "__SF-UI-Text-Condensed-Regular__", 400],
            ["Light", "__SF-UI-Text-Condensed-Light__", 200],
            ["Medium", "__SF-UI-Text-Condensed-Medium__", 500],
            ["Semibold", "__SF-UI-Text-Condensed-Semibold__", 600],
            ["Bold", "__SF-UI-Text-Condensed-Bold__", 700],
            ["Heavy", "__SF-UI-Text-Condensed-Heavy__", 800],
        ],
    ],
    ["Tahoma", [["Regular", "Tahoma", undefined]]],
    ["Times", [["Regular", "Times", undefined]]],
    ["Times New Roman", [["Regular", "Times New Roman", undefined]]],
    ["Trebuchet", [["Regular", "Trebuchet MS", undefined]]],
    ["Verdana", [["Regular", "Verdana", undefined]]],
];
exports.typefaceAliases = {
    "__SF-Compact-Display-Regular__": "SFCompactDisplay-Regular|.SFCompactDisplay-Regular",
    "__SF-Compact-Display-Ultralight__": "SFCompactDisplay-Ultralight|.SFCompactDisplay-Ultralight",
    "__SF-Compact-Display-Thin__": "SFCompactDisplay-Thin|.SFCompactDisplay-Thin",
    "__SF-Compact-Display-Light__": "SFCompactDisplay-Light|.SFCompactDisplay-Light",
    "__SF-Compact-Display-Medium__": "SFCompactDisplay-Medium|.SFCompactDisplay-Medium",
    "__SF-Compact-Display-Semibold__": "SFCompactDisplay-Semibold|.SFCompactDisplay-Semibold",
    "__SF-Compact-Display-Heavy__": "SFCompactDisplay-Heavy|.SFCompactDisplay-Heavy",
    "__SF-Compact-Display-Black__": "SFCompactDisplay-Black|.SFCompactDisplay-Black",
    "__SF-Compact-Display-Bold__": "SFCompactDisplay-Bold|.SFCompactDisplay-Bold",
    "__SF-UI-Text-Regular__": ".SFNSText|SFProText-Regular|SFUIText-Regular|.SFUIText",
    "__SF-UI-Text-Light__": ".SFNSText-Light|SFProText-Light|SFUIText-Light|.SFUIText-Light",
    "__SF-UI-Text-Medium__": ".SFNSText-Medium|SFProText-Medium|SFUIText-Medium|.SFUIText-Medium",
    "__SF-UI-Text-Semibold__": ".SFNSText-Semibold|SFProText-Semibold|SFUIText-Semibold|.SFUIText-Semibold",
    "__SF-UI-Text-Bold__": ".SFNSText-Bold|SFProText-Bold|SFUIText-Bold|.SFUIText-Bold",
    "__SF-UI-Text-Heavy__": ".SFNSText-Heavy|SFProText-Heavy|.SFUIText-Heavy",
    "__SF-UI-Text-Italic__": ".SFNSText-Italic|SFProText-Italic|SFUIText-Italic|.SFUIText-Italic",
    "__SF-UI-Text-Light-Italic__": ".SFNSText-LightItalic|SFProText-LightItalic|SFUIText-LightItalic|.SFUIText-LightItalic",
    "__SF-UI-Text-Medium-Italic__": ".SFNSText-MediumItalic|SFProText-MediumItalic|SFUIText-MediumItalic|.SFUIText-MediumItalic",
    "__SF-UI-Text-Semibold-Italic__": ".SFNSText-SemiboldItalic|SFProText-SemiboldItalic|SFUIText-SemiboldItalic|.SFUIText-SemiboldItalic",
    "__SF-UI-Text-Bold-Italic__": ".SFNSText-BoldItalic|SFProText-BoldItalic|SFUIText-BoldItalic|.SFUIText-BoldItalic",
    "__SF-UI-Text-Heavy-Italic__": ".SFNSText-HeavyItalic|SFProText-HeavyItalic|.SFUIText-HeavyItalic",
    "__SF-Compact-Text-Regular__": "SFCompactText-Regular|.SFCompactText-Regular",
    "__SF-Compact-Text-Light__": "SFCompactText-Light|.SFCompactText-Light",
    "__SF-Compact-Text-Medium__": "SFCompactText-Medium|.SFCompactText-Medium",
    "__SF-Compact-Text-Semibold__": "SFCompactText-Semibold|.SFCompactText-Semibold",
    "__SF-Compact-Text-Bold__": "SFCompactText-Bold|.SFCompactText-Bold",
    "__SF-Compact-Text-Heavy__": "SFCompactText-Heavy|.SFCompactText-Heavy",
    "__SF-Compact-Text-Italic__": "SFCompactText-Italic|.SFCompactText-Italic",
    "__SF-Compact-Text-Light-Italic__": "SFCompactText-LightItalic|.SFCompactText-LightItalic",
    "__SF-Compact-Text-Medium-Italic__": "SFCompactText-MediumItalic|.SFCompactText-MediumItalic",
    "__SF-Compact-Text-Semibold-Italic__": "SFCompactText-SemiboldItalic|.SFCompactText-SemiboldItalic",
    "__SF-Compact-Text-Bold-Italic__": "SFCompactText-BoldItalic|.SFCompactText-BoldItalic",
    "__SF-Compact-Text-Heavy-Italic__": "SFCompactText-HeavyItalic|.SFCompactText-HeavyItalic",
    "__SF-UI-Display-Condensed-Regular__": ".SFNSDisplayCondensed-Regular|SFUIDisplayCondensed-Regular|.SFUIDisplayCondensed-Regular",
    "__SF-UI-Display-Condensed-Ultralight__": ".SFNSDisplayCondensed-Ultralight|SFUIDisplayCondensed-Ultralight|.SFUIDisplayCondensed-Ultralight",
    "__SF-UI-Display-Condensed-Thin__": ".SFNSDisplayCondensed-Thin|SFUIDisplayCondensed-Thin|.SFUIDisplayCondensed-Thin",
    "__SF-UI-Display-Condensed-Light__": ".SFNSDisplayCondensed-Light|SFUIDisplayCondensed-Light|.SFUIDisplayCondensed-Light",
    "__SF-UI-Display-Condensed-Medium__": ".SFNSDisplayCondensed-Medium|SFUIDisplayCondensed-Medium|.SFUIDisplayCondensed-Medium",
    "__SF-UI-Display-Condensed-Semibold__": ".SFNSDisplayCondensed-Semibold|SFUIDisplayCondensed-Semibold|.SFUIDisplayCondensed-Semibold",
    "__SF-UI-Display-Condensed-Bold__": ".SFNSDisplayCondensed-Bold|SFUIDisplayCondensed-Bold|.SFUIDisplayCondensed-Bold",
    "__SF-UI-Display-Condensed-Heavy__": ".SFNSDisplayCondensed-Heavy|SFUIDisplayCondensed-Heavy|.SFUIDisplayCondensed-Heavy",
    "__SF-UI-Display-Condensed-Black__": ".SFNSDisplayCondensed-Black|.SFUIDisplayCondensed-Black",
    "__SF-UI-Display-Regular__": ".SFNSDisplay|SFProDisplay-Regular|SFUIDisplay-Regular|.SFUIDisplay",
    "__SF-UI-Display-Ultralight__": ".SFNSDisplay-Ultralight|SFProDisplay-Ultralight|SFUIDisplay-Ultralight|.SFUIDisplay-Ultralight",
    "__SF-UI-Display-Thin__": ".SFNSDisplay-Thin|SFProDisplay-Thin|SFUIDisplay-Thin|.SFUIDisplay-Thin",
    "__SF-UI-Display-Light__": ".SFNSDisplay-Light|SFProDisplay-Light|SFUIDisplay-Light|.SFUIDisplay-Light",
    "__SF-UI-Display-Medium__": ".SFNSDisplay-Medium|SFProDisplay-Medium|SFUIDisplay-Medium|.SFUIDisplay-Medium",
    "__SF-UI-Display-Semibold__": ".SFNSDisplay-Semibold|SFProDisplay-Semibold|SFUIDisplay-Semibold|.SFUIDisplay-Semibold",
    "__SF-UI-Display-Bold__": ".SFNSDisplay-Bold|SFProDisplay-Bold|SFUIDisplay-Bold|.SFUIDisplay-Bold",
    "__SF-UI-Display-Heavy__": ".SFNSDisplay-Heavy|SFProDisplay-Heavy|SFUIDisplay-Heavy|.SFUIDisplay-Heavy",
    "__SF-UI-Display-Black__": ".SFNSDisplay-Black|SFProDisplay-Black|.SFUIDisplay-Black",
    "__SF-UI-Display-Italic__": ".SFNSDisplay-Italic|SFProDisplay-Italic|SFUIDisplay-Italic",
    "__SF-UI-Display-Ultralight-Italic__": ".SFNSDisplay-UltralightItalic|SFProDisplay-UltralightItalic|SFUIDisplay-UltralightItalic|.SFUIDisplay-UltralightItalic",
    "__SF-UI-Display-Thin-Italic__": ".SFNSDisplay-ThinItalic|SFProDisplay-ThinItalic|SFUIDisplay-ThinItalic|.SFUIDisplay-ThinItalic",
    "__SF-UI-Display-Light-Italic__": ".SFNSDisplay-LightItalic|SFProDisplay-LightItalic|SFUIDisplay-LightItalic|.SFUIDisplay-LightItalic",
    "__SF-UI-Display-Medium-Italic__": ".SFNSDisplay-MediumItalic|SFProDisplay-MediumItalic|SFUIDisplay-MediumItalic|.SFUIDisplay-MediumItalic",
    "__SF-UI-Display-Semibold-Italic__": ".SFNSDisplay-SemiboldItalic|SFProDisplay-SemiboldItalic|SFUIDisplay-SemiboldItalic|.SFUIDisplay-SemiboldItalic",
    "__SF-UI-Display-Bold-Italic__": ".SFNSDisplay-BoldItalic|SFProDisplay-BoldItalic|SFUIDisplay-BoldItalic|.SFUIDisplay-BoldItalic",
    "__SF-UI-Display-Heavy-Italic__": ".SFNSDisplay-HeavyItalic|SFProDisplay-HeavyItalic|SFUIDisplay-HeavyItalic|.SFUIDisplay-HeavyItalic",
    "__SF-UI-Display-Black-Italic__": ".SFNSDisplay-BlackItalic|SFProDisplay-BlackItalic|.SFUIDisplay-BlackItalic",
    "__SF-UI-Text-Condensed-Regular__": ".SFNSTextCondensed-Regular|SFUITextCondensed-Regular|.SFUITextCondensed-Regular",
    "__SF-UI-Text-Condensed-Light__": ".SFNSTextCondensed-Light|SFUITextCondensed-Light|.SFUITextCondensed-Light",
    "__SF-UI-Text-Condensed-Medium__": ".SFNSTextCondensed-Medium|SFUITextCondensed-Medium|.SFUITextCondensed-Medium",
    "__SF-UI-Text-Condensed-Semibold__": ".SFNSTextCondensed-Semibold|SFUITextCondensed-Semibold|.SFUITextCondensed-Semibold",
    "__SF-UI-Text-Condensed-Bold__": ".SFNSTextCondensed-Bold|SFUITextCondensed-Bold|.SFUITextCondensed-Bold",
    "__SF-UI-Text-Condensed-Heavy__": ".SFNSTextCondensed-Heavy|.SFUITextCondensed-Heavy",
    "__SF-Compact-Rounded-Regular__": "SFCompactRounded-Regular|.SFCompactRounded-Regular",
    "__SF-Compact-Rounded-Ultralight__": "SFCompactRounded-Ultralight|.SFCompactRounded-Ultralight",
    "__SF-Compact-Rounded-Thin__": "SFCompactRounded-Thin|.SFCompactRounded-Thin",
    "__SF-Compact-Rounded-Light__": "SFCompactRounded-Light|.SFCompactRounded-Light",
    "__SF-Compact-Rounded-Medium__": "SFCompactRounded-Medium|.SFCompactRounded-Medium",
    "__SF-Compact-Rounded-Semibold__": "SFCompactRounded-Semibold|.SFCompactRounded-Semibold",
    "__SF-Compact-Rounded-Bold__": "SFCompactRounded-Bold|.SFCompactRounded-Bold",
    "__SF-Compact-Rounded-Heavy__": "SFCompactRounded-Heavy|.SFCompactRounded-Heavy",
    "__SF-Compact-Rounded-Black__": "SFCompactRounded-Black|.SFCompactRounded-Black",
};
exports.typefaces = convertToOrderedMap(typeof safeWindow_1.safeWindow !== "undefined" && safeWindow_1.safeWindow["SystemTypefaceDescriptors"] !== undefined
    ? safeWindow_1.safeWindow["SystemTypefaceDescriptors"]
    : safeFonts);
exports.defaultFontSelector = typeof safeWindow_1.safeWindow !== "undefined" && typeof safeWindow_1.safeWindow["SystemTypefaceDefaultSelector"] === "string"
    ? safeWindow_1.safeWindow["SystemTypefaceDefaultSelector"]
    : "Inter";
exports.fontSelectors = immutable_1.Map(exports.typefaces.flatMap((members, family) => {
    return immutable_1.Map(members
        .map((font, member) => {
        return [font.selector, [family, member, font.weight]];
    })
        .toArray());
}));


/***/ }),

/***/ "./src/render/fonts/loadFont.ts":
/*!**************************************!*\
  !*** ./src/render/fonts/loadFont.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports._clearCache = exports.isFontReady = exports.loadFont = exports.FontLoadingError = void 0;
const fontfaceobserver_1 = __importDefault(__webpack_require__(/*! fontfaceobserver */ "../../node_modules/fontfaceobserver/fontfaceobserver.standalone.js"));
const FONT_LOADING_TIMEOUT = 5000;
const MAX_RETRIES = 3;
class FontLoadingError extends Error {
    constructor(message) {
        super(message);
        this.name = "FontLoadingError";
    }
}
exports.FontLoadingError = FontLoadingError;
const fontRequests = new Map();
const fontReadyPromises = new Map();
const loadFont = (data, doc) => loadFontWithRetries(data, doc);
exports.loadFont = loadFont;
function loadFontWithRetries(data, doc, attempt = 0) {
    return __awaiter(this, void 0, void 0, function* () {
        const { family, url } = data;
        const weight = data.weight || 500;
        const style = data.style || "normal";
        const requestId = `${family}-${style}-${weight}-${url}`;
        if (!fontRequests.has(requestId) || attempt > 0) {
            const fontFace = new FontFace(family, `url(${url})`, {
                weight: weight === null || weight === void 0 ? void 0 : weight.toString(),
                style,
            });
            const readyPromise = fontFace
                .load()
                .then(() => {
                doc.fonts.add(fontFace);
                return isFontReady(family, style, weight);
            })
                .catch(e => {
                if (e.name !== "NetworkError") {
                    throw e;
                }
                if (attempt < MAX_RETRIES) {
                    return loadFontWithRetries(data, doc, attempt + 1);
                }
                throw new FontLoadingError(`Font loading failed after ${attempt} retries due to network error`);
            });
            fontRequests.set(requestId, readyPromise);
        }
        yield fontRequests.get(requestId);
    });
}
function isFontReady(family, style, weight) {
    return __awaiter(this, void 0, void 0, function* () {
        const readyPromiseId = `${family}-${style}-${weight}`;
        if (!fontReadyPromises.has(readyPromiseId)) {
            const observer = new fontfaceobserver_1.default(family, {
                style,
                weight,
            });
            const readyPromise = observer.load(null, FONT_LOADING_TIMEOUT);
            fontReadyPromises.set(readyPromiseId, readyPromise);
        }
        try {
            yield fontReadyPromises.get(readyPromiseId);
        }
        catch (e) {
            throw new FontLoadingError(`Failed to check if font is ready (${FONT_LOADING_TIMEOUT}ms timeout exceeded)`);
        }
    });
}
exports.isFontReady = isFontReady;
function _clearCache() {
    fontRequests.clear();
    fontReadyPromises.clear();
}
exports._clearCache = _clearCache;


/***/ }),

/***/ "./src/render/fonts/types.ts":
/*!***********************************!*\
  !*** ./src/render/fonts/types.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.TypefaceSourceNames = void 0;
var TypefaceSourceNames;
(function (TypefaceSourceNames) {
    TypefaceSourceNames["Google"] = "google";
    TypefaceSourceNames["Local"] = "local";
    TypefaceSourceNames["Custom"] = "custom";
})(TypefaceSourceNames = exports.TypefaceSourceNames || (exports.TypefaceSourceNames = {}));


/***/ }),

/***/ "./src/render/fonts/utils.ts":
/*!***********************************!*\
  !*** ./src/render/fonts/utils.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.parseVariant = void 0;
function parseVariant(variant) {
    if (variant === "regular")
        return { style: "normal", weight: 400 };
    const res = /([0-9]*)([a-z]*)/.exec(variant);
    if (!res)
        return null;
    const weight = parseInt(res[1] || "400");
    const style = res[2] || "normal";
    return { weight, style };
}
exports.parseVariant = parseVariant;


/***/ }),

/***/ "./src/render/presentation/ComponentContainer.tsx":
/*!********************************************************!*\
  !*** ./src/render/presentation/ComponentContainer.tsx ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMeasurableCodeComponentChildren = exports.ComponentContainer = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Layer_1 = __webpack_require__(/*! ./Layer */ "./src/render/presentation/Layer.tsx");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const Frame_1 = __webpack_require__(/*! ./Frame */ "./src/render/presentation/Frame/index.tsx");
const ComponentPlaceholder_1 = __webpack_require__(/*! ./ComponentPlaceholder */ "./src/render/presentation/ComponentPlaceholder.tsx");
const type_guards_1 = __webpack_require__(/*! ../../utils/type-guards */ "./src/utils/type-guards.ts");
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
const NewConstraints_1 = __webpack_require__(/*! ../types/NewConstraints */ "./src/render/types/NewConstraints.tsx");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const runtimeInjection_1 = __webpack_require__(/*! ../../utils/runtimeInjection */ "./src/utils/runtimeInjection.ts");
const useLayoutId_1 = __webpack_require__(/*! ../utils/useLayoutId */ "./src/render/utils/useLayoutId.ts");
const useMeasureLayout_1 = __webpack_require__(/*! ../utils/useMeasureLayout */ "./src/render/utils/useMeasureLayout.ts");
const LayoutIdContext_1 = __webpack_require__(/*! ../../components/AnimateLayout/LayoutIdContext */ "./src/components/AnimateLayout/LayoutIdContext.tsx");
const ComponentContainerContext_1 = __webpack_require__(/*! ./ComponentContainerContext */ "./src/render/presentation/ComponentContainerContext.tsx");
const withMeasuredSize_1 = __webpack_require__(/*! ../../components/hoc/withMeasuredSize */ "./src/components/hoc/withMeasuredSize.tsx");
function ComponentContainer(props) {
    const layoutId = useLayoutId_1.useLayoutId(props);
    const layoutRef = React.useRef(null);
    useMeasureLayout_1.useMeasureLayout(props, layoutRef, getMeasurableCodeComponentChildren);
    return React.createElement(Container, Object.assign({}, props, { __layoutId: layoutId, innerRef: layoutRef }));
}
exports.ComponentContainer = ComponentContainer;
class Container extends Layer_1.Layer {
    constructor() {
        super(...arguments);
        this.state = {};
    }
    componentDidCatch(error, info) {
        let stack = info.componentStack.split("\n").filter(line => line.length !== 0);
        let currentIndex = 0;
        for (const line of stack) {
            if (line.startsWith(`    in ${this.constructor.name}`)) {
                break;
            }
            currentIndex++;
        }
        stack = stack.slice(0, currentIndex);
        this.setState({
            lastError: {
                children: this.props.children,
                name: error.name,
                message: error.message,
                componentStack: stack,
            },
        });
    }
    renderErrorPlaceholder(title, message) {
        return (React.createElement(Frame_1.FrameWithMotion, Object.assign({}, this.props, { background: null }),
            React.createElement(ComponentPlaceholder_1.ComponentPlaceholder, { type: ComponentPlaceholder_1.PlaceholderType.Error, title: title, message: message })));
    }
    render() {
        var _a;
        if ( true && safeWindow_1.safeWindow["perf"])
            safeWindow_1.safeWindow["perf"].nodeRender();
        let { children } = this.props;
        const { componentIdentifier, innerRef } = this.props;
        const { lastError: error } = this.state;
        const noChildren = !children || (Array.isArray(children) && children.filter(c => c).length === 0);
        if (noChildren) {
            const errorComponent = runtimeInjection_1.runtime.componentLoader.errorForIdentifier(componentIdentifier);
            if (errorComponent) {
                return this.renderErrorPlaceholder(errorComponent.file, errorComponent.error);
            }
        }
        if (error && error.children === children) {
            const component = runtimeInjection_1.runtime.componentLoader.componentForIdentifier(componentIdentifier);
            const file = component ? component.file : "???";
            return this.renderErrorPlaceholder(file, error.message);
        }
        (_a = safeWindow_1.safeWindow["__checkComponentBudget__"]) === null || _a === void 0 ? void 0 : _a.call(safeWindow_1.safeWindow);
        let frameProps = this.props;
        if (RenderEnvironment_1.RenderTarget.current() !== RenderEnvironment_1.RenderTarget.canvas) {
            const _b = frameProps, { left, right, top, bottom, center, centerX, centerY, aspectRatio, parentSize, width, height, rotation, opacity, visible, _constraints, _initialStyle, name, positionSticky, positionStickyTop, positionStickyRight, positionStickyBottom, positionStickyLeft, componentIdentifier: originalComponentIdentifier, children: originalChildren, style, duplicatedFrom, _canMagicMotion, widthType, heightType } = _b, childProps = __rest(_b, ["left", "right", "top", "bottom", "center", "centerX", "centerY", "aspectRatio", "parentSize", "width", "height", "rotation", "opacity", "visible", "_constraints", "_initialStyle", "name", "positionSticky", "positionStickyTop", "positionStickyRight", "positionStickyBottom", "positionStickyLeft", "componentIdentifier", "children", "style", "duplicatedFrom", "_canMagicMotion", "widthType", "heightType"]);
            children = React.Children.map(originalChildren, (child) => {
                var _a;
                if (!type_guards_1.isReactChild(child) || !type_guards_1.isReactElement(child)) {
                    return child;
                }
                if (!isPageOrScroll(originalComponentIdentifier)) {
                    return (React.createElement(framer_motion_1.LayoutGroupContext.Provider, { value: (_a = this.props.__layoutId) !== null && _a !== void 0 ? _a : null },
                        React.createElement(framer_motion_1.AnimateSharedLayout, null,
                            React.createElement(LayoutIdContext_1.AutomaticLayoutIds, { enabled: false }, React.cloneElement(child, childProps)))));
                }
                return React.cloneElement(child, childProps);
            });
            frameProps = {
                style,
                _constraints,
                _initialStyle,
                left,
                right,
                top,
                bottom,
                center,
                centerX,
                centerY,
                aspectRatio,
                parentSize,
                width,
                height,
                rotation,
                visible,
                name,
                duplicatedFrom,
                id: frameProps.id,
                layoutId: this.props.__layoutId,
                _canMagicMotion,
                widthType,
                heightType,
                positionSticky,
                positionStickyTop,
                positionStickyRight,
                positionStickyBottom,
                positionStickyLeft,
            };
        }
        return (React.createElement(ComponentContainerContext_1.ComponentContainerContext.Provider, { value: true },
            React.createElement(Frame_1.FrameWithMotion, Object.assign({ background: null, overflow: "visible", ref: innerRef }, frameProps), children)));
    }
}
Container.supportsConstraints = true;
Container.defaultComponentContainerProps = {
    style: {},
    visible: true,
    componentIdentifier: "",
};
Container.defaultProps = Object.assign(Object.assign({}, Layer_1.Layer.defaultProps), Container.defaultComponentContainerProps);
Container.contextType = ComponentContainerContext_1.ComponentContainerContext;
;
ComponentContainer.rect = function (props, parentSize) {
    return NewConstraints_1.calculateRect(props, parentSize || NewConstraints_1.ParentSizeState.Unknown);
};
function isPageOrScroll(identifier) {
    if (!identifier)
        return false;
    if (identifier === "framer/Page")
        return true;
    if (identifier === "framer/Scroll")
        return true;
    return false;
}
function getMeasurableCodeComponentChildren(element) {
    const childrenCollection = element.firstElementChild && element.firstElementChild.hasAttribute(withMeasuredSize_1.SIZE_COMPATIBILITY_WRAPPER_ATTRIBUTE)
        ? element.firstElementChild.children
        : element.children;
    return [...childrenCollection].filter(isMeasurable);
}
exports.getMeasurableCodeComponentChildren = getMeasurableCodeComponentChildren;
function isMeasurable(element) {
    if (element instanceof HTMLBaseElement ||
        element instanceof HTMLHeadElement ||
        element instanceof HTMLLinkElement ||
        element instanceof HTMLMetaElement ||
        element instanceof HTMLScriptElement ||
        element instanceof HTMLStyleElement ||
        element instanceof HTMLTitleElement) {
        return false;
    }
    return element instanceof HTMLElement || element instanceof SVGElement;
}


/***/ }),

/***/ "./src/render/presentation/ComponentContainerContext.tsx":
/*!***************************************************************!*\
  !*** ./src/render/presentation/ComponentContainerContext.tsx ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentContainerContext = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
exports.ComponentContainerContext = React.createContext(false);


/***/ }),

/***/ "./src/render/presentation/ComponentPlaceholder.tsx":
/*!**********************************************************!*\
  !*** ./src/render/presentation/ComponentPlaceholder.tsx ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentPlaceholder = exports.PlaceholderType = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
const Frame_1 = __webpack_require__(/*! ./Frame */ "./src/render/presentation/Frame/index.tsx");
var PlaceholderType;
(function (PlaceholderType) {
    PlaceholderType[PlaceholderType["Loading"] = 0] = "Loading";
    PlaceholderType[PlaceholderType["Error"] = 1] = "Error";
})(PlaceholderType = exports.PlaceholderType || (exports.PlaceholderType = {}));
const baseStyle = {
    background: undefined,
    display: "flex",
    flexDirection: "column",
    justifyContent: "center",
    alignItems: "center",
    lineHeight: "1.4em",
    textOverflow: "ellipsis",
    overflow: "hidden",
    minHeight: 0,
};
const textStyle = {
    overflow: "hidden",
    whiteSpace: "nowrap",
    textOverflow: "ellipsis",
    maxWidth: "100%",
    flexShrink: 0,
    padding: `0 10px`,
};
const titleStyle = Object.assign(Object.assign({}, textStyle), { fontWeight: 500 });
const messageStyle = Object.assign(Object.assign({}, textStyle), { whiteSpace: "pre", maxHeight: "calc(50% - calc(20px * var(--framerInternalCanvas-canvasPlaceholderContentScaleFactor, 1)))", WebkitMaskImage: "linear-gradient(to bottom, black 80%, transparent 100%)" });
function ComponentPlaceholder({ type, title, message, props }) {
    const [isSettled, setIsSettled] = react_1.useState(false);
    react_1.useEffect(() => {
        const timer = window.setTimeout(() => {
            setIsSettled(true);
        }, 1000);
        return () => clearTimeout(timer);
    }, [type]);
    return (React.createElement(Frame_1.FrameWithMotion, Object.assign({ className: className(type), style: baseStyle, width: "100%", height: "100%" }, props),
        React.createElement("div", { className: isSettled ? "text" : "pending text", style: titleStyle }, placeholderTitle(type, title)),
        message && (React.createElement("div", { className: isSettled ? "text" : "pending text", style: messageStyle }, message))));
}
exports.ComponentPlaceholder = ComponentPlaceholder;
function className(type) {
    switch (type) {
        case PlaceholderType.Error:
            return "framerInternalUI-errorPlaceholder";
        case PlaceholderType.Loading:
            return "framerInternalUI-componentPlaceholder";
    }
}
function placeholderTitle(type, title) {
    switch (type) {
        case PlaceholderType.Loading:
            return "Loading";
        case PlaceholderType.Error:
            if (!title) {
                return "Error";
            }
            return `Error in ${stripSlash(title)}`;
    }
}
function stripSlash(title) {
    if (title.startsWith("./")) {
        return title.replace("./", "");
    }
    return title;
}


/***/ }),

/***/ "./src/render/presentation/CustomProperties.tsx":
/*!******************************************************!*\
  !*** ./src/render/presentation/CustomProperties.tsx ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomProperties = exports.CustomPropertiesContext = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const VariableRegex = /var\(([^),]+)/;
exports.CustomPropertiesContext = React.createContext(() => null);
class CustomProperties extends React.PureComponent {
    constructor() {
        super(...arguments);
        this.lookup = (variable) => {
            const match = VariableRegex.exec(variable);
            const customProperty = match ? match[1].trim() : "";
            return this.props.customProperties[customProperty] || null;
        };
    }
    render() {
        const { children, customProperties } = this.props;
        return (React.createElement(exports.CustomPropertiesContext.Provider, { value: this.lookup },
            React.createElement("div", { style: customProperties }, children)));
    }
}
exports.CustomProperties = CustomProperties;


/***/ }),

/***/ "./src/render/presentation/Frame/DeprecatedFrame.tsx":
/*!***********************************************************!*\
  !*** ./src/render/presentation/Frame/DeprecatedFrame.tsx ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Center = exports.DeprecatedFrame = exports.cssBackgroundSize = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Layer_1 = __webpack_require__(/*! ../Layer */ "./src/render/presentation/Layer.tsx");
const Constraints_1 = __webpack_require__(/*! ../../types/Constraints */ "./src/render/types/Constraints.ts");
const BorderComponent_1 = __webpack_require__(/*! ../../style/BorderComponent */ "./src/render/style/BorderComponent.tsx");
const Color_1 = __webpack_require__(/*! ../../types/Color */ "./src/render/types/Color/index.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const Animatable_1 = __webpack_require__(/*! ../../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const ObservableObject_1 = __webpack_require__(/*! ../../../data/ObservableObject */ "./src/data/ObservableObject.ts");
const BackgroundImage_1 = __webpack_require__(/*! ../../types/BackgroundImage */ "./src/render/types/BackgroundImage.ts");
const collectVisualStyleFromProps_1 = __webpack_require__(/*! ../../style/collectVisualStyleFromProps */ "./src/render/style/collectVisualStyleFromProps.ts");
const Transform_1 = __webpack_require__(/*! ../../traits/Transform */ "./src/render/traits/Transform.ts");
const safeWindow_1 = __webpack_require__(/*! ../../../utils/safeWindow */ "./src/utils/safeWindow.ts");
const NewConstraints_1 = __webpack_require__(/*! ../../types/NewConstraints */ "./src/render/types/NewConstraints.tsx");
const isFiniteNumber_1 = __webpack_require__(/*! ../../utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const backgroundImageFromProps_1 = __webpack_require__(/*! ../../style/backgroundImageFromProps */ "./src/render/style/backgroundImageFromProps.ts");
function cssBackgroundSize(size) {
    switch (size) {
        case "fit":
            return "contain";
        case "stretch":
            return "100% 100%";
        default:
            return "cover";
    }
}
exports.cssBackgroundSize = cssBackgroundSize;
function collectBackgroundImageFromProps(props, style) {
    const image = backgroundImageFromProps_1.backgroundImageFromProps(props);
    if (image) {
        style.backgroundImage = `url("${image.src}")`;
        style.backgroundSize = cssBackgroundSize(image.fit);
        style.backgroundRepeat = "no-repeat";
        style.backgroundPosition = "center";
    }
}
function toPixelString(value) {
    return isFiniteNumber_1.isFiniteNumber(value) ? `${value}px` : value;
}
function applyLayoutProp(style, props, key) {
    if (props[key] !== undefined) {
        const value = Animatable_1.Animatable.get(props[key], undefined);
        style[key] = toPixelString(value);
    }
}
class DeprecatedFrame extends Layer_1.Layer {
    constructor() {
        super(...arguments);
        this.element = null;
        this.imageDidChange = false;
        this.state = {
            size: null,
        };
        this.updateStyle = () => {
            if (!this.element) {
                return;
            }
            Object.assign(this.element.style, this.getStyle());
        };
        this.setElement = (element) => {
            this.element = element;
        };
        this.onPropsChange = (props) => {
            const rect = DeprecatedFrame.rect(Animatable_1.Animatable.objectToValues(props.value));
            if (this.state.size && Animatable_1.isAnimatable(this.state.size.width) && Animatable_1.isAnimatable(props.value.width)) {
                this.state.size.width.set(rect.width);
            }
            if (this.state.size && Animatable_1.isAnimatable(this.state.size.height) && Animatable_1.isAnimatable(props.value.height)) {
                this.state.size.height.set(rect.height);
            }
            this.updateStyle();
        };
        this.onSizeChange = () => {
            this.updateStyle();
        };
    }
    static rect(props) {
        const constraintValues = Constraints_1.ConstraintValues.fromProperties(props);
        return Constraints_1.ConstraintValues.toRect(constraintValues, props.parentSize || null, null, true);
    }
    get rect() {
        return DeprecatedFrame.rect(this.props);
    }
    static getDerivedStateFromProps(nextProps, prevState) {
        const size = DeprecatedFrame.updatedSize(nextProps, prevState);
        const { target } = RenderEnvironment_1.RenderEnvironment;
        const nextBackgroundImageSrc = nextProps.background && BackgroundImage_1.BackgroundImage.isImageObject(nextProps.background)
            ? nextProps.background.src
            : null;
        if (nextBackgroundImageSrc) {
            return {
                size: size,
            };
        }
        if (prevState.size) {
            if (target === RenderEnvironment_1.RenderTarget.preview) {
                return null;
            }
            if (prevState.size.width === size.width && prevState.size.height === size.height) {
                return null;
            }
        }
        return {
            size: size,
        };
    }
    static updatedSize(props, state) {
        const rect = DeprecatedFrame.rect(props);
        let size = state.size;
        const newSize = { width: rect.width, height: rect.height };
        const { target } = RenderEnvironment_1.RenderEnvironment;
        if (!size) {
            if (target === RenderEnvironment_1.RenderTarget.preview) {
                size = ObservableObject_1.ObservableObject(newSize, true);
            }
            else {
                size = newSize;
            }
        }
        else {
            if (Animatable_1.isAnimatable(size.width) && Animatable_1.isAnimatable(size.height)) {
                size.width.set(newSize.width);
                size.height.set(newSize.height);
            }
            else {
                size = newSize;
            }
        }
        return size;
    }
    getStyle() {
        const rect = this.rect;
        const style = {
            display: "block",
            position: "absolute",
            width: `${rect.width}px`,
            height: `${rect.height}px`,
            pointerEvents: undefined,
            userSelect: "none",
        };
        let left = Animatable_1.Animatable.get(this.props.left, undefined);
        let top = Animatable_1.Animatable.get(this.props.top, undefined);
        Object.assign(style, this.props._initialStyle);
        const hasParentSize = this.context.size !== NewConstraints_1.ParentSizeState.Disabled;
        const perspective = Animatable_1.Animatable.get(this.props.perspective, undefined);
        style.perspective = perspective;
        style.WebkitPerspective = perspective;
        let backfaceVisibility = undefined;
        const backfaceVisible = Animatable_1.Animatable.get(this.props.backfaceVisible, undefined);
        if (backfaceVisible === true) {
            backfaceVisibility = "visible";
        }
        else if (backfaceVisible === false) {
            backfaceVisibility = "hidden";
        }
        style.backfaceVisibility = backfaceVisibility;
        style.WebkitBackfaceVisibility = backfaceVisibility;
        const preserve3d = Animatable_1.Animatable.get(this.props.preserve3d, undefined);
        if (preserve3d === true) {
            style.transformStyle = "preserve-3d";
        }
        else if (preserve3d === false) {
            style.transformStyle = "flat";
        }
        if (!hasParentSize) {
            applyLayoutProp(style, this.props, "right");
            applyLayoutProp(style, this.props, "bottom");
            const width = Animatable_1.Animatable.get(this.props.width, undefined);
            const stringWidth = toPixelString(width);
            const height = Animatable_1.Animatable.get(this.props.height, undefined);
            const stringHeight = toPixelString(height);
            if (typeof left === "string" && left.endsWith("%") && this.props.right === null) {
                left = `calc(${left} - calc(${stringWidth}} / 2))`;
                style.width = stringWidth;
            }
            if (typeof top === "string" && top.endsWith("%") && this.props.bottom === null) {
                top = `calc(${top} - calc(${stringHeight} / 2))`;
                style.height = stringHeight;
            }
            if (top !== undefined && style.bottom !== undefined) {
                style.height = undefined;
                top = toPixelString(Animatable_1.Animatable.get(this.props.top, undefined));
            }
            else {
                style.height = stringHeight;
            }
            if (left !== undefined && style.right !== undefined) {
                style.width = undefined;
                left = toPixelString(Animatable_1.Animatable.get(this.props.left, undefined));
            }
            else {
                style.width = stringWidth;
            }
        }
        const transformRect = Object.assign({}, rect);
        if (typeof left !== "undefined") {
            transformRect.x = left;
        }
        if (typeof top !== "undefined") {
            transformRect.y = top;
        }
        Transform_1.collectTransformFromProps(this.props, transformRect, style);
        collectVisualStyleFromProps_1.collectVisualStyleFromProps(this.props, style);
        collectBackgroundImageFromProps(this.props, style);
        Layer_1.Layer.applyWillChange(this.props, style, false);
        if (this.props.style) {
            Object.assign(style, this.props.style);
        }
        return style;
    }
    componentDidMount() {
        const { target } = RenderEnvironment_1.RenderEnvironment;
        if (target === RenderEnvironment_1.RenderTarget.preview) {
            this.propsObserver = ObservableObject_1.ObservableObject(this.props, true);
            this.propsObserverCancel = ObservableObject_1.ObservableObject.addObserver(this.propsObserver, this.onPropsChange);
            if (this.props.parentSize &&
                Animatable_1.isAnimatable(this.props.parentSize.width) &&
                Animatable_1.isAnimatable(this.props.parentSize.height)) {
                this.sizeObserver = ObservableObject_1.ObservableObject(this.props.parentSize, true);
                this.sizeObserverCancel = ObservableObject_1.ObservableObject.addObserver(this.sizeObserver, this.onSizeChange);
            }
        }
    }
    componentDidUpdate() {
        const { target } = RenderEnvironment_1.RenderEnvironment;
        this.propsObserverCancel && this.propsObserverCancel();
        this.sizeObserverCancel && this.sizeObserverCancel();
        if (target === RenderEnvironment_1.RenderTarget.preview) {
            this.propsObserver = ObservableObject_1.ObservableObject(this.props, true);
            this.propsObserverCancel = ObservableObject_1.ObservableObject.addObserver(this.propsObserver, this.onPropsChange);
            if (this.props.parentSize &&
                Animatable_1.isAnimatable(this.props.parentSize.width) &&
                Animatable_1.isAnimatable(this.props.parentSize.height)) {
                this.sizeObserver = ObservableObject_1.ObservableObject(this.props.parentSize, true);
                this.sizeObserverCancel = ObservableObject_1.ObservableObject.addObserver(this.sizeObserver, this.onSizeChange);
            }
        }
    }
    componentWillUnmount() {
        this.propsObserverCancel && this.propsObserverCancel();
        this.propsObserverCancel = undefined;
        this.sizeObserverCancel && this.sizeObserverCancel();
        this.sizeObserverCancel = undefined;
    }
    render() {
        if ( true && safeWindow_1.safeWindow["perf"])
            safeWindow_1.safeWindow["perf"].nodeRender();
        const { visible, id, className } = this.props;
        if (!visible) {
            return null;
        }
        const style = this.getStyle();
        const rect = this.rect;
        const parentSize = { width: rect.width, height: rect.height };
        return (React.createElement("div", { id: id, style: style, ref: this.setElement, className: className },
            React.createElement(NewConstraints_1.ProvideParentSize, { parentSize: parentSize }, this.layoutChildren()),
            React.createElement(BorderComponent_1.Border, Object.assign({}, this.props))));
    }
    layoutChildren() {
        let _forwardedOverrides = this.props._forwardedOverrides;
        const extractions = this.props._overrideForwardingDescription;
        if (extractions) {
            let added = false;
            _forwardedOverrides = {};
            for (const key in extractions) {
                added = true;
                _forwardedOverrides[key] = this.props[extractions[key]];
            }
            if (!added) {
                _forwardedOverrides = undefined;
            }
        }
        let children = React.Children.map(this.props.children, (child) => {
            if (Constraints_1.isConstraintSupportingChild(child)) {
                return React.cloneElement(child, {
                    parentSize: this.state.size,
                    _forwardedOverrides,
                });
            }
            else if (_forwardedOverrides && child) {
                return React.cloneElement(child, { _forwardedOverrides });
            }
            else {
                return child;
            }
        });
        if (children && children.length === 1 && typeof children[0] === "string") {
            children = [React.createElement(exports.Center, { key: "0" }, children)];
        }
        return children;
    }
}
exports.DeprecatedFrame = DeprecatedFrame;
DeprecatedFrame.supportsConstraints = true;
DeprecatedFrame.defaultFrameSpecificProps = Object.assign(Object.assign(Object.assign({}, Constraints_1.constraintDefaults), Transform_1.transformDefaults), { opacity: 1, background: Color_1.Color("rgba(0, 170, 255, 0.3)"), visible: true, borderWidth: 0, borderColor: "#222", borderStyle: "solid" });
DeprecatedFrame.defaultProps = Object.assign(Object.assign({}, Layer_1.Layer.defaultProps), DeprecatedFrame.defaultFrameSpecificProps);
DeprecatedFrame.contextType = NewConstraints_1.ConstraintsContext;
const Center = props => {
    const style = Object.assign({}, {
        height: "100%",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        fontFamily: "Helvetica",
    }, props.style || {});
    return React.createElement("div", { style: style }, props.children);
};
exports.Center = Center;


/***/ }),

/***/ "./src/render/presentation/Frame/FrameWithMotion.tsx":
/*!***********************************************************!*\
  !*** ./src/render/presentation/Frame/FrameWithMotion.tsx ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FrameWithMotion = exports.defaultFrameRect = exports.unwrapFrameProps = void 0;
const is_prop_valid_1 = __importDefault(__webpack_require__(/*! @emotion/is-prop-valid */ "../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js"));
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
const safeWindow_1 = __webpack_require__(/*! ../../../utils/safeWindow */ "./src/utils/safeWindow.ts");
const BorderComponent_1 = __webpack_require__(/*! ../../style/BorderComponent */ "./src/render/style/BorderComponent.tsx");
const backgroundImageFromProps_1 = __webpack_require__(/*! ../../style/backgroundImageFromProps */ "./src/render/style/backgroundImageFromProps.ts");
const NewConstraints_1 = __webpack_require__(/*! ../../types/NewConstraints */ "./src/render/types/NewConstraints.tsx");
const injectComponentCSSRules_1 = __webpack_require__(/*! ../../utils/injectComponentCSSRules */ "./src/render/utils/injectComponentCSSRules.ts");
const processOverrideForwarding_1 = __webpack_require__(/*! ../../utils/processOverrideForwarding */ "./src/render/utils/processOverrideForwarding.ts");
const transformCustomValues_1 = __webpack_require__(/*! ../../utils/transformCustomValues */ "./src/render/utils/transformCustomValues.ts");
const Layer_1 = __webpack_require__(/*! ../Layer */ "./src/render/presentation/Layer.tsx");
const getStyleForFrameProps_1 = __webpack_require__(/*! ./getStyleForFrameProps */ "./src/render/presentation/Frame/getStyleForFrameProps.ts");
const useLayoutId_1 = __webpack_require__(/*! ../../utils/useLayoutId */ "./src/render/utils/useLayoutId.ts");
const transformTemplate_1 = __webpack_require__(/*! ../../utils/transformTemplate */ "./src/render/utils/transformTemplate.ts");
const useMeasureLayout_1 = __webpack_require__(/*! ../../utils/useMeasureLayout */ "./src/render/utils/useMeasureLayout.ts");
const layoutHintDataPropsForCenter_1 = __webpack_require__(/*! ../../utils/layoutHintDataPropsForCenter */ "./src/render/utils/layoutHintDataPropsForCenter.ts");
const Constraints_1 = __webpack_require__(/*! ../../types/Constraints */ "./src/render/types/Constraints.ts");
const ComponentContainerContext_1 = __webpack_require__(/*! ../ComponentContainerContext */ "./src/render/presentation/ComponentContainerContext.tsx");
const BackgroundImageComponent_1 = __webpack_require__(/*! ../../style/BackgroundImageComponent */ "./src/render/style/BackgroundImageComponent.tsx");
const nodeIdFromString_1 = __webpack_require__(/*! ../../utils/nodeIdFromString */ "./src/render/utils/nodeIdFromString.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
function hasEvents(props) {
    for (const key in props) {
        if (key === "drag" ||
            key.startsWith("while") ||
            (typeof props[key] === "function" && key.startsWith("on") && !key.includes("Animation"))) {
            return true;
        }
    }
    return false;
}
const pointerEvents = [
    "onAuxClick",
    "onClick",
    "onDoubleClick",
    "onMouse",
    "onMouseDown",
    "onMouseUp",
    "onTapDown",
    "onTap",
    "onTapUp",
    "onPointer",
    "onPointerDown",
    "onPointerUp",
    "onTouch",
    "onTouchDown",
    "onTouchUp",
];
const pointerEventsSet = new Set([
    ...pointerEvents,
    ...pointerEvents.map(event => `${event}Capture`),
]);
function getCursorFromEvents(props) {
    if (props.drag) {
        return "grab";
    }
    for (const key in props) {
        if (pointerEventsSet.has(key)) {
            return "pointer";
        }
    }
    return undefined;
}
function unwrapFrameProps(frameProps) {
    const { left, top, bottom, right, width, height, minWidth, minHeight, center, _constraints, size, widthType, heightType, } = frameProps;
    const constraintProps = {
        top: framer_motion_1.resolveMotionValue(top),
        left: framer_motion_1.resolveMotionValue(left),
        bottom: framer_motion_1.resolveMotionValue(bottom),
        right: framer_motion_1.resolveMotionValue(right),
        width: framer_motion_1.resolveMotionValue(width),
        height: framer_motion_1.resolveMotionValue(height),
        minWidth: framer_motion_1.resolveMotionValue(minWidth),
        minHeight: framer_motion_1.resolveMotionValue(minHeight),
        size: framer_motion_1.resolveMotionValue(size),
        center,
        _constraints,
        widthType,
        heightType,
    };
    return constraintProps;
}
exports.unwrapFrameProps = unwrapFrameProps;
exports.defaultFrameRect = { x: 0, y: 0, width: 200, height: 200 };
function useStyleAndRect(props) {
    injectComponentCSSRules_1.injectComponentCSSRules();
    const inCodeComponent = Boolean(react_1.useContext(ComponentContainerContext_1.ComponentContainerContext));
    const { style, _initialStyle, __fromCanvasComponent, size } = props;
    const unwrappedProps = unwrapFrameProps(props);
    const constraintsRect = NewConstraints_1.useConstraints(unwrappedProps);
    const defaultStyle = {
        display: "block",
        flexShrink: 0,
        userSelect: "none",
    };
    if (!props.__fromCanvasComponent) {
        defaultStyle.backgroundColor = props.background === undefined ? "rgba(0, 170, 255, 0.3)" : undefined;
    }
    if (!hasEvents(props)) {
        defaultStyle.pointerEvents = "none";
    }
    const addTextCentering = React.Children.count(props.children) > 0 &&
        React.Children.toArray(props.children).every(child => {
            return typeof child === "string" || typeof child === "number";
        });
    const centerTextStyle = addTextCentering && {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        textAlign: "center",
    };
    const propsStyle = getStyleForFrameProps_1.getStyleForFrameProps(props);
    if (size === undefined && !__fromCanvasComponent) {
        if (!getStyleForFrameProps_1.hasLeftAndRight(propsStyle)) {
            defaultStyle.width = exports.defaultFrameRect.width;
        }
        if (!getStyleForFrameProps_1.hasTopAndBottom(propsStyle)) {
            defaultStyle.height = exports.defaultFrameRect.height;
        }
    }
    if (unwrappedProps.minWidth !== undefined) {
        defaultStyle.minWidth = unwrappedProps.minWidth;
    }
    if (unwrappedProps.minHeight !== undefined) {
        defaultStyle.minHeight = unwrappedProps.minHeight;
    }
    let constraintsStyle = {};
    if (NewConstraints_1.constraintsEnabled(unwrappedProps)) {
        if (constraintsRect && !isAutoSized(props)) {
            constraintsStyle = {
                left: constraintsRect.x,
                top: constraintsRect.y,
                width: constraintsRect.width,
                height: constraintsRect.height,
                right: undefined,
                bottom: undefined,
            };
        }
    }
    Object.assign(defaultStyle, centerTextStyle, _initialStyle, propsStyle, constraintsStyle, style);
    Layer_1.Layer.applyWillChange(props, defaultStyle, true);
    let resultStyle = defaultStyle;
    if (!defaultStyle.transform) {
        resultStyle = Object.assign({ x: 0, y: 0 }, defaultStyle);
    }
    if (props.positionSticky) {
        const onCanvas = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas;
        if (!onCanvas || inCodeComponent) {
            resultStyle.position = "sticky";
            resultStyle.willChange = "transform";
            resultStyle.zIndex = 1;
            resultStyle.top = props.positionStickyTop;
            resultStyle.right = props.positionStickyRight;
            resultStyle.bottom = props.positionStickyBottom;
            resultStyle.left = props.positionStickyLeft;
        }
    }
    return [resultStyle, constraintsRect];
}
const filteredProps = new Set([
    "width",
    "height",
    "opacity",
    "overflow",
    "radius",
    "background",
    "color",
    "x",
    "y",
    "z",
    "rotate",
    "rotateX",
    "rotateY",
    "rotateZ",
    "scale",
    "scaleX",
    "scaleY",
    "skew",
    "skewX",
    "skewY",
    "originX",
    "originY",
    "originZ",
]);
const customMotionProps = new Set(["positionTransition", "layoutTransition"]);
function isCustomMotionProp(key) {
    return customMotionProps.has(key);
}
function getMotionProps(props) {
    const motionProps = {};
    for (const key in props) {
        const isValid = framer_motion_1.isValidMotionProp(key) || is_prop_valid_1.default(key) || isCustomMotionProp(key);
        if (isValid && !filteredProps.has(key)) {
            motionProps[key] = props[key];
        }
    }
    return motionProps;
}
exports.FrameWithMotion = Object.assign(react_1.forwardRef(function FrameWithMotion(props, ref) {
    if ( true && safeWindow_1.safeWindow["perf"])
        safeWindow_1.safeWindow["perf"].nodeRender();
    const { visible = true } = props;
    if (!visible) {
        return null;
    }
    return React.createElement(VisibleFrame, Object.assign({}, props, { ref: ref }));
}), {
    rect(props, parentSize) {
        return NewConstraints_1.calculateRect(unwrapFrameProps(props), parentSize || NewConstraints_1.ParentSizeState.Unknown);
    },
});
const VisibleFrame = react_1.forwardRef(function VisibleFrame(props, forwardedRef) {
    const { _border, name, center, border } = props;
    const { props: propsWithOverrides, children } = processOverrideForwarding_1.processOverrideForwarding(props);
    const motionProps = getMotionProps(propsWithOverrides);
    const layoutId = useLayoutId_1.useLayoutId(props);
    const cursor = getCursorFromEvents(props);
    const fallbackRef = react_1.useRef(null);
    const ref = forwardedRef !== null && forwardedRef !== void 0 ? forwardedRef : fallbackRef;
    const dataProps = {
        "data-framer-component-type": "Frame",
        "data-framer-name": name,
        "data-framer-cursor": cursor,
        "data-framer-highlight": cursor === "pointer" ? true : undefined,
        "data-layoutid": layoutId,
    };
    const [currentStyle, rect] = useStyleAndRect(propsWithOverrides);
    const unwrappedProps = unwrapFrameProps(propsWithOverrides);
    const autoSized = isAutoSized(unwrappedProps);
    if (center && !(rect && !autoSized && NewConstraints_1.constraintsEnabled(unwrappedProps))) {
        motionProps.transformTemplate = transformTemplate_1.transformTemplate(center);
        Object.assign(dataProps, layoutHintDataPropsForCenter_1.layoutHintDataPropsForCenter(center));
    }
    else {
        motionProps.transformTemplate = transformTemplate_1.transformTemplate(false);
    }
    useMeasureLayout_1.useMeasureLayout(props, ref);
    const backgroundImage = backgroundImageFromProps_1.backgroundImageFromProps(props);
    const inCodeComponent = Boolean(react_1.useContext(ComponentContainerContext_1.ComponentContainerContext));
    const parentSize = resolveParentSize(propsWithOverrides, unwrappedProps, rect, inCodeComponent);
    const wrappedContent = NewConstraints_1.useProvideParentSize(React.createElement(React.Fragment, null,
        backgroundImage ? (React.createElement(BackgroundImageComponent_1.BackgroundImageComponent, { image: backgroundImage, containerSize: rect !== null && rect !== void 0 ? rect : undefined, nodeId: props.id && nodeIdFromString_1.nodeIdFromString(props.id), layoutId: layoutId })) : null,
        children,
        React.createElement(BorderComponent_1.Border, Object.assign({}, _border, { border: border, layoutId: layoutId }))), parentSize);
    return (React.createElement(framer_motion_1.motion.div, Object.assign({}, dataProps, motionProps, { layoutId: layoutId, style: currentStyle, ref: ref, transformValues: transformCustomValues_1.transformValues }), wrappedContent));
});
function resolveParentSize(props, unwrappedProps, rect, inCodeComponent) {
    if (inCodeComponent) {
        return rect ? { width: rect.width, height: rect.height } : NewConstraints_1.ParentSizeState.Disabled;
    }
    const { _usesDOMRect } = props;
    const { widthType = Constraints_1.DimensionType.FixedNumber, heightType = Constraints_1.DimensionType.FixedNumber, width, height, } = unwrappedProps;
    if (rect && !_usesDOMRect) {
        return rect;
    }
    if (widthType === Constraints_1.DimensionType.FixedNumber &&
        heightType === Constraints_1.DimensionType.FixedNumber &&
        typeof width === "number" &&
        typeof height === "number") {
        return { width, height };
    }
    if (_usesDOMRect) {
        return NewConstraints_1.ParentSizeState.DisabledForCurrentLevel;
    }
    return NewConstraints_1.ParentSizeState.Unknown;
}
function isAutoSized({ width, height, }) {
    return width === "auto" || width === "min-content" || height === "auto" || height === "min-content";
}


/***/ }),

/***/ "./src/render/presentation/Frame/getStyleForFrameProps.ts":
/*!****************************************************************!*\
  !*** ./src/render/presentation/Frame/getStyleForFrameProps.ts ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getStyleForFrameProps = exports.hasTopAndBottom = exports.hasLeftAndRight = void 0;
const extractStyleFromProps_1 = __webpack_require__(/*! ../../utils/extractStyleFromProps */ "./src/render/utils/extractStyleFromProps.ts");
const Background_1 = __webpack_require__(/*! ../../traits/Background */ "./src/render/traits/Background.ts");
function hasLeftAndRight(style) {
    if (!style)
        return false;
    return style.left !== undefined && style.right !== undefined;
}
exports.hasLeftAndRight = hasLeftAndRight;
function hasTopAndBottom(style) {
    if (!style)
        return false;
    return style.top !== undefined && style.bottom !== undefined;
}
exports.hasTopAndBottom = hasTopAndBottom;
function getStyleForFrameProps(props) {
    if (!props) {
        return {};
    }
    const style = {};
    if (props.preserve3d === true) {
        style.transformStyle = "preserve-3d";
    }
    else if (props.preserve3d === false) {
        style.transformStyle = "flat";
    }
    if (props.backfaceVisible === true) {
        style.backfaceVisibility = "visible";
    }
    else if (props.backfaceVisible === false) {
        style.backfaceVisibility = "hidden";
    }
    if (style.backfaceVisibility) {
        style.WebkitBackfaceVisibility = style.backfaceVisibility;
    }
    if (props.perspective !== undefined) {
        style.perspective = style.WebkitPerspective = props.perspective;
    }
    if (!props.__fromCanvasComponent) {
        if (props.center === true) {
            style.left = "50%";
            style.top = "50%";
        }
        else {
            if (props.center === "x") {
                style.left = "50%";
            }
            else if (props.center === "y") {
                style.top = "50%";
            }
        }
    }
    extractStyleFromProps_1.extractStyleFromProps(props, "size", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "width", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "height", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "minWidth", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "minHeight", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "top", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "right", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "bottom", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "left", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "position", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "overflow", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "opacity", style);
    if (!props._border || !props._border.borderWidth)
        extractStyleFromProps_1.extractStyleFromProps(props, "border", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "borderRadius", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "radius", style, "borderRadius");
    extractStyleFromProps_1.extractStyleFromProps(props, "color", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "shadow", style, "boxShadow");
    extractStyleFromProps_1.extractStyleFromProps(props, "x", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "y", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "z", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "rotate", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "rotateX", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "rotateY", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "rotateZ", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "scale", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "scaleX", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "scaleY", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "skew", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "skewX", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "skewY", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "originX", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "originY", style);
    extractStyleFromProps_1.extractStyleFromProps(props, "originZ", style);
    Background_1.collectBackgroundFromProps(props, style);
    return style;
}
exports.getStyleForFrameProps = getStyleForFrameProps;


/***/ }),

/***/ "./src/render/presentation/Frame/index.tsx":
/*!*************************************************!*\
  !*** ./src/render/presentation/Frame/index.tsx ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Frame = exports.DeprecatedFrameWithEvents = exports.FrameWithMotion = exports.DeprecatedFrame = exports.isDeprecatedFrameProps = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
const WithEvents_1 = __webpack_require__(/*! ../../../components/hoc/WithEvents */ "./src/components/hoc/WithEvents.tsx");
const DeprecatedFrame_1 = __webpack_require__(/*! ./DeprecatedFrame */ "./src/render/presentation/Frame/DeprecatedFrame.tsx");
const FrameWithMotion_1 = __webpack_require__(/*! ./FrameWithMotion */ "./src/render/presentation/Frame/FrameWithMotion.tsx");
const NewConstraints_1 = __webpack_require__(/*! ../../types/NewConstraints */ "./src/render/types/NewConstraints.tsx");
const isDeprecatedFrameProps_1 = __webpack_require__(/*! ./isDeprecatedFrameProps */ "./src/render/presentation/Frame/isDeprecatedFrameProps.ts");
var isDeprecatedFrameProps_2 = __webpack_require__(/*! ./isDeprecatedFrameProps */ "./src/render/presentation/Frame/isDeprecatedFrameProps.ts");
Object.defineProperty(exports, "isDeprecatedFrameProps", { enumerable: true, get: function () { return isDeprecatedFrameProps_2.isDeprecatedFrameProps; } });
var DeprecatedFrame_2 = __webpack_require__(/*! ./DeprecatedFrame */ "./src/render/presentation/Frame/DeprecatedFrame.tsx");
Object.defineProperty(exports, "DeprecatedFrame", { enumerable: true, get: function () { return DeprecatedFrame_2.DeprecatedFrame; } });
var FrameWithMotion_2 = __webpack_require__(/*! ./FrameWithMotion */ "./src/render/presentation/Frame/FrameWithMotion.tsx");
Object.defineProperty(exports, "FrameWithMotion", { enumerable: true, get: function () { return FrameWithMotion_2.FrameWithMotion; } });
exports.DeprecatedFrameWithEvents = WithEvents_1.WithEvents(DeprecatedFrame_1.DeprecatedFrame);
exports.Frame = react_1.forwardRef(function Frame(props, ref) {
    const parentSize = NewConstraints_1.useParentSize();
    if (isDeprecatedFrameProps_1.isDeprecatedFrameProps(props)) {
        const currentParentSize = props.parentSize || NewConstraints_1.deprecatedParentSize(parentSize);
        return React.createElement(exports.DeprecatedFrameWithEvents, Object.assign({}, props, { parentSize: currentParentSize }));
    }
    return React.createElement(FrameWithMotion_1.FrameWithMotion, Object.assign({}, props, { ref: ref }));
});
exports.Frame.rect = (props, parentSize) => {
    if (isDeprecatedFrameProps_1.isDeprecatedFrameProps(props)) {
        return DeprecatedFrame_1.DeprecatedFrame.rect(props);
    }
    return FrameWithMotion_1.FrameWithMotion.rect(props);
};


/***/ }),

/***/ "./src/render/presentation/Frame/isDeprecatedFrameProps.ts":
/*!*****************************************************************!*\
  !*** ./src/render/presentation/Frame/isDeprecatedFrameProps.ts ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isDeprecatedFrameProps = void 0;
const Animatable_1 = __webpack_require__(/*! ../../../animation/Animatable/Animatable */ "./src/animation/Animatable/Animatable.ts");
const frameWithMotionPropsFields = [
    "_border",
    "_constraints",
    "animate",
    "initial",
    "variants",
    "transition",
    "inherit",
    "center",
    "initial",
    "transformTemplate",
    "transformValues",
    "animate",
    "variants",
    "transition",
    "onUpdate",
    "onAnimationComplete",
    "onPanSessionStart",
    "onTapCancel",
    "whileTap",
    "whileHover",
    "onHoverStart",
    "onHoverEnd",
    "drag",
    "dragDirectionLock",
    "dragPropagation",
    "dragConstraints",
    "dragElastic",
    "dragMomentum",
    "dragTransition",
    "onDragStart",
    "onDragEnd",
    "onDrag",
    "onDirectionLock",
    "onDragTransitionEnd",
    "x",
    "y",
    "rotate",
    "rotateX",
    "rotateY",
    "rotateZ",
    "position",
    "border",
    "borderRadius",
    "shadow",
    "size",
];
const deprecatedFramePropsFields = [
    "autoSize",
    "aspectRatio",
    "borderWidth",
    "borderStyle",
    "borderColor",
    "centerX",
    "centerY",
];
function isDeprecatedFrameProps(props) {
    let field;
    for (const propKey in props) {
        if (Animatable_1.isAnimatable(props[propKey]))
            return true;
    }
    for (field of frameWithMotionPropsFields) {
        if (props.hasOwnProperty(field))
            return false;
    }
    for (field of deprecatedFramePropsFields) {
        if (props.hasOwnProperty(field))
            return true;
    }
    return false;
}
exports.isDeprecatedFrameProps = isDeprecatedFrameProps;


/***/ }),

/***/ "./src/render/presentation/GradientElement.tsx":
/*!*****************************************************!*\
  !*** ./src/render/presentation/GradientElement.tsx ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RadialGradientElement = exports.LinearGradientElement = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
class LinearGradientElement extends React.Component {
    render() {
        const { id, angle, stops } = this.props;
        return (React.createElement("linearGradient", { id: id, gradientTransform: `rotate(${angle}, 0.5, 0.5)` }, stops.map((stop, idx) => {
            return React.createElement("stop", { key: idx, offset: stop.position, stopColor: stop.color, stopOpacity: stop.alpha });
        })));
    }
}
exports.LinearGradientElement = LinearGradientElement;
class RadialGradientElement extends React.Component {
    render() {
        const { centerAnchorX, centerAnchorY, id, widthFactor, heightFactor, stops } = this.props;
        return (React.createElement("radialGradient", { id: id, cy: centerAnchorY, cx: centerAnchorX, r: widthFactor, gradientTransform: `translate(${centerAnchorX}, ${centerAnchorY}) scale(1 ${heightFactor / widthFactor}) translate(-${centerAnchorX}, -${centerAnchorY})` }, stops.map((stop, idx) => {
            return React.createElement("stop", { key: idx, offset: stop.position, stopColor: stop.color, stopOpacity: stop.alpha });
        })));
    }
}
exports.RadialGradientElement = RadialGradientElement;


/***/ }),

/***/ "./src/render/presentation/Image.tsx":
/*!*******************************************!*\
  !*** ./src/render/presentation/Image.tsx ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Image = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const react_1 = __webpack_require__(/*! react */ "react");
const BackgroundImageComponent_1 = __webpack_require__(/*! ../style/BackgroundImageComponent */ "./src/render/style/BackgroundImageComponent.tsx");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
exports.Image = react_1.forwardRef(function Image(props, ref) {
    const { background, children } = props, rest = __rest(props, ["background", "children"]);
    const style = Object.assign({}, rest.style);
    if (background) {
        delete style.background;
    }
    return (React.createElement(framer_motion_1.motion.div, Object.assign({}, rest, { style: style, ref: ref }),
        background ? React.createElement(BackgroundImageComponent_1.BackgroundImageComponent, { image: background }) : null,
        children));
});


/***/ }),

/***/ "./src/render/presentation/ImagePatternElement.tsx":
/*!*********************************************************!*\
  !*** ./src/render/presentation/ImagePatternElement.tsx ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImagePatternElement = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const imageUrlForAsset_1 = __webpack_require__(/*! ../utils/imageUrlForAsset */ "./src/render/utils/imageUrlForAsset.ts");
class ImagePatternElement extends React.Component {
    render() {
        const { id, path, transform } = this.props;
        const xlinkHref = imageUrlForAsset_1.imageUrlForAsset(path);
        return (React.createElement("pattern", { id: id, width: "100%", height: "100%", patternContentUnits: "objectBoundingBox" },
            React.createElement("image", { key: xlinkHref, width: 1, height: 1, xlinkHref: xlinkHref, preserveAspectRatio: "none", transform: transform })));
    }
}
exports.ImagePatternElement = ImagePatternElement;


/***/ }),

/***/ "./src/render/presentation/Layer.tsx":
/*!*******************************************!*\
  !*** ./src/render/presentation/Layer.tsx ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Layer = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const isEqual_1 = __webpack_require__(/*! ../utils/isEqual */ "./src/render/utils/isEqual.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const useWebkitFixes_1 = __webpack_require__(/*! ../utils/useWebkitFixes */ "./src/render/utils/useWebkitFixes.ts");
const elementForComponent_1 = __webpack_require__(/*! ../utils/elementForComponent */ "./src/render/utils/elementForComponent.ts");
const setLayerBacked_1 = __webpack_require__(/*! ../utils/setLayerBacked */ "./src/render/utils/setLayerBacked.ts");
class Layer extends React.Component {
    static applyWillChange(props, style, usingMotionStyle) {
        const shouldApply = props.willChangeTransform || RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.export;
        if (shouldApply) {
            if (usingMotionStyle) {
                setLayerBacked_1.forceLayerBackingWithMotionStyle(style);
            }
            else {
                setLayerBacked_1.forceLayerBackingWithCSSProperties(style);
            }
        }
    }
    shouldComponentUpdate(nextProps, nextState) {
        return nextProps._needsMeasure || this.state !== nextState || !isEqual_1.isEqual(this.props, nextProps);
    }
    componentDidUpdate(prevProps) {
        const element = elementForComponent_1.elementForComponent(this);
        if (this.props["clip"] && this.props["radius"] === 0 && prevProps["radius"] !== 0) {
            useWebkitFixes_1.resetSetStyle(element, "overflow", "hidden", false);
        }
    }
}
exports.Layer = Layer;
Layer.defaultProps = {};


/***/ }),

/***/ "./src/render/presentation/PresentationTree.ts":
/*!*****************************************************!*\
  !*** ./src/render/presentation/PresentationTree.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.convertPresentationTree = void 0;
const isEqual_1 = __webpack_require__(/*! ../utils/isEqual */ "./src/render/utils/isEqual.ts");
const isShallowEqualArray_1 = __webpack_require__(/*! ../utils/isShallowEqualArray */ "./src/render/utils/isShallowEqualArray.ts");
function convertPresentationTree(node, converter, componentDefinitionProvider, getCachedNode, skipCodeComponentPropsCache = false) {
    const cachedNode = getCachedNode && getCachedNode(node);
    if (cachedNode)
        return cachedNode;
    let children;
    if (isCodeComponentContainerPresentation(node)) {
        children = convertCodeComponentContainer(componentDefinitionProvider, node, converter, getCachedNode, skipCodeComponentPropsCache);
    }
    else if (node.children) {
        children = node.children.map(n => convertPresentationTree(n, converter, componentDefinitionProvider, getCachedNode, skipCodeComponentPropsCache));
    }
    return converter(node, children);
}
exports.convertPresentationTree = convertPresentationTree;
function isCodeComponentContainerPresentation(value) {
    return !!value.codeComponentIdentifier;
}
function convertCodeComponentContainer(componentDefinitionProvider, node, converter, getCachedNode, skipCodeComponentPropsCache = false) {
    const codeComponentChildren = node.getComponentChildren
        ? node.getComponentChildren(componentDefinitionProvider)
        : [];
    const codeComponentSlots = node.getComponentSlotChildren
        ? node.getComponentSlotChildren(componentDefinitionProvider)
        : {};
    let codeComponentPresentation;
    const props = node.getCodeComponentProps
        ? node.getCodeComponentProps(componentDefinitionProvider, { skipCache: skipCodeComponentPropsCache })
        : undefined;
    if (node.cache.codeComponentPresentation) {
        codeComponentPresentation = node.cache.codeComponentPresentation;
        if (!isShallowEqualArray_1.isShallowEqualArray(codeComponentPresentation.children, codeComponentChildren)) {
            codeComponentPresentation.cache.reactElement = null;
            codeComponentPresentation.children = codeComponentChildren;
        }
        if (!isEqual_1.isEqual(codeComponentPresentation.props, props)) {
            codeComponentPresentation.cache.reactElement = null;
            codeComponentPresentation.cache.props = null;
            codeComponentPresentation.props = props;
        }
    }
    else {
        const { id: containerId, codeComponentIdentifier: identifier, codeComponentPackageVersion } = node;
        node.cache.codeComponentPresentation = codeComponentPresentation = new CodeComponentPresentation(containerId + identifier, identifier, codeComponentPackageVersion, props, codeComponentChildren);
    }
    codeComponentPresentation.props.placeholders = node.cache.placeholders;
    const slotKeys = Object.keys(codeComponentSlots);
    if (slotKeys.length) {
        codeComponentPresentation.props = Object.assign({}, codeComponentPresentation.props);
        codeComponentPresentation.props.__slotKeys = slotKeys;
        for (const slotKey of slotKeys) {
            const slotChildren = codeComponentSlots[slotKey].map(child => convertPresentationTree(child, converter, componentDefinitionProvider, getCachedNode, skipCodeComponentPropsCache));
            codeComponentPresentation.props[slotKey] = slotChildren;
        }
    }
    return [
        converter(codeComponentPresentation, codeComponentPresentation.children.map(child => convertPresentationTree(child, converter, componentDefinitionProvider, getCachedNode, skipCodeComponentPropsCache))),
    ];
}
class CodeComponentPresentation {
    constructor(id, componentIdentifier, packageVersion, props, children, codeOverrideIdentifier) {
        this.id = id;
        this.componentIdentifier = componentIdentifier;
        this.packageVersion = packageVersion;
        this.props = props;
        this.children = children;
        this.codeOverrideIdentifier = codeOverrideIdentifier;
        this.cache = {};
        this.getProps = () => {
            return Object.assign(Object.assign({}, this.props), { id: this.id, key: this.id });
        };
        this.rect = (parentSize) => {
            return { x: 0, y: 0, width: 0, height: 0 };
        };
    }
}


/***/ }),

/***/ "./src/render/presentation/SVG.tsx":
/*!*****************************************!*\
  !*** ./src/render/presentation/SVG.tsx ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.prefixIdsInSVG = exports.SVG = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
const Layer_1 = __webpack_require__(/*! ./Layer */ "./src/render/presentation/Layer.tsx");
const Color_1 = __webpack_require__(/*! ../types/Color */ "./src/render/types/Color/index.ts");
const LinearGradient_1 = __webpack_require__(/*! ../types/LinearGradient */ "./src/render/types/LinearGradient.ts");
const RadialGradient_1 = __webpack_require__(/*! ../types/RadialGradient */ "./src/render/types/RadialGradient.ts");
const Opacity_1 = __webpack_require__(/*! ../traits/Opacity */ "./src/render/traits/Opacity.ts");
const filtersForNode_1 = __webpack_require__(/*! ../utils/filtersForNode */ "./src/render/utils/filtersForNode.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const NewConstraints_1 = __webpack_require__(/*! ../types/NewConstraints */ "./src/render/types/NewConstraints.tsx");
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const BackgroundImage_1 = __webpack_require__(/*! ../types/BackgroundImage */ "./src/render/types/BackgroundImage.ts");
const imagePatternPropsForFill_1 = __webpack_require__(/*! ../utils/imagePatternPropsForFill */ "./src/render/utils/imagePatternPropsForFill.tsx");
const isFiniteNumber_1 = __webpack_require__(/*! ../utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const ImagePatternElement_1 = __webpack_require__(/*! ./ImagePatternElement */ "./src/render/presentation/ImagePatternElement.tsx");
const injectComponentCSSRules_1 = __webpack_require__(/*! ../utils/injectComponentCSSRules */ "./src/render/utils/injectComponentCSSRules.ts");
const elementForComponent_1 = __webpack_require__(/*! ../utils/elementForComponent */ "./src/render/utils/elementForComponent.ts");
const useWebkitFixes_1 = __webpack_require__(/*! ../utils/useWebkitFixes */ "./src/render/utils/useWebkitFixes.ts");
const elementPropertiesForGradient_1 = __webpack_require__(/*! ../utils/elementPropertiesForGradient */ "./src/render/utils/elementPropertiesForGradient.ts");
const useLayoutId_1 = __webpack_require__(/*! ../utils/useLayoutId */ "./src/render/utils/useLayoutId.ts");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const transformTemplate_1 = __webpack_require__(/*! ../utils/transformTemplate */ "./src/render/utils/transformTemplate.ts");
const useMeasureLayout_1 = __webpack_require__(/*! ../utils/useMeasureLayout */ "./src/render/utils/useMeasureLayout.ts");
const layoutHintDataPropsForCenter_1 = __webpack_require__(/*! ../utils/layoutHintDataPropsForCenter */ "./src/render/utils/layoutHintDataPropsForCenter.ts");
function SVG(props) {
    const parentSize = NewConstraints_1.useParentSize();
    const layoutId = useLayoutId_1.useLayoutId(props);
    const layoutRef = React.useRef(null);
    useMeasureLayout_1.useMeasureLayout(props, layoutRef);
    return React.createElement(SVGComponent, Object.assign({}, props, { innerRef: layoutRef, parentSize: parentSize, layoutId: layoutId }));
}
exports.SVG = SVG;
function sizeSVG(container, props) {
    var _a, _b;
    const div = container.current;
    if (!div)
        return;
    const { withExternalLayout, parentSize } = props;
    const canUseCalculatedOnCanvasSize = !withExternalLayout &&
        NewConstraints_1.constraintsEnabled(props) &&
        parentSize !== NewConstraints_1.ParentSizeState.Disabled &&
        parentSize !== NewConstraints_1.ParentSizeState.DisabledForCurrentLevel;
    if (canUseCalculatedOnCanvasSize)
        return;
    const svg = div.firstElementChild;
    if (!svg || !(svg instanceof SVGSVGElement)) {
        return;
    }
    const { intrinsicWidth, intrinsicHeight, _constraints } = props;
    if (((_a = svg.viewBox.baseVal) === null || _a === void 0 ? void 0 : _a.width) === 0 &&
        ((_b = svg.viewBox.baseVal) === null || _b === void 0 ? void 0 : _b.height) === 0 &&
        isFiniteNumber_1.isFiniteNumber(intrinsicWidth) &&
        isFiniteNumber_1.isFiniteNumber(intrinsicHeight)) {
        svg.setAttribute("viewBox", `0 0 ${intrinsicWidth} ${intrinsicHeight}`);
    }
    if (_constraints && _constraints.aspectRatio) {
        svg.setAttribute("preserveAspectRatio", "");
    }
    else {
        svg.setAttribute("preserveAspectRatio", "none");
    }
    svg.setAttribute("width", "100%");
    svg.setAttribute("height", "100%");
}
class SVGComponent extends Layer_1.Layer {
    constructor() {
        super(...arguments);
        this.container = React.createRef();
    }
    static frame(props) {
        return NewConstraints_1.calculateRect(props, props.parentSize || NewConstraints_1.ParentSizeState.Unknown);
    }
    getPrefixedSVG(svg, id) {
        if (this.previouslyPrefixedSVG &&
            svg === this.previouslyPrefixedSVG.svg &&
            id === this.previouslyPrefixedSVG.id) {
            return this.previouslyPrefixedSVGResult;
        }
        const prefixedSVG = prefixIdsInSVG(svg, id);
        this.previouslyPrefixedSVGResult = prefixedSVG;
        this.previouslyPrefixedSVG = { svg, id };
        return prefixedSVG;
    }
    get frame() {
        return NewConstraints_1.calculateRect(this.props, this.props.parentSize || NewConstraints_1.ParentSizeState.Unknown);
    }
    componentDidMount() {
        sizeSVG(this.container, this.props);
    }
    componentDidUpdate(prevProps) {
        super.componentDidUpdate(prevProps);
        const { fill } = this.props;
        if (BackgroundImage_1.BackgroundImage.isImageObject(fill) &&
            BackgroundImage_1.BackgroundImage.isImageObject(prevProps.fill) &&
            fill.src !== prevProps.fill.src) {
            const element = elementForComponent_1.elementForComponent(this);
            useWebkitFixes_1.resetSetStyle(element, "fill", null, false);
        }
        sizeSVG(this.container, this.props);
    }
    collectLayout(style, innerStyle) {
        if (this.props.withExternalLayout) {
            innerStyle.width = innerStyle.height = "inherit";
            return;
        }
        const frame = this.frame;
        const { rotation, intrinsicWidth, intrinsicHeight, width, height } = this.props;
        const rotate = Animatable_1.Animatable.getNumber(rotation);
        style.opacity = isFiniteNumber_1.isFiniteNumber(this.props.opacity) ? this.props.opacity : 1;
        if (RenderEnvironment_1.RenderTarget.hasRestrictions() && frame) {
            Object.assign(style, {
                transform: `translate(${frame.x}px, ${frame.y}px) rotate(${rotate.toFixed(4)}deg)`,
                width: `${frame.width}px`,
                height: `${frame.height}px`,
            });
            if (NewConstraints_1.constraintsEnabled(this.props)) {
                style.position = "absolute";
            }
            const xFactor = frame.width / (intrinsicWidth || 1);
            const yFactor = frame.height / (intrinsicHeight || 1);
            innerStyle.transformOrigin = "top left";
            const { zoom, target } = RenderEnvironment_1.RenderEnvironment;
            if (target === RenderEnvironment_1.RenderTarget.export) {
                const zoomFactor = zoom > 1 ? zoom : 1;
                innerStyle.transform = `scale(${xFactor * zoomFactor}, ${yFactor * zoomFactor})`;
                innerStyle.zoom = 1 / zoomFactor;
            }
            else {
                innerStyle.transform = `scale(${xFactor}, ${yFactor})`;
            }
            if (intrinsicWidth && intrinsicHeight) {
                innerStyle.width = intrinsicWidth;
                innerStyle.height = intrinsicHeight;
            }
        }
        else {
            const { left, right, top, bottom } = this.props;
            Object.assign(style, {
                left,
                right,
                top,
                bottom,
                width,
                height,
                rotate,
            });
            Object.assign(innerStyle, {
                left: 0,
                top: 0,
                bottom: 0,
                right: 0,
                position: "absolute",
            });
        }
    }
    render() {
        var _a;
        if ( true && safeWindow_1.safeWindow["perf"])
            safeWindow_1.safeWindow["perf"].nodeRender();
        const { id, visible, style, fill, svg, intrinsicHeight, intrinsicWidth, layoutId, className, variants, transition, withExternalLayout, innerRef, } = this.props;
        if (!withExternalLayout && (!visible || !id))
            return null;
        const identifier = (_a = id !== null && id !== void 0 ? id : layoutId) !== null && _a !== void 0 ? _a : "svg";
        injectComponentCSSRules_1.injectComponentCSSRules();
        const frame = this.frame;
        const size = frame || { width: intrinsicWidth || 100, height: intrinsicHeight || 100 };
        const outerStyle = Object.assign(Object.assign({}, style), { imageRendering: "pixelated" });
        const innerStyle = {};
        this.collectLayout(outerStyle, innerStyle);
        Opacity_1.collectOpacityFromProps(this.props, outerStyle);
        filtersForNode_1.collectFiltersFromProps(this.props, outerStyle);
        Layer_1.Layer.applyWillChange(this.props, outerStyle, false);
        let fillElement = null;
        if (typeof fill === "string" || Color_1.Color.isColorObject(fill)) {
            const fillColor = Color_1.Color.isColorObject(fill) ? fill.initialValue || Color_1.Color.toRgbString(fill) : fill;
            outerStyle.fill = fillColor;
            outerStyle.color = fillColor;
        }
        else if (LinearGradient_1.LinearGradient.isLinearGradient(fill)) {
            const gradient = fill;
            const gradientId = `${encodeURI(id || "")}g${LinearGradient_1.LinearGradient.hash(gradient)}`;
            outerStyle.fill = `url(#${gradientId})`;
            const elementProperties = elementPropertiesForGradient_1.elementPropertiesForLinearGradient(gradient, identifier);
            fillElement = (React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%", style: { position: "absolute" } },
                React.createElement("linearGradient", { id: gradientId, gradientTransform: `rotate(${elementProperties.angle}, 0.5, 0.5)` }, elementProperties.stops.map((stop, idx) => {
                    return (React.createElement("stop", { key: idx, offset: stop.position, stopColor: stop.color, stopOpacity: stop.alpha }));
                }))));
        }
        else if (RadialGradient_1.RadialGradient.isRadialGradient(fill)) {
            const gradient = fill;
            const gradientId = `${encodeURI(id || "")}g${RadialGradient_1.RadialGradient.hash(gradient)}`;
            outerStyle.fill = `url(#${gradientId})`;
            const elementProperties = elementPropertiesForGradient_1.elementPropertiesForRadialGradient(gradient, identifier);
            fillElement = (React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "100%", height: "100%", style: { position: "absolute" } },
                React.createElement("radialGradient", { id: gradientId, cy: gradient.centerAnchorY, cx: gradient.centerAnchorX, r: gradient.widthFactor }, elementProperties.stops.map((stop, idx) => {
                    return (React.createElement("stop", { key: idx, offset: stop.position, stopColor: stop.color, stopOpacity: stop.alpha }));
                }))));
        }
        else if (BackgroundImage_1.BackgroundImage.isImageObject(fill)) {
            const imagePattern = imagePatternPropsForFill_1.imagePatternPropsForFill(fill, size, identifier);
            if (imagePattern) {
                outerStyle.fill = `url(#${imagePattern.id})`;
                fillElement = (React.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", width: "100%", height: "100%", style: { position: "absolute" } },
                    React.createElement("defs", null,
                        React.createElement(ImagePatternElement_1.ImagePatternElement, Object.assign({}, imagePattern)))));
            }
        }
        const dataProps = {
            "data-framer-component-type": "SVG",
        };
        const hasTransformTemplate = !frame;
        if (hasTransformTemplate) {
            Object.assign(dataProps, layoutHintDataPropsForCenter_1.layoutHintDataPropsForCenter(this.props.center));
        }
        const content = (React.createElement(React.Fragment, null,
            fillElement,
            React.createElement("div", { key: BackgroundImage_1.BackgroundImage.isImageObject(fill) ? fill.src : "", className: "svgContainer", style: innerStyle, ref: this.container, dangerouslySetInnerHTML: { __html: this.getPrefixedSVG(svg, identifier) } })));
        return (React.createElement(framer_motion_1.motion.div, Object.assign({}, dataProps, { layoutId: layoutId, transformTemplate: hasTransformTemplate ? transformTemplate_1.transformTemplate(this.props.center) : undefined, id: id, ref: innerRef, style: outerStyle, className: className, variants: variants, transition: transition }), content));
    }
}
SVGComponent.supportsConstraints = true;
SVGComponent.defaultSVGProps = {
    left: undefined,
    right: undefined,
    top: undefined,
    bottom: undefined,
    style: undefined,
    _constraints: {
        enabled: true,
        aspectRatio: null,
    },
    parentSize: NewConstraints_1.ParentSizeState.Unknown,
    rotation: 0,
    visible: true,
    svg: "",
    shadows: [],
};
SVGComponent.defaultProps = Object.assign(Object.assign({}, Layer_1.Layer.defaultProps), SVGComponent.defaultSVGProps);
function prefixIdsInSVG(svg, prefix) {
    const domParser = new DOMParser();
    try {
        const doc = domParser.parseFromString(svg, "image/svg+xml");
        const el = doc.getElementsByTagName("svg")[0];
        if (!el)
            return svg;
        const sanitizedPrefix = sanitizeString(prefix);
        recursivelyPrefixId(el, sanitizedPrefix);
        return el.outerHTML;
    }
    catch (error) {
        throw Error(`Failed to parse SVG: ${error}`);
    }
}
exports.prefixIdsInSVG = prefixIdsInSVG;
function sanitizeString(str) {
    return str.replace(/[^a-z0-9\-_:.]|^[^a-z]+/gi, "");
}
function recursivelyPrefixId(el, prefix) {
    prefixId(el, prefix);
    const childNodes = Array.from(el.children);
    childNodes.forEach(node => {
        recursivelyPrefixId(node, prefix);
    });
}
function prefixId(el, prefix) {
    const attributes = el.getAttributeNames();
    attributes.forEach(attr => {
        const value = el.getAttribute(attr);
        if (!value)
            return;
        if (attr === "id") {
            el.setAttribute(attr, `${prefix}_${value}`);
        }
        if (attr === "href" || attr === "xlink:href") {
            const [base, fragmentIdentifier] = value.split("#");
            if (base)
                return;
            el.setAttribute(attr, `#${prefix}_${fragmentIdentifier}`);
            return;
        }
        const URL_REF = "url(#";
        if (value.includes(URL_REF)) {
            const prefixedValue = value.replace(URL_REF, `${URL_REF}${prefix}_`);
            el.setAttribute(attr, prefixedValue);
        }
    });
}


/***/ }),

/***/ "./src/render/presentation/SVGRoot.tsx":
/*!*********************************************!*\
  !*** ./src/render/presentation/SVGRoot.tsx ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SVGRoot = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Layer_1 = __webpack_require__(/*! ./Layer */ "./src/render/presentation/Layer.tsx");
class SVGRoot extends React.Component {
    render() {
        const { children, frame } = this.props;
        const { width, height } = frame;
        const fx = Math.floor(frame.x);
        const fy = Math.floor(frame.y);
        const svgStyle = {
            position: "absolute",
            width: Math.ceil(width),
            height: Math.ceil(height),
            overflow: "visible",
            display: "block",
            transform: `translate(${fx}px, ${fy}px)`,
        };
        Layer_1.Layer.applyWillChange(this.props, svgStyle, false);
        return (React.createElement("svg", { width: "100%", height: "100%", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", style: svgStyle }, children));
    }
}
exports.SVGRoot = SVGRoot;


/***/ }),

/***/ "./src/render/presentation/Text.tsx":
/*!******************************************!*\
  !*** ./src/render/presentation/Text.tsx ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Text = void 0;
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const environment_1 = __webpack_require__(/*! ../../utils/environment */ "./src/utils/environment.ts");
const fontStore_1 = __webpack_require__(/*! ../fonts/fontStore */ "./src/render/fonts/fontStore.ts");
const shadow_1 = __webpack_require__(/*! ../style/shadow */ "./src/render/style/shadow.tsx");
const NewConstraints_1 = __webpack_require__(/*! ../types/NewConstraints */ "./src/render/types/NewConstraints.tsx");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const filtersForNode_1 = __webpack_require__(/*! ../utils/filtersForNode */ "./src/render/utils/filtersForNode.ts");
const injectComponentCSSRules_1 = __webpack_require__(/*! ../utils/injectComponentCSSRules */ "./src/render/utils/injectComponentCSSRules.ts");
const ComponentContainerContext_1 = __webpack_require__(/*! ./ComponentContainerContext */ "./src/render/presentation/ComponentContainerContext.tsx");
const Layer_1 = __webpack_require__(/*! ./Layer */ "./src/render/presentation/Layer.tsx");
const setLayerBacked_1 = __webpack_require__(/*! ../utils/setLayerBacked */ "./src/render/utils/setLayerBacked.ts");
const isFiniteNumber_1 = __webpack_require__(/*! ../utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const useLayoutId_1 = __webpack_require__(/*! ../utils/useLayoutId */ "./src/render/utils/useLayoutId.ts");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const transformTemplate_1 = __webpack_require__(/*! ../utils/transformTemplate */ "./src/render/utils/transformTemplate.ts");
const useMeasureLayout_1 = __webpack_require__(/*! ../utils/useMeasureLayout */ "./src/render/utils/useMeasureLayout.ts");
const layoutHintDataPropsForCenter_1 = __webpack_require__(/*! ../utils/layoutHintDataPropsForCenter */ "./src/render/utils/layoutHintDataPropsForCenter.ts");
const utils_1 = __webpack_require__(/*! ../../utils/utils */ "./src/utils/utils.ts");
function Text(props) {
    const parentSize = NewConstraints_1.useParentSize();
    const layoutId = useLayoutId_1.useLayoutId(props);
    const layoutRef = React.useRef(null);
    useMeasureLayout_1.useMeasureLayout(props, layoutRef);
    return React.createElement(TextComponent, Object.assign({}, props, { innerRef: layoutRef, layoutId: layoutId, parentSize: parentSize }));
}
exports.Text = Text;
class TextComponent extends Layer_1.Layer {
    constructor() {
        super(...arguments);
        this.renderMain = (inCodeComponent) => {
            if ( true && safeWindow_1.safeWindow["perf"])
                safeWindow_1.safeWindow["perf"].nodeRender();
            const { font, fonts: fontSelectors, visible, alignment, autoSize, willChangeTransform, opacity, id, layoutId, className, transition, variants, name, innerRef, __fromCanvasComponent, } = this.props;
            const frame = this.frame;
            if (!visible) {
                return null;
            }
            if (fontSelectors) {
                fontStore_1.fontStore.loadWebFontsFromSelectors(fontSelectors);
            }
            injectComponentCSSRules_1.injectComponentCSSRules();
            const isHidden = this.props.isEditable && this.props.environment() === RenderEnvironment_1.RenderTarget.canvas;
            const justifyContent = convertVerticalAlignment(this.props.verticalAlignment);
            const style = {
                wordWrap: "break-word",
                outline: "none",
                display: "flex",
                flexDirection: "column",
                justifyContent: justifyContent,
                opacity: isHidden ? 0 : opacity,
                flexShrink: 0,
            };
            const dataProps = {
                "data-framer-component-type": "Text",
                "data-framer-name": name,
            };
            if (autoSize) {
                dataProps["data-framer-component-text-autosized"] = "true";
            }
            this.collectLayout(style, inCodeComponent);
            filtersForNode_1.collectFiltersFromProps(this.props, style);
            shadow_1.collectTextShadowsForProps(this.props, style);
            if (style.opacity === 1 || style.opacity === undefined) {
                delete style.opacity;
            }
            if (willChangeTransform) {
                setLayerBacked_1.forceLayerBackingWithCSSProperties(style);
            }
            let rawHTML = this.props.rawHTML;
            const text = this.getOverrideText() || this.props.text;
            if (utils_1.isString(text)) {
                if (rawHTML) {
                    rawHTML = replaceDraftHTMLWithText(rawHTML, text);
                }
                else {
                    rawHTML = `<p style="font: ${font}">${text}</p>`;
                }
            }
            if (this.props.style) {
                Object.assign(style, this.props.style);
            }
            const hasTransformTemplate = !frame || !RenderEnvironment_1.RenderTarget.hasRestrictions() || __fromCanvasComponent;
            if (hasTransformTemplate) {
                Object.assign(dataProps, layoutHintDataPropsForCenter_1.layoutHintDataPropsForCenter(this.props.center));
            }
            if (rawHTML) {
                style.textAlign = alignment;
                style.whiteSpace = "pre-wrap";
                style.wordWrap = "break-word";
                style.lineHeight = "1px";
                style.fontSize = "0px";
                style.wordBreak = "break-word";
                return (React.createElement(framer_motion_1.motion.div, Object.assign({ layoutId: layoutId, id: id }, dataProps, { style: style, transformTemplate: hasTransformTemplate ? transformTemplate_1.transformTemplate(this.props.center) : undefined, dangerouslySetInnerHTML: { __html: rawHTML }, "data-center": this.props.center, className: className, transition: transition, variants: variants, ref: innerRef })));
            }
        };
    }
    get frame() {
        return NewConstraints_1.calculateRect(this.props, this.props.parentSize || NewConstraints_1.ParentSizeState.Unknown, false);
    }
    getOverrideText() {
        const { id, _forwardedOverrides } = this.props;
        if (id && _forwardedOverrides) {
            const text = _forwardedOverrides[id];
            if (utils_1.isString(text)) {
                return text;
            }
        }
    }
    render() {
        return React.createElement(ComponentContainerContext_1.ComponentContainerContext.Consumer, null, this.renderMain);
    }
    collectLayout(style, inCodeComponent) {
        if (this.props.withExternalLayout)
            return;
        const frame = this.frame;
        const { rotation, autoSize, positionSticky, positionStickyTop, positionStickyRight, positionStickyBottom, positionStickyLeft, } = this.props;
        const rotate = Animatable_1.Animatable.getNumber(rotation);
        if (frame && RenderEnvironment_1.RenderTarget.hasRestrictions()) {
            Object.assign(style, {
                transform: `translate(${frame.x}px, ${frame.y}px) rotate(${rotate.toFixed(4)}deg)`,
                width: autoSize ? "auto" : `${frame.width}px`,
                minWidth: `${frame.width}px`,
                height: `${frame.height}px`,
            });
        }
        else {
            const { left, right, top, bottom, width: externalWidth, height: externalHeight } = this.props;
            let width;
            let height;
            if (autoSize) {
                width = "auto";
                height = "auto";
            }
            else {
                if (!isFiniteNumber_1.isFiniteNumber(left) || !isFiniteNumber_1.isFiniteNumber(right)) {
                    width = externalWidth;
                }
                if (!isFiniteNumber_1.isFiniteNumber(top) || !isFiniteNumber_1.isFiniteNumber(bottom)) {
                    height = externalHeight;
                }
            }
            Object.assign(style, {
                left,
                right,
                top,
                bottom,
                width,
                height,
                rotate,
            });
        }
        if (positionSticky) {
            const onCanvas = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas;
            if (!onCanvas || inCodeComponent) {
                style.position = "sticky";
                style.willChange = "transform";
                style.zIndex = 1;
                style.top = positionStickyTop;
                style.right = positionStickyRight;
                style.bottom = positionStickyBottom;
                style.left = positionStickyLeft;
            }
        }
    }
}
TextComponent.supportsConstraints = true;
TextComponent.defaultTextProps = {
    opacity: undefined,
    left: undefined,
    right: undefined,
    top: undefined,
    bottom: undefined,
    _constraints: {
        enabled: true,
        aspectRatio: null,
    },
    rotation: 0,
    visible: true,
    alignment: undefined,
    verticalAlignment: "top",
    autoSize: true,
    shadows: [],
    font: "16px " + environment_1.deviceFont(),
};
TextComponent.defaultProps = Object.assign(Object.assign(Object.assign({}, Layer_1.Layer.defaultProps), TextComponent.defaultTextProps), { isEditable: false, environment: RenderEnvironment_1.RenderTarget.current, withExternalLayout: false });
const textContentRegex = /(<span [^>]+>).*<\/span>/s;
function replaceDraftHTMLWithText(rawHTML, text) {
    return rawHTML.replace(textContentRegex, (_, span) => span + text + "</span>");
}
function convertVerticalAlignment(verticalAlignment) {
    switch (verticalAlignment) {
        case "top":
            return "flex-start";
        case "center":
            return "center";
        case "bottom":
            return "flex-end";
    }
}


/***/ }),

/***/ "./src/render/presentation/Vector.tsx":
/*!********************************************!*\
  !*** ./src/render/presentation/Vector.tsx ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Vector = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const transformString_1 = __webpack_require__(/*! ../utils/transformString */ "./src/render/utils/transformString.ts");
const Layer_1 = __webpack_require__(/*! ./Layer */ "./src/render/presentation/Layer.tsx");
const SVGRoot_1 = __webpack_require__(/*! ./SVGRoot */ "./src/render/presentation/SVGRoot.tsx");
const Path_1 = __webpack_require__(/*! ../traits/Path */ "./src/render/traits/Path.ts");
const shadow_1 = __webpack_require__(/*! ../style/shadow */ "./src/render/style/shadow.tsx");
const GradientElement_1 = __webpack_require__(/*! ./GradientElement */ "./src/render/presentation/GradientElement.tsx");
const ImagePatternElement_1 = __webpack_require__(/*! ./ImagePatternElement */ "./src/render/presentation/ImagePatternElement.tsx");
const createTransformValues_1 = __webpack_require__(/*! ../utils/createTransformValues */ "./src/render/utils/createTransformValues.ts");
const imagePatternPropsForFill_1 = __webpack_require__(/*! ../utils/imagePatternPropsForFill */ "./src/render/utils/imagePatternPropsForFill.tsx");
const Color_1 = __webpack_require__(/*! ../types/Color */ "./src/render/types/Color/index.ts");
const svgElementAttributeDefaults_1 = __webpack_require__(/*! ../types/svgElementAttributeDefaults */ "./src/render/types/svgElementAttributeDefaults.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const RenderEnvironment_2 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const Gradient_1 = __webpack_require__(/*! ../types/Gradient */ "./src/render/types/Gradient.ts");
const BackgroundImage_1 = __webpack_require__(/*! ../types/BackgroundImage */ "./src/render/types/BackgroundImage.ts");
const elementPropertiesForGradient_1 = __webpack_require__(/*! ../utils/elementPropertiesForGradient */ "./src/render/utils/elementPropertiesForGradient.ts");
const internalId_1 = __webpack_require__(/*! ../../utils/internalId */ "./src/utils/internalId.ts");
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
class Vector extends Layer_1.Layer {
    render() {
        var _a, _b;
        if ( true && safeWindow_1.safeWindow["perf"])
            safeWindow_1.safeWindow["perf"].nodeRender();
        const { opacity, calculatedPath, d, insideStroke, shapeId, strokeEnabled, strokeClipId, strokeWidth, idAttribute, rect, shadows, strokeAlpha, name, includeTransform, isRootVectorNode, rotation, id, lineCap, lineJoin, strokeColor, strokeMiterLimit, strokeDashArray, strokeDashOffset, fill, variants, transition, } = this.props;
        if (!id || !shapeId || !strokeClipId)
            return null;
        const rotate = (_b = (_a = this.props.rotate) !== null && _a !== void 0 ? _a : rotation) !== null && _b !== void 0 ? _b : 0;
        const { target } = RenderEnvironment_2.RenderEnvironment;
        const transform = createTransformValues_1.transformValues(rect, rotate, isRootVectorNode, includeTransform);
        let vectorFill;
        let fillAlpha = 0;
        let imagePattern;
        let linearGradient;
        let radialGradient;
        if (typeof fill === "string" || Color_1.Color.isColorObject(fill)) {
            const fillColor = Color_1.Color.isColorObject(fill) ? fill.initialValue || Color_1.Color.toRgbString(fill) : fill;
            if (fillColor !== "transparent") {
                vectorFill = fillColor;
                fillAlpha = Color_1.ConvertColor.getAlpha(vectorFill);
            }
        }
        else if (Gradient_1.LinearGradient.isLinearGradient(fill)) {
            linearGradient = elementPropertiesForGradient_1.elementPropertiesForLinearGradient(fill, id);
            vectorFill = `url(#${linearGradient.id})`;
            fillAlpha = 1;
        }
        else if (Gradient_1.RadialGradient.isRadialGradient(fill)) {
            radialGradient = elementPropertiesForGradient_1.elementPropertiesForRadialGradient(fill, id);
            vectorFill = `url(#${radialGradient.id})`;
            fillAlpha = 1;
        }
        else if (BackgroundImage_1.BackgroundImage.isImageObject(fill)) {
            imagePattern = imagePatternPropsForFill_1.imagePatternPropsForFill(fill, transform, id);
            if (imagePattern) {
                vectorFill = `url(#${imagePattern.id})`;
                fillAlpha = 1;
            }
        }
        if (vectorFill === svgElementAttributeDefaults_1.svgElementAttributeDefaults.fill) {
            vectorFill = undefined;
        }
        if (vectorFill === undefined) {
            vectorFill = "transparent";
        }
        const fillEnabled = vectorFill !== undefined && vectorFill !== "transparent" && fillAlpha !== 0;
        if (!fillEnabled && !strokeEnabled) {
            fillAlpha = 1;
        }
        let mainElement;
        let strokeClipPath = null;
        let shapeReference = null;
        let strokeElement = null;
        let pathTranslate;
        let elementTransform;
        const translatePaths = target === RenderEnvironment_1.RenderTarget.export;
        if (transform.rotation === 0 && translatePaths) {
            pathTranslate = transform;
        }
        else {
            pathTranslate = { x: 0, y: 0 };
            elementTransform = transformString_1.transformString(transform);
        }
        const pathAttributes = {
            d: d !== null && d !== void 0 ? d : Path_1.toSVGPath(calculatedPath, pathTranslate, target),
            transform: elementTransform,
        };
        const svgStrokeAttributes = {};
        if (strokeEnabled && strokeWidth !== 0) {
            svgStrokeAttributes.strokeWidth = strokeWidth;
            svgStrokeAttributes.stroke = strokeColor;
            svgStrokeAttributes.strokeLinecap = lineCap;
            svgStrokeAttributes.strokeLinejoin = lineJoin;
            if (lineJoin === "miter") {
                svgStrokeAttributes.strokeMiterlimit = strokeMiterLimit;
            }
            svgStrokeAttributes.strokeDasharray = strokeDashArray;
            if (strokeDashOffset !== 0) {
                svgStrokeAttributes.strokeDashoffset = strokeDashOffset;
            }
        }
        for (const key in svgElementAttributeDefaults_1.svgElementAttributeDefaults) {
            if (svgStrokeAttributes[key] === svgElementAttributeDefaults_1.svgElementAttributeDefaults[key]) {
                svgStrokeAttributes[key] = undefined;
            }
        }
        const internalShapeId = internalId_1.InternalID.forKey(shapeId);
        const internalStrokeClipId = internalId_1.InternalID.forKey(strokeClipId);
        const shadow = shadow_1.shadowForShape(shadows, rect, internalShapeId, fillAlpha, strokeAlpha, strokeWidth, internalStrokeClipId, svgStrokeAttributes);
        const currentName = target === RenderEnvironment_1.RenderTarget.preview ? name || undefined : undefined;
        if (shadow.insetElement !== null || shadow.outsetElement !== null || insideStroke) {
            pathAttributes.id = internalShapeId.id;
            shapeReference = React.createElement(framer_motion_1.motion.path, Object.assign({}, Object.assign({}, pathAttributes), { variants: variants, transition: transition }));
            if (shadow.needsStrokeClip || insideStroke) {
                strokeClipPath = (React.createElement("clipPath", { id: internalStrokeClipId.id },
                    React.createElement("use", { xlinkHref: internalShapeId.link })));
            }
            if (shadow.insetElement !== null && strokeEnabled && strokeWidth && strokeWidth > 0) {
                mainElement = (React.createElement("use", { xlinkHref: internalShapeId.link, fill: vectorFill, strokeOpacity: "0", name: currentName }));
                strokeElement = (React.createElement("use", Object.assign({ xlinkHref: internalShapeId.link, clipPath: internalStrokeClipId.urlLink, fill: "transparent" }, svgStrokeAttributes, { strokeWidth: strokeWidth })));
            }
            else {
                mainElement = (React.createElement("use", Object.assign({ xlinkHref: internalShapeId.link, fill: vectorFill, clipPath: internalStrokeClipId.urlLink }, svgStrokeAttributes, { strokeWidth: strokeWidth, name: currentName })));
            }
        }
        else {
            pathAttributes.id = idAttribute;
            mainElement = (React.createElement(framer_motion_1.motion.path, Object.assign({}, Object.assign(Object.assign(Object.assign({}, pathAttributes), { fill: vectorFill }), svgStrokeAttributes), { name: currentName, variants: variants, transition: transition })));
        }
        const imagePatternElement = imagePattern ? React.createElement(ImagePatternElement_1.ImagePatternElement, Object.assign({}, imagePattern)) : undefined;
        let gradient;
        if (linearGradient) {
            gradient = React.createElement(GradientElement_1.LinearGradientElement, Object.assign({}, linearGradient));
        }
        else if (radialGradient) {
            gradient = React.createElement(GradientElement_1.RadialGradientElement, Object.assign({}, radialGradient));
        }
        let defs = null;
        if (shapeReference ||
            strokeClipPath ||
            (shadow.definition && shadow.definition.length) ||
            gradient ||
            imagePatternElement) {
            defs = (React.createElement("defs", null,
                shapeReference,
                strokeClipPath,
                shadow.definition,
                gradient,
                imagePatternElement));
        }
        const opacityValue = opacity !== null && opacity !== void 0 ? opacity : (variants ? 1 : undefined);
        if (defs === null && shadow.outsetElement === null && shadow.insetElement === null && strokeElement === null) {
            mainElement = (React.createElement(framer_motion_1.motion.path, Object.assign({}, Object.assign(Object.assign(Object.assign({}, pathAttributes), { fill: vectorFill }), svgStrokeAttributes), { opacity: opacityValue, variants: variants, transition: transition, name: currentName })));
            return this.renderElement(mainElement);
        }
        else {
            return this.renderElement(React.createElement(framer_motion_1.motion.g, { opacity: opacityValue, variants: variants, transition: transition },
                defs,
                shadow.outsetElement,
                mainElement,
                shadow.insetElement,
                strokeElement));
        }
    }
    renderElement(element) {
        var _a, _b;
        const { isRootVectorNode, width, height, rect, willChangeTransform } = this.props;
        const frame = (_b = (_a = this.props.frame) !== null && _a !== void 0 ? _a : rect) !== null && _b !== void 0 ? _b : { x: 0, y: 0, width: 100, height: 100 };
        if (!isRootVectorNode)
            return element;
        return React.createElement(SVGRoot_1.SVGRoot, Object.assign({}, { frame, width, height, willChangeTransform }), element);
    }
}
exports.Vector = Vector;
Vector.defaultVectorProps = {
    isRootVectorNode: false,
    name: null,
    includeTransform: undefined,
    defaultFillColor: undefined,
    defaultStrokeColor: undefined,
    defaultStrokeWidth: undefined,
    defaultStrokeAlignment: "center",
    width: 100,
    height: 100,
    rotation: 0,
    rotate: undefined,
    frame: undefined,
    opacity: undefined,
    calculatedPath: [],
    d: undefined,
    shapeId: undefined,
    insideStroke: false,
    strokeEnabled: true,
    strokeClipId: undefined,
    strokeWidth: undefined,
    idAttribute: undefined,
    transition: undefined,
    shadows: [],
    strokeAlpha: 1,
    rect: { x: 0, y: 0, width: 0, height: 0 },
    lineCap: "butt",
    strokeColor: "#0AF",
    lineJoin: "miter",
    strokeMiterLimit: 4,
    strokeDashArray: "0",
    strokeDashOffset: 0,
    fill: "rgba(0,170,255,0.5)",
};
Vector.defaultProps = Object.assign(Object.assign({}, Layer_1.Layer.defaultProps), Vector.defaultVectorProps);


/***/ }),

/***/ "./src/render/presentation/VectorGroup.tsx":
/*!*************************************************!*\
  !*** ./src/render/presentation/VectorGroup.tsx ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VectorGroup = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const transformString_1 = __webpack_require__(/*! ../utils/transformString */ "./src/render/utils/transformString.ts");
const Layer_1 = __webpack_require__(/*! ./Layer */ "./src/render/presentation/Layer.tsx");
const SVGRoot_1 = __webpack_require__(/*! ./SVGRoot */ "./src/render/presentation/SVGRoot.tsx");
const createTransformValues_1 = __webpack_require__(/*! ../utils/createTransformValues */ "./src/render/utils/createTransformValues.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const RenderEnvironment_2 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
class VectorGroup extends Layer_1.Layer {
    render() {
        if ( true && safeWindow_1.safeWindow["perf"])
            safeWindow_1.safeWindow["perf"].nodeRender();
        const { id, name: nameProp, opacity, visible, targetName, defaultName, children, includeTransform, x, y, width, height, rotation, isRootVectorNode, } = this.props;
        if (!visible)
            return null;
        const { target } = RenderEnvironment_2.RenderEnvironment;
        const rect = { x, y, width, height };
        const transform = createTransformValues_1.transformValues(rect, rotation, isRootVectorNode, includeTransform);
        const addNames = target === RenderEnvironment_1.RenderTarget.preview;
        let name = undefined;
        if (addNames) {
            if (targetName) {
                name = targetName;
            }
            else if (nameProp) {
                name = nameProp;
            }
            else {
                name = defaultName;
            }
        }
        return this.renderElement(React.createElement("g", Object.assign({ transform: transformString_1.transformString(transform) }, { id, name, opacity }), children));
    }
    renderElement(element) {
        const { isRootVectorNode, width, height, frame, willChangeTransform } = this.props;
        if (!isRootVectorNode) {
            return element;
        }
        return React.createElement(SVGRoot_1.SVGRoot, Object.assign({}, { frame, width, height, willChangeTransform }), element);
    }
}
exports.VectorGroup = VectorGroup;
VectorGroup.defaultVectorGroupProps = {
    name: undefined,
    opacity: undefined,
    visible: true,
    x: 0,
    y: 0,
    rotation: 0,
    width: 100,
    height: 100,
    targetName: undefined,
    defaultName: "",
    isRootVectorNode: false,
    includeTransform: undefined,
    frame: { x: 0, y: 0, width: 100, height: 100 },
};
VectorGroup.defaultProps = Object.assign(Object.assign({}, Layer_1.Layer.defaultProps), VectorGroup.defaultVectorGroupProps);


/***/ }),

/***/ "./src/render/style/BackgroundImageComponent.tsx":
/*!*******************************************************!*\
  !*** ./src/render/style/BackgroundImageComponent.tsx ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackgroundImageComponent = exports.cssImageRendering = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const runtimeInjection_1 = __webpack_require__(/*! ../../utils/runtimeInjection */ "./src/utils/runtimeInjection.ts");
const environment_1 = __webpack_require__(/*! ../../utils/environment */ "./src/utils/environment.ts");
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
const imageRendering_1 = __webpack_require__(/*! ../utils/imageRendering */ "./src/render/utils/imageRendering.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const wrapperStyle = {
    position: "absolute",
    pointerEvents: "none",
    userSelect: "none",
    borderRadius: "inherit",
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
};
function cssObjectFit(imageFit) {
    switch (imageFit) {
        case "fit":
            return "contain";
        case "stretch":
            return "fill";
        default:
            return "cover";
    }
}
function cssImageRendering(image, containerSize) {
    if (!containerSize)
        return "auto";
    const devicePixelRatio = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas ? safeWindow_1.safeWindow.devicePixelRatio : 1;
    const minPixelatedZoom = imageRendering_1.minZoomForPixelatedImageRendering(image, containerSize, devicePixelRatio);
    if (RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas) {
        return imageRendering_1.imageRenderingForZoom(1, minPixelatedZoom);
    }
    else {
        return imageRendering_1.imageRenderingForZoom(RenderEnvironment_1.RenderEnvironment.zoom, minPixelatedZoom);
    }
}
exports.cssImageRendering = cssImageRendering;
function getImageStyle(image, containerSize) {
    return {
        pointerEvents: "none",
        userSelect: "none",
        display: "block",
        width: "100%",
        height: "100%",
        borderRadius: "inherit",
        objectPosition: "center",
        objectFit: cssObjectFit(image.fit),
        imageRendering: cssImageRendering(image, containerSize),
    };
}
function BackgroundImageComponent({ image, containerSize, nodeId, layoutId }) {
    const wrapperRef = React.useRef(null);
    const isStaticRendering = !environment_1.isBrowser() || RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.export;
    if (layoutId) {
        layoutId = layoutId + "-background";
    }
    const source = runtimeInjection_1.runtime.useImageSource(image, containerSize, nodeId);
    const imageStyle = getImageStyle(image, containerSize);
    if (!isStaticRendering) {
        const imageElement = runtimeInjection_1.runtime.useImageElement(image, containerSize, nodeId);
        React.useLayoutEffect(() => {
            const wrapper = wrapperRef.current;
            if (wrapper === null)
                return;
            wrapper.appendChild(imageElement);
            return () => {
                wrapper.removeChild(imageElement);
            };
        }, [imageElement]);
        Object.assign(imageElement.style, imageStyle);
    }
    return (React.createElement(framer_motion_1.motion.div, { ref: wrapperRef, style: wrapperStyle, layoutId: layoutId }, isStaticRendering ? React.createElement("img", { src: source, style: imageStyle }) : null));
}
exports.BackgroundImageComponent = BackgroundImageComponent;


/***/ }),

/***/ "./src/render/style/BorderComponent.tsx":
/*!**********************************************!*\
  !*** ./src/render/style/BorderComponent.tsx ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Border = exports.collectBorderStyleForProps = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
function collectBorderStyleForProps(props, style, collapseEqualBorders = true) {
    const { borderWidth, borderStyle, borderColor } = props;
    if (!borderWidth) {
        return;
    }
    let borderTop;
    let borderBottom;
    let borderLeft;
    let borderRight;
    if (typeof borderWidth === "number") {
        borderTop = borderBottom = borderLeft = borderRight = borderWidth;
    }
    else {
        borderTop = borderWidth.top || 0;
        borderBottom = borderWidth.bottom || 0;
        borderLeft = borderWidth.left || 0;
        borderRight = borderWidth.right || 0;
    }
    if (borderTop === 0 && borderBottom === 0 && borderLeft === 0 && borderRight === 0) {
        return;
    }
    if (collapseEqualBorders && borderTop === borderBottom && borderTop === borderLeft && borderTop === borderRight) {
        style.border = `${borderTop}px ${borderStyle} ${borderColor}`;
        return;
    }
    style.borderStyle = props.borderStyle;
    style.borderColor = props.borderColor;
    style.borderTopWidth = `${borderTop}px`;
    style.borderBottomWidth = `${borderBottom}px`;
    style.borderLeftWidth = `${borderLeft}px`;
    style.borderRightWidth = `${borderRight}px`;
}
exports.collectBorderStyleForProps = collectBorderStyleForProps;
function Border(props) {
    const layoutId = props.layoutId ? `${props.layoutId}-border` : undefined;
    if (!props.borderWidth) {
        return null;
    }
    const style = {
        position: "absolute",
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        borderRadius: "inherit",
        pointerEvents: "none",
    };
    if (props.border) {
        ;
        style.border = props.border;
        return React.createElement(framer_motion_1.motion.div, { style: style });
    }
    collectBorderStyleForProps(props, style, false);
    return React.createElement(framer_motion_1.motion.div, { "data-frame-border": true, style: style, layoutId: layoutId });
}
exports.Border = Border;


/***/ }),

/***/ "./src/render/style/backgroundImageFromProps.ts":
/*!******************************************************!*\
  !*** ./src/render/style/backgroundImageFromProps.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.backgroundImageFromProps = void 0;
const BackgroundImage_1 = __webpack_require__(/*! ../types/BackgroundImage */ "./src/render/types/BackgroundImage.ts");
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const utils_1 = __webpack_require__(/*! ../../utils/utils */ "./src/utils/utils.ts");
function applyForwardOverrides(background, props) {
    const { _forwardedOverrides, id } = props;
    const src = _forwardedOverrides && id ? _forwardedOverrides[id] : undefined;
    if (src && typeof src === "string") {
        background = Object.assign(Object.assign({}, background), { src });
    }
    return background;
}
function backgroundImageFromProps(props) {
    const { background, image } = props;
    if (image !== undefined && background && !BackgroundImage_1.BackgroundImage.isImageObject(background)) {
        return;
    }
    let backgroundImage = null;
    if (utils_1.isString(image)) {
        backgroundImage = { src: image };
    }
    else {
        backgroundImage = Animatable_1.Animatable.get(background, null);
    }
    if (!BackgroundImage_1.BackgroundImage.isImageObject(backgroundImage)) {
        return;
    }
    return applyForwardOverrides(backgroundImage, props);
}
exports.backgroundImageFromProps = backgroundImageFromProps;


/***/ }),

/***/ "./src/render/style/collectVisualStyleFromProps.ts":
/*!*********************************************************!*\
  !*** ./src/render/style/collectVisualStyleFromProps.ts ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.collectVisualStyleFromProps = void 0;
const Background_1 = __webpack_require__(/*! ../traits/Background */ "./src/render/traits/Background.ts");
const Radius_1 = __webpack_require__(/*! ../traits/Radius */ "./src/render/traits/Radius.ts");
const Blending_1 = __webpack_require__(/*! ../traits/Blending */ "./src/render/traits/Blending.ts");
const Overflow_1 = __webpack_require__(/*! ../traits/Overflow */ "./src/render/traits/Overflow.ts");
const Opacity_1 = __webpack_require__(/*! ../traits/Opacity */ "./src/render/traits/Opacity.ts");
const filtersForNode_1 = __webpack_require__(/*! ../utils/filtersForNode */ "./src/render/utils/filtersForNode.ts");
const shadow_1 = __webpack_require__(/*! ./shadow */ "./src/render/style/shadow.tsx");
const TextColor_1 = __webpack_require__(/*! ../traits/TextColor */ "./src/render/traits/TextColor.ts");
function collectVisualStyleFromProps(props, style, isTextNode = false) {
    Background_1.collectBackgroundFromProps(props, style);
    Radius_1.collectRadiusFromProps(props, style);
    filtersForNode_1.collectFiltersFromProps(props, style);
    Blending_1.collectBlendingFromProps(props, style);
    Overflow_1.collectOverflowFromProps(props, style);
    Opacity_1.collectOpacityFromProps(props, style);
    TextColor_1.collectTextColorFromProps(props, style);
    if (isTextNode) {
        shadow_1.collectTextShadowsForProps(props, style);
    }
    else {
        shadow_1.collectBoxShadowsForProps(props, style);
    }
}
exports.collectVisualStyleFromProps = collectVisualStyleFromProps;


/***/ }),

/***/ "./src/render/style/getCSSTextColorFromStyle.ts":
/*!******************************************************!*\
  !*** ./src/render/style/getCSSTextColorFromStyle.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports._getCSSTextColorFromStyle = void 0;
const Color_1 = __webpack_require__(/*! ../types/Color */ "./src/render/types/Color/index.ts");
function _getCSSTextColorFromStyle(css) {
    let color;
    if (typeof css["webkitTextFillColor"] === "string") {
        color = css["webkitTextFillColor"];
    }
    if (typeof css.WebkitTextFillColor === "string") {
        color = css.WebkitTextFillColor;
    }
    if (typeof css.color === "string") {
        color = css.color;
    }
    if (color) {
        return Color_1.ConvertColor.toRgbString(color);
    }
}
exports._getCSSTextColorFromStyle = _getCSSTextColorFromStyle;


/***/ }),

/***/ "./src/render/style/shadow.tsx":
/*!*************************************!*\
  !*** ./src/render/style/shadow.tsx ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.localShadowFrame = exports.shadowForShape = exports.collectBoxShadowsForProps = exports.collectTextShadowsForProps = exports.shadowsAsFilter = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const isFiniteNumber_1 = __webpack_require__(/*! ../utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const roundedNumber_1 = __webpack_require__(/*! ../utils/roundedNumber */ "./src/render/utils/roundedNumber.ts");
const Color_1 = __webpack_require__(/*! ../types/Color */ "./src/render/types/Color/index.ts");
const Rect_1 = __webpack_require__(/*! ../types/Rect */ "./src/render/types/Rect.ts");
const Shadow_1 = __webpack_require__(/*! ../types/Shadow */ "./src/render/types/Shadow.ts");
const CustomProperties_1 = __webpack_require__(/*! ../presentation/CustomProperties */ "./src/render/presentation/CustomProperties.tsx");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
function shadowsAsFilter(shadows) {
    const filters = [];
    if (shadows && shadows.length) {
        const dropShadows = shadows.map((shadowItem) => {
            return `drop-shadow(${shadowItem.x}px ${shadowItem.y}px ${shadowItem.blur}px ${shadowItem.color})`;
        });
        filters.push(...dropShadows);
    }
    return filters;
}
exports.shadowsAsFilter = shadowsAsFilter;
function collectTextShadowsForProps(props, style) {
    if (!props.shadows || props.shadows.length === 0)
        return;
    const textShadow = props.shadows
        .map((shadow) => {
        return `${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.color}`;
    })
        .join(", ");
    if (!textShadow)
        return;
    style.textShadow = textShadow;
}
exports.collectTextShadowsForProps = collectTextShadowsForProps;
function collectBoxShadowsForProps(props, style) {
    if (!props.shadows || props.shadows.length === 0)
        return;
    const boxShadow = props.shadows.map((shadowItem) => Shadow_1.BoxShadow.toCSS(shadowItem)).join(", ");
    if (!boxShadow)
        return;
    style.boxShadow = boxShadow;
}
exports.collectBoxShadowsForProps = collectBoxShadowsForProps;
function shadowForShape(boxShadows, rect, shapeId, fillAlpha, strokeAlpha, strokeWidth, strokeClipId, svgStrokeAttributes) {
    const definition = [];
    let outsetElement = null;
    let insetElement = null;
    const needsStrokeClip = false;
    const shadows = [];
    const insetShadows = [];
    const boxShadowsCount = boxShadows.length;
    const svgShadowClass = "svg-shadow";
    const svgShadowProps = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas ? { className: svgShadowClass } : {};
    for (let i = 0, il = boxShadowsCount; i < il; i++) {
        const shadow = boxShadows[i];
        shadow.inset ? insetShadows.push(shadow) : shadows.push(shadow);
    }
    if (shadows.length > 0) {
        shadows.reverse();
        const outsideShadowId = shapeId.add("_shadow_out");
        const normalizedFrame = Rect_1.Rect.atOrigin(rect);
        const shadowRects = [normalizedFrame];
        for (let i = 0, il = shadows.length; i < il; i++) {
            const shadow = shadows[i];
            const shadowFrame = localShadowFrame(shadow, normalizedFrame, true);
            if (shadowFrame === null) {
                continue;
            }
            shadowRects.push(shadowFrame);
        }
        let maxBlur = 0;
        const filterElements = [];
        const mergeElements = [];
        for (let i = 0, il = shadows.length; i < il; i++) {
            const shadow = shadows[i];
            const shadowElements = outerShadowElements(shapeId, shadow, i);
            maxBlur = Math.max(maxBlur, shadow.blur);
            filterElements.push(shadowElements.filterElements);
            mergeElements.push(shadowElements.mergeElement);
        }
        let expandStrokeWidth = strokeWidth;
        if (!isFiniteNumber_1.isFiniteNumber(expandStrokeWidth))
            expandStrokeWidth = 0;
        let miter = svgStrokeAttributes.strokeMiterlimit;
        if (!isFiniteNumber_1.isFiniteNumber(miter))
            miter = 4;
        let shadowRect = Rect_1.Rect.merge(...shadowRects);
        shadowRect = Rect_1.Rect.inflate(shadowRect, ((expandStrokeWidth * miter) / 2 + maxBlur) * 1.1);
        const width = rect.width + (strokeWidth ? strokeWidth / 2 : 0.1);
        const height = rect.height + (strokeWidth ? strokeWidth / 2 : 0.1);
        const filterX = (shadowRect.x / width) * 100;
        const filterY = (shadowRect.y / height) * 100;
        const filterWidth = (shadowRect.width / width) * 100;
        const filterHeight = (shadowRect.height / height) * 100;
        definition.push(React.createElement("filter", Object.assign({ key: outsideShadowId.id, id: outsideShadowId.id, x: `${filterX.toFixed(1)}%`, y: `${filterY.toFixed(1)}%`, width: `${filterWidth.toFixed(1)}%`, height: `${filterHeight.toFixed(1)}%`, filterUnits: "objectBoundingBox" }, svgShadowProps),
            filterElements,
            shadows.length > 1 ? React.createElement("feMerge", null, mergeElements) : null));
        outsetElement = (React.createElement("g", Object.assign({ filter: outsideShadowId.urlLink }, svgShadowProps),
            React.createElement("use", Object.assign({}, svgStrokeAttributes, { fill: "black", fillOpacity: fillAlpha <= 0 ? 0 : 1, stroke: "black", strokeOpacity: strokeAlpha <= 0 ? 0 : 1, strokeWidth: strokeAlpha > 0 ? strokeWidth : 0, xlinkHref: shapeId.link, clipPath: strokeClipId.urlLink }))));
    }
    if (insetShadows.length) {
        insetShadows.reverse();
        const insideShadowId = shapeId.add("_shadow_inside");
        const normalizedFrame = Rect_1.Rect.atOrigin(rect);
        const shadowFrames = [normalizedFrame];
        for (let i = 0, il = insetShadows.length; i < il; i++) {
            const shadow = insetShadows[i];
            const shadowFrame = localShadowFrame(shadow, normalizedFrame, true);
            if (shadowFrame === null) {
                continue;
            }
            shadowFrames.push(shadowFrame);
        }
        const shadowRect = Rect_1.Rect.merge(...shadowFrames);
        const width = rect.width + (strokeWidth ? strokeWidth / 2 : 0.1);
        const height = rect.height + (strokeWidth ? strokeWidth / 2 : 0.1);
        const filterX = (shadowRect.x / width) * 100;
        const filterY = (shadowRect.y / height) * 100;
        const filterWidth = (shadowRect.width / width) * 100;
        const filterHeight = (shadowRect.height / height) * 100;
        const filterElements = [];
        const mergeElements = [];
        for (let i = 0, il = insetShadows.length; i < il; i++) {
            const shadow = insetShadows[i];
            const shadowElements = innerShadowElements(shapeId, shadow, i);
            filterElements.push(shadowElements.filterElements);
            mergeElements.push(shadowElements.mergeElement);
        }
        definition.push(React.createElement("filter", Object.assign({ key: insideShadowId.id, id: insideShadowId.id, x: `${filterX.toFixed(1)}%`, y: `${filterY.toFixed(1)}%`, width: `${filterWidth.toFixed(1)}%`, height: `${filterHeight.toFixed(1)}%`, filterUnits: "objectBoundingBox" }, svgShadowProps),
            filterElements,
            insetShadows.length > 1 ? React.createElement("feMerge", null, mergeElements) : null));
        let clipPath;
        if (needsStrokeClip) {
            clipPath = strokeClipId.urlLink;
        }
        insetElement = (React.createElement("use", Object.assign({ fill: "black", fillOpacity: "1", filter: insideShadowId.urlLink, xlinkHref: shapeId.link, clipPath: clipPath }, svgShadowProps)));
    }
    return { definition, outsetElement, insetElement, needsStrokeClip };
}
exports.shadowForShape = shadowForShape;
function outerShadowElements(shapeID, shadow, index) {
    const shadowKey = shapeID.add("_outer_shadow" + index);
    const offsetResultId = shadowKey.add("offset").id;
    const blurResultId = shadowKey.add("blur").id;
    const matrixResultId = shadowKey.add("matrix").id;
    const filterElements = (React.createElement(OuterShadowFilterElements, { key: shadowKey.id + "-filters", shadow: shadow, blurId: blurResultId, offsetId: offsetResultId, matrixId: matrixResultId }));
    const mergeElement = React.createElement("feMergeNode", { key: shadowKey.id + "-merge", in: matrixResultId });
    return { filterElements, mergeElement };
}
const OuterShadowFilterElements = props => {
    const lookup = React.useContext(CustomProperties_1.CustomPropertiesContext);
    const { shadow, blurId, offsetId, matrixId } = props;
    let color = shadow.color;
    const result = lookup(color);
    if (result) {
        color = result;
    }
    const rgb = Color_1.ConvertColor.toRgb(color);
    const r = roundedNumber_1.roundedNumberString(rgb.r / 255, 3);
    const g = roundedNumber_1.roundedNumberString(rgb.g / 255, 3);
    const b = roundedNumber_1.roundedNumberString(rgb.b / 255, 3);
    const matrixValues = `0 0 0 0 ${r}   0 0 0 0 ${g}   0 0 0 0 ${b}  0 0 0 ${rgb.a} 0`;
    return (React.createElement(React.Fragment, null,
        React.createElement("feOffset", { dx: shadow.x, dy: shadow.y, in: "SourceAlpha", result: offsetId }),
        React.createElement("feGaussianBlur", { stdDeviation: shadow.blur / 2, in: offsetId, result: blurId }),
        React.createElement("feColorMatrix", { colorInterpolationFilters: "sRGB", values: matrixValues, type: "matrix", in: blurId, result: matrixId })));
};
function innerShadowElements(shapeID, shadow, index) {
    const shadowKey = shapeID.add("_inside_shadow" + index);
    const blurId = shadowKey.add("blur").id;
    const offsetId = shadowKey.add("offset").id;
    const compositeId = shadowKey.add("composite").id;
    const matrixId = shadowKey.add("matrix").id;
    const filterElements = (React.createElement(InnerShadowFilterElements, { key: shadowKey.id + "-filters", shadow: shadow, blurId: blurId, offsetId: offsetId, compositeId: compositeId, matrixId: matrixId }));
    const mergeElement = React.createElement("feMergeNode", { key: shadowKey.id + "-merge", in: matrixId });
    return { filterElements, mergeElement };
}
const InnerShadowFilterElements = props => {
    const lookup = React.useContext(CustomProperties_1.CustomPropertiesContext);
    const { shadow, blurId, offsetId, compositeId, matrixId } = props;
    let color = shadow.color;
    const result = lookup(color);
    if (result) {
        color = result;
    }
    const rgb = Color_1.ConvertColor.toRgb(color);
    const r = rgb.r / 255;
    const g = rgb.g / 255;
    const b = rgb.b / 255;
    const matrixValues = `0 0 0 0 ${r}   0 0 0 0 ${g}   0 0 0 0 ${b}  0 0 0 ${rgb.a} 0`;
    return (React.createElement(React.Fragment, null,
        React.createElement("feGaussianBlur", { stdDeviation: shadow.blur / 2, in: "SourceAlpha", result: blurId }),
        React.createElement("feOffset", { dx: shadow.x, dy: shadow.y, in: blurId, result: offsetId }),
        React.createElement("feComposite", { in: offsetId, in2: "SourceAlpha", operator: "arithmetic", k2: "-1", k3: "1", result: compositeId }),
        React.createElement("feColorMatrix", { colorInterpolationFilters: "sRGB", values: matrixValues, type: "matrix", in: compositeId, result: matrixId })));
};
function localShadowFrame(shadow, frame, isSVG) {
    let growth = shadow.blur;
    if (Shadow_1.BoxShadow.is(shadow)) {
        if (isSVG !== true) {
            if (shadow.inset)
                return null;
            growth += shadow.spread;
        }
    }
    let minX;
    let maxX;
    let minY;
    let maxY;
    if (isSVG === true) {
        minX = -Math.abs(shadow.x) - growth;
        maxX = Math.abs(shadow.x) + frame.width + growth;
        minY = -Math.abs(shadow.y) - growth;
        maxY = Math.abs(shadow.y) + frame.height + growth;
    }
    else {
        minX = shadow.x - growth;
        maxX = shadow.x + frame.width + growth;
        minY = shadow.y - growth;
        maxY = shadow.y + frame.height + growth;
    }
    if (maxX <= minX || maxY <= minY)
        return null;
    return { x: minX, y: minY, width: maxX - minX, height: maxY - minY };
}
exports.localShadowFrame = localShadowFrame;


/***/ }),

/***/ "./src/render/traits/BackdropFilters.ts":
/*!**********************************************!*\
  !*** ./src/render/traits/BackdropFilters.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/traits/Background.ts":
/*!*****************************************!*\
  !*** ./src/render/traits/Background.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.collectBackgroundFromProps = void 0;
const Gradient_1 = __webpack_require__(/*! ../types/Gradient */ "./src/render/types/Gradient.ts");
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const isMotionValue_1 = __webpack_require__(/*! ../../render/utils/isMotionValue */ "./src/render/utils/isMotionValue.ts");
const Color_1 = __webpack_require__(/*! ../types/Color */ "./src/render/types/Color/index.ts");
function collectBackgroundFromProps({ background, backgroundColor }, style) {
    if (backgroundColor) {
        if (typeof backgroundColor === "string" || isMotionValue_1.isMotionValue(backgroundColor)) {
            style.backgroundColor = backgroundColor;
        }
        else if (Color_1.Color.isColorObject(background)) {
            style.backgroundColor = background.initialValue || Color_1.Color.toRgbString(background);
        }
    }
    else if (background) {
        background = Animatable_1.Animatable.get(background, null);
        if (typeof background === "string" || isMotionValue_1.isMotionValue(background)) {
            style.background = background;
        }
        else if (Gradient_1.LinearGradient.isLinearGradient(background)) {
            style.background = Gradient_1.LinearGradient.toCSS(background);
        }
        else if (Gradient_1.RadialGradient.isRadialGradient(background)) {
            style.background = Gradient_1.RadialGradient.toCSS(background);
        }
        else if (Color_1.Color.isColorObject(background)) {
            style.backgroundColor = background.initialValue || Color_1.Color.toRgbString(background);
        }
    }
}
exports.collectBackgroundFromProps = collectBackgroundFromProps;


/***/ }),

/***/ "./src/render/traits/Blending.ts":
/*!***************************************!*\
  !*** ./src/render/traits/Blending.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.collectBlendingFromProps = void 0;
function collectBlendingFromProps(node, style) {
    if (!node.blendingMode || node.blendingMode === "normal")
        return;
    style.mixBlendMode = node.blendingMode;
}
exports.collectBlendingFromProps = collectBlendingFromProps;


/***/ }),

/***/ "./src/render/traits/BoxShadow.ts":
/*!****************************************!*\
  !*** ./src/render/traits/BoxShadow.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/traits/Fill.ts":
/*!***********************************!*\
  !*** ./src/render/traits/Fill.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/traits/Filters.ts":
/*!**************************************!*\
  !*** ./src/render/traits/Filters.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/traits/FreeSpace.ts":
/*!****************************************!*\
  !*** ./src/render/traits/FreeSpace.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/traits/Opacity.ts":
/*!**************************************!*\
  !*** ./src/render/traits/Opacity.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.collectOpacityFromProps = exports.withOpacity = void 0;
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const key = "opacity";
function withOpacity(target) {
    return key in target;
}
exports.withOpacity = withOpacity;
function collectOpacityFromProps(props, style) {
    if (!withOpacity(props))
        return;
    const opacity = Animatable_1.Animatable.getNumber(props.opacity);
    if (opacity === 1)
        return;
    style.opacity = opacity;
}
exports.collectOpacityFromProps = collectOpacityFromProps;


/***/ }),

/***/ "./src/render/traits/Overflow.ts":
/*!***************************************!*\
  !*** ./src/render/traits/Overflow.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.collectOverflowFromProps = void 0;
function collectOverflowFromProps(props, style) {
    if (props.overflow) {
        style.overflow = props.overflow;
    }
}
exports.collectOverflowFromProps = collectOverflowFromProps;


/***/ }),

/***/ "./src/render/traits/Path.ts":
/*!***********************************!*\
  !*** ./src/render/traits/Path.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isStraightCurve = exports.toSVGPath = exports.pathDefaults = exports.withPath = void 0;
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const roundedNumber_1 = __webpack_require__(/*! ../utils/roundedNumber */ "./src/render/utils/roundedNumber.ts");
const isFiniteNumber_1 = __webpack_require__(/*! ../utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const PathSegment_1 = __webpack_require__(/*! ../types/PathSegment */ "./src/render/types/PathSegment.ts");
const key = "pathSegments";
function withPath(target) {
    return key in target;
}
exports.withPath = withPath;
exports.pathDefaults = {
    pathSegments: [],
    pathClosed: false,
};
function toSVGPath(withPaths, translate = { x: 0, y: 0 }, canvasMode = RenderEnvironment_1.RenderTarget.canvas) {
    let pathElements = [];
    let paths = [];
    if (Array.isArray(withPaths)) {
        paths = withPaths;
    }
    else {
        paths = [withPaths];
    }
    paths.forEach((path, index) => {
        const { pathClosed, pathSegments } = path;
        const segmentCount = pathSegments.length;
        if (segmentCount === 0)
            return "";
        for (let i = 0; i < segmentCount; i++) {
            const segment = pathSegments[i];
            let nextSegment;
            let prevSegment;
            const isFirstSegment = i === 0;
            const isLastSegment = i === segmentCount - 1;
            if (!isLastSegment) {
                nextSegment = pathSegments[i + 1];
            }
            else if (pathClosed) {
                nextSegment = pathSegments[0];
            }
            if (!isFirstSegment) {
                prevSegment = pathSegments[i - 1];
            }
            else if (pathClosed) {
                prevSegment = pathSegments[segmentCount - 1];
            }
            if (i === 0) {
                pathElements.push("M");
            }
            else if (prevSegment && isStraightCurve(prevSegment, segment)) {
                pathElements.push("L");
            }
            pathElements.push(segment.x + translate.x, segment.y + translate.y);
            if (nextSegment && !isStraightCurve(segment, nextSegment)) {
                const handleOut = PathSegment_1.PathSegment.calculatedHandleOut(segment);
                const handleIn = PathSegment_1.PathSegment.calculatedHandleIn(nextSegment);
                pathElements.push("C", handleOut.x + translate.x, handleOut.y + translate.y, handleIn.x + translate.x, handleIn.y + translate.y);
            }
            if (isLastSegment && nextSegment) {
                if (isStraightCurve(segment, nextSegment)) {
                    pathElements.push("Z");
                }
                else {
                    pathElements.push(nextSegment.x + translate.x, nextSegment.y + translate.y, "Z");
                }
            }
        }
    });
    if (canvasMode === RenderEnvironment_1.RenderTarget.export || canvasMode === RenderEnvironment_1.RenderTarget.preview) {
        pathElements = pathElements.map(value => (isFiniteNumber_1.isFiniteNumber(value) ? roundedNumber_1.roundedNumberString(value, 3) : value));
    }
    return pathElements.join(" ");
}
exports.toSVGPath = toSVGPath;
function isStraightCurve(fromSegment, toSegment) {
    const fromStraight = fromSegment.handleMirroring === "straight" || (fromSegment.handleOutX === 0 && fromSegment.handleOutY === 0);
    const toStraight = toSegment.handleMirroring === "straight" || (toSegment.handleInX === 0 && toSegment.handleInY === 0);
    return fromStraight && toStraight;
}
exports.isStraightCurve = isStraightCurve;


/***/ }),

/***/ "./src/render/traits/Radius.ts":
/*!*************************************!*\
  !*** ./src/render/traits/Radius.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.collectRadiusFromProps = void 0;
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const isFiniteNumber_1 = __webpack_require__(/*! ../utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const key = "radius";
function hasRadius(props) {
    return key in props;
}
function getRadiusValue(value) {
    let num = Number(value);
    if (typeof value === "string" && isNaN(num)) {
        return value;
    }
    else if (Animatable_1.isAnimatable(value)) {
        num = Animatable_1.Animatable.getNumber(value);
    }
    return num ? `${num}px` : "0";
}
function hasRadiusValue(value) {
    return value && value !== "0";
}
function collectRadiusFromProps(props, style) {
    if (!hasRadius(props))
        return;
    const { radius } = props;
    if (typeof radius === "string" || Animatable_1.isAnimatable(radius) || isFiniteNumber_1.isFiniteNumber(radius)) {
        const radiusValue = getRadiusValue(radius);
        if (hasRadiusValue(radiusValue)) {
            style.borderTopLeftRadius = style.borderTopRightRadius = style.borderBottomRightRadius = style.borderBottomLeftRadius = radiusValue;
        }
    }
    else if (radius) {
        const topLeft = getRadiusValue(radius.topLeft);
        const topRight = getRadiusValue(radius.topRight);
        const bottomRight = getRadiusValue(radius.bottomRight);
        const bottomLeft = getRadiusValue(radius.bottomLeft);
        if (hasRadiusValue(topLeft) ||
            hasRadiusValue(topRight) ||
            hasRadiusValue(bottomRight) ||
            hasRadiusValue(bottomLeft)) {
            style.borderTopLeftRadius = topLeft;
            style.borderTopRightRadius = topRight;
            style.borderBottomRightRadius = bottomRight;
            style.borderBottomLeftRadius = bottomLeft;
        }
    }
}
exports.collectRadiusFromProps = collectRadiusFromProps;


/***/ }),

/***/ "./src/render/traits/Shape.ts":
/*!************************************!*\
  !*** ./src/render/traits/Shape.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.withShape = void 0;
const key = "calculatedPaths";
function withShape(target) {
    return key in target;
}
exports.withShape = withShape;


/***/ }),

/***/ "./src/render/traits/TextColor.ts":
/*!****************************************!*\
  !*** ./src/render/traits/TextColor.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.collectTextColorFromProps = void 0;
const Color_1 = __webpack_require__(/*! ../types/Color */ "./src/render/types/Color/index.ts");
function collectTextColorFromProps(props, style) {
    const { color } = props;
    if (typeof color === "string") {
        style.color = color;
    }
    else if (Color_1.Color.isColorObject(color)) {
        style.color = color.initialValue || Color_1.Color.toRgbString(color);
    }
}
exports.collectTextColorFromProps = collectTextColorFromProps;


/***/ }),

/***/ "./src/render/traits/Transform.ts":
/*!****************************************!*\
  !*** ./src/render/traits/Transform.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.collectTransformFromProps = exports.transformDefaults = void 0;
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const isFiniteNumber_1 = __webpack_require__(/*! ../../render/utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const { getNumber } = Animatable_1.Animatable;
exports.transformDefaults = {
    z: 0,
    rotation: 0,
    rotationX: 0,
    rotationY: 0,
    rotationZ: 0,
    scale: 1,
    scaleX: 1,
    scaleY: 1,
    scaleZ: 1,
    skew: 0,
    skewX: 0,
    skewY: 0,
    originX: 0.5,
    originY: 0.5,
    originZ: 0,
};
function getRotation(rotation, rotate) {
    if (typeof rotate === "string") {
        rotate = parseFloat(rotate);
    }
    return isFiniteNumber_1.isFiniteNumber(rotate) ? rotate : getNumber(rotation);
}
function collectTransformFromProps(props, rect, style) {
    const motionStyle = style;
    const x = typeof rect.x === "number" ? `${rect.x}px` : rect.x;
    const y = typeof rect.y === "number" ? `${rect.y}px` : rect.y;
    const z = getNumber(props.z);
    const scaleZ = getNumber(props.scaleZ);
    const originZ = getNumber(props.originZ);
    const rotationZ = getRotation(props.rotationZ, framer_motion_1.resolveMotionValue(motionStyle.rotateZ));
    const rotationX = getRotation(props.rotationX, framer_motion_1.resolveMotionValue(motionStyle.rotateX));
    const rotationY = getRotation(props.rotationY, framer_motion_1.resolveMotionValue(motionStyle.rotateY));
    const scale = getNumber(props.scale);
    const scaleX = getNumber(props.scaleX);
    const scaleY = getNumber(props.scaleY);
    const skew = getNumber(props.skew);
    const skewX = getNumber(props.skewX);
    const skewY = getNumber(props.skewY);
    const rotation = getRotation(props.rotation, framer_motion_1.resolveMotionValue(motionStyle.rotate));
    const force3d = RenderEnvironment_1.RenderEnvironment.target === RenderEnvironment_1.RenderTarget.export;
    if (force3d || z !== 0 || scaleZ !== 1 || originZ !== 0 || rotationZ !== 0 || rotationX !== 0 || rotationY !== 0) {
        style.transform = `
            ${`translate3d(${x}, ${y}, ${z}px)`}
            scale3d(${scaleX * scale}, ${scaleY * scale}, ${scaleZ})
            skew(${skew}deg,${skew}deg)
            skewX(${skewX}deg)
            skewY(${skewY}deg)
            translateZ(${originZ}px)
            rotateX(${rotationX}deg)
            rotateY(${rotationY}deg)
            rotateZ(${(rotation + rotationZ).toFixed(4)}deg)
            translateZ(${-originZ}px)`;
    }
    else {
        style.transform = `
            ${`translate(${x}, ${y})`}
            scale(${scaleX * scale}, ${scaleY * scale})
            skew(${skew}deg,${skew}deg)
            skewX(${skewX}deg)
            skewY(${skewY}deg)
            rotate(${rotation.toFixed(4)}deg)`;
    }
    const transformOrigin = `${getNumber(props.originX) * 100}% ${getNumber(props.originY) * 100}%`;
    style.transformOrigin = transformOrigin;
    style.WebkitTransformOrigin = transformOrigin;
}
exports.collectTransformFromProps = collectTransformFromProps;


/***/ }),

/***/ "./src/render/types/Action.ts":
/*!************************************!*\
  !*** ./src/render/types/Action.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/types/BackgroundImage.ts":
/*!*********************************************!*\
  !*** ./src/render/types/BackgroundImage.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BackgroundImage = void 0;
const key = "src";
var BackgroundImage;
(function (BackgroundImage) {
    BackgroundImage.isImageObject = function (image) {
        if (!image || typeof image === "string")
            return false;
        return key in image;
    };
})(BackgroundImage || (BackgroundImage = {}));
exports.BackgroundImage = BackgroundImage;


/***/ }),

/***/ "./src/render/types/Color/CSSNames.ts":
/*!********************************************!*\
  !*** ./src/render/types/Color/CSSNames.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.cssNames = void 0;
exports.cssNames = {
    aliceblue: "f0f8ff",
    antiquewhite: "faebd7",
    aqua: "0ff",
    aquamarine: "7fffd4",
    azure: "f0ffff",
    beige: "f5f5dc",
    bisque: "ffe4c4",
    black: "000",
    blanchedalmond: "ffebcd",
    blue: "00f",
    blueviolet: "8a2be2",
    brown: "a52a2a",
    burlywood: "deb887",
    burntsienna: "ea7e5d",
    cadetblue: "5f9ea0",
    chartreuse: "7fff00",
    chocolate: "d2691e",
    coral: "ff7f50",
    cornflowerblue: "6495ed",
    cornsilk: "fff8dc",
    crimson: "dc143c",
    cyan: "0ff",
    darkblue: "00008b",
    darkcyan: "008b8b",
    darkgoldenrod: "b8860b",
    darkgray: "a9a9a9",
    darkgreen: "006400",
    darkgrey: "a9a9a9",
    darkkhaki: "bdb76b",
    darkmagenta: "8b008b",
    darkolivegreen: "556b2f",
    darkorange: "ff8c00",
    darkorchid: "9932cc",
    darkred: "8b0000",
    darksalmon: "e9967a",
    darkseagreen: "8fbc8f",
    darkslateblue: "483d8b",
    darkslategray: "2f4f4f",
    darkslategrey: "2f4f4f",
    darkturquoise: "00ced1",
    darkviolet: "9400d3",
    deeppink: "ff1493",
    deepskyblue: "00bfff",
    dimgray: "696969",
    dimgrey: "696969",
    dodgerblue: "1e90ff",
    firebrick: "b22222",
    floralwhite: "fffaf0",
    forestgreen: "228b22",
    fuchsia: "f0f",
    gainsboro: "dcdcdc",
    ghostwhite: "f8f8ff",
    gold: "ffd700",
    goldenrod: "daa520",
    gray: "808080",
    green: "008000",
    greenyellow: "adff2f",
    grey: "808080",
    honeydew: "f0fff0",
    hotpink: "ff69b4",
    indianred: "cd5c5c",
    indigo: "4b0082",
    ivory: "fffff0",
    khaki: "f0e68c",
    lavender: "e6e6fa",
    lavenderblush: "fff0f5",
    lawngreen: "7cfc00",
    lemonchiffon: "fffacd",
    lightblue: "add8e6",
    lightcoral: "f08080",
    lightcyan: "e0ffff",
    lightgoldenrodyellow: "fafad2",
    lightgray: "d3d3d3",
    lightgreen: "90ee90",
    lightgrey: "d3d3d3",
    lightpink: "ffb6c1",
    lightsalmon: "ffa07a",
    lightseagreen: "20b2aa",
    lightskyblue: "87cefa",
    lightslategray: "789",
    lightslategrey: "789",
    lightsteelblue: "b0c4de",
    lightyellow: "ffffe0",
    lime: "0f0",
    limegreen: "32cd32",
    linen: "faf0e6",
    magenta: "f0f",
    maroon: "800000",
    mediumaquamarine: "66cdaa",
    mediumblue: "0000cd",
    mediumorchid: "ba55d3",
    mediumpurple: "9370db",
    mediumseagreen: "3cb371",
    mediumslateblue: "7b68ee",
    mediumspringgreen: "00fa9a",
    mediumturquoise: "48d1cc",
    mediumvioletred: "c71585",
    midnightblue: "191970",
    mintcream: "f5fffa",
    mistyrose: "ffe4e1",
    moccasin: "ffe4b5",
    navajowhite: "ffdead",
    navy: "000080",
    oldlace: "fdf5e6",
    olive: "808000",
    olivedrab: "6b8e23",
    orange: "ffa500",
    orangered: "ff4500",
    orchid: "da70d6",
    palegoldenrod: "eee8aa",
    palegreen: "98fb98",
    paleturquoise: "afeeee",
    palevioletred: "db7093",
    papayawhip: "ffefd5",
    peachpuff: "ffdab9",
    peru: "cd853f",
    pink: "ffc0cb",
    plum: "dda0dd",
    powderblue: "b0e0e6",
    purple: "800080",
    rebeccapurple: "663399",
    red: "f00",
    rosybrown: "bc8f8f",
    royalblue: "4169e1",
    saddlebrown: "8b4513",
    salmon: "fa8072",
    sandybrown: "f4a460",
    seagreen: "2e8b57",
    seashell: "fff5ee",
    sienna: "a0522d",
    silver: "c0c0c0",
    skyblue: "87ceeb",
    slateblue: "6a5acd",
    slategray: "708090",
    slategrey: "708090",
    snow: "fffafa",
    springgreen: "00ff7f",
    steelblue: "4682b4",
    tan: "d2b48c",
    teal: "008080",
    thistle: "d8bfd8",
    tomato: "ff6347",
    turquoise: "40e0d0",
    violet: "ee82ee",
    wheat: "f5deb3",
    white: "fff",
    whitesmoke: "f5f5f5",
    yellow: "ff0",
    yellowgreen: "9acd32",
};


/***/ }),

/***/ "./src/render/types/Color/Color.ts":
/*!*****************************************!*\
  !*** ./src/render/types/Color/Color.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Color = void 0;
const Utils_1 = __webpack_require__(/*! ./Utils */ "./src/render/types/Color/Utils.ts");
const converters_1 = __webpack_require__(/*! ./converters */ "./src/render/types/Color/converters.ts");
const types_1 = __webpack_require__(/*! ./types */ "./src/render/types/Color/types.ts");
const CSSNames_1 = __webpack_require__(/*! ./CSSNames */ "./src/render/types/Color/CSSNames.ts");
const cache = new Map();
function Color(color, r, g, b) {
    if (typeof color === "string") {
        let c = cache.get(color);
        if (c)
            return c;
        c = createColor(color);
        if (c === undefined)
            return Object.assign(Object.assign({}, Color("black")), { isValid: false });
        cache.set(color, c);
        return c;
    }
    const created = createColor(color, r, g, b);
    return created !== undefined ? created : Object.assign(Object.assign({}, Color("black")), { isValid: false });
}
exports.Color = Color;
function createColor(color, r, g, b) {
    if (color === "")
        return undefined;
    const colorData = getCompleteColorStrategy(color, r, g, b);
    if (colorData) {
        const newColor = {
            r: colorData.r,
            g: colorData.g,
            b: colorData.b,
            a: colorData.a,
            h: colorData.h,
            s: colorData.s,
            l: colorData.l,
            initialValue: typeof color === "string" && colorData.format !== types_1.ColorFormat.HSV ? color : undefined,
            roundA: Math.round(100 * colorData.a) / 100,
            format: colorData.format,
            mix: Color.mix,
            toValue: () => Color.toRgbString(newColor),
        };
        return newColor;
    }
    else {
        return undefined;
    }
}
(function (Color) {
    function inspect(color, initialValue) {
        if (color.format === types_1.ColorFormat.HSL) {
            return `<${color.constructor.name} h:${color.h} s:${color.s} l:${color.l} a:${color.a}>`;
        }
        else if (color.format === types_1.ColorFormat.HEX || color.format === types_1.ColorFormat.NAME) {
            return `<${color.constructor.name} "${initialValue}">`;
        }
        else {
            return `<${color.constructor.name} r:${color.r} g:${color.g} b:${color.b} a:${color.a}>`;
        }
    }
    Color.inspect = inspect;
    function isColor(color) {
        if (typeof color === "string") {
            return Color.isColorString(color);
        }
        else {
            return Color.isColorObject(color);
        }
    }
    Color.isColor = isColor;
    function isColorString(colorString) {
        if (typeof colorString === "string") {
            return converters_1.stringToObject(colorString) !== false;
        }
        return false;
    }
    Color.isColorString = isColorString;
    function isColorObject(color) {
        return (color &&
            typeof color !== "string" &&
            typeof color.r === "number" &&
            typeof color.g === "number" &&
            typeof color.b === "number" &&
            typeof color.h === "number" &&
            typeof color.s === "number" &&
            typeof color.l === "number" &&
            typeof color.a === "number" &&
            typeof color.roundA === "number" &&
            typeof color.format === "string");
    }
    Color.isColorObject = isColorObject;
    function toString(color) {
        return Color.toRgbString(color);
    }
    Color.toString = toString;
    function toHex(color, allow3Char = false) {
        return converters_1.rgbToHex(color.r, color.g, color.b, allow3Char);
    }
    Color.toHex = toHex;
    function toHexString(color, allow3Char = false) {
        return `#${Color.toHex(color, allow3Char)}`;
    }
    Color.toHexString = toHexString;
    function toRgbString(color) {
        return color.a === 1
            ? "rgb(" + Math.round(color.r) + ", " + Math.round(color.g) + ", " + Math.round(color.b) + ")"
            : "rgba(" +
                Math.round(color.r) +
                ", " +
                Math.round(color.g) +
                ", " +
                Math.round(color.b) +
                ", " +
                color.roundA +
                ")";
    }
    Color.toRgbString = toRgbString;
    function toHusl(color) {
        return Object.assign(Object.assign({}, converters_1.rgbToHsluv(color.r, color.g, color.b)), { a: color.roundA });
    }
    Color.toHusl = toHusl;
    function toHslString(color) {
        const hsl = Color.toHsl(color);
        const h = Math.round(hsl.h);
        const s = Math.round(hsl.s * 100);
        const l = Math.round(hsl.l * 100);
        return color.a === 1
            ? "hsl(" + h + ", " + s + "%, " + l + "%)"
            : "hsla(" + h + ", " + s + "%, " + l + "%, " + color.roundA + ")";
    }
    Color.toHslString = toHslString;
    function toHsv(color) {
        const hsv = converters_1.rgbToHsv(color.r, color.g, color.b);
        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: color.a };
    }
    Color.toHsv = toHsv;
    function toHsvString(color) {
        const hsv = converters_1.rgbToHsv(color.r, color.g, color.b);
        const h = Math.round(hsv.h * 360);
        const s = Math.round(hsv.s * 100);
        const v = Math.round(hsv.v * 100);
        return color.a === 1
            ? "hsv(" + h + ", " + s + "%, " + v + "%)"
            : "hsva(" + h + ", " + s + "%, " + v + "%, " + color.roundA + ")";
    }
    Color.toHsvString = toHsvString;
    function toName(color) {
        if (color.a === 0) {
            return "transparent";
        }
        if (color.a < 1) {
            return false;
        }
        const hex = converters_1.rgbToHex(color.r, color.g, color.b, true);
        for (const key of Object.keys(CSSNames_1.cssNames)) {
            const value = CSSNames_1.cssNames[key];
            if (value === hex) {
                return key;
            }
        }
        return false;
    }
    Color.toName = toName;
    function toHsl(color) {
        return {
            h: Math.round(color.h),
            s: color.s,
            l: color.l,
            a: color.a,
        };
    }
    Color.toHsl = toHsl;
    function toRgb(color) {
        return {
            r: Math.round(color.r),
            g: Math.round(color.g),
            b: Math.round(color.b),
            a: color.a,
        };
    }
    Color.toRgb = toRgb;
    function brighten(color, amount = 10) {
        const rgb = Color.toRgb(color);
        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
        return Color(rgb);
    }
    Color.brighten = brighten;
    function lighten(color, amount = 10) {
        const hsl = Color.toHsl(color);
        hsl.l += amount / 100;
        hsl.l = Math.min(1, Math.max(0, hsl.l));
        return Color(hsl);
    }
    Color.lighten = lighten;
    function darken(color, amount = 10) {
        const hsl = Color.toHsl(color);
        hsl.l -= amount / 100;
        hsl.l = Math.min(1, Math.max(0, hsl.l));
        return Color(hsl);
    }
    Color.darken = darken;
    function saturate(color, amount = 10) {
        const hsl = Color.toHsl(color);
        hsl.s += amount / 100;
        hsl.s = Math.min(1, Math.max(0, hsl.s));
        return Color(hsl);
    }
    Color.saturate = saturate;
    function desaturate(color, amount = 10) {
        const hsl = Color.toHsl(color);
        hsl.s -= amount / 100;
        hsl.s = Math.min(1, Math.max(0, hsl.s));
        return Color(hsl);
    }
    Color.desaturate = desaturate;
    function grayscale(color) {
        return Color.desaturate(color, 100);
    }
    Color.grayscale = grayscale;
    function hueRotate(color, angle) {
        const hsl = Color.toHsl(color);
        hsl.h += angle;
        hsl.h = hsl.h > 360 ? hsl.h - 360 : hsl.h;
        return Color(hsl);
    }
    Color.hueRotate = hueRotate;
    function alpha(color, a = 1) {
        return Color({
            r: color.r,
            g: color.g,
            b: color.b,
            a: a,
        });
    }
    Color.alpha = alpha;
    function transparent(color) {
        return Color.alpha(color, 0);
    }
    Color.transparent = transparent;
    function multiplyAlpha(color, alphaValue = 1) {
        return Color({
            r: color.r,
            g: color.g,
            b: color.b,
            a: color.a * alphaValue,
        });
    }
    Color.multiplyAlpha = multiplyAlpha;
    function interpolate(colorA, colorB, model = types_1.ColorMixModelType.RGB) {
        if (!Color.isColorObject(colorA) || !Color.isColorObject(colorB)) {
            throw new TypeError("Both arguments for Color.interpolate must be Color objects");
        }
        return (progress) => {
            const color = Color.mixAsColor(colorA, colorB, progress, false, model);
            return color;
        };
    }
    Color.interpolate = interpolate;
    function mix(from, toColor, { model = types_1.ColorMixModelType.RGB } = {}) {
        const fromColor = typeof from === "string" ? Color(from) : from;
        const mixer = Color.interpolate(fromColor, toColor, model);
        return (p) => Color.toRgbString(mixer(p));
    }
    Color.mix = mix;
    function mixAsColor(colorA, colorB, fraction = 0.5, limit = false, model = types_1.ColorMixModelType.RGB) {
        let result = null;
        if (ColorMixModel.isRGB(model)) {
            result = Color({
                r: Utils_1.modulate(fraction, [0, 1], [colorA.r, colorB.r], limit),
                g: Utils_1.modulate(fraction, [0, 1], [colorA.g, colorB.g], limit),
                b: Utils_1.modulate(fraction, [0, 1], [colorA.b, colorB.b], limit),
                a: Utils_1.modulate(fraction, [0, 1], [colorA.a, colorB.a], limit),
            });
        }
        else {
            let hslA, hslB;
            if (ColorMixModel.isHSL(model)) {
                hslA = Color.toHsl(colorA);
                hslB = Color.toHsl(colorB);
            }
            else {
                hslA = Color.toHusl(colorA);
                hslB = Color.toHusl(colorB);
            }
            if (hslA.s === 0) {
                hslA.h = hslB.h;
            }
            else if (hslB.s === 0) {
                hslB.h = hslA.h;
            }
            const fromH = hslA.h;
            const toH = hslB.h;
            let deltaH = toH - fromH;
            if (deltaH > 180) {
                deltaH = toH - 360 - fromH;
            }
            else if (deltaH < -180) {
                deltaH = toH + 360 - fromH;
            }
            const tween = {
                h: Utils_1.modulate(fraction, [0, 1], [fromH, fromH + deltaH], limit),
                s: Utils_1.modulate(fraction, [0, 1], [hslA.s, hslB.s], limit),
                l: Utils_1.modulate(fraction, [0, 1], [hslA.l, hslB.l], limit),
                a: Utils_1.modulate(fraction, [0, 1], [colorA.a, colorB.a], limit),
            };
            if (ColorMixModel.isHSL(model)) {
                result = Color(tween);
            }
            else {
                result = Color(converters_1.rgbaFromHusl(tween.h, tween.s, tween.l, tween.a));
            }
        }
        return result;
    }
    Color.mixAsColor = mixAsColor;
    function random(alphaValue = 1) {
        function gen() {
            return Math.floor(Math.random() * 255);
        }
        return Color("rgba(" + gen() + ", " + gen() + ", " + gen() + ", " + alphaValue + ")");
    }
    Color.random = random;
    function grey(amount = 0.5, alphaValue = 1) {
        amount = Math.floor(amount * 255);
        return Color("rgba(" + amount + ", " + amount + ", " + amount + ", " + alphaValue + ")");
    }
    Color.grey = grey;
    Color.gray = Color.grey;
    function rgbToHsl(r, g, b) {
        return converters_1.rgbToHsl(r, g, b);
    }
    Color.rgbToHsl = rgbToHsl;
    Color.isValidColorProperty = function (name, value) {
        const isColorKey = name.toLowerCase().slice(-5) === "color" || name === "fill" || name === "stroke";
        if (isColorKey && typeof value === "string" && Color.isColorString(value)) {
            return true;
        }
        return false;
    };
    function difference(colorA, colorB) {
        const _r = (colorA.r + colorB.r) / 2;
        const deltaR = colorA.r - colorB.r;
        const deltaG = colorA.g - colorB.g;
        const deltaB = colorA.b - colorB.b;
        const deltaR2 = Math.pow(deltaR, 2);
        const deltaG2 = Math.pow(deltaG, 2);
        const deltaB2 = Math.pow(deltaB, 2);
        return Math.sqrt(2 * deltaR2 + 4 * deltaG2 + 3 * deltaB2 + (_r * (deltaR2 - deltaB2)) / 256);
    }
    Color.difference = difference;
    function equal(colorA, colorB, tolerance = 0.1) {
        if (Math.abs(colorA.r - colorB.r) >= tolerance) {
            return false;
        }
        if (Math.abs(colorA.g - colorB.g) >= tolerance) {
            return false;
        }
        if (Math.abs(colorA.b - colorB.b) >= tolerance) {
            return false;
        }
        if (Math.abs(colorA.a - colorB.a) * 256 >= tolerance) {
            return false;
        }
        return true;
    }
    Color.equal = equal;
})(Color || (Color = {}));
exports.Color = Color;
const ColorMixModel = {
    isRGB(colorModel) {
        return colorModel === types_1.ColorMixModelType.RGB || colorModel === types_1.ColorMixModelType.RGBA;
    },
    isHSL(colorModel) {
        return colorModel === types_1.ColorMixModelType.HSL || colorModel === types_1.ColorMixModelType.HSLA;
    },
};
function getCompleteColorStrategy(colorOrR, g, b, a = 1) {
    let completeColor;
    if (typeof colorOrR === "number" &&
        !Number.isNaN(colorOrR) &&
        typeof g === "number" &&
        !Number.isNaN(g) &&
        typeof b === "number" &&
        !Number.isNaN(b)) {
        const _r = colorOrR;
        const _g = g;
        const _b = b;
        const _a = a;
        completeColor = getCompleteColorFromRGB({ r: _r, g: _g, b: _b, a: _a });
    }
    else if (typeof colorOrR === "string") {
        completeColor = getCompleteColorFromString(colorOrR);
    }
    else if (typeof colorOrR === "object") {
        if (colorOrR.hasOwnProperty("r") && colorOrR.hasOwnProperty("g") && colorOrR.hasOwnProperty("b")) {
            completeColor = getCompleteColorFromRGB(colorOrR);
        }
        else {
            completeColor = getCompleteColorFromHSL(colorOrR);
        }
    }
    return completeColor;
}
function getCompleteColorFromString(color) {
    const result = converters_1.stringToObject(color);
    if (result) {
        if (result.format === types_1.ColorFormat.HSL) {
            return getCompleteColorFromHSL(result);
        }
        else if (result.format === types_1.ColorFormat.HSV) {
            return getCompleteColorFromHSV(result);
        }
        else {
            return getCompleteColorFromRGB(result);
        }
    }
}
function getCompleteColorFromHSV(color) {
    const rgb = converters_1.hsvToRgb(color.h, color.s, color.v);
    const hsl = converters_1.rgbToHsl(rgb.r, rgb.g, rgb.b);
    return Object.assign(Object.assign(Object.assign({}, hsl), rgb), { format: types_1.ColorFormat.RGB, a: color.a !== undefined ? correctAlpha(color.a) : 1 });
}
function getCompleteColorFromRGB(color) {
    const rgb = converters_1.rgbToRgb(color.r, color.g, color.b);
    const hsl = converters_1.rgbToHsl(rgb.r, rgb.g, rgb.b);
    return Object.assign(Object.assign(Object.assign({}, hsl), rgb), { format: types_1.ColorFormat.RGB, a: color.a !== undefined ? correctAlpha(color.a) : 1 });
}
function getCompleteColorFromHSL(color) {
    let h;
    let s;
    let l;
    let rgb = { r: 0, g: 0, b: 0 };
    let hsl = { h: 0, s: 0, l: 0 };
    h = Utils_1.isNumeric(color.h) ? color.h : 0;
    h = (h + 360) % 360;
    s = Utils_1.isNumeric(color.s) ? color.s : 1;
    if (typeof color.s === "string") {
        s = Utils_1.numberFromString(color.s);
    }
    l = Utils_1.isNumeric(color.l) ? color.l : 0.5;
    if (typeof color.l === "string") {
        l = Utils_1.numberFromString(color.l);
    }
    rgb = converters_1.hslToRgb(h, s, l);
    hsl = {
        h: h,
        s: s,
        l: l,
    };
    return Object.assign(Object.assign(Object.assign({}, rgb), hsl), { a: color.a === undefined ? 1 : color.a, format: types_1.ColorFormat.HSL });
}
function correctAlpha(alphaValue) {
    alphaValue = parseFloat(alphaValue);
    if (alphaValue < 0) {
        alphaValue = 0;
    }
    if (isNaN(alphaValue) || alphaValue > 1) {
        alphaValue = 1;
    }
    return alphaValue;
}


/***/ }),

/***/ "./src/render/types/Color/ConvertColor.ts":
/*!************************************************!*\
  !*** ./src/render/types/Color/ConvertColor.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ConvertColor = void 0;
const Color_1 = __webpack_require__(/*! ./Color */ "./src/render/types/Color/Color.ts");
const converters_1 = __webpack_require__(/*! ./converters */ "./src/render/types/Color/converters.ts");
var ConvertColor;
(function (ConvertColor) {
    function hueRotate(color, angle) {
        return Color_1.Color.toHslString(Color_1.Color.hueRotate(Color_1.Color(color), angle));
    }
    ConvertColor.hueRotate = hueRotate;
    function setAlpha(color, alpha) {
        return Color_1.Color.toRgbString(Color_1.Color.alpha(Color_1.Color(color), alpha));
    }
    ConvertColor.setAlpha = setAlpha;
    function getAlpha(color) {
        const obj = converters_1.stringToObject(color);
        return obj ? obj.a : 1;
    }
    ConvertColor.getAlpha = getAlpha;
    function multiplyAlpha(color, alpha) {
        return Color_1.Color.toRgbString(Color_1.Color.multiplyAlpha(Color_1.Color(color), alpha));
    }
    ConvertColor.multiplyAlpha = multiplyAlpha;
    function toHex(color) {
        return Color_1.Color.toHexString(Color_1.Color(color)).toUpperCase();
    }
    ConvertColor.toHex = toHex;
    function toRgb(color) {
        return Color_1.Color.toRgb(Color_1.Color(color));
    }
    ConvertColor.toRgb = toRgb;
    function toRgbString(color) {
        return Color_1.Color.toRgbString(Color_1.Color(color));
    }
    ConvertColor.toRgbString = toRgbString;
    function toHSV(color) {
        return Color_1.Color.toHsv(Color_1.Color(color));
    }
    ConvertColor.toHSV = toHSV;
    function toHSL(color) {
        return Color_1.Color.toHsl(Color_1.Color(color));
    }
    ConvertColor.toHSL = toHSL;
    function toHslString(color) {
        return Color_1.Color.toHslString(Color_1.Color(color));
    }
    ConvertColor.toHslString = toHslString;
    function toHsvString(color) {
        return Color_1.Color.toHsvString(Color_1.Color(color));
    }
    ConvertColor.toHsvString = toHsvString;
    function hsvToHSLString(hsv) {
        return Color_1.Color.toHslString(Color_1.Color(converters_1.hsvToStr(hsv.h, hsv.s, hsv.v, hsv.a)));
    }
    ConvertColor.hsvToHSLString = hsvToHSLString;
    function hsvToString(hsv) {
        return converters_1.hsvToStr(hsv.h, hsv.s, hsv.v);
    }
    ConvertColor.hsvToString = hsvToString;
    function rgbaToString(color) {
        return Color_1.Color.toRgbString(Color_1.Color(color));
    }
    ConvertColor.rgbaToString = rgbaToString;
    function hslToString(hsl) {
        return Color_1.Color.toRgbString(Color_1.Color(hsl));
    }
    ConvertColor.hslToString = hslToString;
    function toColorPickerSquare(h) {
        return Color_1.Color.toRgbString(Color_1.Color({ h, s: 1, l: 0.5, a: 1 }));
    }
    ConvertColor.toColorPickerSquare = toColorPickerSquare;
    function isValid(color) {
        return Color_1.Color(color).isValid !== false;
    }
    ConvertColor.isValid = isValid;
    function equals(a, b) {
        if (typeof a === "string") {
            a = Color_1.Color(a);
        }
        if (typeof b === "string") {
            b = Color_1.Color(b);
        }
        return Color_1.Color.equal(a, b);
    }
    ConvertColor.equals = equals;
    function toHexOrRgbaString(input) {
        const color = Color_1.Color(input);
        return color.a !== 1 ? Color_1.Color.toRgbString(color) : Color_1.Color.toHexString(color);
    }
    ConvertColor.toHexOrRgbaString = toHexOrRgbaString;
})(ConvertColor = exports.ConvertColor || (exports.ConvertColor = {}));


/***/ }),

/***/ "./src/render/types/Color/Utils.ts":
/*!*****************************************!*\
  !*** ./src/render/types/Color/Utils.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.numberFromString = exports.percentToFraction = exports.isNumeric = exports.modulate = exports.clamp = void 0;
function clamp(value, a, b) {
    const min = Math.min(a, b);
    const max = Math.max(a, b);
    if (value < min) {
        value = min;
    }
    if (value > max) {
        value = max;
    }
    return value;
}
exports.clamp = clamp;
function modulate(value, rangeA, rangeB, limit = false) {
    const [fromLow, fromHigh] = rangeA;
    const [toLow, toHigh] = rangeB;
    const result = toLow + ((value - fromLow) / (fromHigh - fromLow)) * (toHigh - toLow);
    if (limit === true) {
        if (toLow < toHigh) {
            if (result < toLow) {
                return toLow;
            }
            if (result > toHigh) {
                return toHigh;
            }
        }
        else {
            if (result > toLow) {
                return toLow;
            }
            if (result < toHigh) {
                return toHigh;
            }
        }
    }
    return result;
}
exports.modulate = modulate;
function isNumeric(value) {
    return !isNaN(value) && isFinite(value);
}
exports.isNumeric = isNumeric;
function percentToFraction(val) {
    const digits = numberFromString(val);
    if (digits !== undefined) {
        if (val.includes("%")) {
            return digits / 100;
        }
        return digits;
    }
    return 0;
}
exports.percentToFraction = percentToFraction;
function numberFromString(input) {
    const match = input.match(/\d?\.?\d+/);
    return match ? Number(match[0]) : undefined;
}
exports.numberFromString = numberFromString;


/***/ }),

/***/ "./src/render/types/Color/converters.ts":
/*!**********************************************!*\
  !*** ./src/render/types/Color/converters.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.stringToObject = exports.hsvToRgb = exports.rgbToHsv = exports.hslToRgb = exports.rgbToHsl = exports.rgbToHex = exports.rgbToRgb = exports.hsvToStr = exports.rgbaFromHusl = exports.rgbToHsluv = void 0;
const hsluv_1 = __webpack_require__(/*! hsluv */ "../../node_modules/hsluv/hsluv.js");
const Utils_1 = __webpack_require__(/*! ./Utils */ "./src/render/types/Color/Utils.ts");
const types_1 = __webpack_require__(/*! ./types */ "./src/render/types/Color/types.ts");
const CSSNames_1 = __webpack_require__(/*! ./CSSNames */ "./src/render/types/Color/CSSNames.ts");
function rgbToHsluv(r, g, b) {
    const [h, s, l] = hsluv_1.rgbToHsluv([r / 255, g / 255, b / 255]);
    return { h, s, l };
}
exports.rgbToHsluv = rgbToHsluv;
function rgbaFromHusl(h, s, l, a = 1) {
    const rgb = hsluv_1.hsluvToRgb([h, s, l]);
    return {
        r: rgb[0] * 255,
        g: rgb[1] * 255,
        b: rgb[2] * 255,
        a: a,
    };
}
exports.rgbaFromHusl = rgbaFromHusl;
function hsvToStr(h, s, v, a) {
    const _h = Math.round(h);
    const _s = Math.round(s * 100);
    const _v = Math.round(v * 100);
    return a === undefined || a === 1
        ? "hsv(" + _h + ", " + _s + "%, " + _v + "%)"
        : "hsva(" + _h + ", " + _s + "%, " + _v + "%, " + a + ")";
}
exports.hsvToStr = hsvToStr;
function rgbToRgb(r, g, b) {
    return {
        r: Utils_1.isNumeric(r) ? bound01(r, 255) * 255 : 0,
        g: Utils_1.isNumeric(g) ? bound01(g, 255) * 255 : 0,
        b: Utils_1.isNumeric(b) ? bound01(b, 255) * 255 : 0,
    };
}
exports.rgbToRgb = rgbToRgb;
function rgbToHex(r, g, b, allow3Char) {
    const hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];
    if (allow3Char &&
        hex[0].charAt(0) === hex[0].charAt(1) &&
        hex[1].charAt(0) === hex[1].charAt(1) &&
        hex[2].charAt(0) === hex[2].charAt(1)) {
        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
    }
    return hex.join("");
}
exports.rgbToHex = rgbToHex;
function rgbToHsl(r, g, b) {
    let l;
    let s;
    const _r = bound01(r, 255);
    const _g = bound01(g, 255);
    const _b = bound01(b, 255);
    const max = Math.max(_r, _g, _b);
    const min = Math.min(_r, _g, _b);
    let h = (s = l = (max + min) / 2);
    if (max === min) {
        h = s = 0;
    }
    else {
        const d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        switch (max) {
            case _r:
                h = (_g - _b) / d + (_g < _b ? 6 : 0);
                break;
            case _g:
                h = (_b - _r) / d + 2;
                break;
            case _b:
                h = (_r - _g) / d + 4;
                break;
        }
        h /= 6;
    }
    return { h: h * 360, s, l };
}
exports.rgbToHsl = rgbToHsl;
function hue2rgb(p, q, t) {
    if (t < 0) {
        t += 1;
    }
    if (t > 1) {
        t -= 1;
    }
    if (t < 1 / 6) {
        return p + (q - p) * 6 * t;
    }
    if (t < 1 / 2) {
        return q;
    }
    if (t < 2 / 3) {
        return p + (q - p) * (2 / 3 - t) * 6;
    }
    return p;
}
function hslToRgb(h, s, l) {
    let r;
    let g;
    let b;
    h = bound01(h, 360);
    s = bound01(s * 100, 100);
    l = bound01(l * 100, 100);
    if (s === 0) {
        r = g = b = l;
    }
    else {
        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        const p = 2 * l - q;
        r = hue2rgb(p, q, h + 1 / 3);
        g = hue2rgb(p, q, h);
        b = hue2rgb(p, q, h - 1 / 3);
    }
    return { r: r * 255, g: g * 255, b: b * 255 };
}
exports.hslToRgb = hslToRgb;
function rgbToHsv(r, g, b) {
    r = bound01(r, 255);
    g = bound01(g, 255);
    b = bound01(b, 255);
    const max = Math.max(r, g, b);
    const min = Math.min(r, g, b);
    const d = max - min;
    let h;
    const s = max === 0 ? 0 : d / max;
    const v = max;
    if (max === min) {
        h = 0;
    }
    else {
        switch (max) {
            case r:
                h = (g - b) / d + (g < b ? 6 : 0);
                break;
            case g:
                h = (b - r) / d + 2;
                break;
            case b:
                h = (r - g) / d + 4;
                break;
        }
        h /= 6;
    }
    return { h: h, s, v };
}
exports.rgbToHsv = rgbToHsv;
function hsvToRgb(h, s, v) {
    h = bound01(h, 360) * 6;
    s = bound01(s * 100, 100);
    v = bound01(v * 100, 100);
    const i = Math.floor(h), f = h - i, p = v * (1 - s), q = v * (1 - f * s), t = v * (1 - (1 - f) * s), mod = i % 6, r = [v, q, p, p, t, v][mod], g = [t, v, v, q, p, p][mod], b = [p, p, t, v, v, q][mod];
    return { r: r * 255, g: g * 255, b: b * 255 };
}
exports.hsvToRgb = hsvToRgb;
function bound01(n, max) {
    let _max;
    let _n;
    if (typeof max === "string")
        _max = parseFloat(max);
    else
        _max = max;
    if (typeof n === "string") {
        if (isOnePointZero(n)) {
            n = "100%";
        }
        const processPercent = isPercentage(n);
        _n = Math.min(_max, Math.max(0, parseFloat(n)));
        if (processPercent) {
            _n = Math.floor(_n * _max) / 100;
        }
    }
    else {
        _n = n;
    }
    if (Math.abs(_n - _max) < 0.000001) {
        return 1;
    }
    return (_n % _max) / _max;
}
function isOnePointZero(n) {
    return typeof n === "string" && n.includes(".") && parseFloat(n) === 1;
}
function isPercentage(n) {
    return typeof n === "string" && n.includes("%");
}
function pad2(char) {
    if (char.length === 1) {
        return "0" + char;
    }
    else {
        return "" + char;
    }
}
const matchers = (function () {
    const cssInteger = "[-\\+]?\\d+%?";
    const cssNumber = "[-\\+]?\\d*\\.\\d+%?";
    const cssUnit = "(?:" + cssNumber + ")|(?:" + cssInteger + ")";
    const permissiveMatch3 = "[\\s|\\(]+(" + cssUnit + ")[,|\\s]+(" + cssUnit + ")[,|\\s]+(" + cssUnit + ")\\s*\\)?";
    const permissiveMatch4 = "[\\s|\\(]+(" + cssUnit + ")[,|\\s]+(" + cssUnit + ")[,|\\s]+(" + cssUnit + ")[,|\\s]+(" + cssUnit + ")\\s*\\)?";
    return {
        rgb: new RegExp("rgb" + permissiveMatch3),
        rgba: new RegExp("rgba" + permissiveMatch4),
        hsl: new RegExp("hsl" + permissiveMatch3),
        hsla: new RegExp("hsla" + permissiveMatch4),
        hsv: new RegExp("hsv" + permissiveMatch3),
        hsva: new RegExp("hsva" + permissiveMatch4),
        hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    };
})();
function stringToObject(inputColor) {
    if (inputColor.includes("gradient("))
        return false;
    if (inputColor.includes("var("))
        return false;
    const trimLeft = /^[\s,#]+/;
    const trimRight = /\s+$/;
    let color = inputColor.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
    let named = false;
    if (CSSNames_1.cssNames[color]) {
        color = CSSNames_1.cssNames[color];
        named = true;
    }
    if (color === "transparent") {
        return {
            r: 0,
            g: 0,
            b: 0,
            a: 0,
            format: types_1.ColorFormat.NAME,
        };
    }
    let match;
    if ((match = matchers.rgb.exec(color))) {
        return {
            r: parseInt(match[1]),
            g: parseInt(match[2]),
            b: parseInt(match[3]),
            a: 1,
            format: types_1.ColorFormat.RGB,
        };
    }
    if ((match = matchers.rgba.exec(color))) {
        return {
            r: parseInt(match[1]),
            g: parseInt(match[2]),
            b: parseInt(match[3]),
            a: parseFloat(match[4]),
            format: types_1.ColorFormat.RGB,
        };
    }
    if ((match = matchers.hsl.exec(color))) {
        return {
            h: parseInt(match[1]),
            s: Utils_1.percentToFraction(match[2]),
            l: Utils_1.percentToFraction(match[3]),
            a: 1,
            format: types_1.ColorFormat.HSL,
        };
    }
    if ((match = matchers.hsla.exec(color))) {
        return {
            h: parseInt(match[1]),
            s: Utils_1.percentToFraction(match[2]),
            l: Utils_1.percentToFraction(match[3]),
            a: parseFloat(match[4]),
            format: types_1.ColorFormat.HSL,
        };
    }
    if ((match = matchers.hsv.exec(color))) {
        return {
            h: parseInt(match[1]),
            s: Utils_1.percentToFraction(match[2]),
            v: Utils_1.percentToFraction(match[3]),
            a: 1,
            format: types_1.ColorFormat.HSV,
        };
    }
    if ((match = matchers.hsva.exec(color))) {
        return {
            h: parseInt(match[1]),
            s: Utils_1.percentToFraction(match[2]),
            v: Utils_1.percentToFraction(match[3]),
            a: parseFloat(match[4]),
            format: types_1.ColorFormat.HSV,
        };
    }
    if ((match = matchers.hex8.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: convertHexToDecimal(match[4]),
            format: named ? types_1.ColorFormat.NAME : types_1.ColorFormat.HEX,
        };
    }
    if ((match = matchers.hex6.exec(color))) {
        return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: 1,
            format: named ? types_1.ColorFormat.NAME : types_1.ColorFormat.HEX,
        };
    }
    if ((match = matchers.hex4.exec(color))) {
        return {
            r: parseIntFromHex(`${match[1]}${match[1]}`),
            g: parseIntFromHex(`${match[2]}${match[2]}`),
            b: parseIntFromHex(`${match[3]}${match[3]}`),
            a: convertHexToDecimal(match[4] + "" + match[4]),
            format: named ? types_1.ColorFormat.NAME : types_1.ColorFormat.HEX,
        };
    }
    if ((match = matchers.hex3.exec(color))) {
        return {
            r: parseIntFromHex(`${match[1]}${match[1]}`),
            g: parseIntFromHex(`${match[2]}${match[2]}`),
            b: parseIntFromHex(`${match[3]}${match[3]}`),
            a: 1,
            format: named ? types_1.ColorFormat.NAME : types_1.ColorFormat.HEX,
        };
    }
    else {
        return false;
    }
}
exports.stringToObject = stringToObject;
function parseIntFromHex(hex) {
    return parseInt(hex, 16);
}
function convertHexToDecimal(h) {
    return parseIntFromHex(h) / 255;
}


/***/ }),

/***/ "./src/render/types/Color/index.ts":
/*!*****************************************!*\
  !*** ./src/render/types/Color/index.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ConvertColor = exports.Color = void 0;
var Color_1 = __webpack_require__(/*! ./Color */ "./src/render/types/Color/Color.ts");
Object.defineProperty(exports, "Color", { enumerable: true, get: function () { return Color_1.Color; } });
var ConvertColor_1 = __webpack_require__(/*! ./ConvertColor */ "./src/render/types/Color/ConvertColor.ts");
Object.defineProperty(exports, "ConvertColor", { enumerable: true, get: function () { return ConvertColor_1.ConvertColor; } });


/***/ }),

/***/ "./src/render/types/Color/types.ts":
/*!*****************************************!*\
  !*** ./src/render/types/Color/types.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ColorMixModelType = exports.ColorFormat = void 0;
var ColorFormat;
(function (ColorFormat) {
    ColorFormat["RGB"] = "rgb";
    ColorFormat["HSL"] = "hsl";
    ColorFormat["HSV"] = "hsv";
    ColorFormat["HEX"] = "hex";
    ColorFormat["NAME"] = "name";
})(ColorFormat = exports.ColorFormat || (exports.ColorFormat = {}));
var ColorMixModelType;
(function (ColorMixModelType) {
    ColorMixModelType["RGB"] = "rgb";
    ColorMixModelType["RGBA"] = "rgba";
    ColorMixModelType["HSL"] = "hsl";
    ColorMixModelType["HSLA"] = "hsla";
    ColorMixModelType["HUSL"] = "husl";
})(ColorMixModelType = exports.ColorMixModelType || (exports.ColorMixModelType = {}));


/***/ }),

/***/ "./src/render/types/Constraints.ts":
/*!*****************************************!*\
  !*** ./src/render/types/Constraints.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getMergedConstraintsProps = exports.ConstraintValues = exports.valueToDimensionType = exports.ConstraintMask = exports.isConstraintSupportingClass = exports.isConstraintSupportingChild = exports.DimensionType = exports.constraintDefaults = void 0;
const Rect_1 = __webpack_require__(/*! ./Rect */ "./src/render/types/Rect.ts");
const isFiniteNumber_1 = __webpack_require__(/*! ../utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable */ "./src/animation/Animatable/index.ts");
const type_guards_1 = __webpack_require__(/*! ../../utils/type-guards */ "./src/utils/type-guards.ts");
exports.constraintDefaults = {
    left: null,
    right: null,
    top: null,
    bottom: null,
    centerX: "50%",
    centerY: "50%",
    aspectRatio: null,
    parentSize: null,
    width: 100,
    height: 100,
};
var DimensionType;
(function (DimensionType) {
    DimensionType[DimensionType["FixedNumber"] = 0] = "FixedNumber";
    DimensionType[DimensionType["Percentage"] = 1] = "Percentage";
    DimensionType[DimensionType["Auto"] = 2] = "Auto";
    DimensionType[DimensionType["FractionOfFreeSpace"] = 3] = "FractionOfFreeSpace";
})(DimensionType = exports.DimensionType || (exports.DimensionType = {}));
function isConstraintSupportingChild(child) {
    if (!type_guards_1.isReactChild(child) || !type_guards_1.isReactElement(child)) {
        return false;
    }
    return true;
}
exports.isConstraintSupportingChild = isConstraintSupportingChild;
function isConstraintSupportingClass(classToTest) {
    if (classToTest === null || classToTest === undefined) {
        return false;
    }
    return classToTest.supportsConstraints === true;
}
exports.isConstraintSupportingClass = isConstraintSupportingClass;
var ConstraintMask;
(function (ConstraintMask) {
    ConstraintMask.quickfix = (constraints) => {
        if (constraints.widthType === DimensionType.Auto || constraints.heightType === DimensionType.Auto) {
            constraints.aspectRatio = null;
        }
        if (constraints.fixedSize) {
            constraints.widthType = DimensionType.FixedNumber;
            constraints.heightType = DimensionType.FixedNumber;
            constraints.aspectRatio = null;
        }
        if (isFiniteNumber_1.isFiniteNumber(constraints.aspectRatio)) {
            if ((constraints.left && constraints.right) || (constraints.top && constraints.bottom)) {
                constraints.widthType = DimensionType.FixedNumber;
                constraints.heightType = DimensionType.FixedNumber;
            }
            if (constraints.left && constraints.right && constraints.top && constraints.bottom) {
                constraints.bottom = false;
            }
            if (constraints.widthType !== DimensionType.FixedNumber &&
                constraints.heightType !== DimensionType.FixedNumber) {
                constraints.heightType = DimensionType.FixedNumber;
            }
        }
        if (constraints.left && constraints.right) {
            constraints.widthType = DimensionType.FixedNumber;
            if (constraints.fixedSize) {
                constraints.right = false;
            }
        }
        if (constraints.top && constraints.bottom) {
            constraints.heightType = DimensionType.FixedNumber;
            if (constraints.fixedSize) {
                constraints.bottom = false;
            }
        }
        return constraints;
    };
})(ConstraintMask = exports.ConstraintMask || (exports.ConstraintMask = {}));
function valueToDimensionType(value) {
    if (typeof value === "string") {
        const trimmedValue = value.trim();
        if (trimmedValue === "auto")
            return DimensionType.Auto;
        if (trimmedValue.endsWith("fr"))
            return DimensionType.FractionOfFreeSpace;
        if (trimmedValue.endsWith("%"))
            return DimensionType.Percentage;
    }
    return DimensionType.FixedNumber;
}
exports.valueToDimensionType = valueToDimensionType;
var ConstraintValues;
(function (ConstraintValues) {
    ConstraintValues.fromProperties = (props) => {
        const { left, right, top, bottom, width, height, centerX, centerY, aspectRatio, autoSize } = props;
        const constraints = ConstraintMask.quickfix({
            left: isFiniteNumber_1.isFiniteNumber(left) || Animatable_1.isAnimatable(left),
            right: isFiniteNumber_1.isFiniteNumber(right) || Animatable_1.isAnimatable(right),
            top: isFiniteNumber_1.isFiniteNumber(top) || Animatable_1.isAnimatable(top),
            bottom: isFiniteNumber_1.isFiniteNumber(bottom) || Animatable_1.isAnimatable(bottom),
            widthType: valueToDimensionType(width),
            heightType: valueToDimensionType(height),
            aspectRatio: aspectRatio || null,
            fixedSize: autoSize === true,
        });
        let widthValue = null;
        let heightValue = null;
        let widthType = DimensionType.FixedNumber;
        let heightType = DimensionType.FixedNumber;
        if (constraints.widthType !== DimensionType.FixedNumber && typeof width === "string") {
            const parsedWidth = parseFloat(width);
            if (width.endsWith("fr")) {
                widthType = DimensionType.FractionOfFreeSpace;
                widthValue = parsedWidth;
            }
            else if (width === "auto") {
                widthType = DimensionType.Auto;
            }
            else {
                widthType = DimensionType.Percentage;
                widthValue = parsedWidth / 100;
            }
        }
        else if (width !== undefined && typeof width !== "string") {
            widthValue = Animatable_1.Animatable.getNumber(width);
        }
        if (constraints.heightType !== DimensionType.FixedNumber && typeof height === "string") {
            const parsedHeight = parseFloat(height);
            if (height.endsWith("fr")) {
                heightType = DimensionType.FractionOfFreeSpace;
                heightValue = parsedHeight;
            }
            else if (height === "auto") {
                heightType = DimensionType.Auto;
            }
            else {
                heightType = DimensionType.Percentage;
                heightValue = parseFloat(height) / 100;
            }
        }
        else if (height !== undefined && typeof height !== "string") {
            heightValue = Animatable_1.Animatable.getNumber(height);
        }
        let centerAnchorX = 0.5;
        let centerAnchorY = 0.5;
        if (centerX) {
            centerAnchorX = parseFloat(centerX) / 100;
        }
        if (centerY) {
            centerAnchorY = parseFloat(centerY) / 100;
        }
        return {
            left: constraints.left ? Animatable_1.Animatable.getNumber(left) : null,
            right: constraints.right ? Animatable_1.Animatable.getNumber(right) : null,
            top: constraints.top ? Animatable_1.Animatable.getNumber(top) : null,
            bottom: constraints.bottom ? Animatable_1.Animatable.getNumber(bottom) : null,
            widthType,
            heightType,
            width: widthValue,
            height: heightValue,
            aspectRatio: constraints.aspectRatio || null,
            centerAnchorX: centerAnchorX,
            centerAnchorY: centerAnchorY,
        };
    };
    ConstraintValues.toMinSize = (values, parentSize, autoSize = null) => {
        let width = null;
        let height = null;
        const parentWidth = parentSize ? parentSize.width : null;
        const parentHeight = parentSize ? parentSize.height : null;
        const hOpposingPinsOffset = pinnedOffset(values.left, values.right);
        if (parentWidth && isFiniteNumber_1.isFiniteNumber(hOpposingPinsOffset)) {
            width = parentWidth - hOpposingPinsOffset;
        }
        else if (autoSize && values.widthType === DimensionType.Auto) {
            width = autoSize.width;
        }
        else if (isFiniteNumber_1.isFiniteNumber(values.width)) {
            switch (values.widthType) {
                case DimensionType.FixedNumber:
                    width = values.width;
                    break;
                case DimensionType.FractionOfFreeSpace:
                    width = 0;
                    break;
                case DimensionType.Percentage:
                    if (parentWidth) {
                        width = parentWidth * values.width;
                    }
                    break;
            }
        }
        const vOpposingPinsOffset = pinnedOffset(values.top, values.bottom);
        if (parentHeight && isFiniteNumber_1.isFiniteNumber(vOpposingPinsOffset)) {
            height = parentHeight - vOpposingPinsOffset;
        }
        else if (autoSize && values.heightType === DimensionType.Auto) {
            height = autoSize.height;
        }
        else if (isFiniteNumber_1.isFiniteNumber(values.height)) {
            switch (values.heightType) {
                case DimensionType.FixedNumber:
                    height = values.height;
                    break;
                case DimensionType.FractionOfFreeSpace:
                    height = 0;
                    break;
                case DimensionType.Percentage:
                    if (parentHeight) {
                        height = parentHeight * values.height;
                    }
                    break;
            }
        }
        return sizeAfterApplyingDefaultsAndAspectRatio(width, height, values);
    };
    ConstraintValues.toSize = (values, parentSize, autoSize, freeSpace) => {
        let width = null;
        let height = null;
        const parentWidth = parentSize ? Animatable_1.Animatable.getNumber(parentSize.width) : null;
        const parentHeight = parentSize ? Animatable_1.Animatable.getNumber(parentSize.height) : null;
        const hOpposingPinsOffset = pinnedOffset(values.left, values.right);
        if (parentWidth && isFiniteNumber_1.isFiniteNumber(hOpposingPinsOffset)) {
            width = parentWidth - hOpposingPinsOffset;
        }
        else if (autoSize && values.widthType === DimensionType.Auto) {
            width = autoSize.width;
        }
        else if (isFiniteNumber_1.isFiniteNumber(values.width)) {
            switch (values.widthType) {
                case DimensionType.FixedNumber:
                    width = values.width;
                    break;
                case DimensionType.FractionOfFreeSpace:
                    width = freeSpace
                        ? (freeSpace.freeSpaceInParent.width / freeSpace.freeSpaceUnitDivisor.width) * values.width
                        : 0;
                    break;
                case DimensionType.Percentage:
                    if (parentWidth) {
                        width = parentWidth * values.width;
                    }
                    break;
            }
        }
        const vOpposingPinsOffset = pinnedOffset(values.top, values.bottom);
        if (parentHeight && isFiniteNumber_1.isFiniteNumber(vOpposingPinsOffset)) {
            height = parentHeight - vOpposingPinsOffset;
        }
        else if (autoSize && values.heightType === DimensionType.Auto) {
            height = autoSize.height;
        }
        else if (isFiniteNumber_1.isFiniteNumber(values.height)) {
            switch (values.heightType) {
                case DimensionType.FixedNumber:
                    height = values.height;
                    break;
                case DimensionType.FractionOfFreeSpace:
                    height = freeSpace
                        ? (freeSpace.freeSpaceInParent.height / freeSpace.freeSpaceUnitDivisor.height) * values.height
                        : 0;
                    break;
                case DimensionType.Percentage:
                    if (parentHeight) {
                        height = parentHeight * values.height;
                    }
                    break;
            }
        }
        return sizeAfterApplyingDefaultsAndAspectRatio(width, height, values);
    };
    ConstraintValues.toRect = (values, parentSize, autoSize = null, pixelAlign = false, freeSpace = null) => {
        let x = values.left || 0;
        let y = values.top || 0;
        let width = null;
        let height = null;
        const parentWidth = parentSize ? Animatable_1.Animatable.getNumber(parentSize.width) : null;
        const parentHeight = parentSize ? Animatable_1.Animatable.getNumber(parentSize.height) : null;
        const hOpposingPinsOffset = pinnedOffset(values.left, values.right);
        if (parentWidth && isFiniteNumber_1.isFiniteNumber(hOpposingPinsOffset)) {
            width = parentWidth - hOpposingPinsOffset;
        }
        else if (autoSize && values.widthType === DimensionType.Auto) {
            width = autoSize.width;
        }
        else if (isFiniteNumber_1.isFiniteNumber(values.width)) {
            switch (values.widthType) {
                case DimensionType.FixedNumber:
                    width = values.width;
                    break;
                case DimensionType.FractionOfFreeSpace:
                    width = freeSpace
                        ? (freeSpace.freeSpaceInParent.width / freeSpace.freeSpaceUnitDivisor.width) * values.width
                        : null;
                    break;
                case DimensionType.Percentage:
                    if (parentWidth) {
                        width = parentWidth * values.width;
                    }
                    break;
            }
        }
        const vOpposingPinsOffset = pinnedOffset(values.top, values.bottom);
        if (parentHeight && isFiniteNumber_1.isFiniteNumber(vOpposingPinsOffset)) {
            height = parentHeight - vOpposingPinsOffset;
        }
        else if (autoSize && values.heightType === DimensionType.Auto) {
            height = autoSize.height;
        }
        else if (isFiniteNumber_1.isFiniteNumber(values.height)) {
            switch (values.heightType) {
                case DimensionType.FixedNumber:
                    height = values.height;
                    break;
                case DimensionType.FractionOfFreeSpace:
                    height = freeSpace
                        ? (freeSpace.freeSpaceInParent.height / freeSpace.freeSpaceUnitDivisor.height) * values.height
                        : null;
                    break;
                case DimensionType.Percentage:
                    if (parentHeight) {
                        height = parentHeight * values.height;
                    }
                    break;
            }
        }
        const sizeWithDefaults = sizeAfterApplyingDefaultsAndAspectRatio(width, height, values);
        width = sizeWithDefaults.width;
        height = sizeWithDefaults.height;
        if (values.left !== null) {
            x = values.left;
        }
        else if (parentWidth && values.right !== null) {
            x = parentWidth - values.right - width;
        }
        else if (parentWidth) {
            x = values.centerAnchorX * parentWidth - width / 2;
        }
        if (values.top !== null) {
            y = values.top;
        }
        else if (parentHeight && values.bottom !== null) {
            y = parentHeight - values.bottom - height;
        }
        else if (parentHeight) {
            y = values.centerAnchorY * parentHeight - height / 2;
        }
        const f = { x, y, width, height };
        if (pixelAlign) {
            return Rect_1.Rect.pixelAligned(f);
        }
        return f;
    };
})(ConstraintValues = exports.ConstraintValues || (exports.ConstraintValues = {}));
const defaultWidth = 200;
const defaultHeight = 200;
function sizeAfterApplyingDefaultsAndAspectRatio(width, height, values) {
    let w = isFiniteNumber_1.isFiniteNumber(width) ? width : defaultWidth;
    let h = isFiniteNumber_1.isFiniteNumber(height) ? height : defaultHeight;
    if (isFiniteNumber_1.isFiniteNumber(values.aspectRatio) && values.aspectRatio > 0) {
        if (isFiniteNumber_1.isFiniteNumber(values.left) && isFiniteNumber_1.isFiniteNumber(values.right)) {
            h = w / values.aspectRatio;
        }
        else if (isFiniteNumber_1.isFiniteNumber(values.top) && isFiniteNumber_1.isFiniteNumber(values.bottom)) {
            w = h * values.aspectRatio;
        }
        else if (values.widthType !== DimensionType.FixedNumber) {
            h = w / values.aspectRatio;
        }
        else {
            w = h * values.aspectRatio;
        }
    }
    return {
        width: w,
        height: h,
    };
}
function pinnedOffset(start, end) {
    if (!isFiniteNumber_1.isFiniteNumber(start) || !isFiniteNumber_1.isFiniteNumber(end))
        return null;
    return start + end;
}
function getMergedConstraintsProps(props, constraints) {
    const result = {};
    if (props.constraints) {
        result.constraints = Object.assign(Object.assign({}, props.constraints), constraints);
    }
    else {
        Object.assign(result, constraints);
    }
    return result;
}
exports.getMergedConstraintsProps = getMergedConstraintsProps;


/***/ }),

/***/ "./src/render/types/Gradient.ts":
/*!**************************************!*\
  !*** ./src/render/types/Gradient.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RadialGradient = exports.LinearGradient = void 0;
const LinearGradient_1 = __webpack_require__(/*! ./LinearGradient */ "./src/render/types/LinearGradient.ts");
Object.defineProperty(exports, "LinearGradient", { enumerable: true, get: function () { return LinearGradient_1.LinearGradient; } });
const RadialGradient_1 = __webpack_require__(/*! ./RadialGradient */ "./src/render/types/RadialGradient.ts");
Object.defineProperty(exports, "RadialGradient", { enumerable: true, get: function () { return RadialGradient_1.RadialGradient; } });


/***/ }),

/***/ "./src/render/types/Line.ts":
/*!**********************************!*\
  !*** ./src/render/types/Line.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Line = void 0;
const Point_1 = __webpack_require__(/*! ./Point */ "./src/render/types/Point.ts");
function Line(a, b) {
    return { a, b };
}
exports.Line = Line;
(function (Line) {
    function intersection(lineA, lineB) {
        const x1 = lineA.a.x;
        const y1 = lineA.a.y;
        const x2 = lineA.b.x;
        const y2 = lineA.b.y;
        const x3 = lineB.a.x;
        const y3 = lineB.a.y;
        const x4 = lineB.b.x;
        const y4 = lineB.b.y;
        const d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);
        if (d === 0) {
            return null;
        }
        const xi = ((x3 - x4) * (x1 * y2 - y1 * x2) - (x1 - x2) * (x3 * y4 - y3 * x4)) / d;
        const yi = ((y3 - y4) * (x1 * y2 - y1 * x2) - (y1 - y2) * (x3 * y4 - y3 * x4)) / d;
        return { x: xi, y: yi };
    }
    Line.intersection = intersection;
    Line.isOrthogonal = (line) => {
        return line.a.x === line.b.x || line.a.y === line.b.y;
    };
    Line.perpendicular = (line, pointOnLine) => {
        const deltaX = line.a.x - line.b.x;
        const deltaY = line.a.y - line.b.y;
        const pointB = Point_1.Point(pointOnLine.x - deltaY, pointOnLine.y + deltaX);
        return Line(pointB, pointOnLine);
    };
    function projectPoint(line, point) {
        const perp = Line.perpendicular(line, point);
        return intersection(line, perp);
    }
    Line.projectPoint = projectPoint;
})(Line || (Line = {}));
exports.Line = Line;


/***/ }),

/***/ "./src/render/types/LinearGradient.ts":
/*!********************************************!*\
  !*** ./src/render/types/LinearGradient.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.LinearGradient = void 0;
const gradientColorStops_1 = __webpack_require__(/*! ../utils/gradientColorStops */ "./src/render/utils/gradientColorStops.ts");
const SimpleGradient_1 = __webpack_require__(/*! ./SimpleGradient */ "./src/render/types/SimpleGradient.ts");
const MultiStopGradient_1 = __webpack_require__(/*! ./MultiStopGradient */ "./src/render/types/MultiStopGradient.ts");
const linearGradientKeys = ["angle", "alpha"];
var LinearGradient;
(function (LinearGradient) {
    function isLinearGradient(value) {
        return (value &&
            linearGradientKeys.every(key => key in value) &&
            (SimpleGradient_1.isSimpleGradient(value) || MultiStopGradient_1.isMultiStopGradient(value)));
    }
    LinearGradient.isLinearGradient = isLinearGradient;
    function hash(linearGradient) {
        return linearGradient.angle ^ gradientColorStops_1.gradientColorStopsHash(linearGradient, linearGradient.alpha);
    }
    LinearGradient.hash = hash;
    function toCSS(linearGradient, overrideAngle) {
        const stops = gradientColorStops_1.gradientColorStops(linearGradient, linearGradient.alpha);
        const angle = overrideAngle !== undefined ? overrideAngle : linearGradient.angle;
        const cssStops = stops.map(stop => `${stop.value} ${stop.position * 100}%`);
        return `linear-gradient(${angle}deg, ${cssStops.join(", ")})`;
    }
    LinearGradient.toCSS = toCSS;
})(LinearGradient = exports.LinearGradient || (exports.LinearGradient = {}));


/***/ }),

/***/ "./src/render/types/MultiStopGradient.ts":
/*!***********************************************!*\
  !*** ./src/render/types/MultiStopGradient.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isMultiStopGradient = void 0;
const multiStopGradientKeys = ["stops"];
function isMultiStopGradient(value) {
    return value && multiStopGradientKeys.every(key => key in value);
}
exports.isMultiStopGradient = isMultiStopGradient;


/***/ }),

/***/ "./src/render/types/NavigationLink.ts":
/*!********************************************!*\
  !*** ./src/render/types/NavigationLink.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NavigationTransitionType = exports.NavigateTo = void 0;
var NavigateTo;
(function (NavigateTo) {
    NavigateTo["Previous"] = "@Previous";
})(NavigateTo = exports.NavigateTo || (exports.NavigateTo = {}));
var NavigationTransitionType;
(function (NavigationTransitionType) {
    NavigationTransitionType["push"] = "push";
    NavigationTransitionType["instant"] = "instant";
    NavigationTransitionType["fade"] = "fade";
    NavigationTransitionType["modal"] = "modal";
    NavigationTransitionType["overlay"] = "overlay";
    NavigationTransitionType["flip"] = "flip";
    NavigationTransitionType["magicMotion"] = "magicMotion";
})(NavigationTransitionType = exports.NavigationTransitionType || (exports.NavigationTransitionType = {}));


/***/ }),

/***/ "./src/render/types/NewConstraints.tsx":
/*!*********************************************!*\
  !*** ./src/render/types/NewConstraints.tsx ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useConstraints = exports.useProvideParentSize = exports.ConsumeParentSize = exports.ProvideParentSize = exports.isSize = exports.useParentSize = exports.deprecatedParentSize = exports.ConstraintsContext = exports.ParentSizeState = exports.getConstraintValues = exports.calculateRect = exports.calculateSize = exports.constraintsEnabled = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
const Constraints_1 = __webpack_require__(/*! ./Constraints */ "./src/render/types/Constraints.ts");
const isFiniteNumber_1 = __webpack_require__(/*! ../utils/isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
function isString(t) {
    return typeof t === "string";
}
function containsInvalidStringValues(props) {
    const { left, right, top, bottom, center } = props;
    if ([right, bottom].some(isString)) {
        return true;
    }
    if (isString(left) && (!center || center === "y")) {
        return true;
    }
    if (isString(top) && (!center || center === "x")) {
        return true;
    }
    return false;
}
function constraintsEnabled(props) {
    const { _constraints } = props;
    if (!_constraints) {
        return false;
    }
    if (containsInvalidStringValues(props)) {
        return false;
    }
    return _constraints.enabled;
}
exports.constraintsEnabled = constraintsEnabled;
function sizeFromFiniteNumberProps(props) {
    const { size } = props;
    let { width, height } = props;
    if (isFiniteNumber_1.isFiniteNumber(size)) {
        if (width === undefined) {
            width = size;
        }
        if (height === undefined) {
            height = size;
        }
    }
    if (isFiniteNumber_1.isFiniteNumber(width) && isFiniteNumber_1.isFiniteNumber(height)) {
        return {
            width: width,
            height: height,
        };
    }
    return null;
}
function rectFromFiniteNumberProps(props) {
    const size = sizeFromFiniteNumberProps(props);
    if (size === null) {
        return null;
    }
    const { left, top } = props;
    if (isFiniteNumber_1.isFiniteNumber(left) && isFiniteNumber_1.isFiniteNumber(top)) {
        return Object.assign({ x: left, y: top }, size);
    }
    return null;
}
function calculateSize(props, parentSize) {
    if (!constraintsEnabled(props) ||
        parentSize === ParentSizeState.Disabled ||
        parentSize === ParentSizeState.DisabledForCurrentLevel) {
        return sizeFromFiniteNumberProps(props);
    }
    const constraintValues = getConstraintValues(props);
    const pixelAlign = true;
    const rect = Constraints_1.ConstraintValues.toRect(constraintValues, deprecatedParentSize(parentSize), null, pixelAlign);
    return { width: rect.width, height: rect.height };
}
exports.calculateSize = calculateSize;
function calculateRect(props, parentSize, pixelAlign = true) {
    if (!constraintsEnabled(props) ||
        parentSize === ParentSizeState.Disabled ||
        parentSize === ParentSizeState.DisabledForCurrentLevel) {
        return rectFromFiniteNumberProps(props);
    }
    const constraintValues = getConstraintValues(props);
    return Constraints_1.ConstraintValues.toRect(constraintValues, deprecatedParentSize(parentSize), null, pixelAlign);
}
exports.calculateRect = calculateRect;
function getConstraintValues(props) {
    const { left, right, top, bottom, center, _constraints, size } = props;
    let { width, height } = props;
    if (width === undefined) {
        width = size;
    }
    if (height === undefined) {
        height = size;
    }
    const { aspectRatio, autoSize } = _constraints;
    const constraintMask = Constraints_1.ConstraintMask.quickfix({
        left: isFiniteNumber_1.isFiniteNumber(left),
        right: isFiniteNumber_1.isFiniteNumber(right),
        top: isFiniteNumber_1.isFiniteNumber(top),
        bottom: isFiniteNumber_1.isFiniteNumber(bottom),
        widthType: Constraints_1.valueToDimensionType(width),
        heightType: Constraints_1.valueToDimensionType(height),
        aspectRatio: aspectRatio || null,
        fixedSize: autoSize === true,
    });
    let widthValue = null;
    let heightValue = null;
    let widthType = Constraints_1.DimensionType.FixedNumber;
    let heightType = Constraints_1.DimensionType.FixedNumber;
    if (constraintMask.widthType !== Constraints_1.DimensionType.FixedNumber && typeof width === "string") {
        const parsedWidth = parseFloat(width);
        if (width.endsWith("fr")) {
            widthType = Constraints_1.DimensionType.FractionOfFreeSpace;
            widthValue = parsedWidth;
        }
        else if (width === "auto") {
            widthType = Constraints_1.DimensionType.Auto;
        }
        else {
            widthType = Constraints_1.DimensionType.Percentage;
            widthValue = parsedWidth / 100;
        }
    }
    else if (width !== undefined && typeof width !== "string") {
        widthValue = width;
    }
    if (constraintMask.heightType !== Constraints_1.DimensionType.FixedNumber && typeof height === "string") {
        const parsedHeight = parseFloat(height);
        if (height.endsWith("fr")) {
            heightType = Constraints_1.DimensionType.FractionOfFreeSpace;
            heightValue = parsedHeight;
        }
        else if (height === "auto") {
            heightType = Constraints_1.DimensionType.Auto;
        }
        else {
            heightType = Constraints_1.DimensionType.Percentage;
            heightValue = parseFloat(height) / 100;
        }
    }
    else if (height !== undefined && typeof height !== "string") {
        heightValue = height;
    }
    let centerAnchorX = 0.5;
    let centerAnchorY = 0.5;
    if (center === true || center === "x") {
        constraintMask.left = false;
        if (typeof left === "string") {
            centerAnchorX = parseFloat(left) / 100;
        }
    }
    if (center === true || center === "y") {
        constraintMask.top = false;
        if (typeof top === "string") {
            centerAnchorY = parseFloat(top) / 100;
        }
    }
    return {
        left: constraintMask.left ? left : null,
        right: constraintMask.right ? right : null,
        top: constraintMask.top ? top : null,
        bottom: constraintMask.bottom ? bottom : null,
        widthType,
        heightType,
        width: widthValue,
        height: heightValue,
        aspectRatio: constraintMask.aspectRatio || null,
        centerAnchorX: centerAnchorX,
        centerAnchorY: centerAnchorY,
    };
}
exports.getConstraintValues = getConstraintValues;
var ParentSizeState;
(function (ParentSizeState) {
    ParentSizeState[ParentSizeState["Unknown"] = 0] = "Unknown";
    ParentSizeState[ParentSizeState["Disabled"] = 1] = "Disabled";
    ParentSizeState[ParentSizeState["DisabledForCurrentLevel"] = 2] = "DisabledForCurrentLevel";
})(ParentSizeState = exports.ParentSizeState || (exports.ParentSizeState = {}));
exports.ConstraintsContext = React.createContext({ size: ParentSizeState.Unknown });
function deprecatedParentSize(parentSize) {
    if (parentSize === ParentSizeState.Unknown ||
        parentSize === ParentSizeState.Disabled ||
        parentSize === ParentSizeState.DisabledForCurrentLevel) {
        return null;
    }
    return parentSize;
}
exports.deprecatedParentSize = deprecatedParentSize;
function useParentSize() {
    return React.useContext(exports.ConstraintsContext).size;
}
exports.useParentSize = useParentSize;
function isSize(o) {
    return typeof o === "object";
}
exports.isSize = isSize;
const ProvideParentSize = props => {
    const currentParentSize = useParentSize();
    const { parentSize, children } = props;
    const memoKey = isSize(parentSize) ? [parentSize.width, parentSize.height] : [parentSize, -1];
    const value = React.useMemo(() => ({ size: parentSize }), memoKey);
    if (currentParentSize === ParentSizeState.Disabled) {
        return children ? React.createElement(React.Fragment, null, children) : null;
    }
    return React.createElement(exports.ConstraintsContext.Provider, { value: value }, children);
};
exports.ProvideParentSize = ProvideParentSize;
exports.ConsumeParentSize = exports.ConstraintsContext.Consumer;
function useProvideParentSize(node, parentSize) {
    return React.createElement(exports.ProvideParentSize, { parentSize: parentSize }, node);
}
exports.useProvideParentSize = useProvideParentSize;
function useConstraints(props) {
    const parentSize = useParentSize();
    return calculateRect(props, parentSize);
}
exports.useConstraints = useConstraints;


/***/ }),

/***/ "./src/render/types/PathSegment.ts":
/*!*****************************************!*\
  !*** ./src/render/types/PathSegment.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PathSegment = void 0;
const Point_1 = __webpack_require__(/*! ./Point */ "./src/render/types/Point.ts");
class PathSegment {
    constructor(value) {
        this.__class = "PathSegment";
        this.x = 0;
        this.y = 0;
        this.handleMirroring = "straight";
        this.handleOutX = 0;
        this.handleOutY = 0;
        this.handleInX = 0;
        this.handleInY = 0;
        this.radius = 0;
        if (value) {
            Object.assign(this, value);
        }
    }
    merge(value) {
        return Object.assign(Object.create(Object.getPrototypeOf(this)), this, value);
    }
}
exports.PathSegment = PathSegment;
PathSegment.displayName = "WithClassDiscriminatorMixin(PathSegment)";
;
PathSegment.prototype.__class = "PathSegment";
(function (PathSegment) {
    PathSegment.point = (pathSegment) => {
        return { x: pathSegment.x, y: pathSegment.y };
    };
    PathSegment.handleOut = (pathSegment) => {
        return { x: pathSegment.handleOutX, y: pathSegment.handleOutY };
    };
    PathSegment.handleIn = (pathSegment) => {
        return { x: pathSegment.handleInX, y: pathSegment.handleInY };
    };
    PathSegment.calculatedHandleOut = (pathSegment) => {
        switch (pathSegment.handleMirroring) {
            case "symmetric":
            case "disconnected":
            case "asymmetric":
                return Point_1.Point.add(PathSegment.point(pathSegment), PathSegment.handleOut(pathSegment));
            default:
                return { x: pathSegment.x, y: pathSegment.y };
        }
    };
    PathSegment.calculatedHandleIn = (pathSegment) => {
        switch (pathSegment.handleMirroring) {
            case "symmetric":
                return Point_1.Point.subtract(PathSegment.point(pathSegment), PathSegment.handleOut(pathSegment));
            case "disconnected":
            case "asymmetric":
                return Point_1.Point.add(PathSegment.point(pathSegment), PathSegment.handleIn(pathSegment));
            default:
                return PathSegment.point(pathSegment);
        }
    };
    PathSegment.curveDefault = (points, index) => {
        if (points.length > 2) {
            let pointBefore;
            let pointAfter;
            if (index === 0) {
                pointBefore = points[points.length - 1];
            }
            else {
                pointBefore = points[index - 1];
            }
            if (index === points.length - 1) {
                pointAfter = points[0];
            }
            else {
                pointAfter = points[index + 1];
            }
            const delta = Point_1.Point.subtract(PathSegment.point(pointAfter), PathSegment.point(pointBefore));
            return { x: delta.x / 4, y: delta.y / 4 };
        }
        return { x: 10, y: 10 };
    };
})(PathSegment = exports.PathSegment || (exports.PathSegment = {}));


/***/ }),

/***/ "./src/render/types/PathSegments.ts":
/*!******************************************!*\
  !*** ./src/render/types/PathSegments.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/types/Point.ts":
/*!***********************************!*\
  !*** ./src/render/types/Point.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Point = void 0;
const roundedNumber_1 = __webpack_require__(/*! ../utils/roundedNumber */ "./src/render/utils/roundedNumber.ts");
function Point(x, y) {
    return { x, y };
}
exports.Point = Point;
(function (Point) {
    Point.add = (...args) => {
        return args.reduce((previousValue, currentValue) => {
            return { x: previousValue.x + currentValue.x, y: previousValue.y + currentValue.y };
        }, { x: 0, y: 0 });
    };
    Point.subtract = (a, b) => {
        return { x: a.x - b.x, y: a.y - b.y };
    };
    Point.multiply = (a, b) => {
        return { x: a.x * b, y: a.y * b };
    };
    Point.divide = (a, b) => {
        return { x: a.x / b, y: a.y / b };
    };
    Point.absolute = (point) => {
        return {
            x: Math.abs(point.x),
            y: Math.abs(point.y),
        };
    };
    Point.reverse = (point) => {
        return {
            x: point.x * -1,
            y: point.y * -1,
        };
    };
    Point.pixelAligned = (point, offset = { x: 0, y: 0 }) => {
        return {
            x: roundedNumber_1.roundWithOffset(point.x, offset.x),
            y: roundedNumber_1.roundWithOffset(point.y, offset.y),
        };
    };
    Point.distance = (a, b) => {
        const deltaX = Math.abs(a.x - b.x);
        const deltaY = Math.abs(a.y - b.y);
        return Math.sqrt(deltaX * deltaX + deltaY * deltaY);
    };
    Point.angle = (a, b) => {
        return (Math.atan2(b.y - a.y, b.x - a.x) * 180) / Math.PI - 90;
    };
    Point.isEqual = (a, b) => {
        return a.x === b.x && a.y === b.y;
    };
    Point.rotationNormalizer = () => {
        let lastValue;
        return (value) => {
            if (typeof lastValue !== "number") {
                lastValue = value;
            }
            const diff = lastValue - value;
            const maxDiff = Math.abs(diff) + 180;
            const nTimes = Math.floor(maxDiff / 360);
            if (diff < 180) {
                value -= nTimes * 360;
            }
            if (diff > 180) {
                value += nTimes * 360;
            }
            lastValue = value;
            return value;
        };
    };
    function center(a, b) {
        return {
            x: (a.x + b.x) / 2,
            y: (a.y + b.y) / 2,
        };
    }
    Point.center = center;
})(Point || (Point = {}));
exports.Point = Point;


/***/ }),

/***/ "./src/render/types/PropertyControls.ts":
/*!**********************************************!*\
  !*** ./src/render/types/PropertyControls.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ControlType = void 0;
var ControlType;
(function (ControlType) {
    ControlType["Boolean"] = "boolean";
    ControlType["Number"] = "number";
    ControlType["String"] = "string";
    ControlType["FusedNumber"] = "fusednumber";
    ControlType["Enum"] = "enum";
    ControlType["SegmentedEnum"] = "segmentedenum";
    ControlType["Color"] = "color";
    ControlType["Image"] = "image";
    ControlType["File"] = "file";
    ControlType["ComponentInstance"] = "componentinstance";
    ControlType["Array"] = "array";
    ControlType["EventHandler"] = "eventhandler";
    ControlType["Transition"] = "transition";
    ControlType["Object"] = "object";
})(ControlType = exports.ControlType || (exports.ControlType = {}));


/***/ }),

/***/ "./src/render/types/RadialGradient.ts":
/*!********************************************!*\
  !*** ./src/render/types/RadialGradient.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.RadialGradient = void 0;
const gradientColorStops_1 = __webpack_require__(/*! ../utils/gradientColorStops */ "./src/render/utils/gradientColorStops.ts");
const SimpleGradient_1 = __webpack_require__(/*! ./SimpleGradient */ "./src/render/types/SimpleGradient.ts");
const MultiStopGradient_1 = __webpack_require__(/*! ./MultiStopGradient */ "./src/render/types/MultiStopGradient.ts");
const radialGradientKeys = [
    "widthFactor",
    "heightFactor",
    "centerAnchorX",
    "centerAnchorY",
    "alpha",
];
var RadialGradient;
(function (RadialGradient) {
    function isRadialGradient(value) {
        return (value &&
            radialGradientKeys.every(key => key in value) &&
            (SimpleGradient_1.isSimpleGradient(value) || MultiStopGradient_1.isMultiStopGradient(value)));
    }
    RadialGradient.isRadialGradient = isRadialGradient;
    function hash(radialGradient) {
        return (radialGradient.centerAnchorX ^
            radialGradient.centerAnchorY ^
            radialGradient.widthFactor ^
            radialGradient.heightFactor ^
            gradientColorStops_1.gradientColorStopsHash(radialGradient, radialGradient.alpha));
    }
    RadialGradient.hash = hash;
    function toCSS(radialGradient) {
        const { alpha, widthFactor, heightFactor, centerAnchorX, centerAnchorY } = radialGradient;
        const stops = gradientColorStops_1.gradientColorStops(radialGradient, alpha);
        const cssStops = stops.map(stop => `${stop.value} ${stop.position * 100}%`);
        return `radial-gradient(${widthFactor * 100}% ${heightFactor * 100}% at ${centerAnchorX * 100}% ${centerAnchorY * 100}%, ${cssStops.join(", ")})`;
    }
    RadialGradient.toCSS = toCSS;
})(RadialGradient = exports.RadialGradient || (exports.RadialGradient = {}));


/***/ }),

/***/ "./src/render/types/Rect.ts":
/*!**********************************!*\
  !*** ./src/render/types/Rect.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Rect = void 0;
const Point_1 = __webpack_require__(/*! ./Point */ "./src/render/types/Point.ts");
const roundedNumber_1 = __webpack_require__(/*! ../utils/roundedNumber */ "./src/render/utils/roundedNumber.ts");
var Rect;
(function (Rect) {
    function equals(rect, other) {
        if (rect === other)
            return true;
        if (!rect || !other)
            return false;
        return rect.x === other.x && rect.y === other.y && rect.width === other.width && rect.height === other.height;
    }
    Rect.equals = equals;
    Rect.atOrigin = (size) => {
        return Object.assign(Object.assign({}, size), { x: 0, y: 0 });
    };
    Rect.fromTwoPoints = (a, b) => {
        return {
            x: Math.min(a.x, b.x),
            y: Math.min(a.y, b.y),
            width: Math.abs(a.x - b.x),
            height: Math.abs(a.y - b.y),
        };
    };
    Rect.fromRect = (rect) => {
        return {
            x: rect.left,
            y: rect.top,
            width: rect.right - rect.left,
            height: rect.bottom - rect.top,
        };
    };
    Rect.multiply = (rect, n) => {
        return {
            x: rect.x * n,
            y: rect.y * n,
            width: rect.width * n,
            height: rect.height * n,
        };
    };
    Rect.divide = (rect, n) => {
        return Rect.multiply(rect, 1 / n);
    };
    Rect.offset = (rect, delta) => {
        const xOffset = typeof delta.x === "number" ? delta.x : 0;
        const yOffset = typeof delta.y === "number" ? delta.y : 0;
        return Object.assign(Object.assign({}, rect), { x: rect.x + xOffset, y: rect.y + yOffset });
    };
    function inflate(rect, value) {
        if (value === 0)
            return rect;
        const doubleValue = 2 * value;
        return {
            x: rect.x - value,
            y: rect.y - value,
            width: rect.width + doubleValue,
            height: rect.height + doubleValue,
        };
    }
    Rect.inflate = inflate;
    Rect.pixelAligned = (rect) => {
        const x = Math.round(rect.x);
        const y = Math.round(rect.y);
        const rectMaxX = Math.round(rect.x + rect.width);
        const rectMaxY = Math.round(rect.y + rect.height);
        const width = Math.max(rectMaxX - x, 0);
        const height = Math.max(rectMaxY - y, 0);
        return { x, y, width, height };
    };
    Rect.halfPixelAligned = (rect) => {
        const x = Math.round(rect.x * 2) / 2;
        const y = Math.round(rect.y * 2) / 2;
        const rectMaxX = Math.round((rect.x + rect.width) * 2) / 2;
        const rectMaxY = Math.round((rect.y + rect.height) * 2) / 2;
        const width = Math.max(rectMaxX - x, 1);
        const height = Math.max(rectMaxY - y, 1);
        return { x, y, width, height };
    };
    Rect.round = (rect, decimals = 0) => {
        const x = roundedNumber_1.roundedNumber(rect.x, decimals);
        const y = roundedNumber_1.roundedNumber(rect.y, decimals);
        const width = roundedNumber_1.roundedNumber(rect.width, decimals);
        const height = roundedNumber_1.roundedNumber(rect.height, decimals);
        return { x, y, width, height };
    };
    Rect.roundToOutside = (rect) => {
        const x = Math.floor(rect.x);
        const y = Math.floor(rect.y);
        const rectMaxX = Math.ceil(rect.x + rect.width);
        const rectMaxY = Math.ceil(rect.y + rect.height);
        const width = Math.max(rectMaxX - x, 0);
        const height = Math.max(rectMaxY - y, 0);
        return { x, y, width, height };
    };
    Rect.minX = (rect) => {
        return rect.x;
    };
    Rect.maxX = (rect) => {
        return rect.x + rect.width;
    };
    Rect.minY = (rect) => {
        return rect.y;
    };
    Rect.maxY = (rect) => {
        return rect.y + rect.height;
    };
    Rect.positions = (rect) => {
        return {
            minX: rect.x,
            midX: rect.x + rect.width / 2,
            maxX: Rect.maxX(rect),
            minY: rect.y,
            midY: rect.y + rect.height / 2,
            maxY: Rect.maxY(rect),
        };
    };
    Rect.center = (rect) => {
        return {
            x: rect.x + rect.width / 2,
            y: rect.y + rect.height / 2,
        };
    };
    Rect.fromPoints = (ps) => {
        const xValues = ps.map(point => point.x);
        const yValues = ps.map(point => point.y);
        const x = Math.min(...xValues);
        const y = Math.min(...yValues);
        const width = Math.max(...xValues) - x;
        const height = Math.max(...yValues) - y;
        return { x, y, width, height };
    };
    Rect.merge = (...rect) => {
        const min = {
            x: Math.min(...rect.map(Rect.minX)),
            y: Math.min(...rect.map(Rect.minY)),
        };
        const max = {
            x: Math.max(...rect.map(Rect.maxX)),
            y: Math.max(...rect.map(Rect.maxY)),
        };
        return Rect.fromTwoPoints(min, max);
    };
    Rect.intersection = (rect1, rect2) => {
        const x = Math.max(rect1.x, rect2.x);
        const x2 = Math.min(rect1.x + rect1.width, rect2.x + rect2.width);
        const y = Math.max(rect1.y, rect2.y);
        const y2 = Math.min(rect1.y + rect1.height, rect2.y + rect2.height);
        return { x, y, width: x2 - x, height: y2 - y };
    };
    Rect.points = (rect) => {
        return [
            { x: Rect.minX(rect), y: Rect.minY(rect) },
            { x: Rect.minX(rect), y: Rect.maxY(rect) },
            { x: Rect.maxX(rect), y: Rect.minY(rect) },
            { x: Rect.maxX(rect), y: Rect.maxY(rect) },
        ];
    };
    Rect.transform = (rect, matrix) => {
        const { x: x1, y: y1 } = matrix.transformPoint({ x: rect.x, y: rect.y });
        const { x: x2, y: y2 } = matrix.transformPoint({ x: rect.x + rect.width, y: rect.y });
        const { x: x3, y: y3 } = matrix.transformPoint({ x: rect.x + rect.width, y: rect.y + rect.height });
        const { x: x4, y: y4 } = matrix.transformPoint({ x: rect.x, y: rect.y + rect.height });
        const x = Math.min(x1, x2, x3, x4);
        const width = Math.max(x1, x2, x3, x4) - x;
        const y = Math.min(y1, y2, y3, y4);
        const height = Math.max(y1, y2, y3, y4) - y;
        return { x, y, width, height };
    };
    Rect.containsPoint = (rect, point) => {
        if (point.x < Rect.minX(rect)) {
            return false;
        }
        if (point.x > Rect.maxX(rect)) {
            return false;
        }
        if (point.y < Rect.minY(rect)) {
            return false;
        }
        if (point.y > Rect.maxY(rect)) {
            return false;
        }
        if (isNaN(rect.x)) {
            return false;
        }
        if (isNaN(rect.y)) {
            return false;
        }
        return true;
    };
    Rect.containsRect = (rectA, rectB) => {
        for (const point of Rect.points(rectB)) {
            if (!Rect.containsPoint(rectA, point)) {
                return false;
            }
        }
        return true;
    };
    Rect.toCSS = (rect) => {
        return {
            display: "block",
            transform: `translate(${rect.x}px, ${rect.y}px)`,
            width: `${rect.width}px`,
            height: `${rect.height}px`,
        };
    };
    Rect.inset = (rect, n) => {
        return {
            x: rect.x + n,
            y: rect.y + n,
            width: Math.max(0, rect.width - 2 * n),
            height: Math.max(0, rect.height - 2 * n),
        };
    };
    Rect.intersects = (rectA, rectB) => {
        return !(rectB.x >= Rect.maxX(rectA) || Rect.maxX(rectB) <= rectA.x || rectB.y >= Rect.maxY(rectA) || Rect.maxY(rectB) <= rectA.y);
    };
    Rect.overlapHorizontally = (rectA, rectB) => {
        const aMax = Rect.maxX(rectA);
        const bMax = Rect.maxX(rectB);
        return aMax > rectB.x && bMax > rectA.x;
    };
    Rect.overlapVertically = (rectA, rectB) => {
        const aMax = Rect.maxY(rectA);
        const bMax = Rect.maxY(rectB);
        return aMax > rectB.y && bMax > rectA.y;
    };
    Rect.doesNotIntersect = (rect, rects) => {
        return (rects.find(comparingRect => {
            return Rect.intersects(comparingRect, rect);
        }) === undefined);
    };
    Rect.isEqual = (rectA, rectB) => {
        if (rectA && rectB) {
            const { x, y, width, height } = rectA;
            return rectB.x === x && rectB.y === y && rectB.width === width && rectB.height === height;
        }
        else {
            return rectA === rectB;
        }
    };
    Rect.cornerPoints = (rect) => {
        const rectMinX = rect.x;
        const rectMaxX = rect.x + rect.width;
        const rectMinY = rect.y;
        const rectMaxY = rect.y + rect.height;
        const corner1 = { x: rectMinX, y: rectMinY };
        const corner2 = { x: rectMaxX, y: rectMinY };
        const corner3 = { x: rectMaxX, y: rectMaxY };
        const corner4 = { x: rectMinX, y: rectMaxY };
        return [corner1, corner2, corner3, corner4];
    };
    Rect.midPoints = (rect) => {
        const rectMinX = rect.x;
        const rectMidX = rect.x + rect.width / 2;
        const rectMaxX = rect.x + rect.width;
        const rectMinY = rect.y;
        const rectMidY = rect.y + rect.height / 2;
        const rectMaxY = rect.y + rect.height;
        const corner1 = { x: rectMidX, y: rectMinY };
        const corner2 = { x: rectMaxX, y: rectMidY };
        const corner3 = { x: rectMidX, y: rectMaxY };
        const corner4 = { x: rectMinX, y: rectMidY };
        return [corner1, corner2, corner3, corner4];
    };
    Rect.pointDistance = (rect, point) => {
        let x = 0;
        let y = 0;
        if (point.x < rect.x) {
            x = rect.x - point.x;
        }
        else if (point.x > Rect.maxX(rect)) {
            x = point.x - Rect.maxX(rect);
        }
        if (point.y < rect.y) {
            y = rect.y - point.y;
        }
        else if (point.y > Rect.maxY(rect)) {
            y = point.y - Rect.maxY(rect);
        }
        return Point_1.Point.distance({ x, y }, { x: 0, y: 0 });
    };
    const fromAnyDefaults = {
        x: 0,
        y: 0,
        width: 0,
        height: 0,
    };
    Rect.fromAny = (rect, defaults = fromAnyDefaults) => {
        return {
            x: rect.x || defaults.x,
            y: rect.y || defaults.y,
            width: rect.width || defaults.width,
            height: rect.height || defaults.height,
        };
    };
})(Rect = exports.Rect || (exports.Rect = {}));


/***/ }),

/***/ "./src/render/types/RenderEnvironment.ts":
/*!***********************************************!*\
  !*** ./src/render/types/RenderEnvironment.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.useRenderEnvironment = exports.setGlobalRenderEnvironment = exports.executeInRenderEnvironment = exports.RenderEnvironment = exports.RenderTarget = void 0;
var RenderTarget;
(function (RenderTarget) {
    RenderTarget["canvas"] = "CANVAS";
    RenderTarget["export"] = "EXPORT";
    RenderTarget["thumbnail"] = "THUMBNAIL";
    RenderTarget["preview"] = "PREVIEW";
})(RenderTarget = exports.RenderTarget || (exports.RenderTarget = {}));
exports.RenderEnvironment = {
    imageBaseURL: "",
    target: RenderTarget.preview,
    zoom: 1,
};
function executeInRenderEnvironment(customEnvironment, task) {
    const previousEnvironment = Object.assign({}, exports.RenderEnvironment);
    Object.assign(exports.RenderEnvironment, customEnvironment);
    const result = task();
    Object.assign(exports.RenderEnvironment, previousEnvironment);
    return result;
}
exports.executeInRenderEnvironment = executeInRenderEnvironment;
function setGlobalRenderEnvironment(environment) {
    Object.assign(exports.RenderEnvironment, environment);
}
exports.setGlobalRenderEnvironment = setGlobalRenderEnvironment;
function useRenderEnvironment(target, imageBaseURL, zoom) {
    let willChangeElements = false;
    if (exports.RenderEnvironment.imageBaseURL !== imageBaseURL) {
        exports.RenderEnvironment.imageBaseURL = imageBaseURL;
        willChangeElements = true;
    }
    if (exports.RenderEnvironment.target !== target) {
        exports.RenderEnvironment.target = target;
        willChangeElements = true;
    }
    if (exports.RenderEnvironment.zoom !== zoom) {
        exports.RenderEnvironment.zoom = zoom;
    }
    return { willChangeElements };
}
exports.useRenderEnvironment = useRenderEnvironment;
(function (RenderTarget) {
    function current() {
        return exports.RenderEnvironment.target;
    }
    RenderTarget.current = current;
    function hasRestrictions() {
        const target = exports.RenderEnvironment.target;
        if (target === RenderTarget.canvas)
            return true;
        if (target === RenderTarget.export)
            return true;
        return false;
    }
    RenderTarget.hasRestrictions = hasRestrictions;
})(RenderTarget = exports.RenderTarget || (exports.RenderTarget = {}));


/***/ }),

/***/ "./src/render/types/Shadow.ts":
/*!************************************!*\
  !*** ./src/render/types/Shadow.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.BoxShadow = exports.Shadow = void 0;
const shadowKeys = ["color", "x", "y", "blur"];
var Shadow;
(function (Shadow) {
    function is(shadow) {
        return shadow && shadowKeys.every(key => key in shadow);
    }
    Shadow.is = is;
})(Shadow = exports.Shadow || (exports.Shadow = {}));
const boxShadowKeys = ["inset", "color", "x", "y", "blur", "spread"];
var BoxShadow;
(function (BoxShadow) {
    function is(shadow) {
        return shadow && boxShadowKeys.every(key => key in shadow);
    }
    BoxShadow.is = is;
    function toCSS(shadow) {
        const inset = shadow.inset ? "inset " : "";
        return `${inset}${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.spread}px ${shadow.color}`;
    }
    BoxShadow.toCSS = toCSS;
})(BoxShadow = exports.BoxShadow || (exports.BoxShadow = {}));


/***/ }),

/***/ "./src/render/types/SimpleGradient.ts":
/*!********************************************!*\
  !*** ./src/render/types/SimpleGradient.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isSimpleGradient = void 0;
const simpleGradientKeys = ["start", "end"];
function isSimpleGradient(value) {
    return value && simpleGradientKeys.every(key => key in value);
}
exports.isSimpleGradient = isSimpleGradient;


/***/ }),

/***/ "./src/render/types/Size.ts":
/*!**********************************!*\
  !*** ./src/render/types/Size.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Size = void 0;
function Size(width, height) {
    return { width, height };
}
exports.Size = Size;
(function (Size) {
    Size.equals = (sizeA, sizeB) => {
        if (sizeA === sizeB)
            return true;
        if (!sizeA || !sizeB)
            return false;
        return sizeA.width === sizeB.width && sizeA.height === sizeB.height;
    };
    Size.update = (fromSize, toSize, keepAspectRatio = false) => {
        let { width, height } = fromSize;
        const sizeRatio = width / height;
        width = toSize.width !== undefined ? toSize.width : width;
        height = toSize.height !== undefined ? toSize.height : height;
        if (keepAspectRatio) {
            if (toSize.width === undefined && toSize.height !== undefined) {
                width = toSize.height * sizeRatio;
            }
            if (toSize.width !== undefined && toSize.height === undefined && sizeRatio !== 0) {
                height = toSize.width / sizeRatio;
            }
        }
        return { width, height };
    };
    function subtract(sizeA, sizeB) {
        return {
            width: Math.max(0, sizeA.width - sizeB.width),
            height: Math.max(0, sizeA.height - sizeB.height),
        };
    }
    Size.subtract = subtract;
    Size.zero = Size(0, 0);
    Size.isZero = function (size) {
        return size === Size.zero || (size.width === 0 && size.height === 0);
    };
    Size.defaultIfZero = function (width, height, size) {
        if (Size.isZero(size)) {
            return Size(width, height);
        }
        return size;
    };
})(Size || (Size = {}));
exports.Size = Size;


/***/ }),

/***/ "./src/render/types/Stroke.ts":
/*!************************************!*\
  !*** ./src/render/types/Stroke.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/types/StrokeAlignment.ts":
/*!*********************************************!*\
  !*** ./src/render/types/StrokeAlignment.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/types/TransformValues.ts":
/*!*********************************************!*\
  !*** ./src/render/types/TransformValues.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });


/***/ }),

/***/ "./src/render/types/svgElementAttributeDefaults.ts":
/*!*********************************************************!*\
  !*** ./src/render/types/svgElementAttributeDefaults.ts ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.svgElementAttributeDefaults = void 0;
exports.svgElementAttributeDefaults = {
    stroke: "none",
    strokeWidth: 1,
    strokeLinecap: "butt",
    strokeLinejoin: "miter",
    strokeMiterlimit: 4,
    strokeDasharray: "0",
    strokeDashoffset: 0,
    strokeOpacity: 1,
    fill: "black",
    fillRule: "nonzero",
    fillOpacity: 1,
};


/***/ }),

/***/ "./src/render/utils/annotateTypeOnStringify.ts":
/*!*****************************************************!*\
  !*** ./src/render/utils/annotateTypeOnStringify.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isOfAnnotatedType = exports.annotateTypeOnStringify = void 0;
function annotateTypeOnStringify(ctor, typeName) {
    const existingToJSON = ctor.prototype.toJSON;
    ctor.prototype.toJSON = function () {
        const base = existingToJSON ? existingToJSON.apply(this) : this;
        return Object.assign({}, base, { __type__: typeName });
    };
    return ctor;
}
exports.annotateTypeOnStringify = annotateTypeOnStringify;
function isOfAnnotatedType(object, typeName) {
    return object && object.__type__ && object.__type__ === typeName;
}
exports.isOfAnnotatedType = isOfAnnotatedType;


/***/ }),

/***/ "./src/render/utils/createTransformValues.ts":
/*!***************************************************!*\
  !*** ./src/render/utils/createTransformValues.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.transformValues = void 0;
function createTransformValues(baseTransform, mode) {
    let { x, y } = baseTransform;
    const { width, height, rotation } = baseTransform;
    if (mode === "resetXYKeepFraction") {
        x = x - Math.floor(x);
        y = y - Math.floor(y);
    }
    else if (mode === "resetXY") {
        x = 0;
        y = 0;
    }
    return { x, y, width, height, rotation };
}
function getTransformMode(isRootVectorNode, includeTransform) {
    if (includeTransform !== undefined) {
        if (includeTransform) {
            return "asIs";
        }
    }
    else {
        if (!isRootVectorNode) {
            return "asIs";
        }
    }
    if (isRootVectorNode) {
        return "resetXYKeepFraction";
    }
    else {
        return "resetXY";
    }
}
function transformValues(rect, rotation, isRootVectorNode, includeTransform) {
    const transformMode = getTransformMode(isRootVectorNode, includeTransform);
    const baseTransform = Object.assign(Object.assign({}, rect), { rotation });
    const transform = createTransformValues(baseTransform, transformMode);
    return transform;
}
exports.transformValues = transformValues;


/***/ }),

/***/ "./src/render/utils/debounce.ts":
/*!**************************************!*\
  !*** ./src/render/utils/debounce.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.debounce = void 0;
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
function debounce(fn, time) {
    let timeout;
    const debounced = (...args) => {
        safeWindow_1.safeWindow.clearTimeout(timeout);
        timeout = safeWindow_1.safeWindow.setTimeout(fn, time, ...args);
    };
    const cancel = () => {
        safeWindow_1.safeWindow.clearTimeout(timeout);
    };
    debounced.cancel = cancel;
    return debounced;
}
exports.debounce = debounce;


/***/ }),

/***/ "./src/render/utils/dom.ts":
/*!*********************************!*\
  !*** ./src/render/utils/dom.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DOM = exports.dispatchKeyDownEvent = exports.convertFromPagePoint = exports.convertToPagePoint = exports.fromEventForClient = exports.fromEventForPage = exports.getPageFrame = exports.convertFromPageFrame = exports.convertToPageFrame = exports.frameFromElements = exports.frameFromElement = exports.ready = void 0;
const Rect_1 = __webpack_require__(/*! ../types/Rect */ "./src/render/types/Rect.ts");
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
const ready = (callback) => {
    if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", () => setTimeout(callback));
        return;
    }
    callback();
};
exports.ready = ready;
const frameFromElement = (element) => {
    const frame = Rect_1.Rect.fromRect(element.getBoundingClientRect());
    frame.x = frame.x + safeWindow_1.safeWindow.scrollX;
    frame.y = frame.y + safeWindow_1.safeWindow.scrollY;
    return frame;
};
exports.frameFromElement = frameFromElement;
const frameFromElements = (elements) => {
    return Rect_1.Rect.merge(...elements.map(exports.frameFromElement));
};
exports.frameFromElements = frameFromElements;
const convertToPageFrame = (frame, element) => {
    const point = exports.convertToPagePoint(frame, element);
    return {
        x: point.x,
        y: point.y,
        width: frame.width,
        height: frame.height,
    };
};
exports.convertToPageFrame = convertToPageFrame;
const convertFromPageFrame = (frame, element) => {
    const point = exports.convertFromPagePoint(frame, element);
    return {
        x: point.x,
        y: point.y,
        width: frame.width,
        height: frame.height,
    };
};
exports.convertFromPageFrame = convertFromPageFrame;
const getPageFrame = (element) => {
    const rect = element.getBoundingClientRect();
    return {
        x: rect.left + safeWindow_1.safeWindow.scrollX,
        y: rect.top + safeWindow_1.safeWindow.scrollY,
        width: rect.width,
        height: rect.height,
    };
};
exports.getPageFrame = getPageFrame;
const fromEventForPage = (event) => {
    return {
        x: event.pageX,
        y: event.pageY,
    };
};
exports.fromEventForPage = fromEventForPage;
const fromEventForClient = (event) => {
    return {
        x: event.clientX,
        y: event.clientY,
    };
};
exports.fromEventForClient = fromEventForClient;
const convertToPagePoint = (point, element) => {
    const frame = exports.getPageFrame(element);
    return {
        x: point.x + frame.x,
        y: point.y + frame.y,
    };
};
exports.convertToPagePoint = convertToPagePoint;
const convertFromPagePoint = (point, element) => {
    const frame = exports.getPageFrame(element);
    return {
        x: point.x - frame.x,
        y: point.y - frame.y,
    };
};
exports.convertFromPagePoint = convertFromPagePoint;
const dispatchKeyDownEvent = (keyCode, options = {}) => {
    const keyboardEvent = new KeyboardEvent("keydown", Object.assign({ bubbles: true, keyCode: keyCode }, options));
    const activeElement = document.activeElement;
    if (activeElement) {
        activeElement.dispatchEvent(keyboardEvent);
    }
};
exports.dispatchKeyDownEvent = dispatchKeyDownEvent;
exports.DOM = {
    frameFromElement: exports.frameFromElement,
    frameFromElements: exports.frameFromElements,
    convertToPageFrame: exports.convertToPageFrame,
    convertFromPageFrame: exports.convertFromPageFrame,
    getPageFrame: exports.getPageFrame,
    fromEventForPage: exports.fromEventForPage,
    fromEventForClient: exports.fromEventForClient,
    convertToPagePoint: exports.convertToPagePoint,
    convertFromPagePoint: exports.convertFromPagePoint,
};


/***/ }),

/***/ "./src/render/utils/elementForComponent.ts":
/*!*************************************************!*\
  !*** ./src/render/utils/elementForComponent.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.elementForComponent = void 0;
const optionalReactDOM_1 = __webpack_require__(/*! ../utils/optionalReactDOM */ "./src/render/utils/optionalReactDOM.ts");
function elementForComponent(component) {
    const ReactDOM = optionalReactDOM_1.optionalReactDOM();
    if (!ReactDOM) {
        return null;
    }
    const element = ReactDOM.findDOMNode(component);
    return element;
}
exports.elementForComponent = elementForComponent;


/***/ }),

/***/ "./src/render/utils/elementPropertiesForGradient.ts":
/*!**********************************************************!*\
  !*** ./src/render/utils/elementPropertiesForGradient.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.elementPropertiesForRadialGradient = exports.elementPropertiesForLinearGradient = void 0;
const Gradient_1 = __webpack_require__(/*! ../types/Gradient */ "./src/render/types/Gradient.ts");
const Color_1 = __webpack_require__(/*! ../types/Color */ "./src/render/types/Color/index.ts");
const gradientColorStops_1 = __webpack_require__(/*! ./gradientColorStops */ "./src/render/utils/gradientColorStops.ts");
function elementPropertiesForLinearGradient(gradient, id) {
    return {
        id: `id${id}g${Gradient_1.LinearGradient.hash(gradient)}`,
        angle: gradient.angle - 90,
        stops: gradientColorStops_1.gradientColorStops(gradient).map(stop => ({
            color: stop.value,
            alpha: Color_1.ConvertColor.getAlpha(stop.value) * gradient.alpha,
            position: stop.position,
        })),
    };
}
exports.elementPropertiesForLinearGradient = elementPropertiesForLinearGradient;
function elementPropertiesForRadialGradient(gradient, id) {
    return {
        id: `id${id}g${Gradient_1.RadialGradient.hash(gradient)}`,
        widthFactor: gradient.widthFactor,
        heightFactor: gradient.heightFactor,
        centerAnchorX: gradient.centerAnchorX,
        centerAnchorY: gradient.centerAnchorY,
        stops: gradientColorStops_1.gradientColorStops(gradient).map(stop => ({
            color: stop.value,
            alpha: Color_1.ConvertColor.getAlpha(stop.value) * gradient.alpha,
            position: stop.position,
        })),
    };
}
exports.elementPropertiesForRadialGradient = elementPropertiesForRadialGradient;


/***/ }),

/***/ "./src/render/utils/extractStyleFromProps.ts":
/*!***************************************************!*\
  !*** ./src/render/utils/extractStyleFromProps.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.extractStyleFromProps = void 0;
function extractStyleFromProps(props, name, styleRef, into) {
    if (into === undefined) {
        into = name;
    }
    if (props[name] !== undefined) {
        styleRef[into] = props[name];
        return;
    }
}
exports.extractStyleFromProps = extractStyleFromProps;


/***/ }),

/***/ "./src/render/utils/filtersForNode.ts":
/*!********************************************!*\
  !*** ./src/render/utils/filtersForNode.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.collectFiltersFromProps = exports.collectBackgroundFilters = exports.collectLayerFilters = void 0;
const isFiniteNumber_1 = __webpack_require__(/*! ./isFiniteNumber */ "./src/render/utils/isFiniteNumber.ts");
const shadow_1 = __webpack_require__(/*! ../style/shadow */ "./src/render/style/shadow.tsx");
function collectLayerFilters(props, style) {
    const filters = [];
    if (isFiniteNumber_1.isFiniteNumber(props.brightness)) {
        filters.push(`brightness(${props.brightness / 100})`);
    }
    if (isFiniteNumber_1.isFiniteNumber(props.contrast)) {
        filters.push(`contrast(${props.contrast / 100})`);
    }
    if (isFiniteNumber_1.isFiniteNumber(props.grayscale)) {
        filters.push(`grayscale(${props.grayscale / 100})`);
    }
    if (isFiniteNumber_1.isFiniteNumber(props.hueRotate)) {
        filters.push(`hue-rotate(${props.hueRotate}deg)`);
    }
    if (isFiniteNumber_1.isFiniteNumber(props.invert)) {
        filters.push(`invert(${props.invert / 100})`);
    }
    if (isFiniteNumber_1.isFiniteNumber(props.saturate)) {
        filters.push(`saturate(${props.saturate / 100})`);
    }
    if (isFiniteNumber_1.isFiniteNumber(props.sepia)) {
        filters.push(`sepia(${props.sepia / 100})`);
    }
    if (isFiniteNumber_1.isFiniteNumber(props.blur)) {
        filters.push(`blur(${props.blur}px)`);
    }
    if (props.dropShadows) {
        filters.push(...shadow_1.shadowsAsFilter(props.dropShadows));
    }
    if (filters.length === 0)
        return;
    style.filter = style.WebkitFilter = filters.join(" ");
}
exports.collectLayerFilters = collectLayerFilters;
function collectBackgroundFilters(props, style) {
    if (isFiniteNumber_1.isFiniteNumber(props.backgroundBlur)) {
        style.backdropFilter = style.WebkitBackdropFilter = `blur(${props.backgroundBlur}px)`;
    }
}
exports.collectBackgroundFilters = collectBackgroundFilters;
function collectFiltersFromProps(props, style) {
    collectBackgroundFilters(props, style);
    collectLayerFilters(props, style);
}
exports.collectFiltersFromProps = collectFiltersFromProps;


/***/ }),

/***/ "./src/render/utils/getConfigFromURL.ts":
/*!**********************************************!*\
  !*** ./src/render/utils/getConfigFromURL.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getConfigFromVekterURL = exports.getConfigFromPreviewURL = void 0;
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
function getConfigFromPreviewURL(windowURLString = safeWindow_1.safeWindow.location.href) {
    if (!windowURLString) {
        throw new Error(`getConfigFromURL() called without url argument (location.href = "${safeWindow_1.safeWindow.location.href}")`);
    }
    const params = new URL(windowURLString).searchParams;
    const imageBaseURL = params.get("imageBaseURL") || "";
    const projectURL = params.get("projectURL") || "";
    const showConsole = params.get("console") === "1";
    const disableDevice = params.get("device") === "0";
    return { imageBaseURL, projectURL, showConsole, disableDevice };
}
exports.getConfigFromPreviewURL = getConfigFromPreviewURL;
function getConfigFromVekterURL(windowURLString = safeWindow_1.safeWindow.location.href) {
    if (!windowURLString) {
        throw new Error(`getConfigFromURL() called without url argument (location.href = "${safeWindow_1.safeWindow.location.href}")`);
    }
    const hash = decodeURIComponent(new URL(windowURLString).hash.slice(1));
    const [documentURL, imageBaseURL, projectURL] = hash.split("#&#");
    return { documentURL, imageBaseURL, projectURL };
}
exports.getConfigFromVekterURL = getConfigFromVekterURL;


/***/ }),

/***/ "./src/render/utils/gradientColorStops.ts":
/*!************************************************!*\
  !*** ./src/render/utils/gradientColorStops.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.gradientColorStopsHash = exports.gradientColorStops = void 0;
const string_1 = __webpack_require__(/*! ../../utils/string */ "./src/utils/string.ts");
const Color_1 = __webpack_require__(/*! ../types/Color */ "./src/render/types/Color/index.ts");
const memoize_1 = __webpack_require__(/*! ../../utils/memoize */ "./src/utils/memoize.ts");
const CSSVariableRegExp = /var\(.+\)/;
const colorCache = new Map();
function cachedMultiplyAlpha(s, a) {
    const key = [s, a];
    if (CSSVariableRegExp.test(s)) {
        return s;
    }
    return memoize_1.memoize(1000, colorCache, key, () => Color_1.ConvertColor.multiplyAlpha(s, a));
}
function gradientColorStops(gradient, alpha = 1) {
    let stops;
    if ("stops" in gradient) {
        stops = gradient.stops;
    }
    else {
        stops = [
            { value: gradient.start, position: 0 },
            { value: gradient.end, position: 1 },
        ];
    }
    if (alpha === 1) {
        return stops;
    }
    else {
        return stops.map(stop => (Object.assign(Object.assign({}, stop), { value: cachedMultiplyAlpha(stop.value, alpha) })));
    }
}
exports.gradientColorStops = gradientColorStops;
function gradientColorStopsHash(gradient, alpha) {
    let result = 0;
    gradientColorStops(gradient, alpha).forEach((stop) => {
        result ^= string_1.hash(stop.value) ^ stop.position;
    });
    return result;
}
exports.gradientColorStopsHash = gradientColorStopsHash;


/***/ }),

/***/ "./src/render/utils/gradientForShape.tsx":
/*!***********************************************!*\
  !*** ./src/render/utils/gradientForShape.tsx ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.gradientForShape = void 0;
const Gradient_1 = __webpack_require__(/*! ../types/Gradient */ "./src/render/types/Gradient.ts");
const elementPropertiesForGradient_1 = __webpack_require__(/*! ./elementPropertiesForGradient */ "./src/render/utils/elementPropertiesForGradient.ts");
function gradientForShape(nodeId, node) {
    if (Gradient_1.LinearGradient.isLinearGradient(node.fill)) {
        return elementPropertiesForGradient_1.elementPropertiesForLinearGradient(node.fill, nodeId);
    }
    if (Gradient_1.RadialGradient.isRadialGradient(node.fill)) {
        return elementPropertiesForGradient_1.elementPropertiesForRadialGradient(node.fill, nodeId);
    }
    return undefined;
}
exports.gradientForShape = gradientForShape;


/***/ }),

/***/ "./src/render/utils/imagePatternPropsForFill.tsx":
/*!*******************************************************!*\
  !*** ./src/render/utils/imagePatternPropsForFill.tsx ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.imagePatternPropsForFill = void 0;
const BackgroundImage_1 = __webpack_require__(/*! ../types/BackgroundImage */ "./src/render/types/BackgroundImage.ts");
const Animatable_1 = __webpack_require__(/*! ../../animation/Animatable/Animatable */ "./src/animation/Animatable/Animatable.ts");
function imagePatternPropsForFill(fill, frame, id) {
    fill = Animatable_1.Animatable.get(fill, "#09F");
    if (!BackgroundImage_1.BackgroundImage.isImageObject(fill))
        return undefined;
    if (!fill.pixelWidth || !fill.pixelHeight)
        return undefined;
    const imageWidth = fill.pixelWidth;
    const imageHeight = fill.pixelHeight;
    let transform;
    const { fit } = fill;
    if (fit === "fill" || fit === "fit" || !fit) {
        let scaleX = 1;
        let scaleY = 1;
        let offsetX = 0;
        let offsetY = 0;
        const imageRatio = imageWidth / imageHeight;
        const realWidth = frame.height * imageRatio;
        const realHeight = frame.width / imageRatio;
        const validScaleX = realWidth / frame.width;
        const validScaleY = realHeight / frame.height;
        if (fit === "fill" || !fit ? validScaleY > validScaleX : validScaleY < validScaleX) {
            scaleY = validScaleY;
            offsetY = (1 - validScaleY) / 2;
        }
        else {
            scaleX = validScaleX;
            offsetX = (1 - validScaleX) / 2;
        }
        transform = `translate(${offsetX}, ${offsetY}) scale(${scaleX}, ${scaleY})`;
    }
    const imageId = `id${id}g${"-fillImage"}`;
    return { id: imageId, path: fill.src, transform };
}
exports.imagePatternPropsForFill = imagePatternPropsForFill;


/***/ }),

/***/ "./src/render/utils/imageRendering.ts":
/*!********************************************!*\
  !*** ./src/render/utils/imageRendering.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.imageRenderingForZoom = exports.minZoomForPixelatedImageRendering = void 0;
function minZoomForPixelatedImageRendering(image, containerSize, devicePixelRatio = 1) {
    var _a, _b, _c, _d;
    let { width: frameWidth, height: frameHeight } = containerSize;
    const imageWidth = (_b = (_a = image.pixelWidth) !== null && _a !== void 0 ? _a : image.intrinsicWidth) !== null && _b !== void 0 ? _b : 0;
    const imageHeight = (_d = (_c = image.pixelHeight) !== null && _c !== void 0 ? _c : image.intrinsicHeight) !== null && _d !== void 0 ? _d : 0;
    if (frameWidth < 1 || frameHeight < 1 || imageWidth < 1 || imageHeight < 1) {
        return undefined;
    }
    frameWidth *= devicePixelRatio;
    frameHeight *= devicePixelRatio;
    const frameAspectRatio = frameWidth / frameHeight;
    const imageAspectRatio = imageWidth / imageHeight;
    switch (image.fit) {
        case "fill":
            if (imageAspectRatio > frameAspectRatio) {
                return imageHeight / frameHeight;
            }
            else {
                return imageWidth / frameWidth;
            }
        case "fit":
        case "stretch":
            return Math.max(imageWidth / frameWidth, imageHeight / frameHeight);
    }
}
exports.minZoomForPixelatedImageRendering = minZoomForPixelatedImageRendering;
function imageRenderingForZoom(zoom, minPixelatedZoom) {
    if (minPixelatedZoom && Math.max(1, zoom) > minPixelatedZoom) {
        return "pixelated";
    }
    return "auto";
}
exports.imageRenderingForZoom = imageRenderingForZoom;


/***/ }),

/***/ "./src/render/utils/imageUrlForAsset.ts":
/*!**********************************************!*\
  !*** ./src/render/utils/imageUrlForAsset.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.imageUrlForAsset = void 0;
const runtimeInjection_1 = __webpack_require__(/*! ../../utils/runtimeInjection */ "./src/utils/runtimeInjection.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const assetReference_1 = __webpack_require__(/*! ../../../../app/assets/src/assetReference */ "../app/assets/src/assetReference.ts");
function imageUrlForAsset(asset, size) {
    var _a;
    if (/^\w+:/.test(asset) && !assetReference_1.isAssetReference(asset))
        return asset;
    if (typeof size !== "number")
        size = undefined;
    else if (size <= 512)
        size = 512;
    else if (size <= 1024)
        size = 1024;
    else if (size <= 2048)
        size = 2048;
    else
        size = 4096;
    const isExport = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.export;
    return (_a = runtimeInjection_1.runtime.assetResolver(asset, { size, isExport })) !== null && _a !== void 0 ? _a : "";
}
exports.imageUrlForAsset = imageUrlForAsset;


/***/ }),

/***/ "./src/render/utils/injectComponentCSSRules.ts":
/*!*****************************************************!*\
  !*** ./src/render/utils/injectComponentCSSRules.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.injectComponentCSSRules = void 0;
const CSS = __importStar(__webpack_require__(/*! ./setDocumentStyles */ "./src/render/utils/setDocumentStyles.ts"));
const RenderEnvironment_1 = __webpack_require__(/*! ../../render/types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const componentCSSRules = `

[data-framer-component-type] {
    position: absolute;
}
`;
const textCSSRules = `
[data-framer-component-type="Text"] {
    cursor: inherit;
}

[data-framer-component-text-autosized] * {
    white-space: pre;
}
`;
const stackCSSRules = `
:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > *,
:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > [data-framer-component-type],
:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > [data-framer-stack-gap] > *,
:not([data-framer-generated]) > [data-framer-stack-content-wrapper] > [data-framer-stack-gap] > [data-framer-component-type] {
    position: relative;
}

[data-framer-stack-gap] > * {
    margin-top: calc(var(--stack-gap-y) / 2);
    margin-bottom: calc(var(--stack-gap-y) / 2);
    margin-right: calc(var(--stack-gap-x) / 2);
    margin-left: calc(var(--stack-gap-x) / 2);
}

/* This should take the language direction into account */
[data-framer-stack-direction-reverse="false"]
[data-framer-stack-gap]
> *:first-child,
[data-framer-stack-direction-reverse="true"]
[data-framer-stack-gap]
> *:last-child {
    margin-top: 0;
    margin-left: 0;
}

/* This should take the language direction into account */
[data-framer-stack-direction-reverse="false"]
[data-framer-stack-gap]
> *:last-child,
[data-framer-stack-direction-reverse="true"]
[data-framer-stack-gap]
> *:first-child {
    margin-right: 0;
    margin-bottom: 0;
}
`;
const navigationCSSRules = `
NavigationContainer
[data-framer-component-type="NavigationContainer"] > *,
[data-framer-component-type="NavigationContainer"] > [data-framer-component-type] {
    position: relative;
}
`;
const scrollCSSRules = `
[data-framer-component-type="Scroll"]::-webkit-scrollbar {
    display: none;
}
[data-framer-component-type="ScrollContentWrapper"] > * {
    position: relative;
}
`;
const pageContentWrapperWrapperCSSRules = `
[data-framer-component-type="PageContentWrapper"] > *,
[data-framer-component-type="PageContentWrapper"] > [data-framer-component-type] {
    position: relative;
}
`;
const presenceCSS = `
[data-is-present="false"], [data-is-present="false"] * {
    pointer-events: none !important;
}
`;
const cursorCSS = `
[data-framer-cursor="pointer"] {
    cursor: pointer;
}
[data-framer-cursor="grab"] {
    cursor: grab;
}
[data-framer-cursor="grab"]:active {
    cursor: grabbing;
}
`;
const combinedCSSRules = `
${componentCSSRules}
${textCSSRules}
${stackCSSRules}
${navigationCSSRules}
${scrollCSSRules}
${pageContentWrapperWrapperCSSRules}
${presenceCSS}
${cursorCSS}
`;
const isPreview = () => {
    return RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.preview;
};
const frameCSSRules = () => {
    return isPreview() ? ` [data-framer-component-type="Frame"] * { pointer-events: auto; } ` : ``;
};
const textSelectionCSSRules = () => {
    return isPreview()
        ? `
        body :not(input):not(textarea):not([contenteditable="true"]) {
            user-select: none;
            -webkit-user-select: none;
        }

        [data-framer-component-type="Text"], [data-framer-component-type="Text"] * {
        pointer-events: none !important;
        user-select: none;
        -webkit-user-select: none;
    }`
        : ``;
};
const injectComponentCSSRules = () => {
    CSS.setDocumentStyles(combinedCSSRules);
    CSS.setDocumentStyles(textSelectionCSSRules());
    CSS.setDocumentStyles(frameCSSRules());
};
exports.injectComponentCSSRules = injectComponentCSSRules;


/***/ }),

/***/ "./src/render/utils/isEqual.ts":
/*!*************************************!*\
  !*** ./src/render/utils/isEqual.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isEqual = void 0;
const isArray = Array.isArray;
const keyList = Object.keys;
const hasProp = Object.prototype.hasOwnProperty;
function equal(a, b, deep) {
    if (a === b)
        return true;
    if (a && b && typeof a === "object" && typeof b === "object") {
        const arrA = isArray(a);
        const arrB = isArray(b);
        let i, length, key;
        if (arrA && arrB) {
            length = a.length;
            if (length !== b.length)
                return false;
            for (i = length; i-- !== 0;) {
                if (!deep && a[i] !== b[i])
                    return false;
                if (deep && !equal(a[i], b[i], true))
                    return false;
            }
            return true;
        }
        if (arrA !== arrB)
            return false;
        const dateA = a instanceof Date;
        const dateB = b instanceof Date;
        if (dateA !== dateB)
            return false;
        if (dateA && dateB)
            return a.getTime() === b.getTime();
        const regexpA = a instanceof RegExp;
        const regexpB = b instanceof RegExp;
        if (regexpA !== regexpB)
            return false;
        if (regexpA && regexpB)
            return a.toString() === b.toString();
        if (typeof a.equals === "function" && typeof b.equals === "function") {
            return a.equals(b);
        }
        const keys = keyList(a);
        length = keys.length;
        if (length !== keyList(b).length)
            return false;
        for (i = length; i-- !== 0;) {
            if (!hasProp.call(b, keys[i]))
                return false;
        }
        for (i = length; i-- !== 0;) {
            key = keys[i];
            if (key === "_owner" && a.$$typeof) {
                continue;
            }
            if (!deep && a[key] !== b[key])
                return false;
            if (deep && !equal(a[key], b[key], true))
                return false;
        }
        return true;
    }
    return a !== a && b !== b;
}
function isEqual(a, b, deep = true) {
    try {
        return equal(a, b, deep);
    }
    catch (error) {
        if ((error.message && error.message.match(/stack|recursion/i)) || error.number === -2146828260) {
            console.warn("Warning: isEqual does not handle circular references.", error.name, error.message);
            return false;
        }
        throw error;
    }
}
exports.isEqual = isEqual;


/***/ }),

/***/ "./src/render/utils/isFiniteNumber.ts":
/*!********************************************!*\
  !*** ./src/render/utils/isFiniteNumber.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.finiteNumber = exports.isFiniteNumber = void 0;
function isFiniteNumber(value) {
    return typeof value === "number" && isFinite(value);
}
exports.isFiniteNumber = isFiniteNumber;
function finiteNumber(value) {
    return isFiniteNumber(value) ? value : undefined;
}
exports.finiteNumber = finiteNumber;


/***/ }),

/***/ "./src/render/utils/isMotionValue.ts":
/*!*******************************************!*\
  !*** ./src/render/utils/isMotionValue.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isMotionValue = void 0;
const framer_motion_1 = __webpack_require__(/*! framer-motion */ "../../node_modules/framer-motion/dist/es/index.js");
const isMotionValue = (v) => v instanceof framer_motion_1.MotionValue;
exports.isMotionValue = isMotionValue;


/***/ }),

/***/ "./src/render/utils/isShallowEqualArray.ts":
/*!*************************************************!*\
  !*** ./src/render/utils/isShallowEqualArray.ts ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isShallowEqualArray = void 0;
function isShallowEqualArray(a, b) {
    return a.length === b.length && a.every((v, i) => v === b[i]);
}
exports.isShallowEqualArray = isShallowEqualArray;


/***/ }),

/***/ "./src/render/utils/layoutHintDataPropsForCenter.ts":
/*!**********************************************************!*\
  !*** ./src/render/utils/layoutHintDataPropsForCenter.ts ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.layoutHintDataPropsForCenter = void 0;
const environment = __importStar(__webpack_require__(/*! ../../utils/environment */ "./src/utils/environment.ts"));
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const isChrome = environment.isChrome();
function layoutHintDataPropsForCenter(center) {
    const props = {};
    if (!isChrome || RenderEnvironment_1.RenderTarget.current() !== RenderEnvironment_1.RenderTarget.canvas) {
        return props;
    }
    if (center === true || center === "x") {
        props["data-framer-layout-hint-center-x"] = true;
    }
    if (center === true || center === "y") {
        props["data-framer-layout-hint-center-y"] = true;
    }
    return props;
}
exports.layoutHintDataPropsForCenter = layoutHintDataPropsForCenter;


/***/ }),

/***/ "./src/render/utils/nodeIdFromString.ts":
/*!**********************************************!*\
  !*** ./src/render/utils/nodeIdFromString.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.nodeIdFromString = void 0;
function nodeIdFromString(str) {
    return str.replace(/^id_/, "").replace(/\\/g, "");
}
exports.nodeIdFromString = nodeIdFromString;


/***/ }),

/***/ "./src/render/utils/optionalReactDOM.ts":
/*!**********************************************!*\
  !*** ./src/render/utils/optionalReactDOM.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.optionalReactDOM = void 0;
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
function optionalReactDOM() {
    if (typeof safeWindow_1.safeWindow !== "undefined" && safeWindow_1.safeWindow["ReactDOM"]) {
        return safeWindow_1.safeWindow["ReactDOM"];
    }
    return undefined;
}
exports.optionalReactDOM = optionalReactDOM;


/***/ }),

/***/ "./src/render/utils/processOverrideForwarding.ts":
/*!*******************************************************!*\
  !*** ./src/render/utils/processOverrideForwarding.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.processOverrideForwarding = void 0;
const React = __importStar(__webpack_require__(/*! react */ "react"));
function processOverrideForwarding(props, children) {
    if (!children) {
        children = props.children;
        if (!children)
            return { props, children };
    }
    let _forwardedOverrides = props._forwardedOverrides;
    const extractions = props._overrideForwardingDescription;
    if (extractions) {
        _forwardedOverrides = undefined;
        for (const key in extractions) {
            const propName = extractions[key];
            const value = props[propName];
            if (value !== undefined) {
                if (!_forwardedOverrides) {
                    _forwardedOverrides = {};
                    props = Object.assign({}, props);
                }
                _forwardedOverrides[key] = props[propName];
                delete props[propName];
            }
        }
    }
    if (!_forwardedOverrides)
        return { props, children };
    children = React.Children.map(children, (child) => {
        if (!React.isValidElement(child))
            return child;
        return React.cloneElement(child, { _forwardedOverrides });
    });
    return { props, children };
}
exports.processOverrideForwarding = processOverrideForwarding;


/***/ }),

/***/ "./src/render/utils/roundedNumber.ts":
/*!*******************************************!*\
  !*** ./src/render/utils/roundedNumber.ts ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.roundWithOffset = exports.roundedNumberString = exports.roundedNumber = void 0;
function roundedNumber(value, decimals) {
    const d = Math.round(Math.abs(decimals));
    const multiplier = Math.pow(10, d);
    return Math.round(value * multiplier) / multiplier;
}
exports.roundedNumber = roundedNumber;
function roundedNumberString(value, decimals) {
    const result = value.toFixed(decimals);
    if (decimals === 0) {
        return result;
    }
    return result.replace(/\.?0+$/, "");
}
exports.roundedNumberString = roundedNumberString;
function roundWithOffset(value, offset) {
    if (offset === 0) {
        return Math.round(value);
    }
    offset -= offset | 0;
    if (offset < 0) {
        offset = 1 - offset;
    }
    return Math.round(value - offset) + offset;
}
exports.roundWithOffset = roundWithOffset;


/***/ }),

/***/ "./src/render/utils/setDocumentStyles.ts":
/*!***********************************************!*\
  !*** ./src/render/utils/setDocumentStyles.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.setDocumentStyles = void 0;
const cache = new Set();
let styleElement;
function setDocumentStyles(css) {
    if (cache.has(css) || typeof document === "undefined")
        return;
    cache.add(css);
    if (!styleElement) {
        styleElement = document.createElement("style");
        styleElement.type = "text/css";
        document.head && document.head.appendChild(styleElement);
    }
    styleElement.appendChild(document.createTextNode(css));
}
exports.setDocumentStyles = setDocumentStyles;


/***/ }),

/***/ "./src/render/utils/setLayerBacked.ts":
/*!********************************************!*\
  !*** ./src/render/utils/setLayerBacked.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.forceLayerBackingOnElement = exports.forceLayerBackingWithCSSProperties = exports.forceLayerBackingWithMotionStyle = exports.translateZ = void 0;
const environment_1 = __webpack_require__(/*! ../../utils/environment */ "./src/utils/environment.ts");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const smallValue = "0.000001px";
exports.translateZ = ` translateZ(${smallValue})`;
const useTranslateZHack = environment_1.isFramerX() || environment_1.isSafari() || environment_1.isTest();
function forceLayerBackingWithMotionStyle(motionStyle) {
    motionStyle.willChange = "transform";
    const onCanvas = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas;
    if (useTranslateZHack && onCanvas) {
        motionStyle.translateZ = smallValue;
    }
}
exports.forceLayerBackingWithMotionStyle = forceLayerBackingWithMotionStyle;
function forceLayerBackingWithCSSProperties(cssProperties) {
    cssProperties.willChange = "transform";
    setTranslateZHack(cssProperties, true);
}
exports.forceLayerBackingWithCSSProperties = forceLayerBackingWithCSSProperties;
function forceLayerBackingOnElement(element, enabled) {
    if (enabled) {
        const willChange = element.style.willChange || "";
        if (willChange !== "transform") {
            element.style.willChange = "transform";
        }
    }
    else {
        element.style.removeProperty("will-change");
    }
    setTranslateZHack(element.style, enabled);
}
exports.forceLayerBackingOnElement = forceLayerBackingOnElement;
function setTranslateZHack(style, enabled) {
    const onCanvas = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas;
    if (!useTranslateZHack || !onCanvas) {
        return;
    }
    const transform = style.transform || "";
    if (enabled) {
        const hasTranslateZ = transform.includes(exports.translateZ);
        if (!hasTranslateZ) {
            style.transform = transform + exports.translateZ;
        }
    }
    else {
        style.transform = transform.replace(exports.translateZ, "");
    }
}


/***/ }),

/***/ "./src/render/utils/throttle.ts":
/*!**************************************!*\
  !*** ./src/render/utils/throttle.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.throttle = void 0;
const safeWindow_1 = __webpack_require__(/*! ../../utils/safeWindow */ "./src/utils/safeWindow.ts");
function throttle(fn, time) {
    let previous = 0;
    let timeout;
    const later = (...args) => {
        previous = Date.now();
        timeout = undefined;
        fn(...args);
    };
    return (...args) => {
        const now = Date.now();
        const remaining = time - (now - previous);
        if (remaining <= 0 || remaining > time) {
            if (timeout) {
                safeWindow_1.safeWindow.clearTimeout(timeout);
                timeout = undefined;
            }
            previous = now;
            fn(...args);
        }
        else if (!timeout) {
            timeout = safeWindow_1.safeWindow.setTimeout(later, remaining, ...args);
        }
    };
}
exports.throttle = throttle;


/***/ }),

/***/ "./src/render/utils/transformCustomValues.ts":
/*!***************************************************!*\
  !*** ./src/render/utils/transformCustomValues.ts ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.transformValues = void 0;
const hey_listen_1 = __webpack_require__(/*! hey-listen */ "../../node_modules/hey-listen/dist/hey-listen.es.js");
const style_value_types_1 = __webpack_require__(/*! style-value-types */ "../../node_modules/style-value-types/dist/style-value-types.es.js");
const Color_1 = __webpack_require__(/*! ../../render/types/Color */ "./src/render/types/Color/index.ts");
const isCustomValue = (v) => {
    return Boolean(v && typeof v === "object" && v.mix && v.toValue);
};
const isColorProp = (key) => key === "background" || key.endsWith("color") || key.endsWith("Color");
const resolveSingleCustomValue = (key, v) => {
    if (v && typeof v === "object") {
        hey_listen_1.invariant(isCustomValue(v), "Motion styles must be numbers, strings, or an instance with a `toValue` and `mix` methods.");
        return v.toValue();
    }
    else if (isColorProp(key) && typeof v === "string" && Color_1.Color.isColor(v)) {
        return Color_1.Color(v).toValue();
    }
    return v;
};
const resolveCustomValues = (key, v) => {
    if (Array.isArray(v)) {
        const numValues = v.length;
        const resolved = [];
        for (let i = 0; i < numValues; i++) {
            resolved.push(resolveSingleCustomValue(key, v[i]));
        }
        return resolved;
    }
    else {
        return resolveSingleCustomValue(key, v);
    }
};
const customValueHandlers = {
    size: {
        set: (inputValues, outputValues, value) => {
            if (inputValues.height === undefined) {
                outputValues.height = value;
            }
            if (inputValues.width === undefined) {
                outputValues.width = value;
            }
        },
        type: style_value_types_1.px,
    },
    radius: {
        set: (inputValues, outputValues, value) => {
            outputValues.borderRadius = value;
        },
        type: style_value_types_1.px,
    },
    shadow: {
        set: (inputValues, outputValues, value) => {
            outputValues.boxShadow = value;
        },
        type: style_value_types_1.complex,
    },
};
const transformValues = (values) => {
    const transformedValues = {};
    for (const key in values) {
        const resolved = resolveCustomValues(key, values[key]);
        const valueHandler = customValueHandlers[key];
        if (valueHandler) {
            const isDefaultType = valueHandler.type && typeof values[key] === "number";
            const value = isDefaultType ? valueHandler.type.transform(values[key]) : values[key];
            valueHandler.set(values, transformedValues, value);
        }
        else {
            transformedValues[key] = resolved;
        }
    }
    return transformedValues;
};
exports.transformValues = transformValues;


/***/ }),

/***/ "./src/render/utils/transformString.ts":
/*!*********************************************!*\
  !*** ./src/render/utils/transformString.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.transformString = void 0;
const roundedNumber_1 = __webpack_require__(/*! ./roundedNumber */ "./src/render/utils/roundedNumber.ts");
function transformString(transform) {
    if (transform === undefined) {
        return undefined;
    }
    const { x, y, rotation, width, height } = transform;
    let result;
    if (x !== 0 || y !== 0) {
        result = `translate(${roundedNumber_1.roundedNumberString(x, 3)} ${roundedNumber_1.roundedNumberString(y, 3)})`;
    }
    if (rotation !== 0) {
        const roundedRotation = roundedNumber_1.roundedNumberString(rotation, 4);
        const roundedWidth = roundedNumber_1.roundedNumberString(width / 2, 3);
        const roundedHeight = roundedNumber_1.roundedNumberString(height / 2, 3);
        const rotationString = `rotate(${roundedRotation} ${roundedWidth} ${roundedHeight})`;
        result = result ? `${result} ${rotationString}` : rotationString;
    }
    return result;
}
exports.transformString = transformString;


/***/ }),

/***/ "./src/render/utils/transformTemplate.ts":
/*!***********************************************!*\
  !*** ./src/render/utils/transformTemplate.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.transformTemplate = void 0;
function transformTemplate(center) {
    return (_, generated) => {
        if (center === true) {
            return `translate(-50%, -50%) ${generated}`;
        }
        else {
            if (center === "x") {
                return `translateX(-50%) ${generated}`;
            }
            else if (center === "y") {
                return `translateY(-50%) ${generated}`;
            }
        }
        return generated || "none";
    };
}
exports.transformTemplate = transformTemplate;


/***/ }),

/***/ "./src/render/utils/useLayoutId.ts":
/*!*****************************************!*\
  !*** ./src/render/utils/useLayoutId.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.useLayoutId = void 0;
const react_1 = __webpack_require__(/*! react */ "react");
const LayoutIdContext_1 = __webpack_require__(/*! ../../components/AnimateLayout/LayoutIdContext */ "./src/components/AnimateLayout/LayoutIdContext.tsx");
function useLayoutId(props, specificLayoutId, postfix) {
    const { name, id, duplicatedFrom, _canMagicMotion = false, __fromCodeComponentNode = false } = props;
    const { getLayoutId, enabled } = react_1.useContext(LayoutIdContext_1.LayoutIdContext);
    return react_1.useMemo(() => {
        if (!enabled)
            return props.layoutId;
        const existingLayoutId = specificLayoutId || props.layoutId;
        if (!existingLayoutId) {
            if (!id || !_canMagicMotion || __fromCodeComponentNode)
                return undefined;
        }
        const layoutIdCandidate = existingLayoutId || getLayoutId({ id, name, duplicatedFrom });
        if (!layoutIdCandidate)
            return undefined;
        return postfix ? `${layoutIdCandidate}-${postfix}` : layoutIdCandidate;
    }, [enabled]);
}
exports.useLayoutId = useLayoutId;


/***/ }),

/***/ "./src/render/utils/useMeasureLayout.ts":
/*!**********************************************!*\
  !*** ./src/render/utils/useMeasureLayout.ts ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.useMeasureLayout = void 0;
const react_1 = __webpack_require__(/*! react */ "react");
const RenderEnvironment_1 = __webpack_require__(/*! ../types/RenderEnvironment */ "./src/render/types/RenderEnvironment.ts");
const runtimeInjection_1 = __webpack_require__(/*! ../../utils/runtimeInjection */ "./src/utils/runtimeInjection.ts");
const nodeIdFromString_1 = __webpack_require__(/*! ./nodeIdFromString */ "./src/render/utils/nodeIdFromString.ts");
const ComponentContainerContext_1 = __webpack_require__(/*! ../presentation/ComponentContainerContext */ "./src/render/presentation/ComponentContainerContext.tsx");
function useMeasureLayout(props, ref, getChildren = () => [], options = {}) {
    const { id, visible, _needsMeasure } = props;
    const { skipHook = false } = options;
    const inCodeComponent = Boolean(react_1.useContext(ComponentContainerContext_1.ComponentContainerContext));
    const onCanvas = RenderEnvironment_1.RenderTarget.current() === RenderEnvironment_1.RenderTarget.canvas;
    react_1.useLayoutEffect(() => {
        if (!onCanvas || inCodeComponent || skipHook) {
            return;
        }
        if (!(ref.current && id && visible && _needsMeasure)) {
            return;
        }
        runtimeInjection_1.runtime.queueMeasureRequest(nodeIdFromString_1.nodeIdFromString(id), ref.current, getChildren(ref.current));
    });
}
exports.useMeasureLayout = useMeasureLayout;


/***/ }),

/***/ "./src/render/utils/useWebkitFixes.ts":
/*!********************************************!*\
  !*** ./src/render/utils/useWebkitFixes.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.resetSetStyle = exports.useWebkitFixes = void 0;
const react_1 = __webpack_require__(/*! react */ "react");
function useWebkitFixes(elementRef, style) {
    const mixBlendModeSet = style.mixBlendMode && style.mixBlendMode !== "normal";
    const radiusSet = style.borderRadius !== undefined;
    const clip = style.overflow === "hidden";
    useDidUpdate(() => {
        if (mixBlendModeSet) {
            resetSetStyle(elementRef.current, "mixBlendMode", style.mixBlendMode);
        }
    }, [mixBlendModeSet, elementRef.current]);
    useDidUpdate(() => {
        if (clip && radiusSet) {
            resetSetStyle(elementRef.current, "overflow", "hidden", false);
        }
    }, [clip, radiusSet, elementRef.current]);
}
exports.useWebkitFixes = useWebkitFixes;
function useDidUpdate(update, dependencies) {
    const hasMounted = react_1.useRef(false);
    react_1.useEffect(() => {
        if (hasMounted.current) {
            update();
        }
        hasMounted.current = true;
    }, dependencies);
}
function resetSetStyle(element, key, toValue, microtask = true) {
    if (!element) {
        return;
    }
    const value = toValue ? toValue : element.style[key];
    const reset = () => {
        element.style[key] = value;
    };
    element.style[key] = null;
    if (microtask) {
        void Promise.resolve().then(reset);
    }
    else {
        setTimeout(reset, 0);
    }
}
exports.resetSetStyle = resetSetStyle;


/***/ }),

/***/ "./src/utils/addActionControls.ts":
/*!****************************************!*\
  !*** ./src/utils/addActionControls.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.addActionControls = void 0;
const runtimeInjection_1 = __webpack_require__(/*! ../utils/runtimeInjection */ "./src/utils/runtimeInjection.ts");
function addActionControls(action, title, controls) {
    runtimeInjection_1.runtime.addActionControls(action, title, controls);
}
exports.addActionControls = addActionControls;


/***/ }),

/***/ "./src/utils/addPropertyControls.ts":
/*!******************************************!*\
  !*** ./src/utils/addPropertyControls.ts ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getPropertyControls = exports.addPropertyControls = void 0;
function addPropertyControls(component, propertyControls) {
    Object.assign(component, { propertyControls });
}
exports.addPropertyControls = addPropertyControls;
function getPropertyControls(component) {
    return component.propertyControls;
}
exports.getPropertyControls = getPropertyControls;


/***/ }),

/***/ "./src/utils/environment.ts":
/*!**********************************!*\
  !*** ./src/utils/environment.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.environment = exports.deviceFont = exports.deviceOS = exports.deviceType = exports.isWebPSupported = exports.isJP2Supported = exports.devicePixelRatio = exports.isLocalAssetUrl = exports.isLocalUrl = exports.isLocalServerUrl = exports.isRelativeUrl = exports.isTest = exports.isDataUrl = exports.isFileUrl = exports.isMobile = exports.isTablet = exports.isPhone = exports.isDesktop = exports.isTouch = exports.isWindows = exports.isMacOS = exports.isIOS = exports.isAndroid = exports.isEdge = exports.isFramerX = exports.isFirefox = exports.isSafari = exports.isChrome = exports.webkitVersion = exports.isWebKit = exports.isBrowser = void 0;
const safeWindow_1 = __webpack_require__(/*! ../utils/safeWindow */ "./src/utils/safeWindow.ts");
const isBrowser = () => typeof document === "object";
exports.isBrowser = isBrowser;
const isWebKit = () => navigator.userAgent.includes("AppleWebKit/") && !exports.isChrome() && !exports.isEdge();
exports.isWebKit = isWebKit;
const webkitVersion = () => {
    let version = -1;
    const regexp = /AppleWebKit\/([\d.]+)/;
    const result = regexp.exec(navigator.userAgent);
    if (result) {
        version = parseFloat(result[1]);
    }
    return version;
};
exports.webkitVersion = webkitVersion;
const isChrome = () => /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor) && !exports.isEdge();
exports.isChrome = isChrome;
const isSafari = () => /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);
exports.isSafari = isSafari;
const isFirefox = () => /Firefox\/\d+\.\d+$/.test(navigator.userAgent);
exports.isFirefox = isFirefox;
const isFramerX = () => /FramerX/.test(navigator.userAgent);
exports.isFramerX = isFramerX;
const isEdge = () => /Edg\//.test(navigator.userAgent);
exports.isEdge = isEdge;
const isAndroid = () => /(android)/i.test(navigator.userAgent);
exports.isAndroid = isAndroid;
const isIOS = () => /(iPhone|iPod|iPad)/i.test(navigator.platform);
exports.isIOS = isIOS;
const isMacOS = () => /Mac/.test(navigator.platform);
exports.isMacOS = isMacOS;
const isWindows = () => /Win/.test(navigator.platform);
exports.isWindows = isWindows;
const isTouch = () => safeWindow_1.safeWindow.ontouchstart === null && safeWindow_1.safeWindow.ontouchmove === null && safeWindow_1.safeWindow.ontouchend === null;
exports.isTouch = isTouch;
const isDesktop = () => exports.deviceType() === "desktop";
exports.isDesktop = isDesktop;
const isPhone = () => exports.deviceType() === "phone";
exports.isPhone = isPhone;
const isTablet = () => exports.deviceType() === "tablet";
exports.isTablet = isTablet;
const isMobile = () => exports.isPhone() || exports.isTablet();
exports.isMobile = isMobile;
const isFileUrl = (url) => url.startsWith("file://");
exports.isFileUrl = isFileUrl;
const isDataUrl = (url) => url.startsWith("data:");
exports.isDataUrl = isDataUrl;
const isTest = () => "dev" === "test";
exports.isTest = isTest;
const isRelativeUrl = (url) => !(/^([a-zA-Z]{1,8}:\/\/).*$/.test(url));
exports.isRelativeUrl = isRelativeUrl;
const isLocalServerUrl = (url) => /[a-zA-Z]{1,8}:\/\/127\.0\.0\.1/.test(url) || /[a-zA-Z]{1,8}:\/\/localhost/.test(url);
exports.isLocalServerUrl = isLocalServerUrl;
const isLocalUrl = (url) => {
    if (exports.isFileUrl(url))
        return true;
    if (exports.isLocalServerUrl(url))
        return true;
    return false;
};
exports.isLocalUrl = isLocalUrl;
const isLocalAssetUrl = (url, baseUrl) => {
    if (baseUrl === null)
        baseUrl = safeWindow_1.safeWindow.location.href;
    if (exports.isDataUrl(url))
        return false;
    if (exports.isLocalUrl(url))
        return true;
    if (exports.isRelativeUrl(url) && exports.isLocalUrl(baseUrl))
        return true;
    return false;
};
exports.isLocalAssetUrl = isLocalAssetUrl;
const devicePixelRatio = () => safeWindow_1.safeWindow.devicePixelRatio;
exports.devicePixelRatio = devicePixelRatio;
const isJP2Supported = function () {
    if (exports.isFirefox())
        return false;
    return exports.isWebKit();
};
exports.isJP2Supported = isJP2Supported;
const isWebPSupported = () => exports.isChrome();
exports.isWebPSupported = isWebPSupported;
const deviceType = () => {
    if (/(tablet)|(iPad)|(Nexus 9)/i.test(navigator.userAgent))
        return "tablet";
    if (/(mobi)/i.test(navigator.userAgent))
        return "phone";
    return "desktop";
};
exports.deviceType = deviceType;
const deviceOS = () => {
    if (exports.isMacOS())
        return "macos";
    if (exports.isIOS())
        return "ios";
    if (exports.isAndroid())
        return "android";
    if (exports.isWindows())
        return "windows";
};
exports.deviceOS = deviceOS;
const deviceFont = (os) => {
    if (!os) {
        os = exports.deviceOS();
    }
    const fonts = {
        apple: "-apple-system, BlinkMacSystemFont, SF Pro Text, SF UI Text, Helvetica Neue",
        google: "Roboto, Helvetica Neue",
        microsoft: "Segoe UI, Helvetica Neue",
    };
    if (os === "macos")
        return fonts.apple;
    if (os === "ios")
        return fonts.apple;
    if (os === "android")
        return fonts.google;
    if (os === "windows")
        return fonts.microsoft;
    return fonts.apple;
};
exports.deviceFont = deviceFont;
exports.environment = {
    isWebKit: exports.isWebKit,
    webkitVersion: exports.webkitVersion,
    isChrome: exports.isChrome,
    isSafari: exports.isSafari,
    isFirefox: exports.isFirefox,
    isFramerX: exports.isFramerX,
    isEdge: exports.isEdge,
    isAndroid: exports.isAndroid,
    isIOS: exports.isIOS,
    isMacOS: exports.isMacOS,
    isWindows: exports.isWindows,
    isTouch: exports.isTouch,
    isDesktop: exports.isDesktop,
    isPhone: exports.isPhone,
    isTablet: exports.isTablet,
    isMobile: exports.isMobile,
    isFileUrl: exports.isFileUrl,
    isDataUrl: exports.isDataUrl,
    isRelativeUrl: exports.isRelativeUrl,
    isLocalServerUrl: exports.isLocalServerUrl,
    isLocalUrl: exports.isLocalUrl,
    isLocalAssetUrl: exports.isLocalAssetUrl,
    devicePixelRatio: exports.devicePixelRatio,
    isJP2Supported: exports.isJP2Supported,
    isWebPSupported: exports.isWebPSupported,
    deviceType: exports.deviceType,
    deviceOS: exports.deviceOS,
    deviceFont: exports.deviceFont,
};


/***/ }),

/***/ "./src/utils/events.ts":
/*!*****************************!*\
  !*** ./src/utils/events.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.pointForEvent = void 0;
const safeWindow_1 = __webpack_require__(/*! ../utils/safeWindow */ "./src/utils/safeWindow.ts");
function pointForEvent(event, customTarget = null) {
    let target;
    if (customTarget instanceof HTMLElement) {
        target = customTarget;
    }
    if (!target && event.target instanceof HTMLElement) {
        target = event.target;
    }
    if (!target) {
        return { x: event.pageX, y: event.pageY };
    }
    if (safeWindow_1.safeWindow.webkitConvertPointFromPageToNode) {
        let webkitPoint = new WebKitPoint(event.pageX, event.pageY);
        webkitPoint = safeWindow_1.safeWindow.webkitConvertPointFromPageToNode(target, webkitPoint);
        return { x: webkitPoint.x, y: webkitPoint.y };
    }
    const rect = target.getBoundingClientRect();
    const width = parseFloat(target.style.width);
    const height = parseFloat(target.style.height);
    const scale = {
        x: width ? width / rect.width : 1,
        y: height ? height / rect.height : 1,
    };
    const point = {
        x: scale.x * (event.pageX - rect.left - target.clientLeft + target.scrollLeft),
        y: scale.y * (event.pageY - rect.top - target.clientTop + target.scrollTop),
    };
    return point;
}
exports.pointForEvent = pointForEvent;


/***/ }),

/***/ "./src/utils/index.ts":
/*!****************************!*\
  !*** ./src/utils/index.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.string = exports.math = exports.environment = exports.events = void 0;
const events = __importStar(__webpack_require__(/*! ./events */ "./src/utils/events.ts"));
exports.events = events;
const math = __importStar(__webpack_require__(/*! ./math */ "./src/utils/math.ts"));
exports.math = math;
const string = __importStar(__webpack_require__(/*! ./string */ "./src/utils/string.ts"));
exports.string = string;
const environment = __importStar(__webpack_require__(/*! ./environment */ "./src/utils/environment.ts"));
exports.environment = environment;


/***/ }),

/***/ "./src/utils/inspect.ts":
/*!******************************!*\
  !*** ./src/utils/inspect.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.inspect = void 0;
const inspectObjectType_1 = __webpack_require__(/*! ./inspectObjectType */ "./src/utils/inspectObjectType.ts");
const utils_1 = __webpack_require__(/*! ./utils */ "./src/utils/utils.ts");
function inspect(item, max, l) {
    if (max === undefined) {
        max = 5;
    }
    if (l === undefined) {
        l = 0;
    }
    if (item === null) {
        return "null";
    }
    if (item === undefined) {
        return "undefined";
    }
    if (utils_1.isFunction(item.toInspect)) {
        return item.toInspect();
    }
    if (utils_1.isString(item)) {
        return `"${item}"`;
    }
    if (utils_1.isNumber(item)) {
        return `${item}`;
    }
    if (utils_1.isFunction(item)) {
        let code = item.toString().slice("function ".length).replace(/\n/g, "").replace(/\s+/g, " ");
        const limit = 50;
        if (code.length > limit && l > 0) {
            code = `${code.slice(0, +limit + 1 || undefined).trim()}… }`;
        }
        return `<Function ${code}>`;
    }
    if (utils_1.isArray(item)) {
        if (l > max) {
            return "[...]";
        }
        return `[${item.map(i => inspect(i, max, (l || 0) + 1)).join(", ")}]`;
    }
    if (utils_1.isObject(item)) {
        let objectInfo;
        const objectType = inspectObjectType_1.inspectObjectType(item);
        if (/HTML\w+?Element/.test(objectType)) {
            return `<${objectType}>`;
        }
        if (l > max) {
            objectInfo = "{...}";
        }
        else {
            const itemKeys = Object.keys(item);
            objectInfo = `{${itemKeys.map(k => `${k}:${inspect(item[k], max, (l || 0) + 1)}`).join(", ")}}`;
        }
        if (objectType === "Object") {
            return objectInfo;
        }
        return `<${objectType} ${objectInfo}>`;
    }
    return `${item}`;
}
exports.inspect = inspect;


/***/ }),

/***/ "./src/utils/inspectObjectType.ts":
/*!****************************************!*\
  !*** ./src/utils/inspectObjectType.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.inspectObjectType = void 0;
function inspectObjectType(item) {
    let className;
    if ((item.constructor !== null ? item.constructor.name : undefined) !== null &&
        (item.constructor !== null ? item.constructor.name : undefined) !== "Object") {
        return item.constructor.name;
    }
    const extract = function (str) {
        if (!str) {
            return null;
        }
        const regex = /\[object (\w+)\]/;
        const match = regex.exec(str);
        if (match) {
            return match[1];
        }
        return null;
    };
    if (item.toString) {
        className = extract(item.toString());
        if (className) {
            return className;
        }
    }
    if (item.constructor !== null ? item.constructor.toString : undefined) {
        className = extract(item.constructor !== null ? item.constructor.toString() : undefined);
        if (className) {
            return className.replace("Constructor", "");
        }
    }
    return "Object";
}
exports.inspectObjectType = inspectObjectType;


/***/ }),

/***/ "./src/utils/internalId.ts":
/*!*********************************!*\
  !*** ./src/utils/internalId.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.InternalID = void 0;
const keys = new Map();
class InternalID {
    constructor(id) {
        this.id = id;
        this._link = null;
        this._urllink = null;
    }
    add(str) {
        return InternalID.forKey(this.id + str);
    }
    toString() {
        return this.id;
    }
    get link() {
        const res = this._link;
        if (res)
            return res;
        return (this._link = "#" + this.id);
    }
    get urlLink() {
        const res = this._urllink;
        if (res)
            return res;
        return (this._urllink = "url(#" + this.id + ")");
    }
    static forKey(key) {
        let res = keys.get(key);
        if (res)
            return res;
        res = new InternalID("a" + (1000 + keys.size) + "z");
        keys.set(key, res);
        return res;
    }
}
exports.InternalID = InternalID;


/***/ }),

/***/ "./src/utils/math.ts":
/*!***************************!*\
  !*** ./src/utils/math.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.modulate = exports.clamp = exports.roundWhole = exports.round = void 0;
const round = (value, decimals = 0, increment = 1, min, max) => {
    const d = Math.pow(10, decimals);
    if (increment) {
        value = Math.round(value / increment) * increment;
    }
    value = Math.round(value * d) / d;
    if (min && value < min) {
        return min;
    }
    if (max && value > max) {
        return max;
    }
    return value;
};
exports.round = round;
const roundWhole = (value, decimals = 1) => {
    if (decimals === null) {
        decimals = 1;
    }
    if (parseInt(value.toString()) === value) {
        return parseInt(value.toString());
    }
    return exports.round(value, decimals);
};
exports.roundWhole = roundWhole;
const clamp = (value, a, b) => {
    const min = Math.min(a, b);
    const max = Math.max(a, b);
    if (value < min) {
        value = min;
    }
    if (value > max) {
        value = max;
    }
    return value;
};
exports.clamp = clamp;
const modulate = (value, rangeA, rangeB, shouldClamp = false) => {
    const [fromLow, fromHigh] = Array.from(rangeA);
    const [toLow, toHigh] = Array.from(rangeB);
    const result = toLow + ((value - fromLow) / (fromHigh - fromLow)) * (toHigh - toLow);
    if (shouldClamp === true) {
        if (toLow < toHigh) {
            if (result < toLow) {
                return toLow;
            }
            if (result > toHigh) {
                return toHigh;
            }
        }
        else {
            if (result > toLow) {
                return toLow;
            }
            if (result < toHigh) {
                return toHigh;
            }
        }
    }
    return result;
};
exports.modulate = modulate;


/***/ }),

/***/ "./src/utils/memoize.ts":
/*!******************************!*\
  !*** ./src/utils/memoize.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.memoize = void 0;
function manageCache(cache, maxEntries) {
    const size = cache.size;
    if (size < maxEntries)
        return;
    let i = Math.round(Math.random());
    for (const key of cache.keys()) {
        if ((++i & 0x1) === 0x1)
            continue;
        cache.delete(key);
    }
}
function memoize(maxEntries, cache, key, create) {
    const r = cache.get(key);
    if (r)
        return r;
    manageCache(cache, maxEntries);
    const g = create(key);
    cache.set(key, g);
    return g;
}
exports.memoize = memoize;


/***/ }),

/***/ "./src/utils/network.ts":
/*!******************************!*\
  !*** ./src/utils/network.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.loadJSON = void 0;
function loadJSON(url) {
    return fetch(url, { mode: "cors" }).then(res => res.json());
}
exports.loadJSON = loadJSON;


/***/ }),

/***/ "./src/utils/observable.ts":
/*!*********************************!*\
  !*** ./src/utils/observable.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getObservableNumber = void 0;
const Animatable_1 = __webpack_require__(/*! ../animation/Animatable */ "./src/animation/Animatable/index.ts");
function getObservableNumber(value, defaultValue = 0) {
    if (!value) {
        return defaultValue;
    }
    if (Animatable_1.isAnimatable(value)) {
        return value.get();
    }
    return value;
}
exports.getObservableNumber = getObservableNumber;


/***/ }),

/***/ "./src/utils/print.ts":
/*!****************************!*\
  !*** ./src/utils/print.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.print = void 0;
const inspect_1 = __webpack_require__(/*! ./inspect */ "./src/utils/inspect.ts");
function print(...args) {
    const line = args
        .map(arg => {
        return inspect_1.inspect(arg);
    })
        .join(", ");
    console.log(line);
}
exports.print = print;


/***/ }),

/***/ "./src/utils/runtimeInjection.ts":
/*!***************************************!*\
  !*** ./src/utils/runtimeInjection.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports._injectRuntime = exports.runtime = void 0;
const shared_1 = __webpack_require__(/*! @framerjs/shared */ "../shared/src/index.ts");
const mockWithWarning = (message) => {
    return () => {
        shared_1.warnOnce(message);
    };
};
const implementation = {
    useImageSource(image) {
        return image.src;
    },
    useImageElement(image, rect, nodeId) {
        const element = new Image();
        element.src = exports.runtime.useImageSource(image, rect, nodeId);
        return element;
    },
};
let isRuntimeInjected = false;
const runtimeProxy = {
    get(target, key, reciever) {
        if (Reflect.has(target, key)) {
            return Reflect.get(target, key, reciever);
        }
        if (isRuntimeInjected) {
            return mockWithWarning(`${String(key)} is not available in this version of Framer.`);
        }
        else {
            return mockWithWarning(`${String(key)} is only available inside of Framer. https://www.framer.com/`);
        }
    },
};
exports.runtime = new Proxy(implementation, runtimeProxy);
function _injectRuntime(injectedRuntime) {
    Object.assign(implementation, injectedRuntime);
    isRuntimeInjected = true;
}
exports._injectRuntime = _injectRuntime;


/***/ }),

/***/ "./src/utils/safeWindow.ts":
/*!*********************************!*\
  !*** ./src/utils/safeWindow.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.safeWindow = void 0;
const mockWindow = {
    addEventListener: () => { },
    removeEventListener: () => { },
    dispatchEvent: () => false,
    onpointerdown: false,
    onpointermove: false,
    onpointerup: false,
    ontouchstart: false,
    ontouchmove: false,
    ontouchend: false,
    onmousedown: false,
    onmousemove: false,
    onmouseup: false,
    devicePixelRatio: 1,
    scrollX: 0,
    scrollY: 0,
    location: {
        href: "",
    },
    setTimeout: () => 0,
    clearTimeout: () => { },
    setInterval: () => 0,
    clearInterval: () => { },
    webkitConvertPointFromPageToNode: (_, pt) => pt,
};
exports.safeWindow = typeof window === "undefined" ? mockWindow : window;


/***/ }),

/***/ "./src/utils/string.ts":
/*!*****************************!*\
  !*** ./src/utils/string.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.hash = void 0;
const hash = (value) => {
    let hasher = 0, i, chr;
    if (value.length === 0)
        return hasher;
    for (i = 0; i < value.length; i++) {
        chr = value.charCodeAt(i);
        hasher = (hasher << 5) - hasher + chr;
        hasher |= 0;
    }
    return hasher;
};
exports.hash = hash;


/***/ }),

/***/ "./src/utils/type-guards.ts":
/*!**********************************!*\
  !*** ./src/utils/type-guards.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isReactChild = exports.isReactElement = void 0;
function isEmpty(obj) {
    return !obj || (!Object.keys(obj).length && obj.constructor === Object);
}
function isReactElement(test) {
    return typeof test !== "string" && typeof test !== "number";
}
exports.isReactElement = isReactElement;
function isReactChild(test) {
    return test !== null && typeof test !== "undefined" && typeof test !== "boolean" && !isEmpty(test);
}
exports.isReactChild = isReactChild;


/***/ }),

/***/ "./src/utils/utils.ts":
/*!****************************!*\
  !*** ./src/utils/utils.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isObject = exports.isArray = exports.isNumber = exports.isString = exports.isFunction = exports.delay = void 0;
const delay = (time = 0, f) => {
    setTimeout(f, time * 1000);
};
exports.delay = delay;
function isFunction(value) {
    return value instanceof Function;
}
exports.isFunction = isFunction;
function isString(value) {
    return typeof value === "string";
}
exports.isString = isString;
function isNumber(value) {
    return typeof value === "number";
}
exports.isNumber = isNumber;
function isArray(value) {
    return value instanceof Array;
}
exports.isArray = isArray;
function isObject(value) {
    return typeof value === "object";
}
exports.isObject = isObject;


/***/ }),

/***/ "./src/version.ts":
/*!************************!*\
  !*** ./src/version.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.version = void 0;
exports.version = "1.2.28";


/***/ }),

/***/ 0:
/*!**************************************!*\
  !*** multi ./src/loader ./src/index ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /home/adam/github.com/framer/FramerStudio/src/library/src/loader */"./src/loader.ts");
module.exports = __webpack_require__(/*! /home/adam/github.com/framer/FramerStudio/src/library/src/index */"./src/index.ts");


/***/ }),

/***/ "react":
/*!**************************************************************************************!*\
  !*** external {"root":"React","commonjs2":"react","commonjs":"react","amd":"react"} ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ })

/******/ });
});
//# sourceMappingURL=framer.debug.js.map